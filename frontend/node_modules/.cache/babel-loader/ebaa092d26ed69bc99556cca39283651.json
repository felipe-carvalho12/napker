{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\carlo\\\\Projects\\\\napker\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{SERVER_URL}from'../../../../config/settings';export default function News(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),news=_useState2[0],setNews=_useState2[1];useEffect(function(){fetch(\"https://newsapi.org/v2/everything?q=ethereum&language=pt&apiKey=ff76727063ed40308672d1f49127bd43\").then(function(response){return response.json();}).then(function(data){return setNews(data.article);});},[]);return/*#__PURE__*/React.createElement(React.Fragment,null,news!==null&&/*#__PURE__*/React.createElement(React.Fragment,null,news.map(function(article){return/*#__PURE__*/React.createElement(\"div\",null,article);})));}","map":{"version":3,"sources":["C:/Users/carlo/Projects/napker/frontend/src/pages/home/components/news/News.js"],"names":["React","useEffect","useState","SERVER_URL","News","news","setNews","fetch","then","response","json","data","article","map"],"mappings":"wKAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CAEA,OAASC,UAAT,KAA2B,6BAA3B,CAEA,cAAe,SAASC,CAAAA,IAAT,EAAgB,eACHF,QAAQ,CAAC,IAAD,CADL,wCACpBG,IADoB,eACdC,OADc,eAG3BL,SAAS,CAAC,UAAM,CACZM,KAAK,oGAAL,CACKC,IADL,CACU,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADlB,EAEKF,IAFL,CAEU,SAAAG,IAAI,QAAIL,CAAAA,OAAO,CAACK,IAAI,CAACC,OAAN,CAAX,EAFd,EAGH,CAJQ,CAIN,EAJM,CAAT,CAMA,mBACI,wCACKP,IAAI,GAAK,IAAT,eACG,wCACCA,IAAI,CAACQ,GAAL,CAAS,SAAAD,OAAO,CAAI,CACjB,mBACI,+BACKA,OADL,CADJ,CAKH,CANA,CADD,CAFR,CADJ,CAeH","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nimport { SERVER_URL } from '../../../../config/settings'\r\n\r\nexport default function News() {\r\n    const [news, setNews] = useState(null)\r\n\r\n    useEffect(() => {\r\n        fetch(`https://newsapi.org/v2/everything?q=ethereum&language=pt&apiKey=ff76727063ed40308672d1f49127bd43`)\r\n            .then(response => response.json())\r\n            .then(data => setNews(data.article))\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {news !== null &&\r\n                <>\r\n                {news.map(article => {\r\n                    return (\r\n                        <div>\r\n                            {article}\r\n                        </div>\r\n                    )\r\n                })}\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}