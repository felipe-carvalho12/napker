{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\fabio\\\\CodeProjects\\\\Django\\\\napker\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useContext,useEffect,useRef,useState}from'react';import Croppie from\"croppie\";import Modal from'react-bootstrap/Modal';import{ProfileImageContext}from'../../../../../context/edit-profile/EditProfileContext';export default function CroppieModal(props){var _useContext=useContext(ProfileImageContext),_useContext2=_slicedToArray(_useContext,2),profileImage=_useContext2[0],setProfileImage=_useContext2[1];var croppieOptions={enableOrientation:true,viewport:{width:300,height:300,type:\"square\"},boundary:{width:\"100%\",height:\"70vh\"}};var c;useEffect(function(){var croppieEl=document.getElementById(\"croppie\");c=new Croppie(croppieEl,croppieOptions);c.bind({url:profileImage});},[]);var handleCroppedImage=function handleCroppedImage(){c.result(\"base64\").then(function(base64){setProfileImage(base64);});};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Modal.Header,{closeButton:true},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-between align-items-center w-100\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-center align-items-center\"},/*#__PURE__*/React.createElement(\"i\",{class:\"fas fa-arrow-left left-arrow-icon\",onClick:props.handleBackArrow}),/*#__PURE__*/React.createElement(Modal.Title,null,\"Editar perfil\")),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary\",onClick:handleCroppedImage},\"Aplicar\"))),/*#__PURE__*/React.createElement(Modal.Body,null,/*#__PURE__*/React.createElement(\"div\",{id:\"croppie\"})));}","map":{"version":3,"sources":["C:/Users/fabio/CodeProjects/Django/napker/frontend/src/pages/profile/components/edit-profile/components/CroppieModal.js"],"names":["React","useContext","useEffect","useRef","useState","Croppie","Modal","ProfileImageContext","CroppieModal","props","profileImage","setProfileImage","croppieOptions","enableOrientation","viewport","width","height","type","boundary","c","croppieEl","document","getElementById","bind","url","handleCroppedImage","result","then","base64","handleBackArrow"],"mappings":"oLAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,SAA5B,CAAuCC,MAAvC,CAA+CC,QAA/C,KAA+D,OAA/D,CACA,MAAOC,CAAAA,OAAP,KAAoB,SAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,uBAAlB,CAEA,OAASC,mBAAT,KAAoC,wDAApC,CAGA,cAAe,SAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,iBACAR,UAAU,CAACM,mBAAD,CADV,4CACjCG,YADiC,iBACnBC,eADmB,iBAGxC,GAAMC,CAAAA,cAAc,CAAG,CACnBC,iBAAiB,CAAE,IADA,CAEnBC,QAAQ,CAAE,CACNC,KAAK,CAAE,GADD,CAENC,MAAM,CAAE,GAFF,CAGNC,IAAI,CAAE,QAHA,CAFS,CAOnBC,QAAQ,CAAE,CACNH,KAAK,CAAE,MADD,CAENC,MAAM,CAAE,MAFF,CAPS,CAAvB,CAaA,GAAIG,CAAAA,CAAJ,CAEAjB,SAAS,CAAC,UAAM,CACZ,GAAMkB,CAAAA,SAAS,CAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAlB,CACAH,CAAC,CAAG,GAAId,CAAAA,OAAJ,CAAYe,SAAZ,CAAuBR,cAAvB,CAAJ,CACAO,CAAC,CAACI,IAAF,CAAO,CAAEC,GAAG,CAAEd,YAAP,CAAP,EACH,CAJQ,CAIN,EAJM,CAAT,CAMA,GAAMe,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC7BN,CAAC,CAACO,MAAF,CAAS,QAAT,EAAmBC,IAAnB,CAAwB,SAAAC,MAAM,CAAI,CAC9BjB,eAAe,CAACiB,MAAD,CAAf,CACH,CAFD,EAGH,CAJD,CAMA,mBACI,qDACI,oBAAC,KAAD,CAAO,MAAP,EAAc,WAAW,KAAzB,eACI,2BAAK,SAAS,CAAC,yDAAf,eACI,2BAAK,SAAS,CAAC,kDAAf,eACI,yBAAG,KAAK,CAAC,mCAAT,CAA6C,OAAO,CAAEnB,KAAK,CAACoB,eAA5D,EADJ,cAEI,oBAAC,KAAD,CAAO,KAAP,sBAFJ,CADJ,cAKI,8BAAQ,SAAS,CAAC,iBAAlB,CAAoC,OAAO,CAAEJ,kBAA7C,YALJ,CADJ,CADJ,cAYI,oBAAC,KAAD,CAAO,IAAP,mBACI,2BAAK,EAAE,CAAC,SAAR,EADJ,CAZJ,CADJ,CAkBH","sourcesContent":["import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport Croppie from \"croppie\"\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nimport { ProfileImageContext } from '../../../../../context/edit-profile/EditProfileContext'\r\n\r\n\r\nexport default function CroppieModal(props) {\r\n    const [profileImage, setProfileImage] = useContext(ProfileImageContext)\r\n\r\n    const croppieOptions = {\r\n        enableOrientation: true,\r\n        viewport: {\r\n            width: 300,\r\n            height: 300,\r\n            type: \"square\"\r\n        },\r\n        boundary: {\r\n            width: \"100%\",\r\n            height: \"70vh\"\r\n        }\r\n    }\r\n\r\n    let c\r\n\r\n    useEffect(() => {\r\n        const croppieEl = document.getElementById(\"croppie\")\r\n        c = new Croppie(croppieEl, croppieOptions)\r\n        c.bind({ url: profileImage })\r\n    }, [])\r\n\r\n    const handleCroppedImage = () => {\r\n        c.result(\"base64\").then(base64 => {\r\n            setProfileImage(base64)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal.Header closeButton>\r\n                <div className=\"d-flex justify-content-between align-items-center w-100\">\r\n                    <div className=\"d-flex justify-content-center align-items-center\">\r\n                        <i class=\"fas fa-arrow-left left-arrow-icon\" onClick={props.handleBackArrow} />\r\n                        <Modal.Title>Editar perfil</Modal.Title>\r\n                    </div>\r\n                    <button className=\"btn btn-primary\" onClick={handleCroppedImage}>\r\n                        Aplicar\r\n                    </button>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div id=\"croppie\" />\r\n            </Modal.Body>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}