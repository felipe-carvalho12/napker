{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Carlos\\\\napker\\\\frontend\\\\src\\\\pages\\\\home\\\\components\\\\profiles\\\\Profiles.js\";\nimport React, { useEffect, useState } from 'react';\nimport { SERVER_URL } from '../../../../config/settings';\nimport { csrftoken } from '../../../../config/utils';\nimport ProfileListItem from '../../../../components/ProfileListItem';\nimport ProfilesSearchInput from './components/ProfilesSearchInput';\nexport default function Profiles() {\n  const [myProfile, setMyProfile] = useState(null);\n  const [profiles, setProfiles] = useState(null);\n  const [filteredProfiles, setFilteredProfiles] = useState(null);\n  const [scrollCount, setScrollCount] = useState(1);\n\n  window.onscroll = () => {\n    if (window.innerHeight + window.scrollY >= document.body.offsetHeight) {\n      setScrollCount(scrollCount + 1);\n    }\n  };\n\n  useEffect(() => {\n    fetch(`${SERVER_URL}/profile-api/myprofile`).then(response => response.json()).then(data => setMyProfile(data));\n  }, []);\n  useEffect(() => {\n    fetch(`${SERVER_URL}/profile-api/profile-list/${scrollCount}`).then(response => response.json()).then(data => {\n      setFilteredProfiles(null);\n      setProfiles(data);\n    });\n  }, [scrollCount]);\n\n  const sendFriendRequest = pk => {\n    fetch(`${SERVER_URL}/profile-api/send-friend-request`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'X-CSRFToken': csrftoken\n      },\n      body: JSON.stringify(pk)\n    }).then(response => response.json()).then(data => console.log(data));\n  };\n\n  const cancelFriendRequest = pk => {\n    fetch(`${SERVER_URL}/profile-api/cancel-friend-request`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'X-CSRFToken': csrftoken\n      },\n      body: JSON.stringify(pk)\n    }).then(response => response.json()).then(data => console.log(data));\n  };\n\n  const handleRelationshipUpdate = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    const btn = e.target;\n\n    if (btn.innerHTML === 'Solicitar') {\n      sendFriendRequest(btn.dataset.pk);\n      btn.innerHTML = 'Solicitado';\n      btn.className = 'btn btn-primary';\n    } else {\n      cancelFriendRequest(btn.dataset.pk);\n      btn.innerHTML = 'Solicitar';\n      btn.className = 'btn btn-secondary';\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProfilesSearchInput, {\n    setFilteredProfiles: setFilteredProfiles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, myProfile && (profiles || filteredProfiles) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, filteredProfiles ? filteredProfiles.map(profile => {\n    return /*#__PURE__*/React.createElement(ProfileListItem, {\n      profile: profile,\n      myProfile: myProfile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 33\n      }\n    });\n  }) : profiles && profiles.map(profile => {\n    return /*#__PURE__*/React.createElement(ProfileListItem, {\n      profile: profile,\n      myProfile: myProfile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-secondary\",\n      \"data-pk\": profile.id,\n      onClick: handleRelationshipUpdate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 37\n      }\n    }, \"Solicitar\"));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profiles-loader-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/Carlos/napker/frontend/src/pages/home/components/profiles/Profiles.js"],"names":["React","useEffect","useState","SERVER_URL","csrftoken","ProfileListItem","ProfilesSearchInput","Profiles","myProfile","setMyProfile","profiles","setProfiles","filteredProfiles","setFilteredProfiles","scrollCount","setScrollCount","window","onscroll","innerHeight","scrollY","document","body","offsetHeight","fetch","then","response","json","data","sendFriendRequest","pk","method","headers","JSON","stringify","console","log","cancelFriendRequest","handleRelationshipUpdate","e","preventDefault","stopPropagation","btn","target","innerHTML","dataset","className","map","profile","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nimport { SERVER_URL } from '../../../../config/settings'\r\nimport { csrftoken } from '../../../../config/utils'\r\nimport ProfileListItem from '../../../../components/ProfileListItem'\r\nimport ProfilesSearchInput from './components/ProfilesSearchInput'\r\n\r\nexport default function Profiles() {\r\n    const [myProfile, setMyProfile] = useState(null)\r\n    const [profiles, setProfiles] = useState(null)\r\n    const [filteredProfiles, setFilteredProfiles] = useState(null)\r\n    const [scrollCount, setScrollCount] = useState(1)\r\n\r\n    window.onscroll = () => {\r\n        if (window.innerHeight + window.scrollY >= document.body.offsetHeight) {\r\n            setScrollCount(scrollCount + 1)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/profile-list/${scrollCount}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setFilteredProfiles(null)\r\n                setProfiles(data)\r\n            })\r\n    }, [scrollCount])\r\n\r\n    const sendFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/send-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    const cancelFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/cancel-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    const handleRelationshipUpdate = e => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        const btn = e.target\r\n        if (btn.innerHTML === 'Solicitar') {\r\n            sendFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitado'\r\n            btn.className = 'btn btn-primary'\r\n        } else {\r\n            cancelFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitar'\r\n            btn.className = 'btn btn-secondary'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ProfilesSearchInput setFilteredProfiles={setFilteredProfiles} />\r\n            <div className=\"list-group\">\r\n                {myProfile && (profiles || filteredProfiles) &&\r\n                    <div className=\"profile-list-container\">\r\n                        {filteredProfiles ? filteredProfiles.map(profile => {\r\n                            return (\r\n                                <ProfileListItem profile={profile} myProfile={myProfile} />\r\n                            )\r\n                        }\r\n                        ) : profiles && profiles.map(profile => {\r\n                            return (\r\n                                <ProfileListItem profile={profile} myProfile={myProfile}>\r\n                                    <button className=\"btn btn-secondary\" data-pk={profile.id} onClick={handleRelationshipUpdate}>\r\n                                        Solicitar\r\n                                    </button>\r\n                                </ProfileListItem>\r\n                            )\r\n                        })\r\n                        }\r\n                    </div>\r\n                }\r\n                <div className=\"profiles-loader-container\">\r\n                    <div className=\"loader\" />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}