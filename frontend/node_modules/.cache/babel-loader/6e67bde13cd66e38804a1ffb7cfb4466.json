{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\felip\\\\CodeProjects\\\\Web\\\\Napker\\\\frontend\\\\src\\\\pages\\\\notifications\\\\Notifications.js\";\nimport React, { useEffect, useState } from 'react';\nimport { SERVER_URL } from '../../config/settings';\nimport { csrftoken } from '../../config/utils';\nimport Header from '../../components/fixed/Header';\nimport InviteNotification from './components/InviteNotification';\nimport LikeProfileNotification from './components/LikeProfileNotification';\nimport CommentProfileNotification from './components/CommentProfileNotification';\nimport NewLabel from './components/NewLabel';\nimport BottomMenu from '../../components/fixed/bottom-menu/BottomMenu';\nexport default function Notifications(props) {\n  const [invites, setInvites] = useState(null);\n  const [unvisualizedPostLikes, setUnvisualizedPostLikes] = useState(null);\n  const [visualizedPostLikes, setVisualizedPostLikes] = useState(null);\n  const [unvisualizedComments, setUnvisualizedComments] = useState(null);\n  const [visualizedComments, setVisualizedComments] = useState(null);\n  let notificationsFetchInterval;\n  document.title = 'Notificações / Napker';\n\n  const fetchNotifications = () => {\n    fetch(`${SERVER_URL}/profile-api/myinvites`).then(response => response.json()).then(data => setInvites(data));\n    fetch(`${SERVER_URL}/post-api/unvisualized-post-likes`).then(response => response.json()).then(data => setUnvisualizedPostLikes(data));\n    fetch(`${SERVER_URL}/post-api/unvisualized-post-comments`).then(response => response.json()).then(data => setUnvisualizedComments(data));\n    fetch(`${SERVER_URL}/post-api/post-likes-visualized-last-2-days`).then(response => response.json()).then(data => setVisualizedPostLikes(data));\n    fetch(`${SERVER_URL}/post-api/post-comments-visualized-last-2-days`).then(response => response.json()).then(data => setVisualizedComments(data));\n  };\n\n  useEffect(() => {\n    fetchNotifications();\n    notificationsFetchInterval = window.setInterval(fetchNotifications, 3000);\n    return () => window.clearInterval(notificationsFetchInterval);\n  }, []);\n  useEffect(() => {\n    if (unvisualizedPostLikes && unvisualizedPostLikes.length) {\n      fetch(`${SERVER_URL}/post-api/visualize-likes`).then(response => response.json()).then(data => {\n        console.log(data);\n        props.updateNotificationsNumber();\n      });\n    }\n  }, [unvisualizedPostLikes]);\n  useEffect(() => {\n    if (unvisualizedComments && unvisualizedComments.length) {\n      fetch(`${SERVER_URL}/post-api/visualize-comments`).then(response => response.json()).then(data => {\n        console.log(data);\n        props.updateNotificationsNumber();\n      });\n    }\n  }, [unvisualizedComments]);\n\n  const replyRequest = e => {\n    e.stopPropagation();\n    const btn = e.target;\n    const requestBody = {\n      'senderid': btn.dataset.senderid,\n      'reply': btn.dataset.reply\n    };\n    fetch(`${SERVER_URL}/profile-api/reply-friend-request`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'X-CSRFToken': csrftoken\n      },\n      body: JSON.stringify(requestBody)\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      props.updateNotificationsNumber();\n    });\n    document.getElementById(`fr-${btn.dataset.senderid}`).remove();\n    fetchNotifications();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    page: \"Notifica\\xE7\\xF5es\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, invites !== null && unvisualizedPostLikes && visualizedPostLikes !== null && unvisualizedComments !== null && visualizedComments !== null ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, invites.length || unvisualizedPostLikes.length || visualizedPostLikes.length || unvisualizedComments.length || !!visualizedComments.length ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notifications-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 33\n    }\n  }, !!invites.length && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 41\n    }\n  }, invites.map(invite => {\n    return /*#__PURE__*/React.createElement(InviteNotification, {\n      invite: invite,\n      replyRequest: replyRequest,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 53\n      }\n    });\n  })), (!!unvisualizedPostLikes.length || !!unvisualizedComments.length) && /*#__PURE__*/React.createElement(React.Fragment, null, !!unvisualizedPostLikes.length && /*#__PURE__*/React.createElement(React.Fragment, null, unvisualizedPostLikes.map(like => {\n    return /*#__PURE__*/React.createElement(LikeProfileNotification, {\n      like: like,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(NewLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 65\n      }\n    }));\n  })), !!unvisualizedComments.length && /*#__PURE__*/React.createElement(React.Fragment, null, unvisualizedComments.map(comment => {\n    return /*#__PURE__*/React.createElement(CommentProfileNotification, {\n      comment: comment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(NewLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 65\n      }\n    }));\n  }))), (!!visualizedPostLikes.length || !!visualizedComments.length) && /*#__PURE__*/React.createElement(React.Fragment, null, !!visualizedPostLikes.length && /*#__PURE__*/React.createElement(React.Fragment, null, visualizedPostLikes.map(like => {\n    return /*#__PURE__*/React.createElement(LikeProfileNotification, {\n      like: like,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 61\n      }\n    });\n  })), !!visualizedComments.length && /*#__PURE__*/React.createElement(React.Fragment, null, visualizedComments.map(comment => {\n    return /*#__PURE__*/React.createElement(CommentProfileNotification, {\n      comment: comment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 61\n      }\n    });\n  })))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"no-notifications-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 37\n    }\n  }, \"Voc\\xEA n\\xE3o tem nenhuma notifica\\xE7\\xE3o\"))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notifications-loader-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(BottomMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/felip/CodeProjects/Web/Napker/frontend/src/pages/notifications/Notifications.js"],"names":["React","useEffect","useState","SERVER_URL","csrftoken","Header","InviteNotification","LikeProfileNotification","CommentProfileNotification","NewLabel","BottomMenu","Notifications","props","invites","setInvites","unvisualizedPostLikes","setUnvisualizedPostLikes","visualizedPostLikes","setVisualizedPostLikes","unvisualizedComments","setUnvisualizedComments","visualizedComments","setVisualizedComments","notificationsFetchInterval","document","title","fetchNotifications","fetch","then","response","json","data","window","setInterval","clearInterval","length","console","log","updateNotificationsNumber","replyRequest","e","stopPropagation","btn","target","requestBody","dataset","senderid","reply","method","headers","body","JSON","stringify","getElementById","remove","map","invite","like","comment"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nimport { SERVER_URL } from '../../config/settings'\r\nimport { csrftoken } from '../../config/utils'\r\nimport Header from '../../components/fixed/Header'\r\nimport InviteNotification from './components/InviteNotification'\r\nimport LikeProfileNotification from './components/LikeProfileNotification'\r\nimport CommentProfileNotification from './components/CommentProfileNotification'\r\nimport NewLabel from './components/NewLabel'\r\nimport BottomMenu from '../../components/fixed/bottom-menu/BottomMenu'\r\n\r\nexport default function Notifications(props) {\r\n    const [invites, setInvites] = useState(null)\r\n    const [unvisualizedPostLikes, setUnvisualizedPostLikes] = useState(null)\r\n    const [visualizedPostLikes, setVisualizedPostLikes] = useState(null)\r\n    const [unvisualizedComments, setUnvisualizedComments] = useState(null)\r\n    const [visualizedComments, setVisualizedComments] = useState(null)\r\n\r\n    let notificationsFetchInterval\r\n\r\n    document.title = 'Notificações / Napker'\r\n\r\n    const fetchNotifications = () => {\r\n        fetch(`${SERVER_URL}/profile-api/myinvites`)\r\n            .then(response => response.json())\r\n            .then(data => setInvites(data))\r\n        fetch(`${SERVER_URL}/post-api/unvisualized-post-likes`)\r\n            .then(response => response.json())\r\n            .then(data => setUnvisualizedPostLikes(data))\r\n        fetch(`${SERVER_URL}/post-api/unvisualized-post-comments`)\r\n            .then(response => response.json())\r\n            .then(data => setUnvisualizedComments(data))\r\n        fetch(`${SERVER_URL}/post-api/post-likes-visualized-last-2-days`)\r\n            .then(response => response.json())\r\n            .then(data => setVisualizedPostLikes(data))\r\n        fetch(`${SERVER_URL}/post-api/post-comments-visualized-last-2-days`)\r\n            .then(response => response.json())\r\n            .then(data => setVisualizedComments(data))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchNotifications()\r\n        notificationsFetchInterval = window.setInterval(fetchNotifications, 3000)\r\n        return () => window.clearInterval(notificationsFetchInterval)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (unvisualizedPostLikes && unvisualizedPostLikes.length) {\r\n            fetch(`${SERVER_URL}/post-api/visualize-likes`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.updateNotificationsNumber()\r\n                })\r\n        }\r\n    }, [unvisualizedPostLikes])\r\n\r\n    useEffect(() => {\r\n        if (unvisualizedComments && unvisualizedComments.length) {\r\n            fetch(`${SERVER_URL}/post-api/visualize-comments`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.updateNotificationsNumber()\r\n                })\r\n        }\r\n    }, [unvisualizedComments])\r\n\r\n    const replyRequest = e => {\r\n        e.stopPropagation()\r\n        const btn = e.target\r\n        const requestBody = {\r\n            'senderid': btn.dataset.senderid,\r\n            'reply': btn.dataset.reply\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/reply-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(requestBody)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                props.updateNotificationsNumber()\r\n            })\r\n        document.getElementById(`fr-${btn.dataset.senderid}`).remove()\r\n        fetchNotifications()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Notificações\" />\r\n            <div className=\"content\">\r\n                <div>\r\n                    {invites !== null && unvisualizedPostLikes && visualizedPostLikes !== null && unvisualizedComments !== null && visualizedComments !== null ?\r\n                        <div>\r\n                            {invites.length || unvisualizedPostLikes.length || visualizedPostLikes.length || unvisualizedComments.length || !!visualizedComments.length ?\r\n                                <div className=\"notifications-container\">\r\n                                    {!!invites.length &&\r\n                                        <div>\r\n                                            {invites.map(invite => {\r\n                                                return (\r\n                                                    <InviteNotification\r\n                                                        invite={invite}\r\n                                                        replyRequest={replyRequest}\r\n                                                    />\r\n                                                )\r\n                                            })}\r\n                                        </div>\r\n                                    }\r\n\r\n                                    {(!!unvisualizedPostLikes.length || !!unvisualizedComments.length) &&\r\n                                        <>\r\n                                            {!!unvisualizedPostLikes.length &&\r\n                                                <>\r\n                                                    {unvisualizedPostLikes.map(like => {\r\n                                                        return (\r\n                                                            <LikeProfileNotification like={like}>\r\n                                                                <NewLabel />\r\n                                                            </LikeProfileNotification>\r\n                                                        )\r\n                                                    })}\r\n                                                </>\r\n                                            }\r\n\r\n                                            {!!unvisualizedComments.length &&\r\n                                                <>\r\n                                                    {unvisualizedComments.map(comment => {\r\n                                                        return (\r\n                                                            <CommentProfileNotification comment={comment}>\r\n                                                                <NewLabel />\r\n                                                            </CommentProfileNotification>\r\n                                                        )\r\n                                                    })}\r\n                                                </>\r\n                                            }\r\n                                        </>\r\n                                    }\r\n\r\n                                    {(!!visualizedPostLikes.length || !!visualizedComments.length) &&\r\n                                        <>\r\n                                            {!!visualizedPostLikes.length &&\r\n                                                <>\r\n                                                    {visualizedPostLikes.map(like => {\r\n                                                        return (\r\n                                                            <LikeProfileNotification like={like} />\r\n                                                        )\r\n                                                    })}\r\n                                                </>\r\n                                            }\r\n\r\n                                            {!!visualizedComments.length &&\r\n                                                <>\r\n                                                    {visualizedComments.map(comment => {\r\n                                                        return (\r\n                                                            <CommentProfileNotification comment={comment} />\r\n                                                        )\r\n                                                    })}\r\n                                                </>\r\n                                            }\r\n                                        </>\r\n                                    }\r\n\r\n                                </div> :\r\n                                <div className=\"no-notifications-container\">\r\n                                    <h3>Você não tem nenhuma notificação</h3>\r\n                                </div>\r\n                            }\r\n\r\n                        </div> :\r\n                        <div className=\"notifications-loader-container\">\r\n                            <div className=\"loader\" />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <BottomMenu />\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}