{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\felip\\\\CodeProjects\\\\Web\\\\Napker\\\\frontend\\\\src\\\\components\\\\CommentModal.js\";\nimport React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Picker from 'emoji-picker-react';\nimport { csrftoken, openCloseEmojiList } from '../config/utils';\nimport { SERVER_URL } from '../config/settings';\nexport default function CommentModal(props) {\n  const [commentContent, setCommentContent] = useState('');\n  const post = props.post;\n\n  const handleCommentChange = e => {\n    setCommentContent(e.target.value);\n    const el = document.querySelector('#comment-form-submit');\n    el.disabled = e.target.value === '';\n  };\n\n  const onEmojiSelect = (event, emojiObject) => {\n    setCommentContent(commentContent + emojiObject.emoji);\n    document.querySelector('#comment-form-submit').disabled = false;\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    show: props.isOpen,\n    onHide: props.hideModal,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 30\n    }\n  }, \"Comentar\"))), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `${SERVER_URL}${post.author.photo}`,\n    className: \"profile-img-med\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 37\n    }\n  }, post.author.first_name, \" \", post.author.last_name, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-secondary d-inline-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 37\n    }\n  }, \"@\", post.author.user.username, \" \\u2022 \", post.created.split('-').reverse().join('/'))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'start'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 33\n    }\n  }, post.content))))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    action: `${SERVER_URL}/post-api/comment-post/${post.id}`,\n    method: \"POST\",\n    className: \"comment-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"hidden\",\n    name: \"csrfmiddlewaretoken\",\n    value: csrftoken,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"far fa-smile\",\n    id: \"emoji-button\",\n    onClick: () => openCloseEmojiList(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"comment-content\",\n    value: commentContent,\n    placeholder: \"Comente alguma coisa\",\n    style: {\n      marginRight: '5px',\n      height: '40px'\n    },\n    onChange: handleCommentChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"emoji-list-container chat-emoji-list\",\n    id: \"emoji-list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Picker, {\n    onEmojiClick: onEmojiSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    id: \"comment-form-submit\",\n    type: \"submit\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"Enviar\"))));\n}","map":{"version":3,"sources":["C:/Users/felip/CodeProjects/Web/Napker/frontend/src/components/CommentModal.js"],"names":["React","useState","Modal","Picker","csrftoken","openCloseEmojiList","SERVER_URL","CommentModal","props","commentContent","setCommentContent","post","handleCommentChange","e","target","value","el","document","querySelector","disabled","onEmojiSelect","event","emojiObject","emoji","isOpen","hideModal","author","photo","first_name","last_name","user","username","created","split","reverse","join","textAlign","content","id","marginRight","height"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Picker from 'emoji-picker-react'\r\n\r\nimport { csrftoken, openCloseEmojiList } from '../config/utils'\r\nimport { SERVER_URL } from '../config/settings'\r\n\r\nexport default function CommentModal(props) {\r\n    const [commentContent, setCommentContent] = useState('')\r\n\r\n    const post = props.post\r\n\r\n    const handleCommentChange = e => {\r\n        setCommentContent(e.target.value)\r\n        const el = document.querySelector('#comment-form-submit')\r\n        el.disabled = e.target.value === ''\r\n    }\r\n\r\n    const onEmojiSelect = (event, emojiObject) => {\r\n        setCommentContent(commentContent + emojiObject.emoji)\r\n        document.querySelector('#comment-form-submit').disabled = false\r\n    }\r\n\r\n    return (\r\n        <Modal show={props.isOpen}\r\n            onHide={props.hideModal}\r\n            size=\"lg\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title><strong>Comentar</strong></Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"post-container\">\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <div className=\"post-row\">\r\n                            <div className=\"post-col\">\r\n                                <img src={`${SERVER_URL}${post.author.photo}`}\r\n                                    className=\"profile-img-med\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"post-col\">\r\n                                <div>\r\n                                    <strong>{post.author.first_name} {post.author.last_name} </strong>\r\n                                    <p className=\"text-secondary d-inline-block\">\r\n                                        @{post.author.user.username} • {post.created.split('-').reverse().join('/')}\r\n                                    </p>\r\n                                </div>\r\n                                <div style={{ textAlign: 'start' }}>\r\n                                    {post.content}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <form action={`${SERVER_URL}/post-api/comment-post/${post.id}`} method=\"POST\" className=\"comment-form\">\r\n                    <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n                    <label\r\n                        className=\"far fa-smile\"\r\n                        id=\"emoji-button\"\r\n                        onClick={() => openCloseEmojiList(false)}\r\n                    />\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"comment-content\"\r\n                        value={commentContent}\r\n                        placeholder=\"Comente alguma coisa\"\r\n                        style={{ marginRight: '5px', height: '40px' }}\r\n                        onChange={handleCommentChange}\r\n                    />\r\n                    <div className=\"emoji-list-container chat-emoji-list\" id=\"emoji-list-container\">\r\n                        <Picker onEmojiClick={onEmojiSelect} />\r\n                    </div>\r\n                    <button\r\n                        className=\"btn btn-primary\"\r\n                        id=\"comment-form-submit\"\r\n                        type=\"submit\"\r\n                        disabled\r\n                    >\r\n                        Enviar\r\n                    </button>\r\n                </form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}