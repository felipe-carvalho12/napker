{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\fabio\\\\CodeProjects\\\\Django\\\\napker\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{Croppie}from'croppie';import React,{useState,useContext}from'react';import Modal from'react-bootstrap/Modal';import{SERVER_URL}from'../../../config/settings';import{csrftoken,openCloseEmojiList}from'../../../config/utils';import CroppieModal from'./CroppieModal';import EditProfileModal from'./EditProfileModal';import{EditProfileContext}from'../../../context/editprofile/EditProfileContext';export default function EditProfile(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),croppieState=_useState2[0],setCroppieState=_useState2[1];var _useContext=useContext(EditProfileContext),_useContext2=_slicedToArray(_useContext,2),profileImage=_useContext2[0],setProfileImage=_useContext2[1];var handleProfileImageChange=function handleProfileImageChange(e){var reader=new FileReader();reader.onload=function(){if(reader.readyState===2){setCroppieState(true);setProfileImage(reader.result);}};try{reader.readAsDataURL(e.target.files[0]);}catch(_unused){}};return/*#__PURE__*/React.createElement(React.Fragment,null,croppieState?/*#__PURE__*/React.createElement(CroppieModal,{image:profileImage}):/*#__PURE__*/React.createElement(EditProfileModal,{profile:props.profile,isOpen:props.isOpen,closeModal:function closeModal(){return props.setIsEditing(false);},handleProfileImageChange:handleProfileImageChange}));}","map":{"version":3,"sources":["C:/Users/fabio/CodeProjects/Django/napker/frontend/src/pages/profile/components/EditProfile.js"],"names":["Croppie","React","useState","useContext","Modal","SERVER_URL","csrftoken","openCloseEmojiList","CroppieModal","EditProfileModal","EditProfileContext","EditProfile","props","croppieState","setCroppieState","profileImage","setProfileImage","handleProfileImageChange","e","reader","FileReader","onload","readyState","result","readAsDataURL","target","files","profile","isOpen","setIsEditing"],"mappings":"oLAAA,OAASA,OAAT,KAAwB,SAAxB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,KAA4C,OAA5C,CACA,MAAOC,CAAAA,KAAP,KAAkB,uBAAlB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,OAASC,SAAT,CAAoBC,kBAApB,KAA8C,uBAA9C,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,OAASC,kBAAT,KAAmC,iDAAnC,CACA,cAAe,SAASC,CAAAA,WAAT,CAAqBC,KAArB,CAA4B,eAECV,QAAQ,CAAC,KAAD,CAFT,wCAEhCW,YAFgC,eAElBC,eAFkB,+BAGCX,UAAU,CAACO,kBAAD,CAHX,4CAGhCK,YAHgC,iBAGlBC,eAHkB,iBAIvC,GAAMC,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAAAC,CAAC,CAAI,CAClC,GAAMC,CAAAA,MAAM,CAAG,GAAIC,CAAAA,UAAJ,EAAf,CACAD,MAAM,CAACE,MAAP,CAAgB,UAAM,CAClB,GAAIF,MAAM,CAACG,UAAP,GAAsB,CAA1B,CAA6B,CAEzBR,eAAe,CAAC,IAAD,CAAf,CACAE,eAAe,CAACG,MAAM,CAACI,MAAR,CAAf,CACH,CACJ,CAND,CAOA,GAAI,CACAJ,MAAM,CAACK,aAAP,CAAqBN,CAAC,CAACO,MAAF,CAASC,KAAT,CAAe,CAAf,CAArB,EACH,CAAC,cAAM,CAEP,CACJ,CAdD,CAeA,mBAEI,wCACKb,YAAY,cACT,oBAAC,YAAD,EAAc,KAAK,CAAEE,YAArB,EADS,cAET,oBAAC,gBAAD,EAAkB,OAAO,CAAEH,KAAK,CAACe,OAAjC,CACA,MAAM,CAAEf,KAAK,CAACgB,MADd,CAEA,UAAU,CAAE,4BAAMhB,CAAAA,KAAK,CAACiB,YAAN,CAAmB,KAAnB,CAAN,EAFZ,CAE6C,wBAAwB,CAAEZ,wBAFvE,EAHR,CAFJ,CAYH","sourcesContent":["import { Croppie } from 'croppie'\r\nimport React, { useState, useContext } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { SERVER_URL } from '../../../config/settings'\r\nimport { csrftoken, openCloseEmojiList } from '../../../config/utils'\r\nimport CroppieModal from './CroppieModal'\r\nimport EditProfileModal from './EditProfileModal'\r\nimport { EditProfileContext } from '../../../context/editprofile/EditProfileContext'\r\nexport default function EditProfile(props) {\r\n\r\n    const [croppieState, setCroppieState] = useState(false)\r\n    const [profileImage, setProfileImage] = useContext(EditProfileContext)\r\n    const handleProfileImageChange = e => {\r\n        const reader = new FileReader()\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n\r\n                setCroppieState(true)\r\n                setProfileImage(reader.result)\r\n            }\r\n        }\r\n        try {\r\n            reader.readAsDataURL(e.target.files[0])\r\n        } catch {\r\n\r\n        }\r\n    }\r\n    return (\r\n\r\n        <>\r\n            {croppieState ?\r\n                <CroppieModal image={profileImage} /> :\r\n                <EditProfileModal profile={props.profile}\r\n                isOpen={props.isOpen}\r\n                closeModal={() => props.setIsEditing(false)} handleProfileImageChange={handleProfileImageChange} />\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}