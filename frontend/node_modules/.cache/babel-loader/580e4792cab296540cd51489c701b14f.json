{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\fabio\\\\CodeProjects\\\\Django\\\\napker\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useContext,useEffect,useRef}from'react';import Modal from'react-bootstrap/Modal';import Cropper from\"cropperjs\";import\"cropperjs/dist/cropper.min.css\";import{ProfileImageContext}from'../../../../../context/edit-profile/EditProfileContext';export default function CroppieModal(props){var _useContext=useContext(ProfileImageContext),_useContext2=_slicedToArray(_useContext,2),profileImage=_useContext2[0],setProfileImage=_useContext2[1];var imageElement=useRef();useEffect(function(){var cropper=new Cropper(imageElement.current,{viewMode:1,scalable:false,aspectRatio:1,crop:function crop(){var canvas=cropper.getCroppedCanvas();setProfileImage(canvas.toDataURL(\"image/png\"));}});},[]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Modal.Header,{closeButton:true},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-between align-items-center w-100\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-center align-items-center\"},/*#__PURE__*/React.createElement(\"i\",{class:\"fas fa-arrow-left left-arrow-icon\",onClick:props.stopCropping}),/*#__PURE__*/React.createElement(Modal.Title,null,\"Editar perfil\")),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary\",onClick:props.stopCropping},\"Aplicar\"))),/*#__PURE__*/React.createElement(Modal.Body,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-center w-100\",style:{maxHeight:'480px'}},/*#__PURE__*/React.createElement(\"img\",{className:\"mw-100 mh-100\",ref:imageElement,src:profileImage,alt:\"Source\",crossorigin:true})))));}","map":{"version":3,"sources":["C:/Users/fabio/CodeProjects/Django/napker/frontend/src/pages/profile/components/edit-profile/components/CroppieModal.js"],"names":["React","useContext","useEffect","useRef","Modal","Cropper","ProfileImageContext","CroppieModal","props","profileImage","setProfileImage","imageElement","cropper","current","viewMode","scalable","aspectRatio","crop","canvas","getCroppedCanvas","toDataURL","stopCropping","maxHeight"],"mappings":"oLAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,SAA5B,CAAuCC,MAAvC,KAAqD,OAArD,CACA,MAAOC,CAAAA,KAAP,KAAkB,uBAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CAEA,MAAO,gCAAP,CAEA,OAASC,mBAAT,KAAoC,wDAApC,CAGA,cAAe,SAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,iBACAP,UAAU,CAACK,mBAAD,CADV,4CACjCG,YADiC,iBACnBC,eADmB,iBAGxC,GAAMC,CAAAA,YAAY,CAAGR,MAAM,EAA3B,CAEAD,SAAS,CAAC,UAAM,CACZ,GAAMU,CAAAA,OAAO,CAAG,GAAIP,CAAAA,OAAJ,CAAYM,YAAY,CAACE,OAAzB,CAAkC,CAC9CC,QAAQ,CAAE,CADoC,CAE9CC,QAAQ,CAAE,KAFoC,CAG9CC,WAAW,CAAE,CAHiC,CAI9CC,IAAI,CAAE,eAAM,CACR,GAAMC,CAAAA,MAAM,CAAGN,OAAO,CAACO,gBAAR,EAAf,CACAT,eAAe,CAACQ,MAAM,CAACE,SAAP,CAAiB,WAAjB,CAAD,CAAf,CACH,CAP6C,CAAlC,CAAhB,CASH,CAVQ,CAUN,EAVM,CAAT,CAYA,mBACI,qDACI,oBAAC,KAAD,CAAO,MAAP,EAAc,WAAW,KAAzB,eACI,2BAAK,SAAS,CAAC,yDAAf,eACI,2BAAK,SAAS,CAAC,kDAAf,eACI,yBAAG,KAAK,CAAC,mCAAT,CAA6C,OAAO,CAAEZ,KAAK,CAACa,YAA5D,EADJ,cAEI,oBAAC,KAAD,CAAO,KAAP,sBAFJ,CADJ,cAKI,8BAAQ,SAAS,CAAC,iBAAlB,CAAoC,OAAO,CAAEb,KAAK,CAACa,YAAnD,YALJ,CADJ,CADJ,cAYI,oBAAC,KAAD,CAAO,IAAP,mBACI,4CACI,2BAAK,SAAS,CAAC,qCAAf,CAAqD,KAAK,CAAE,CAAEC,SAAS,CAAE,OAAb,CAA5D,eACI,2BAAK,SAAS,CAAC,eAAf,CAA+B,GAAG,CAAEX,YAApC,CAAkD,GAAG,CAAEF,YAAvD,CAAqE,GAAG,CAAC,QAAzE,CAAkF,WAAW,KAA7F,EADJ,CADJ,CADJ,CAZJ,CADJ,CAsBH","sourcesContent":["import React, { useContext, useEffect, useRef } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Cropper from \"cropperjs\";\r\n\r\nimport \"cropperjs/dist/cropper.min.css\";\r\n\r\nimport { ProfileImageContext } from '../../../../../context/edit-profile/EditProfileContext'\r\n\r\n\r\nexport default function CroppieModal(props) {\r\n    const [profileImage, setProfileImage] = useContext(ProfileImageContext)\r\n\r\n    const imageElement = useRef()\r\n\r\n    useEffect(() => {\r\n        const cropper = new Cropper(imageElement.current, {\r\n            viewMode: 1,\r\n            scalable: false,\r\n            aspectRatio: 1,\r\n            crop: () => {\r\n                const canvas = cropper.getCroppedCanvas();\r\n                setProfileImage(canvas.toDataURL(\"image/png\"))\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Modal.Header closeButton>\r\n                <div className=\"d-flex justify-content-between align-items-center w-100\">\r\n                    <div className=\"d-flex justify-content-center align-items-center\">\r\n                        <i class=\"fas fa-arrow-left left-arrow-icon\" onClick={props.stopCropping} />\r\n                        <Modal.Title>Editar perfil</Modal.Title>\r\n                    </div>\r\n                    <button className=\"btn btn-primary\" onClick={props.stopCropping}>\r\n                        Aplicar\r\n                    </button>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div>\r\n                    <div className=\"d-flex justify-content-center w-100\" style={{ maxHeight: '480px' }}>\r\n                        <img className=\"mw-100 mh-100\" ref={imageElement} src={profileImage} alt=\"Source\" crossorigin />\r\n                    </div>\r\n                </div>\r\n            </Modal.Body>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}