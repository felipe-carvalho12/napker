{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\fabio\\\\CodeProjects\\\\Django\\\\napker\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import SidebarSlider from'../SidebarSlider';import FeedAlgorithm from'./components/algorithm-settings/AlgorithmSettings';import GlobalChat from'./components/GlobalChat';export default function FeedSidebar(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),pageIndex=_useState2[0],setPageIndex=_useState2[1];var pages=[/*#__PURE__*/React.createElement(FeedAlgorithm,null),/*#__PURE__*/React.createElement(GlobalChat,null),'Em breve...'];return/*#__PURE__*/React.createElement(React.Fragment,null,pages[pageIndex],/*#__PURE__*/React.createElement(SidebarSlider,{handlePageChange:function handlePageChange(e){return setPageIndex(e.target.id);}}));}","map":{"version":3,"sources":["C:/Users/fabio/CodeProjects/Django/napker/frontend/src/components/fixed/sidebar-right/components/home-sidebar/HomeSidebar.js"],"names":["React","useState","SidebarSlider","FeedAlgorithm","GlobalChat","FeedSidebar","pageIndex","setPageIndex","pages","e","target","id"],"mappings":"oLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,aAAP,KAA0B,kBAA1B,CAEA,MAAOC,CAAAA,aAAP,KAA0B,mDAA1B,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CAGA,cAAe,SAASC,CAAAA,WAAT,EAAuB,eACAJ,QAAQ,CAAC,CAAD,CADR,wCAC3BK,SAD2B,eAChBC,YADgB,eAGlC,GAAMC,CAAAA,KAAK,CAAG,cAAC,oBAAC,aAAD,MAAD,cAAoB,oBAAC,UAAD,MAApB,CAAoC,aAApC,CAAd,CAEA,mBACI,wCACKA,KAAK,CAACF,SAAD,CADV,cAEI,oBAAC,aAAD,EAAe,gBAAgB,CAAE,0BAAAG,CAAC,QAAIF,CAAAA,YAAY,CAACE,CAAC,CAACC,MAAF,CAASC,EAAV,CAAhB,EAAlC,EAFJ,CADJ,CAMH","sourcesContent":["import React, { useState } from 'react'\r\nimport SidebarSlider from '../SidebarSlider'\r\n\r\nimport FeedAlgorithm from './components/algorithm-settings/AlgorithmSettings'\r\nimport GlobalChat from './components/GlobalChat'\r\n\r\n\r\nexport default function FeedSidebar() {\r\n    const [pageIndex, setPageIndex] = useState(0)\r\n\r\n    const pages = [<FeedAlgorithm />, <GlobalChat />, 'Em breve...']\r\n\r\n    return (\r\n        <>\r\n            {pages[pageIndex]}\r\n            <SidebarSlider handlePageChange={e => setPageIndex(e.target.id)} />\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}