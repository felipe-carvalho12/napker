{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\felip\\\\CodeProjects\\\\Web\\\\Napker\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\felip\\\\CodeProjects\\\\Web\\\\Napker\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\felip\\\\CodeProjects\\\\Web\\\\Napker\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\felip\\\\CodeProjects\\\\Web\\\\Napker\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import Modal from'react-bootstrap/Modal';import{Link}from'react-router-dom';import Header from'../../components/fixed/header';import Chat from'./chat';import{SERVER_URL}from'../../config/settings';var Messages=/*#__PURE__*/function(_React$Component){_inherits(Messages,_React$Component);var _super=_createSuper(Messages);function Messages(_props){var _this;_classCallCheck(this,Messages);_this=_super.call(this,_props);_this.handleReceiveProps=function(props){var participants={username:_this.state.username,other_username:props.match.params.slug};fetch(\"\".concat(SERVER_URL,\"/chat-api/chat-id/\").concat(JSON.stringify(participants))).then(function(response){return response.json();}).then(function(data){return _this.setState({chatId:data['chat_id']});});};_this.fetchActiveChatProfiles=function(){console.log('fetching profiles...');fetch(\"\".concat(SERVER_URL,\"/chat-api/active-chats-profiles\")).then(function(response){return response.json();}).then(function(data){if(!_this.state.username)return;_this.setState({activeChats:data.chats.reverse(),activeChatsProfiles:data.profiles.reverse()});});};_this.openModal=function(){_this.setState({addingNewChat:true});};_this.setModalSearch=function(query){if(query===''){_this.setState({modalProfiles:[]});return;}fetch(\"\".concat(SERVER_URL,\"/profile-api/users/\").concat(query)).then(function(response){return response.json();}).then(function(data){_this.setState({modalProfiles:data});});};_this.setContactSearch=function(query){if(query===''){_this.fetchActiveChatProfiles();return;}if(_this.state.activeChatsProfiles){var filteredProfiles=_this.state.activeChatsProfiles.filter(function(p){return p.user.username.includes(query);});_this.setState({activeChatsProfiles:filteredProfiles});}};_this.resetUnreadMessagesCounter=function(){_this.unreadMessagesCounter=0;};_this.incrementUnreadMessagesCounter=function(){_this.unreadMessagesCounter++;};_this.setLastChatMessage=function(message){_this.lastChatMessage=message;};_this.state={myProfile:null,username:null,chatId:null,activeChats:null,activeChatsProfiles:null,addingNewChat:false,modalProfiles:[]};_this.rerenderingInterval=null;return _this;}_createClass(Messages,[{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(newProps){if(newProps===this.props)return;this.handleReceiveProps(newProps);}},{key:\"handleComponentChange\",value:function handleComponentChange(){var _this2=this;if(!this.state.username){fetch(\"\".concat(SERVER_URL,\"/profile-api/logged-user\")).then(function(response){return response.json();}).then(function(data){_this2.setState({username:data.username});if(_this2.props.match.params.slug){_this2.handleReceiveProps(_this2.props);}});}if(!this.state.activeChatsProfiles&&this.state.activeChatsProfiles!==[]){this.fetchActiveChatProfiles();}}},{key:\"componentWillMount\",value:function componentWillMount(){document.title='Mensagens / Napker';this.handleComponentChange();this.rerenderingInterval=window.setInterval(this.fetchActiveChatProfiles,3000);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){window.clearInterval(this.rerenderingInterval);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.handleComponentChange();}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Header,{page:\"Mensagens\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"content d-flex messages-wrapper\"},/*#__PURE__*/React.createElement(Modal,{show:this.state.addingNewChat,onHide:function onHide(){return _this3.setState({addingNewChat:false});},size:\"lg\"},/*#__PURE__*/React.createElement(Modal.Header,{closeButton:true},/*#__PURE__*/React.createElement(Modal.Title,null,/*#__PURE__*/React.createElement(\"strong\",null,\"Nova conversa\"))),/*#__PURE__*/React.createElement(Modal.Body,{style:{padding:'0'}},/*#__PURE__*/React.createElement(\"input\",{className:\"modal-search-input\",placeholder:\"Pesquisar pessoas\",onChange:function onChange(e){return _this3.setModalSearch(e.target.value);}}),/*#__PURE__*/React.createElement(\"div\",{className:\"list-group\",style:{height:'400px',overflow:'hidden',overflowY:'scroll'}},this.state.modalProfiles&&this.state.modalProfiles.map(function(profile){return/*#__PURE__*/React.createElement(Link,{to:\"/mensagens/\".concat(profile.slug),style:{color:'#000',textDecoration:'none'},onClick:function onClick(){return _this3.setState({addingNewChat:false});}},/*#__PURE__*/React.createElement(\"li\",{className:\"list-group-item profile-row modal-profile-li\",key:profile.id},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-between\"},/*#__PURE__*/React.createElement(\"div\",{className:\"profile-col\"},/*#__PURE__*/React.createElement(\"img\",{src:\"\".concat(SERVER_URL).concat(profile.photo),className:\"profile-img-med\",style:{marginRight:'10px'}}),/*#__PURE__*/React.createElement(\"div\",{className:\"main-profile-data\"},/*#__PURE__*/React.createElement(\"strong\",null,profile.first_name,\" \",profile.last_name),/*#__PURE__*/React.createElement(\"p\",{className:\"text-secondary\"},\"@\",profile.user.username))),/*#__PURE__*/React.createElement(\"div\",{className:\"profile-col\"},profile.bio))));})))),/*#__PURE__*/React.createElement(\"div\",{className:\"chats-list\"},/*#__PURE__*/React.createElement(\"div\",{className:\"search-input-container\"},/*#__PURE__*/React.createElement(\"input\",{className:\"search-input\",id:\"contact-filter-input\",placeholder:\"Pesquisar pessoas\",onChange:function onChange(e){return _this3.setContactSearch(e.target.value);}}),/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-plus add-icon\",onClick:this.openModal})),/*#__PURE__*/React.createElement(\"div\",{className:\"list-group chats-container\"},this.state.activeChatsProfiles!==null?this.state.activeChatsProfiles.map(function(profile){return/*#__PURE__*/React.createElement(Link,{to:\"/mensagens/\".concat(profile.slug),style:{color:'#000',textDecoration:'none'}},_this3.resetUnreadMessagesCounter(),/*#__PURE__*/React.createElement(\"li\",{className:\"list-item profile-chat-item\",style:{whiteSpace:'nowrap'}},/*#__PURE__*/React.createElement(\"img\",{src:\"\".concat(SERVER_URL).concat(profile.photo),className:\"profile-img-med\",style:{marginRight:'10px'}}),/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex flex-column align-items-start\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex\",style:{maxHeight:'30px'}},/*#__PURE__*/React.createElement(\"strong\",{style:{height:'fit-content'}},profile.first_name,\" \",profile.last_name),_this3.state.activeChats[_this3.state.activeChatsProfiles.indexOf(profile)].messages.map(function(message){var messages=_this3.state.activeChats[_this3.state.activeChatsProfiles.indexOf(profile)].messages;if(messages[messages.length-1]===message)_this3.setLastChatMessage(message.content);if(message.read||message.contact.user.username!==profile.user.username)return;_this3.incrementUnreadMessagesCounter();}),_this3.unreadMessagesCounter?/*#__PURE__*/React.createElement(\"div\",{className:\"notification-text-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"notification-text\"},_this3.unreadMessagesCounter)):'',/*#__PURE__*/React.createElement(\"p\",{className:\"text-secondary\",style:{marginLeft:'5px'}},\"@\",profile.user.username)),/*#__PURE__*/React.createElement(\"p\",{className:\"text-secondary\"},_this3.lastChatMessage.slice(0,40)))));}):/*#__PURE__*/React.createElement(\"div\",{className:\"messages-loader-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"loader\"})))),/*#__PURE__*/React.createElement(Chat,{username:this.state.username,otherUsername:this.props.match.params.slug,chatId:this.state.chatId,openModal:this.openModal,updateUnreadMessagesNumber:this.props.updateUnreadMessagesNumber,updateMessagesComponent:this.fetchActiveChatProfiles})));}}]);return Messages;}(React.Component);export default Messages;","map":{"version":3,"sources":["C:/Users/felip/CodeProjects/Web/Napker/frontend/src/pages/messages_page/Messages.js"],"names":["React","Modal","Link","Header","Chat","SERVER_URL","Messages","props","handleReceiveProps","participants","username","state","other_username","match","params","slug","fetch","JSON","stringify","then","response","json","data","setState","chatId","fetchActiveChatProfiles","console","log","activeChats","chats","reverse","activeChatsProfiles","profiles","openModal","addingNewChat","setModalSearch","query","modalProfiles","setContactSearch","filteredProfiles","filter","p","user","includes","resetUnreadMessagesCounter","unreadMessagesCounter","incrementUnreadMessagesCounter","setLastChatMessage","message","lastChatMessage","myProfile","rerenderingInterval","newProps","document","title","handleComponentChange","window","setInterval","clearInterval","padding","e","target","value","height","overflow","overflowY","map","profile","color","textDecoration","id","photo","marginRight","first_name","last_name","bio","whiteSpace","maxHeight","indexOf","messages","length","content","read","contact","marginLeft","slice","updateUnreadMessagesNumber","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Header from '../../components/fixed/header'\r\nimport Chat from './chat'\r\nimport { SERVER_URL } from '../../config/settings'\r\n\r\nclass Messages extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myProfile: null,\r\n            username: null,\r\n            chatId: null,\r\n            activeChats: null,\r\n            activeChatsProfiles: null,\r\n            addingNewChat: false,\r\n            modalProfiles: [],\r\n        }\r\n        this.rerenderingInterval = null\r\n    }\r\n\r\n    handleReceiveProps = props => {\r\n        const participants = { username: this.state.username, other_username: props.match.params.slug }\r\n        fetch(`${SERVER_URL}/chat-api/chat-id/${JSON.stringify(participants)}`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                chatId: data['chat_id']\r\n            }))\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps === this.props) return\r\n        this.handleReceiveProps(newProps)\r\n    }\r\n\r\n    handleComponentChange() {\r\n        if (!this.state.username) {\r\n            fetch(`${SERVER_URL}/profile-api/logged-user`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    this.setState({\r\n                        username: data.username\r\n                    })\r\n                    if (this.props.match.params.slug) {\r\n                        this.handleReceiveProps(this.props)\r\n                    }\r\n                })\r\n        }\r\n        if (!this.state.activeChatsProfiles && this.state.activeChatsProfiles !== []) {\r\n            this.fetchActiveChatProfiles()\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.title = 'Mensagens / Napker'\r\n        this.handleComponentChange()\r\n        this.rerenderingInterval = window.setInterval(this.fetchActiveChatProfiles, 3000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.clearInterval(this.rerenderingInterval)\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    fetchActiveChatProfiles = () => {\r\n        console.log('fetching profiles...')\r\n        fetch(`${SERVER_URL}/chat-api/active-chats-profiles`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (!this.state.username) return\r\n                this.setState({\r\n                    activeChats: data.chats.reverse(),\r\n                    activeChatsProfiles: data.profiles.reverse()\r\n                })\r\n            })\r\n    }\r\n\r\n    openModal = () => {\r\n        this.setState({\r\n            addingNewChat: true\r\n        })\r\n    }\r\n\r\n    setModalSearch = query => {\r\n        if (query === '') {\r\n            this.setState({\r\n                modalProfiles: []\r\n            })\r\n            return\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/users/${query}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    modalProfiles: data\r\n                })\r\n            })\r\n    }\r\n\r\n    setContactSearch = query => {\r\n        if (query === '') {\r\n            this.fetchActiveChatProfiles()\r\n            return\r\n        }\r\n        if (this.state.activeChatsProfiles) {\r\n            const filteredProfiles = this.state.activeChatsProfiles.filter(p => p.user.username.includes(query))\r\n            this.setState({\r\n                activeChatsProfiles: filteredProfiles\r\n            })\r\n        }\r\n    }\r\n\r\n    resetUnreadMessagesCounter = () => {\r\n        this.unreadMessagesCounter = 0\r\n    }\r\n\r\n    incrementUnreadMessagesCounter = () => {\r\n        this.unreadMessagesCounter++\r\n    }\r\n\r\n    setLastChatMessage = message => {\r\n        this.lastChatMessage = message\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header page=\"Mensagens\" />\r\n                <div className=\"content d-flex messages-wrapper\">\r\n                    <Modal show={this.state.addingNewChat}\r\n                        onHide={() => this.setState({ addingNewChat: false })}\r\n                        size=\"lg\">\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title><strong>Nova conversa</strong></Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body style={{ padding: '0' }}>\r\n                            <input className=\"modal-search-input\"\r\n                                placeholder=\"Pesquisar pessoas\"\r\n                                onChange={e => this.setModalSearch(e.target.value)}\r\n                            />\r\n                            <div className=\"list-group\" style={{ height: '400px', overflow: 'hidden', overflowY: 'scroll' }}>\r\n                                {this.state.modalProfiles && this.state.modalProfiles.map(profile => {\r\n                                    return (\r\n                                        <Link to={`/mensagens/${profile.slug}`}\r\n                                            style={{ color: '#000', textDecoration: 'none' }}\r\n                                            onClick={() => this.setState({\r\n                                                addingNewChat: false\r\n                                            })}\r\n                                        >\r\n                                            <li className=\"list-group-item profile-row modal-profile-li\" key={profile.id}>\r\n                                                <div className=\"d-flex justify-content-between\">\r\n                                                    <div className=\"profile-col\">\r\n                                                        <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                            className=\"profile-img-med\"\r\n                                                            style={{ marginRight: '10px' }}\r\n                                                        />\r\n                                                        <div className=\"main-profile-data\">\r\n                                                            <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                                            <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"profile-col\">\r\n                                                        {profile.bio}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </li>\r\n                                        </Link>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                    <div className=\"chats-list\">\r\n                        <div className=\"search-input-container\">\r\n                            <input className=\"search-input\" id=\"contact-filter-input\" placeholder=\"Pesquisar pessoas\" onChange={e => this.setContactSearch(e.target.value)} />\r\n                            <i className=\"fas fa-plus add-icon\" onClick={this.openModal}></i>\r\n                        </div>\r\n                        <div className=\"list-group chats-container\">\r\n                            {this.state.activeChatsProfiles !== null ?\r\n                                this.state.activeChatsProfiles.map(profile => {\r\n                                    return (\r\n                                        <Link to={`/mensagens/${profile.slug}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                                            {this.resetUnreadMessagesCounter()}\r\n                                            <li className=\"list-item profile-chat-item\" style={{ whiteSpace: 'nowrap' }}>\r\n                                                <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                    className=\"profile-img-med\"\r\n                                                    style={{ marginRight: '10px' }}\r\n                                                />\r\n                                                <div className=\"d-flex flex-column align-items-start\">\r\n                                                    <div className=\"d-flex\" style={{ maxHeight: '30px' }}>\r\n                                                        <strong style={{ height: 'fit-content' }}>{profile.first_name} {profile.last_name}</strong>\r\n                                                        {this.state.activeChats[this.state.activeChatsProfiles.indexOf(profile)].messages.map(message => {\r\n                                                            const messages = this.state.activeChats[this.state.activeChatsProfiles.indexOf(profile)].messages\r\n                                                            if (messages[messages.length - 1] === message) this.setLastChatMessage(message.content)\r\n                                                            if (message.read || message.contact.user.username !== profile.user.username) return\r\n                                                            this.incrementUnreadMessagesCounter()\r\n                                                        })}\r\n                                                        {this.unreadMessagesCounter ?\r\n                                                            <div className=\"notification-text-container\">\r\n                                                                <div className=\"notification-text\">\r\n                                                                    {this.unreadMessagesCounter}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            : ''\r\n                                                        }\r\n                                                        <p className=\"text-secondary\" style={{ marginLeft: '5px' }}>@{profile.user.username}</p>\r\n                                                    </div>\r\n                                                    <p className=\"text-secondary\">{this.lastChatMessage.slice(0, 40)}</p>\r\n                                                </div>\r\n                                            </li>\r\n                                        </Link>\r\n                                    )\r\n                                }) :\r\n                                <div className=\"messages-loader-container\">\r\n                                    <div className=\"loader\" />\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <Chat username={this.state.username}\r\n                        otherUsername={this.props.match.params.slug}\r\n                        chatId={this.state.chatId}\r\n                        openModal={this.openModal}\r\n                        updateUnreadMessagesNumber={this.props.updateUnreadMessagesNumber}\r\n                        updateMessagesComponent={this.fetchActiveChatProfiles}\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Messages"]},"metadata":{},"sourceType":"module"}