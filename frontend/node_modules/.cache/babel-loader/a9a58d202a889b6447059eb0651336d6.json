{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\carlo\\\\Projects\\\\napker\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"C:\\\\Users\\\\carlo\\\\Projects\\\\napker\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\carlo\\\\Projects\\\\napker\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import{SOCKET_URL}from'../../config/settings';var WebSocketService=/*#__PURE__*/function(){_createClass(WebSocketService,null,[{key:\"getInstance\",value:function getInstance(){if(!WebSocketService.instance){WebSocketService.instance=new WebSocketService();}return WebSocketService.instance;}}]);function WebSocketService(){_classCallCheck(this,WebSocketService);this.callbacks={};this.socketRef=null;}_createClass(WebSocketService,[{key:\"connect\",value:function connect(chatUrl){var _this=this;var path=\"\".concat(SOCKET_URL,\"/ws/chat/\").concat(chatUrl,\"/\");this.socketRef=new WebSocket(path);this.socketRef.onopen=function(){console.log(\"WebSocket open\");};this.socketNewMessage(JSON.stringify({command:'fetch-messages'}));this.socketRef.onmessage=function(e){_this.socketNewMessage(e.data);};this.socketRef.onerror=function(e){console.log(e.message);};this.socketRef.onclose=function(){console.log(\"WebSocket closed\");};}},{key:\"disconnect\",value:function disconnect(){if(this.socketRef)this.socketRef.close();}},{key:\"socketNewMessage\",value:function socketNewMessage(data){var parsedData=JSON.parse(data);var command=parsedData.command;if(Object.keys(this.callbacks).length===0){return;}if(command===\"messages\"){this.callbacks[command](parsedData.messages);}if(command===\"new_message\"){this.callbacks[command](parsedData.message);}}},{key:\"fetchMessages\",value:function fetchMessages(username,chatId){this.sendMessage({command:\"fetch_messages\",username:username,chatId:chatId});}},{key:\"newChatMessage\",value:function newChatMessage(message){this.sendMessage({command:\"new_message\",from:message.from,content:message.content,chatId:message.chatId});}},{key:\"readMessages\",value:function readMessages(chatId){this.sendMessage({command:\"read_messages\",chatId:chatId});}},{key:\"addCallbacks\",value:function addCallbacks(messagesCallback,newMessageCallback){this.callbacks[\"messages\"]=messagesCallback;this.callbacks[\"new_message\"]=newMessageCallback;}},{key:\"sendMessage\",value:function sendMessage(data){try{if(this.state()===1){this.socketRef.send(JSON.stringify(_objectSpread({},data)));}}catch(err){console.log(err.message);}}},{key:\"state\",value:function state(){return this.socketRef?this.socketRef.readyState:0;}}]);return WebSocketService;}();WebSocketService.instance=null;var WebSocketInstance=WebSocketService.getInstance();export default WebSocketInstance;","map":{"version":3,"sources":["C:/Users/carlo/Projects/napker/frontend/src/pages/messages_/Websocket.js"],"names":["SOCKET_URL","WebSocketService","instance","callbacks","socketRef","chatUrl","path","WebSocket","onopen","console","log","socketNewMessage","JSON","stringify","command","onmessage","e","data","onerror","message","onclose","close","parsedData","parse","Object","keys","length","messages","username","chatId","sendMessage","from","content","messagesCallback","newMessageCallback","state","send","err","readyState","WebSocketInstance","getInstance"],"mappings":"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","sourcesContent":["import { SOCKET_URL } from '../../config/settings'\r\n\r\nclass WebSocketService {\r\n  static instance = null;\r\n  callbacks = {};\r\n\r\n  static getInstance() {\r\n    if (!WebSocketService.instance) {\r\n      WebSocketService.instance = new WebSocketService();\r\n    }\r\n    return WebSocketService.instance;\r\n  }\r\n\r\n  constructor() {\r\n    this.socketRef = null;\r\n  }\r\n\r\n  connect(chatUrl) {\r\n    const path = `${SOCKET_URL}/ws/chat/${chatUrl}/`;\r\n    this.socketRef = new WebSocket(path);\r\n    this.socketRef.onopen = () => {\r\n      console.log(\"WebSocket open\");\r\n    };\r\n    this.socketNewMessage(JSON.stringify({\r\n      command: 'fetch-messages'\r\n    }))\r\n    this.socketRef.onmessage = e => {\r\n      this.socketNewMessage(e.data);\r\n    };\r\n    this.socketRef.onerror = e => {\r\n      console.log(e.message);\r\n    };\r\n    this.socketRef.onclose = () => {\r\n      console.log(\"WebSocket closed\");\r\n    };\r\n  }\r\n\r\n  disconnect() {\r\n    if (this.socketRef) this.socketRef.close();\r\n  }\r\n\r\n  socketNewMessage(data) {\r\n    const parsedData = JSON.parse(data);\r\n    const command = parsedData.command;\r\n    if (Object.keys(this.callbacks).length === 0) {\r\n      return;\r\n    }\r\n    if (command === \"messages\") {\r\n      this.callbacks[command](parsedData.messages);\r\n    }\r\n    if (command === \"new_message\") {\r\n      this.callbacks[command](parsedData.message);\r\n    }\r\n  }\r\n\r\n  fetchMessages(username, chatId) {\r\n    this.sendMessage({\r\n      command: \"fetch_messages\",\r\n      username: username,\r\n      chatId: chatId\r\n    });\r\n  }\r\n\r\n  newChatMessage(message) {\r\n    this.sendMessage({\r\n      command: \"new_message\",\r\n      from: message.from,\r\n      content: message.content,\r\n      chatId: message.chatId\r\n    });\r\n  }\r\n\r\n  readMessages(chatId) {\r\n    this.sendMessage({\r\n      command: \"read_messages\",\r\n      chatId: chatId\r\n    });\r\n  }\r\n\r\n  addCallbacks(messagesCallback, newMessageCallback) {\r\n    this.callbacks[\"messages\"] = messagesCallback\r\n    this.callbacks[\"new_message\"] = newMessageCallback\r\n  }\r\n\r\n  sendMessage(data) {\r\n    try {\r\n      if (this.state() === 1) {\r\n        this.socketRef.send(JSON.stringify({ ...data }))\r\n      }\r\n    } catch (err) {\r\n      console.log(err.message)\r\n    }\r\n  }\r\n\r\n  state() {\r\n    return this.socketRef ? this.socketRef.readyState : 0\r\n  }\r\n}\r\n\r\nconst WebSocketInstance = WebSocketService.getInstance();\r\n\r\nexport default WebSocketInstance;"]},"metadata":{},"sourceType":"module"}