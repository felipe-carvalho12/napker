{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\felip\\\\CodeProjects\\\\Web\\\\Napker\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"C:\\\\Users\\\\felip\\\\CodeProjects\\\\Web\\\\Napker\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\felip\\\\CodeProjects\\\\Web\\\\Napker\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\felip\\\\CodeProjects\\\\Web\\\\Napker\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\felip\\\\CodeProjects\\\\Web\\\\Napker\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import Picker from'emoji-picker-react';import{Link}from'react-router-dom';import{csrftoken,openCloseEmojiList}from'../../config/utils';import{SERVER_URL}from'../../config/settings';import WebSocketInstance from'./Websocket';var Chat=/*#__PURE__*/function(_React$Component){_inherits(Chat,_React$Component);var _super=_createSuper(Chat);_createClass(Chat,[{key:\"initialiseChat\",value:function initialiseChat(){var _this2=this;this.waitForSocketConnection(function(){WebSocketInstance.addCallbacks(_this2.getMessages.bind(_this2),_this2.addMessage.bind(_this2),_this2.getUpdatedMessages.bind(_this2));WebSocketInstance.fetchMessages(_this2.props.username,_this2.props.chatId);});if(this.props.chatId)WebSocketInstance.connect(this.props.chatId);}}]);function Chat(_props){var _this;_classCallCheck(this,Chat);_this=_super.call(this,_props);_this.handleComponentChange=function(){_this.scrollToBottom();if(_this.state.otherUsername&&(!_this.state.otherProfile||_this.state.otherProfile.user.username!==_this.state.otherUsername)){fetch(\"\".concat(SERVER_URL,\"/profile-api/user/\").concat(_this.state.otherUsername)).then(function(response){return response.json();}).then(function(data){return _this.setState({otherProfile:data});});}if(!_this.state.myProfile){fetch(\"\".concat(SERVER_URL,\"/profile-api/myprofile\")).then(function(response){return response.json();}).then(function(data){return _this.setState({myProfile:data});});}};_this.readMessages=function(props){fetch(\"\".concat(SERVER_URL,\"/chat-api/read-messages\"),{method:'POST',headers:{'Content-type':'application/json','X-CSRFToken':csrftoken},body:JSON.stringify({chat_id:props.chatId})}).then(function(response){return response.json();}).then(function(data){console.log(data);WebSocketInstance.readMessages(_this.props.chatId);});};_this.messageChangeHandler=function(e){_this.setState({message:e.target.value});var el=document.querySelector('#chat-message-submit');el.disabled=e.target.value.trim()==='';};_this.sendMessageHandler=function(e){e.preventDefault();var messageObject={from:_this.props.username,content:_this.state.message,chatId:_this.props.chatId};_this.setState({message:''});if(_this.state.otherProfile.blocked_users.map(function(u){return u.id;}).includes(_this.state.myProfile.user.id)){window.alert(\"Voc\\xEA n\\xE3o pode enviar mensagens para @\".concat(_this.state.otherUsername,\".\\n            \").concat(_this.state.otherProfile.first_name,\" te bloqueou.\"));return;}if(_this.state.myProfile.blocked_users.map(function(u){return u.id;}).includes(_this.state.otherProfile.user.id)){window.alert(\"Voc\\xEA n\\xE3o pode enviar mensagens para @\".concat(_this.state.otherUsername,\".\\n            Voc\\xEA bloqueou \").concat(_this.state.otherProfile.first_name,\".\"));return;}WebSocketInstance.newChatMessage(messageObject);document.querySelector('#chat-message-submit').disabled=true;openCloseEmojiList(true);_this.props.updateMessagesComponent();};_this.renderTimestamp=function(timestamp){var ts=new Date(timestamp);var day=ts.getDate()>=10?ts.getDate():\"0\".concat(ts.getDate());var month=ts.getMonth()>=10?ts.getMonth():\"0\".concat(ts.getMonth());var hour=ts.getHours()>=10?ts.getHours():\"0\".concat(ts.getHours());var minute=ts.getMinutes()>=10?ts.getMinutes():\"0\".concat(ts.getMinutes());return\"\".concat(day,\"/\").concat(month,\"/\").concat(ts.getFullYear(),\" - \").concat(hour,\":\").concat(minute);};_this.renderMessages=function(messages){var currentUser=_this.props.username;return messages.map(function(message){return/*#__PURE__*/React.createElement(\"li\",{key:message.id,className:message.author===currentUser?\"sent\":\"received\"},/*#__PURE__*/React.createElement(\"p\",null,message.content,/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"small\",null,_this.renderTimestamp(message.timestamp),\" \",message.author===currentUser?message.read?/*#__PURE__*/React.createElement(\"i\",{class:\"fas fa-check-double\"}):/*#__PURE__*/React.createElement(\"i\",{class:\"fas fa-check\"}):'')));});};_this.scrollToBottom=function(){if(document.querySelector('#chat-log')){var chatLog=document.querySelector('#chat-log');chatLog.scrollTop=chatLog.scrollHeight;}};_this.onEmojiSelect=function(event,emojiObject){_this.setState({message:_this.state.message+emojiObject.emoji});document.querySelector('#chat-message-submit').disabled=false;};_this.state={message:'',messages:[],myProfile:null,otherUsername:_this.props.otherUsername,otherProfile:null};_this.initialiseChat();return _this;}_createClass(Chat,[{key:\"componentDidMount\",value:function componentDidMount(){this.handleComponentChange();}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.handleComponentChange();document.querySelector('#chat-message-input')&&document.querySelector('#chat-message-input').focus();}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){WebSocketInstance.disconnect();}},{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(newProps){var _this3=this;if(this.props.chatId!==newProps.chatId){WebSocketInstance.disconnect();this.waitForSocketConnection(function(){WebSocketInstance.fetchMessages(_this3.props.username,newProps.chatId);});WebSocketInstance.connect(newProps.chatId);this.props.updateMessagesComponent();this.setState({message:'',otherUsername:newProps.otherUsername});}if(newProps.chatId){this.readMessages(newProps);}if(this.props.updateUnreadMessagesNumber){this.props.updateUnreadMessagesNumber();}}},{key:\"waitForSocketConnection\",value:function waitForSocketConnection(callback){var component=this;setTimeout(function(){if(WebSocketInstance.state()===1){console.log(\"Connection is made\");callback();return;}else{console.log(\"wait for connection...\");component.waitForSocketConnection(callback);}},100);}},{key:\"getMessages\",value:function getMessages(messages){this.setState({messages:messages.reverse()});}},{key:\"addMessage\",value:function addMessage(message){this.setState({messages:[].concat(_toConsumableArray(this.state.messages),[message])});this.readMessages(this.props);}},{key:\"getUpdatedMessages\",value:function getUpdatedMessages(messages){this.setState({messages:messages.reverse()});}},{key:\"render\",value:function render(){var _this4=this;return/*#__PURE__*/React.createElement(React.Fragment,null,this.state.otherProfile!==null||!this.props.otherUsername?/*#__PURE__*/React.createElement(React.Fragment,null,this.state.otherProfile?/*#__PURE__*/React.createElement(\"div\",{className:\"current-chat\"},/*#__PURE__*/React.createElement(\"div\",{className:\"current-chat-header\"},this.props.backArrow&&/*#__PURE__*/React.createElement(\"i\",{class:\"fas fa-arrow-left left-arrow-icon\",onClick:function onClick(){return window.history.back();}}),/*#__PURE__*/React.createElement(Link,{to:\"/user/\".concat(this.state.otherProfile.slug)},/*#__PURE__*/React.createElement(\"img\",{src:\"\".concat(SERVER_URL).concat(this.state.otherProfile.photo),className:\"profile-img-sm\",style:{marginRight:'5px'}})),/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex flex-column align-items-start\",style:{height:'52px'}},/*#__PURE__*/React.createElement(\"strong\",null,this.state.otherProfile.first_name,\" \",this.state.otherProfile.last_name),/*#__PURE__*/React.createElement(\"p\",{className:\"text-secondary\"},\"@\",this.state.otherProfile.user.username))),/*#__PURE__*/React.createElement(\"div\",{id:\"chat-log\"},this.state.messages?this.renderMessages(this.state.messages):''),/*#__PURE__*/React.createElement(\"div\",{className:\"emoji-list-container chat-emoji-list\",id:\"emoji-list-container\"},/*#__PURE__*/React.createElement(Picker,{onEmojiClick:this.onEmojiSelect})),/*#__PURE__*/React.createElement(\"form\",{className:\"send-message-container\",onSubmit:this.sendMessageHandler},/*#__PURE__*/React.createElement(\"label\",{className:\"far fa-smile\",id:\"emoji-button\",onClick:function onClick(){return openCloseEmojiList(false);}}),/*#__PURE__*/React.createElement(\"input\",{placeholder:\"Mensagem\",className:\"message-input\",id:\"chat-message-input\",value:this.state.message,autoFocus:Array.prototype.slice.call(document.querySelectorAll('.contact-filter-input')).filter(function(el){return el.value!=='';}).lenght>0,onChange:this.messageChangeHandler}),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary chat-message-submit\",id:\"chat-message-submit\",disabled:true},/*#__PURE__*/React.createElement(\"i\",{class:\"fas fa-chevron-right\"})))):/*#__PURE__*/React.createElement(\"div\",{className:\"current-chat no-chat-selected\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"strong\",{style:{fontSize:'larger'}},\"Voc\\xEA n\\xE3o tem uma conversa selecionada\"),/*#__PURE__*/React.createElement(\"p\",{className:\"text-secondary\"},\"Selecione uma existente ou comece uma nova\"),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary\",onClick:function onClick(){return _this4.props.openModal();}},\"Nova conversa\")))):/*#__PURE__*/React.createElement(\"div\",{className:\"chat-loader-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"loader\"})));}}]);return Chat;}(React.Component);export default Chat;","map":{"version":3,"sources":["C:/Users/felip/CodeProjects/Web/Napker/frontend/src/pages/messages_page/Chat.js"],"names":["React","Picker","Link","csrftoken","openCloseEmojiList","SERVER_URL","WebSocketInstance","Chat","waitForSocketConnection","addCallbacks","getMessages","bind","addMessage","getUpdatedMessages","fetchMessages","props","username","chatId","connect","handleComponentChange","scrollToBottom","state","otherUsername","otherProfile","user","fetch","then","response","json","data","setState","myProfile","readMessages","method","headers","body","JSON","stringify","chat_id","console","log","messageChangeHandler","e","message","target","value","el","document","querySelector","disabled","trim","sendMessageHandler","preventDefault","messageObject","from","content","blocked_users","map","u","id","includes","window","alert","first_name","newChatMessage","updateMessagesComponent","renderTimestamp","timestamp","ts","Date","day","getDate","month","getMonth","hour","getHours","minute","getMinutes","getFullYear","renderMessages","messages","currentUser","author","read","chatLog","scrollTop","scrollHeight","onEmojiSelect","event","emojiObject","emoji","initialiseChat","focus","disconnect","newProps","updateUnreadMessagesNumber","callback","component","setTimeout","reverse","backArrow","history","back","slug","photo","marginRight","height","last_name","Array","prototype","slice","call","querySelectorAll","filter","lenght","fontSize","openModal","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Picker from 'emoji-picker-react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { csrftoken, openCloseEmojiList } from '../../config/utils'\r\nimport { SERVER_URL } from '../../config/settings'\r\nimport WebSocketInstance from './Websocket'\r\n\r\nclass Chat extends React.Component {\r\n    initialiseChat() {\r\n        this.waitForSocketConnection(() => {\r\n            WebSocketInstance.addCallbacks(\r\n                this.getMessages.bind(this),\r\n                this.addMessage.bind(this),\r\n                this.getUpdatedMessages.bind(this)\r\n            )\r\n            WebSocketInstance.fetchMessages(\r\n                this.props.username,\r\n                this.props.chatId\r\n            );\r\n        });\r\n        if (this.props.chatId) WebSocketInstance.connect(this.props.chatId)\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            message: '',\r\n            messages: [],\r\n            myProfile: null,\r\n            otherUsername: this.props.otherUsername,\r\n            otherProfile: null\r\n        }\r\n        this.initialiseChat();\r\n    }\r\n\r\n    handleComponentChange = () => {\r\n        this.scrollToBottom();\r\n        if (this.state.otherUsername && (!this.state.otherProfile || this.state.otherProfile.user.username !== this.state.otherUsername)) {\r\n            fetch(`${SERVER_URL}/profile-api/user/${this.state.otherUsername}`)\r\n                .then(response => response.json())\r\n                .then(data => this.setState({\r\n                    otherProfile: data\r\n                }))\r\n        }\r\n        if (!this.state.myProfile) {\r\n            fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n                .then(response => response.json())\r\n                .then(data => this.setState({ myProfile: data }))\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n\r\n    componentDidUpdate() {\r\n        this.handleComponentChange()\r\n        document.querySelector('#chat-message-input') && document.querySelector('#chat-message-input').focus()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        WebSocketInstance.disconnect()\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (this.props.chatId !== newProps.chatId) {\r\n            WebSocketInstance.disconnect();\r\n            this.waitForSocketConnection(() => {\r\n                WebSocketInstance.fetchMessages(\r\n                    this.props.username,\r\n                    newProps.chatId\r\n                );\r\n            });\r\n            WebSocketInstance.connect(newProps.chatId);\r\n\r\n            this.props.updateMessagesComponent()\r\n            this.setState({\r\n                message: '',\r\n                otherUsername: newProps.otherUsername\r\n            })\r\n        }\r\n        if (newProps.chatId) {\r\n            this.readMessages(newProps)\r\n        }\r\n        if (this.props.updateUnreadMessagesNumber) {\r\n            this.props.updateUnreadMessagesNumber()\r\n        }\r\n    }\r\n\r\n    readMessages = props => {\r\n        fetch(`${SERVER_URL}/chat-api/read-messages`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({ chat_id: props.chatId })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                WebSocketInstance.readMessages(this.props.chatId)\r\n            })\r\n    }\r\n\r\n    waitForSocketConnection(callback) {\r\n        const component = this;\r\n        setTimeout(function () {\r\n            if (WebSocketInstance.state() === 1) {\r\n                console.log(\"Connection is made\");\r\n                callback();\r\n                return;\r\n            } else {\r\n                console.log(\"wait for connection...\");\r\n                component.waitForSocketConnection(callback);\r\n            }\r\n        }, 100);\r\n    }\r\n\r\n    getMessages(messages) {\r\n        this.setState({ messages: messages.reverse() })\r\n    }\r\n\r\n    addMessage(message) {\r\n        this.setState({ messages: [...this.state.messages, message] })\r\n        this.readMessages(this.props)\r\n    }\r\n\r\n    getUpdatedMessages(messages) {\r\n        this.setState({ messages: messages.reverse() })\r\n    }\r\n\r\n    messageChangeHandler = e => {\r\n        this.setState({ message: e.target.value })\r\n        const el = document.querySelector('#chat-message-submit')\r\n        el.disabled = e.target.value.trim() === ''\r\n    };\r\n\r\n    sendMessageHandler = e => {\r\n        e.preventDefault()\r\n        const messageObject = {\r\n            from: this.props.username,\r\n            content: this.state.message,\r\n            chatId: this.props.chatId\r\n        };\r\n        this.setState({ message: '' })\r\n        if (this.state.otherProfile.blocked_users.map(u => u.id).includes(this.state.myProfile.user.id)) {\r\n            window.alert(`Você não pode enviar mensagens para @${this.state.otherUsername}.\r\n            ${this.state.otherProfile.first_name} te bloqueou.`)\r\n            return\r\n        }\r\n        if (this.state.myProfile.blocked_users.map(u => u.id).includes(this.state.otherProfile.user.id)) {\r\n            window.alert(`Você não pode enviar mensagens para @${this.state.otherUsername}.\r\n            Você bloqueou ${this.state.otherProfile.first_name}.`)\r\n            return\r\n        }\r\n        WebSocketInstance.newChatMessage(messageObject)\r\n        document.querySelector('#chat-message-submit').disabled = true\r\n        openCloseEmojiList(true)\r\n        this.props.updateMessagesComponent()\r\n    };\r\n\r\n    renderTimestamp = timestamp => {\r\n        const ts = new Date(timestamp)\r\n        const day = ts.getDate() >= 10 ? ts.getDate() : `0${ts.getDate()}`\r\n        const month = ts.getMonth() >= 10 ? ts.getMonth() : `0${ts.getMonth()}`\r\n        const hour = ts.getHours() >= 10 ? ts.getHours() : `0${ts.getHours()}`\r\n        const minute = ts.getMinutes() >= 10 ? ts.getMinutes() : `0${ts.getMinutes()}`\r\n        return `${day}/${month}/${ts.getFullYear()} - ${hour}:${minute}`\r\n    };\r\n\r\n    renderMessages = messages => {\r\n        const currentUser = this.props.username;\r\n        return messages.map(message => (\r\n            <li\r\n                key={message.id}\r\n                className={message.author === currentUser ? \"sent\" : \"received\"}\r\n            >\r\n                <p>\r\n                    {message.content}\r\n                    <br />\r\n                    <small>\r\n                        {this.renderTimestamp(message.timestamp)} {message.author === currentUser ?\r\n                            message.read ?\r\n                                <i class=\"fas fa-check-double\" />\r\n                                :\r\n                                <i class=\"fas fa-check\" />\r\n                            :\r\n                            ''\r\n                        }\r\n                    </small>\r\n                </p>\r\n            </li>\r\n        ));\r\n    };\r\n\r\n    scrollToBottom = () => {\r\n        if (document.querySelector('#chat-log')) {\r\n            const chatLog = document.querySelector('#chat-log')\r\n            chatLog.scrollTop = chatLog.scrollHeight\r\n        }\r\n    };\r\n\r\n    onEmojiSelect = (event, emojiObject) => {\r\n        this.setState({ message: this.state.message + emojiObject.emoji })\r\n        document.querySelector('#chat-message-submit').disabled = false\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.otherProfile !== null || !this.props.otherUsername ?\r\n                    <>\r\n                        {this.state.otherProfile ?\r\n                            <div className=\"current-chat\">\r\n                                <div className=\"current-chat-header\">\r\n                                    {this.props.backArrow &&\r\n                                        <i class=\"fas fa-arrow-left left-arrow-icon\" onClick={() => window.history.back()} />\r\n                                    }\r\n                                    <Link to={`/user/${this.state.otherProfile.slug}`}>\r\n                                        <img src={`${SERVER_URL}${this.state.otherProfile.photo}`}\r\n                                            className=\"profile-img-sm\"\r\n                                            style={{ marginRight: '5px' }}\r\n                                        />\r\n                                    </Link>\r\n                                    <div className=\"d-flex flex-column align-items-start\" style={{ height: '52px' }}>\r\n                                        <strong>{this.state.otherProfile.first_name} {this.state.otherProfile.last_name}</strong>\r\n                                        <p className=\"text-secondary\">@{this.state.otherProfile.user.username}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div id=\"chat-log\">\r\n                                    {this.state.messages ? this.renderMessages(this.state.messages) : ''}\r\n                                </div>\r\n                                <div className=\"emoji-list-container chat-emoji-list\" id=\"emoji-list-container\">\r\n                                    <Picker onEmojiClick={this.onEmojiSelect} />\r\n                                </div>\r\n                                <form className=\"send-message-container\" onSubmit={this.sendMessageHandler}>\r\n                                    <label\r\n                                        className=\"far fa-smile\"\r\n                                        id=\"emoji-button\"\r\n                                        onClick={() => openCloseEmojiList(false)}\r\n                                    />\r\n                                    <input\r\n                                        placeholder=\"Mensagem\"\r\n                                        className=\"message-input\"\r\n                                        id=\"chat-message-input\"\r\n                                        value={this.state.message}\r\n                                        autoFocus={Array.prototype.slice.call(document.querySelectorAll('.contact-filter-input')).filter(el => {\r\n                                            return el.value !== ''\r\n                                        })\r\n                                            .lenght > 0\r\n                                        }\r\n                                        onChange={this.messageChangeHandler}\r\n                                    />\r\n                                    <button\r\n                                        className=\"btn btn-primary chat-message-submit\"\r\n                                        id=\"chat-message-submit\"\r\n                                        disabled\r\n                                    >\r\n                                        <i class=\"fas fa-chevron-right\" />\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n                            :\r\n                            <div className=\"current-chat no-chat-selected\">\r\n                                <div>\r\n                                    <strong style={{ fontSize: 'larger' }}>Você não tem uma conversa selecionada</strong>\r\n                                    <p className=\"text-secondary\">Selecione uma existente ou comece uma nova</p>\r\n                                    <button className=\"btn btn-primary\" onClick={() => this.props.openModal()}>Nova conversa</button>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </>\r\n                    :\r\n                    <div className=\"chat-loader-container\">\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chat\r\n"]},"metadata":{},"sourceType":"module"}