{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\fabio\\\\CodeProjects\\\\Django\\\\napker\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from'react';import{EditProfileContext}from'../../../context/editprofile/EditProfileContext';import CroppieModal from'./CroppieModal';import EditProfileModal from'./EditProfileModal';export default function EditProfile(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),croppieModalIsOpen=_useState2[0],setCroppieModalIsOpen=_useState2[1];var _useContext=useContext(EditProfileContext),_useContext2=_slicedToArray(_useContext,2),profileImage=_useContext2[0],setProfileImage=_useContext2[1];var _handleProfileImageChange=function handleProfileImageChange(e,croppieModalIsOpen){var reader=new FileReader();reader.onload=function(){if(reader.readyState===2){setCroppieModalIsOpen(croppieModalIsOpen);setProfileImage(reader.result);}};try{reader.readAsDataURL(e.target.files[0]);}catch(_unused){}};return/*#__PURE__*/React.createElement(React.Fragment,null,croppieModalIsOpen?/*#__PURE__*/React.createElement(CroppieModal,{image:profileImage,handleProfileImageChange:function handleProfileImageChange(e){return _handleProfileImageChange(e,true);}}):/*#__PURE__*/React.createElement(EditProfileModal,{profile:props.profile,isOpen:props.isOpen,closeModal:function closeModal(){return props.setIsEditing(false);},handleProfileImageChange:function handleProfileImageChange(e){return _handleProfileImageChange(e,false);}}));}","map":{"version":3,"sources":["C:/Users/fabio/CodeProjects/Django/napker/frontend/src/pages/profile/components/EditProfile.js"],"names":["React","useState","useContext","EditProfileContext","CroppieModal","EditProfileModal","EditProfile","props","croppieModalIsOpen","setCroppieModalIsOpen","profileImage","setProfileImage","handleProfileImageChange","e","reader","FileReader","onload","readyState","result","readAsDataURL","target","files","profile","isOpen","setIsEditing"],"mappings":"oLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,KAA4C,OAA5C,CAEA,OAASC,kBAAT,KAAmC,iDAAnC,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CAGA,cAAe,SAASC,CAAAA,WAAT,CAAqBC,KAArB,CAA4B,eACaN,QAAQ,CAAC,KAAD,CADrB,wCAChCO,kBADgC,eACZC,qBADY,+BAECP,UAAU,CAACC,kBAAD,CAFX,4CAEhCO,YAFgC,iBAElBC,eAFkB,iBAIvC,GAAMC,CAAAA,yBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAACC,CAAD,CAAIL,kBAAJ,CAA2B,CACxD,GAAMM,CAAAA,MAAM,CAAG,GAAIC,CAAAA,UAAJ,EAAf,CACAD,MAAM,CAACE,MAAP,CAAgB,UAAM,CAClB,GAAIF,MAAM,CAACG,UAAP,GAAsB,CAA1B,CAA6B,CACzBR,qBAAqB,CAACD,kBAAD,CAArB,CACAG,eAAe,CAACG,MAAM,CAACI,MAAR,CAAf,CACH,CACJ,CALD,CAMA,GAAI,CACAJ,MAAM,CAACK,aAAP,CAAqBN,CAAC,CAACO,MAAF,CAASC,KAAT,CAAe,CAAf,CAArB,EACH,CAAC,cAAM,CAEP,CACJ,CAbD,CAeA,mBAEI,wCACKb,kBAAkB,cACf,oBAAC,YAAD,EACI,KAAK,CAAEE,YADX,CAEI,wBAAwB,CAAE,kCAAAG,CAAC,QAAID,CAAAA,yBAAwB,CAACC,CAAD,CAAI,IAAJ,CAA5B,EAF/B,EADe,cAMf,oBAAC,gBAAD,EACI,OAAO,CAAEN,KAAK,CAACe,OADnB,CAEI,MAAM,CAAEf,KAAK,CAACgB,MAFlB,CAGI,UAAU,CAAE,4BAAMhB,CAAAA,KAAK,CAACiB,YAAN,CAAmB,KAAnB,CAAN,EAHhB,CAII,wBAAwB,CAAE,kCAAAX,CAAC,QAAID,CAAAA,yBAAwB,CAACC,CAAD,CAAI,KAAJ,CAA5B,EAJ/B,EAPR,CAFJ,CAmBH","sourcesContent":["import React, { useState, useContext } from 'react'\r\n\r\nimport { EditProfileContext } from '../../../context/editprofile/EditProfileContext'\r\nimport CroppieModal from './CroppieModal'\r\nimport EditProfileModal from './EditProfileModal'\r\n\r\n\r\nexport default function EditProfile(props) {\r\n    const [croppieModalIsOpen, setCroppieModalIsOpen] = useState(false)\r\n    const [profileImage, setProfileImage] = useContext(EditProfileContext)\r\n\r\n    const handleProfileImageChange = (e, croppieModalIsOpen) => {\r\n        const reader = new FileReader()\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                setCroppieModalIsOpen(croppieModalIsOpen)\r\n                setProfileImage(reader.result)\r\n            }\r\n        }\r\n        try {\r\n            reader.readAsDataURL(e.target.files[0])\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            {croppieModalIsOpen ?\r\n                <CroppieModal\r\n                    image={profileImage}\r\n                    handleProfileImageChange={e => handleProfileImageChange(e, true)}\r\n                />\r\n                :\r\n                <EditProfileModal\r\n                    profile={props.profile}\r\n                    isOpen={props.isOpen}\r\n                    closeModal={() => props.setIsEditing(false)}\r\n                    handleProfileImageChange={e => handleProfileImageChange(e, false)}\r\n                />\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}