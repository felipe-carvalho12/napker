{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\felip\\\\CodeProjects\\\\Web\\\\Napker\\\\frontend\\\\src\\\\pages\\\\home\\\\components\\\\Profiles.js\";\nimport React, { useEffect, useState } from 'react';\nimport { SERVER_URL } from '../../../config/settings';\nimport { csrftoken } from '../../../config/utils';\nimport ProfileListItem from '../../../components/ProfileListItem';\nexport default function Profiles() {\n  const [myProfile, setMyProfile] = useState(null);\n  const [profiles, setProfiles] = useState(null);\n  const [filteredProfiles, setFilteredProfiles] = useState(null);\n  const [search, setSearch] = useState('');\n  useEffect(() => {\n    fetch(`${SERVER_URL}/profile-api/myprofile`).then(response => response.json()).then(data => setMyProfile(data));\n    fetch(`${SERVER_URL}/profile-api/profile-list`).then(response => response.json()).then(data => {\n      setFilteredProfiles(null);\n      setProfiles(data);\n    });\n  }, []);\n  useEffect(() => {\n    if (search === '') {\n      setFilteredProfiles(null);\n      return;\n    }\n\n    fetch(`${SERVER_URL}/profile-api/users/${search}`).then(response => response.json()).then(data => {\n      setFilteredProfiles(data);\n    });\n  }, [search]);\n\n  const sendFriendRequest = pk => {\n    fetch(`${SERVER_URL}/profile-api/send-friend-request`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'X-CSRFToken': csrftoken\n      },\n      body: JSON.stringify(pk)\n    }).then(response => response.json()).then(data => console.log(data));\n  };\n\n  const cancelFriendRequest = pk => {\n    fetch(`${SERVER_URL}/profile-api/cancel-friend-request`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'X-CSRFToken': csrftoken\n      },\n      body: JSON.stringify(pk)\n    }).then(response => response.json()).then(data => console.log(data));\n  };\n\n  const handleRelationshipUpdate = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    const btn = e.target;\n\n    if (btn.innerHTML === 'Solicitar') {\n      sendFriendRequest(btn.dataset.pk);\n      btn.innerHTML = 'Solicitado';\n      btn.className = 'btn btn-primary';\n    } else {\n      cancelFriendRequest(btn.dataset.pk);\n      btn.innerHTML = 'Solicitar';\n      btn.className = 'btn btn-secondary';\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profiles-filter-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"profiles-filter-input\",\n    placeholder: \"Pesquisar\",\n    value: search,\n    onChange: e => setSearch(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, myProfile && (profiles || filteredProfiles) ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, filteredProfiles ? filteredProfiles.map(profile => {\n    return /*#__PURE__*/React.createElement(ProfileListItem, {\n      profile: profile,\n      myProfile: myProfile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 33\n      }\n    });\n  }) : profiles && profiles.map(profile => {\n    return /*#__PURE__*/React.createElement(ProfileListItem, {\n      profile: profile,\n      myProfile: myProfile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-secondary\",\n      \"data-pk\": profile.id,\n      onClick: handleRelationshipUpdate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 37\n      }\n    }, \"Solicitar\"));\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profiles-loader-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/felip/CodeProjects/Web/Napker/frontend/src/pages/home/components/Profiles.js"],"names":["React","useEffect","useState","SERVER_URL","csrftoken","ProfileListItem","Profiles","myProfile","setMyProfile","profiles","setProfiles","filteredProfiles","setFilteredProfiles","search","setSearch","fetch","then","response","json","data","sendFriendRequest","pk","method","headers","body","JSON","stringify","console","log","cancelFriendRequest","handleRelationshipUpdate","e","preventDefault","stopPropagation","btn","target","innerHTML","dataset","className","value","map","profile","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nimport { SERVER_URL } from '../../../config/settings'\r\nimport { csrftoken } from '../../../config/utils'\r\nimport ProfileListItem from '../../../components/ProfileListItem'\r\n\r\nexport default function Profiles() {\r\n    const [myProfile, setMyProfile] = useState(null)\r\n    const [profiles, setProfiles] = useState(null)\r\n    const [filteredProfiles, setFilteredProfiles] = useState(null)\r\n    const [search, setSearch] = useState('')\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n        fetch(`${SERVER_URL}/profile-api/profile-list`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setFilteredProfiles(null)\r\n                setProfiles(data)\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (search === '') {\r\n            setFilteredProfiles(null)\r\n            return\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/users/${search}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setFilteredProfiles(data)\r\n            })\r\n    }, [search])\r\n\r\n    const sendFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/send-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    const cancelFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/cancel-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    const handleRelationshipUpdate = e => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        const btn = e.target\r\n        if (btn.innerHTML === 'Solicitar') {\r\n            sendFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitado'\r\n            btn.className = 'btn btn-primary'\r\n        } else {\r\n            cancelFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitar'\r\n            btn.className = 'btn btn-secondary'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"profiles-filter-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"profiles-filter-input\"\r\n                    placeholder=\"Pesquisar\"\r\n                    value={search}\r\n                    onChange={e => setSearch(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"list-group\">\r\n                {myProfile && (profiles || filteredProfiles) ?\r\n                    <div className=\"profile-list-container\">\r\n                        {filteredProfiles ? filteredProfiles.map(profile => {\r\n                            return (\r\n                                <ProfileListItem profile={profile} myProfile={myProfile} />\r\n                            )\r\n                        }\r\n                        ) : profiles && profiles.map(profile => {\r\n                            return (\r\n                                <ProfileListItem profile={profile} myProfile={myProfile}>\r\n                                    <button className=\"btn btn-secondary\" data-pk={profile.id} onClick={handleRelationshipUpdate}>\r\n                                        Solicitar\r\n                                    </button>\r\n                                </ProfileListItem>\r\n                            )\r\n                        })\r\n                        }\r\n                    </div> :\r\n                    <div className=\"profiles-loader-container\">\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}