{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\felip\\\\CodeProjects\\\\Web\\\\Napker\\\\frontend\\\\src\\\\pages\\\\home\\\\components\\\\posts_\\\\pages\\\\post_\\\\Post.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { SERVER_URL } from '../../../../../../config/settings';\nimport { csrftoken } from '../../../../../../config/utils';\nimport CommentModal from '../../../../../../components/CommentModal';\nimport LikesModal from '../../../../../../components/LikesModal';\nimport Header from '../../../../../../components/fixed/Header';\nimport CommentListItem from './components/CommentListItem';\nimport BottomMenu from '../../../../../../components/fixed/bottom-menu/BottomMenu';\nimport CommentIcon from '../../../../../../components/fixed/bottom-menu/components/CommentIcon';\nexport default function Post(props) {\n  const [post, setPost] = useState(null);\n  const [myProfile, setMyProfile] = useState(null);\n  const [commentModalIsOpen, setCommentModalIsOpen] = useState(props.commentModalIsOpen);\n  const [postLikesModal, setPostLikesModal] = useState({\n    isOpen: false,\n    likes: null\n  });\n  const [commentLikesModal, setCommentLikesModal] = useState({\n    isOpen: false,\n    likes: null\n  });\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    fetchPost();\n    fetch(`${SERVER_URL}/profile-api/myprofile`).then(response => response.json()).then(data => setMyProfile(data));\n  }, []);\n  useEffect(() => {\n    console.log('got here');\n    setCommentModalIsOpen(!!props.commentModalIsOpen);\n  }, [props.commentModalIsOpen]);\n\n  const fetchPost = () => {\n    fetch(`${SERVER_URL}/post-api/post/${id}`).then(response => response.json()).then(data => setPost(data));\n  };\n\n  const likeUnlikePost = e => {\n    const likeBtn = e.target;\n\n    if (likeBtn.classList.contains('fas')) {\n      likeBtn.classList.remove('fas'); //border heart\n\n      likeBtn.classList.add('far'); //filled heart\n\n      fetch(`${SERVER_URL}/post-api/unlike-post/${likeBtn.dataset.postid}`).then(response => response.json()).then(data => {\n        console.log(data);\n        fetchPost();\n      });\n    } else {\n      likeBtn.classList.remove('far'); //border heart\n\n      likeBtn.classList.add('fas'); //filled heart\n\n      fetch(`${SERVER_URL}/post-api/like-post/${likeBtn.dataset.postid}`).then(response => response.json()).then(data => {\n        console.log(data);\n        fetchPost();\n      });\n    }\n  };\n\n  const deletePost = (e, postId) => {\n    e.stopPropagation();\n    const el = document.querySelector(`#profile-post-${postId}`);\n\n    if (window.confirm('Tem certeza que deseja apagar o post?\\nEssa ação é irreversível.')) {\n      fetch(`${SERVER_URL}/post-api/delete-post/${postId}`, {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          'X-CSRFToken': csrftoken\n        }\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n        window.location.href = '/';\n      });\n    }\n  };\n\n  const hideCommentModal = () => {\n    setCommentModalIsOpen(false);\n    window.history.back();\n  };\n\n  const hidePostLikesModal = () => {\n    setPostLikesModal({\n      isOpen: false,\n      likes: null\n    });\n  };\n\n  const hideCommentLikesModal = () => {\n    setCommentLikesModal({\n      isOpen: false,\n      likes: null\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-page-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, post && /*#__PURE__*/React.createElement(CommentModal, {\n    isOpen: commentModalIsOpen,\n    hideModal: hideCommentModal,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(LikesModal, {\n    isOpen: postLikesModal.isOpen,\n    likes: postLikesModal.likes,\n    hideModal: hidePostLikesModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(LikesModal, {\n    isOpen: commentLikesModal.isOpen,\n    likes: commentLikesModal.likes,\n    hideModal: hideCommentLikesModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Header, {\n    page: \"Post\",\n    backArrow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, post && myProfile ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: post.author.id === myProfile.id ? '/perfil' : `/user/${post.author.slug}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `${SERVER_URL}${post.author.photo}`,\n    className: \"profile-img-med\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: post.author.id === myProfile.id ? '/perfil' : `/user/${post.author.slug}`,\n    style: {\n      color: '#000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'start'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 49\n    }\n  }, post.author.first_name, \" \", post.author.last_name, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-secondary d-inline-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 49\n    }\n  }, \"@\", post.author.user.username, \" \\u2022 \", post.created.split('-').reverse().join('/')))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'start',\n      fontSize: 'larger'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 41\n    }\n  }, post.content), post.image && /*#__PURE__*/React.createElement(\"img\", {\n    src: `${SERVER_URL}${post.image}`,\n    className: \"post-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 45\n    }\n  }))), myProfile.id == post.author.id && /*#__PURE__*/React.createElement(\"i\", {\n    className: \"far fa-trash-alt trash-icon text-secondary\",\n    style: {\n      margin: '20px 20px 0 0'\n    },\n    onClick: e => deletePost(e, post.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-secondary\",\n    style: {\n      fontSize: 'large'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/post/${id}/comentar`,\n    className: \"text-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"far fa-comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 41\n    }\n  })), post.comments.length, post.likes.map(like => like.profile.id).includes(myProfile.id) ? /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fas fa-heart\",\n    \"data-postid\": post.id,\n    onClick: likeUnlikePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 41\n    }\n  }) : /*#__PURE__*/React.createElement(\"i\", {\n    class: \"far fa-heart\",\n    \"data-postid\": post.id,\n    onClick: likeUnlikePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"post-likes-number\",\n    onClick: () => setPostLikesModal({\n      isOpen: true,\n      likes: post.likes\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 37\n    }\n  }, post.likes.length)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 25\n    }\n  }, post.comments.map(comment => {\n    return /*#__PURE__*/React.createElement(CommentListItem, {\n      comment: comment,\n      myProfile: myProfile,\n      fetchPost: fetchPost,\n      setPostLikesModal: setPostLikesModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 37\n      }\n    });\n  }))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"posts-loader-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(BottomMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CommentIcon, {\n    postId: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/felip/CodeProjects/Web/Napker/frontend/src/pages/home/components/posts_/pages/post_/Post.js"],"names":["React","useEffect","useState","Link","useParams","SERVER_URL","csrftoken","CommentModal","LikesModal","Header","CommentListItem","BottomMenu","CommentIcon","Post","props","post","setPost","myProfile","setMyProfile","commentModalIsOpen","setCommentModalIsOpen","postLikesModal","setPostLikesModal","isOpen","likes","commentLikesModal","setCommentLikesModal","id","fetchPost","fetch","then","response","json","data","console","log","likeUnlikePost","e","likeBtn","target","classList","contains","remove","add","dataset","postid","deletePost","postId","stopPropagation","el","document","querySelector","window","confirm","method","headers","location","href","hideCommentModal","history","back","hidePostLikesModal","hideCommentLikesModal","author","slug","photo","color","textAlign","first_name","last_name","user","username","created","split","reverse","join","fontSize","content","image","margin","comments","length","map","like","profile","includes","comment"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AAEA,SAASC,UAAT,QAA2B,mCAA3B;AACA,SAASC,SAAT,QAA0B,gCAA1B;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,UAAP,MAAuB,yCAAvB;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,UAAP,MAAuB,2DAAvB;AACA,OAAOC,WAAP,MAAwB,uEAAxB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAChC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACiB,kBAAD,EAAqBC,qBAArB,IAA8ClB,QAAQ,CAACY,KAAK,CAACK,kBAAP,CAA5D;AACA,QAAM,CAACE,cAAD,EAAiBC,iBAAjB,IAAsCpB,QAAQ,CAAC;AAAEqB,IAAAA,MAAM,EAAE,KAAV;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GAAD,CAApD;AACA,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CxB,QAAQ,CAAC;AAAEqB,IAAAA,MAAM,EAAE,KAAV;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GAAD,CAA1D;AAEA,QAAM;AAAEG,IAAAA;AAAF,MAASvB,SAAS,EAAxB;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZ2B,IAAAA,SAAS;AACTC,IAAAA,KAAK,CAAE,GAAExB,UAAW,wBAAf,CAAL,CACKyB,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAIf,YAAY,CAACe,IAAD,CAF9B;AAGH,GALQ,EAKN,EALM,CAAT;AAOAhC,EAAAA,SAAS,CAAC,MAAM;AACZiC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAf,IAAAA,qBAAqB,CAAC,CAAC,CAACN,KAAK,CAACK,kBAAT,CAArB;AACH,GAHQ,EAGN,CAACL,KAAK,CAACK,kBAAP,CAHM,CAAT;;AAKA,QAAMS,SAAS,GAAG,MAAM;AACpBC,IAAAA,KAAK,CAAE,GAAExB,UAAW,kBAAiBsB,EAAG,EAAnC,CAAL,CACKG,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAIjB,OAAO,CAACiB,IAAD,CAFzB;AAGH,GAJD;;AAMA,QAAMG,cAAc,GAAGC,CAAC,IAAI;AACxB,UAAMC,OAAO,GAAGD,CAAC,CAACE,MAAlB;;AACA,QAAID,OAAO,CAACE,SAAR,CAAkBC,QAAlB,CAA2B,KAA3B,CAAJ,EAAuC;AACnCH,MAAAA,OAAO,CAACE,SAAR,CAAkBE,MAAlB,CAAyB,KAAzB,EADmC,CACH;;AAChCJ,MAAAA,OAAO,CAACE,SAAR,CAAkBG,GAAlB,CAAsB,KAAtB,EAFmC,CAEL;;AAC9Bd,MAAAA,KAAK,CAAE,GAAExB,UAAW,yBAAwBiC,OAAO,CAACM,OAAR,CAAgBC,MAAO,EAA9D,CAAL,CACKf,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAL,QAAAA,SAAS;AACZ,OALL;AAMH,KATD,MASO;AACHU,MAAAA,OAAO,CAACE,SAAR,CAAkBE,MAAlB,CAAyB,KAAzB,EADG,CAC6B;;AAChCJ,MAAAA,OAAO,CAACE,SAAR,CAAkBG,GAAlB,CAAsB,KAAtB,EAFG,CAE2B;;AAC9Bd,MAAAA,KAAK,CAAE,GAAExB,UAAW,uBAAsBiC,OAAO,CAACM,OAAR,CAAgBC,MAAO,EAA5D,CAAL,CACKf,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAL,QAAAA,SAAS;AACZ,OALL;AAMH;AACJ,GArBD;;AAuBA,QAAMkB,UAAU,GAAG,CAACT,CAAD,EAAIU,MAAJ,KAAe;AAC9BV,IAAAA,CAAC,CAACW,eAAF;AACA,UAAMC,EAAE,GAAGC,QAAQ,CAACC,aAAT,CAAwB,iBAAgBJ,MAAO,EAA/C,CAAX;;AACA,QAAIK,MAAM,CAACC,OAAP,CAAe,kEAAf,CAAJ,EAAwF;AACpFxB,MAAAA,KAAK,CAAE,GAAExB,UAAW,yBAAwB0C,MAAO,EAA9C,EAAiD;AAClDO,QAAAA,MAAM,EAAE,MAD0C;AAElDC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,yBAAejD;AAFV;AAFyC,OAAjD,CAAL,CAOKwB,IAPL,CAOUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPtB,EAQKF,IARL,CAQUG,IAAI,IAAI;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAmB,QAAAA,MAAM,CAACI,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACH,OAXL;AAYH;AACJ,GAjBD;;AAmBA,QAAMC,gBAAgB,GAAG,MAAM;AAC3BtC,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAgC,IAAAA,MAAM,CAACO,OAAP,CAAeC,IAAf;AACH,GAHD;;AAKA,QAAMC,kBAAkB,GAAG,MAAM;AAC7BvC,IAAAA,iBAAiB,CAAC;AACdC,MAAAA,MAAM,EAAE,KADM;AAEdC,MAAAA,KAAK,EAAE;AAFO,KAAD,CAAjB;AAIH,GALD;;AAOA,QAAMsC,qBAAqB,GAAG,MAAM;AAChCpC,IAAAA,oBAAoB,CAAC;AACjBH,MAAAA,MAAM,EAAE,KADS;AAEjBC,MAAAA,KAAK,EAAE;AAFU,KAAD,CAApB;AAIH,GALD;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,IAAI,iBACD,oBAAC,YAAD;AACI,IAAA,MAAM,EAAEI,kBADZ;AAEI,IAAA,SAAS,EAAEuC,gBAFf;AAGI,IAAA,IAAI,EAAE3C,IAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,eAQI,oBAAC,UAAD;AACI,IAAA,MAAM,EAAEM,cAAc,CAACE,MAD3B;AAEI,IAAA,KAAK,EAAEF,cAAc,CAACG,KAF1B;AAGI,IAAA,SAAS,EAAEqC,kBAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,eAaI,oBAAC,UAAD;AACI,IAAA,MAAM,EAAEpC,iBAAiB,CAACF,MAD9B;AAEI,IAAA,KAAK,EAAEE,iBAAiB,CAACD,KAF7B;AAGI,IAAA,SAAS,EAAEsC,qBAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,eAkBI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,MAAb;AAAoB,IAAA,SAAS,EAAE,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBJ,eAmBI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK/C,IAAI,IAAIE,SAAR,gBACG,uDACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAEF,IAAI,CAACgD,MAAL,CAAYpC,EAAZ,KAAmBV,SAAS,CAACU,EAA7B,GACN,SADM,GACO,SAAQZ,IAAI,CAACgD,MAAL,CAAYC,IAAK,EAD1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI;AAAK,IAAA,GAAG,EAAG,GAAE3D,UAAW,GAAEU,IAAI,CAACgD,MAAL,CAAYE,KAAM,EAA5C;AACI,IAAA,SAAS,EAAC,iBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,CADJ,eAUI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAElD,IAAI,CAACgD,MAAL,CAAYpC,EAAZ,KAAmBV,SAAS,CAACU,EAA7B,GACN,SADM,GACO,SAAQZ,IAAI,CAACgD,MAAL,CAAYC,IAAK,EAD1C;AAEI,IAAA,KAAK,EAAE;AAAEE,MAAAA,KAAK,EAAE;AAAT,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASpD,IAAI,CAACgD,MAAL,CAAYK,UAArB,OAAkCrD,IAAI,CAACgD,MAAL,CAAYM,SAA9C,MADJ,eAEI;AAAG,IAAA,SAAS,EAAC,+BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACMtD,IAAI,CAACgD,MAAL,CAAYO,IAAZ,CAAiBC,QADvB,cACoCxD,IAAI,CAACyD,OAAL,CAAaC,KAAb,CAAmB,GAAnB,EAAwBC,OAAxB,GAAkCC,IAAlC,CAAuC,GAAvC,CADpC,CAFJ,CAJJ,CADJ,eAYI;AAAK,IAAA,KAAK,EAAE;AAAER,MAAAA,SAAS,EAAE,OAAb;AAAsBS,MAAAA,QAAQ,EAAE;AAAhC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK7D,IAAI,CAAC8D,OADV,CAZJ,EAeK9D,IAAI,CAAC+D,KAAL,iBACG;AAAK,IAAA,GAAG,EAAG,GAAEzE,UAAW,GAAEU,IAAI,CAAC+D,KAAM,EAArC;AAAwC,IAAA,SAAS,EAAC,UAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBR,CAVJ,CADJ,EA+BK7D,SAAS,CAACU,EAAV,IAAgBZ,IAAI,CAACgD,MAAL,CAAYpC,EAA5B,iBACG;AACI,IAAA,SAAS,EAAC,4CADd;AAEI,IAAA,KAAK,EAAE;AAAEoD,MAAAA,MAAM,EAAE;AAAV,KAFX;AAGI,IAAA,OAAO,EAAE1C,CAAC,IAAIS,UAAU,CAACT,CAAD,EAAItB,IAAI,CAACY,EAAT,CAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCR,CADJ,eAwCI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,SAAS,EAAC,gBAAb;AAA8B,IAAA,KAAK,EAAE;AAAEiD,MAAAA,QAAQ,EAAE;AAAZ,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,SAAQjD,EAAG,WAAtB;AAAkC,IAAA,SAAS,EAAC,gBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,KAAK,EAAC,gBADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAKYZ,IAAI,CAACiE,QAAL,CAAcC,MAL1B,EAMKlE,IAAI,CAACS,KAAL,CAAW0D,GAAX,CAAeC,IAAI,IAAIA,IAAI,CAACC,OAAL,CAAazD,EAApC,EAAwC0D,QAAxC,CAAiDpE,SAAS,CAACU,EAA3D,iBACG;AAAG,IAAA,KAAK,EAAC,cAAT;AACI,mBAAaZ,IAAI,CAACY,EADtB;AAEI,IAAA,OAAO,EAAES,cAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,gBAMG;AAAG,IAAA,KAAK,EAAC,cAAT;AACI,mBAAarB,IAAI,CAACY,EADtB;AAEI,IAAA,OAAO,EAAES,cAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZR,eAiBI;AAAG,IAAA,SAAS,EAAC,mBAAb;AACI,IAAA,OAAO,EAAE,MAAMd,iBAAiB,CAAC;AAAEC,MAAAA,MAAM,EAAE,IAAV;AAAgBC,MAAAA,KAAK,EAAET,IAAI,CAACS;AAA5B,KAAD,CADpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKT,IAAI,CAACS,KAAL,CAAWyD,MAHhB,CAjBJ,CADJ,CAxCJ,CADJ,eAmEI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKlE,IAAI,CAACiE,QAAL,CAAcE,GAAd,CAAkBI,OAAO,IAAI;AAC1B,wBACI,oBAAC,eAAD;AACI,MAAA,OAAO,EAAEA,OADb;AAEI,MAAA,SAAS,EAAErE,SAFf;AAGI,MAAA,SAAS,EAAEW,SAHf;AAII,MAAA,iBAAiB,EAAEN,iBAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAQH,GATA,CADL,CAnEJ,CADH,gBAkFG;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAnFR,CAnBJ,eA2GI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEK,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA3GJ,CADJ;AAiHH","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../../../../../../config/settings'\r\nimport { csrftoken } from '../../../../../../config/utils'\r\nimport CommentModal from '../../../../../../components/CommentModal'\r\nimport LikesModal from '../../../../../../components/LikesModal'\r\nimport Header from '../../../../../../components/fixed/Header'\r\nimport CommentListItem from './components/CommentListItem'\r\nimport BottomMenu from '../../../../../../components/fixed/bottom-menu/BottomMenu'\r\nimport CommentIcon from '../../../../../../components/fixed/bottom-menu/components/CommentIcon'\r\n\r\nexport default function Post(props) {\r\n    const [post, setPost] = useState(null)\r\n    const [myProfile, setMyProfile] = useState(null)\r\n    const [commentModalIsOpen, setCommentModalIsOpen] = useState(props.commentModalIsOpen)\r\n    const [postLikesModal, setPostLikesModal] = useState({ isOpen: false, likes: null })\r\n    const [commentLikesModal, setCommentLikesModal] = useState({ isOpen: false, likes: null })\r\n\r\n    const { id } = useParams()\r\n\r\n    useEffect(() => {\r\n        fetchPost()\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log('got here')\r\n        setCommentModalIsOpen(!!props.commentModalIsOpen)\r\n    }, [props.commentModalIsOpen])\r\n\r\n    const fetchPost = () => {\r\n        fetch(`${SERVER_URL}/post-api/post/${id}`)\r\n            .then(response => response.json())\r\n            .then(data => setPost(data))\r\n    }\r\n\r\n    const likeUnlikePost = e => {\r\n        const likeBtn = e.target\r\n        if (likeBtn.classList.contains('fas')) {\r\n            likeBtn.classList.remove('fas') //border heart\r\n            likeBtn.classList.add('far')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/unlike-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPost()\r\n                })\r\n        } else {\r\n            likeBtn.classList.remove('far') //border heart\r\n            likeBtn.classList.add('fas')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/like-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPost()\r\n                })\r\n        }\r\n    }\r\n\r\n    const deletePost = (e, postId) => {\r\n        e.stopPropagation()\r\n        const el = document.querySelector(`#profile-post-${postId}`)\r\n        if (window.confirm('Tem certeza que deseja apagar o post?\\nEssa ação é irreversível.')) {\r\n            fetch(`${SERVER_URL}/post-api/delete-post/${postId}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    window.location.href = '/'\r\n                })\r\n        }\r\n    }\r\n\r\n    const hideCommentModal = () => {\r\n        setCommentModalIsOpen(false)\r\n        window.history.back()\r\n    }\r\n\r\n    const hidePostLikesModal = () => {\r\n        setPostLikesModal({\r\n            isOpen: false,\r\n            likes: null\r\n        })\r\n    }\r\n\r\n    const hideCommentLikesModal = () => {\r\n        setCommentLikesModal({\r\n            isOpen: false,\r\n            likes: null\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"post-page-container\">\r\n            {post &&\r\n                <CommentModal\r\n                    isOpen={commentModalIsOpen}\r\n                    hideModal={hideCommentModal}\r\n                    post={post}\r\n                />\r\n            }\r\n            <LikesModal\r\n                isOpen={postLikesModal.isOpen}\r\n                likes={postLikesModal.likes}\r\n                hideModal={hidePostLikesModal}\r\n            />\r\n            <LikesModal\r\n                isOpen={commentLikesModal.isOpen}\r\n                likes={commentLikesModal.likes}\r\n                hideModal={hideCommentLikesModal}\r\n            />\r\n            <Header page=\"Post\" backArrow={true} />\r\n            <div className=\"content\">\r\n                {post && myProfile ?\r\n                    <>\r\n                        <div className=\"post-container\">\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                <div className=\"post-row\">\r\n                                    <div className=\"post-col\">\r\n                                        <Link to={post.author.id === myProfile.id ?\r\n                                            '/perfil' : `/user/${post.author.slug}`}\r\n                                        >\r\n                                            <img src={`${SERVER_URL}${post.author.photo}`}\r\n                                                className=\"profile-img-med\"\r\n                                            />\r\n                                        </Link>\r\n                                    </div>\r\n                                    <div className=\"post-col\">\r\n                                        <Link to={post.author.id === myProfile.id ?\r\n                                            '/perfil' : `/user/${post.author.slug}`}\r\n                                            style={{ color: '#000' }}\r\n                                        >\r\n                                            <div style={{ textAlign: 'start' }}>\r\n                                                <strong>{post.author.first_name} {post.author.last_name} </strong>\r\n                                                <p className=\"text-secondary d-inline-block\">\r\n                                                    @{post.author.user.username} • {post.created.split('-').reverse().join('/')}\r\n                                                </p>\r\n                                            </div>\r\n                                        </Link>\r\n                                        <div style={{ textAlign: 'start', fontSize: 'larger' }}>\r\n                                            {post.content}\r\n                                        </div>\r\n                                        {post.image &&\r\n                                            <img src={`${SERVER_URL}${post.image}`} className=\"post-img\" />\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                {myProfile.id == post.author.id &&\r\n                                    <i\r\n                                        className=\"far fa-trash-alt trash-icon text-secondary\"\r\n                                        style={{ margin: '20px 20px 0 0' }}\r\n                                        onClick={e => deletePost(e, post.id)}\r\n                                    />\r\n                                }\r\n                            </div>\r\n                            <div className=\"post-actions\">\r\n                                <p className=\"text-secondary\" style={{ fontSize: 'large' }}>\r\n                                    <Link to={`/post/${id}/comentar`} className=\"text-secondary\">\r\n                                        <i\r\n                                            class=\"far fa-comment\"\r\n                                        />\r\n                                    </Link>{post.comments.length}\r\n                                    {post.likes.map(like => like.profile.id).includes(myProfile.id) ?\r\n                                        <i class=\"fas fa-heart\"\r\n                                            data-postid={post.id}\r\n                                            onClick={likeUnlikePost}\r\n                                        />\r\n                                        :\r\n                                        <i class=\"far fa-heart\"\r\n                                            data-postid={post.id}\r\n                                            onClick={likeUnlikePost}\r\n                                        />\r\n                                    }\r\n                                    <p className=\"post-likes-number\"\r\n                                        onClick={() => setPostLikesModal({ isOpen: true, likes: post.likes })}\r\n                                    >\r\n                                        {post.likes.length}\r\n                                    </p>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"comment-list\">\r\n                            {post.comments.map(comment => {\r\n                                return (\r\n                                    <CommentListItem\r\n                                        comment={comment}\r\n                                        myProfile={myProfile}\r\n                                        fetchPost={fetchPost}\r\n                                        setPostLikesModal={setPostLikesModal}\r\n                                    />\r\n                                )\r\n                            })\r\n                            }\r\n                        </div>\r\n                    </> :\r\n                    <div className=\"posts-loader-container\" >\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n            <BottomMenu>\r\n                <CommentIcon postId={id} />\r\n            </BottomMenu>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}