{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\felip\\\\CodeProjects\\\\Web\\\\Napker\\\\frontend\\\\src\\\\pages\\\\messages_\\\\components\\\\ContactListItem.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { SERVER_URL } from '../../../config/settings';\nexport default function ContactListItem(props) {\n  const profile = props.profile;\n  const activeChats = props.activeChats;\n  const activeChatsProfiles = props.activeChatsProfiles;\n  let unreadMessagesCounter;\n  let lastChatMessage;\n\n  const resetUnreadMessagesCounter = () => {\n    unreadMessagesCounter = 0;\n  };\n\n  const incrementUnreadMessagesCounter = () => {\n    unreadMessagesCounter++;\n  };\n\n  const setLastChatMessage = message => {\n    lastChatMessage = message;\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, profile !== undefined && /*#__PURE__*/React.createElement(Link, {\n    to: `/mensagens/${profile.slug}`,\n    style: {\n      color: '#000',\n      textDecoration: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, resetUnreadMessagesCounter(), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-item profile-chat-item\",\n    style: {\n      whiteSpace: 'nowrap'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `${SERVER_URL}${profile.photo}`,\n    className: \"profile-img-med\",\n    style: {\n      marginRight: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex flex-column align-items-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    style: {\n      maxHeight: '30px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      height: 'fit-content'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 33\n    }\n  }, profile.first_name, \" \", profile.last_name), activeChats[activeChatsProfiles.indexOf(profile)].messages.map((message, i, messages) => {\n    if (messages[messages.length - 1] === message) setLastChatMessage(message.content);\n    if (message.read || message.contact.user.username !== profile.user.username) return;\n    incrementUnreadMessagesCounter();\n  }), unreadMessagesCounter > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notification-text-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notification-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 41\n    }\n  }, unreadMessagesCounter)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-secondary\",\n    style: {\n      marginLeft: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 33\n    }\n  }, \"@\", profile.user.username)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }\n  }, lastChatMessage.slice(0, 40))))));\n}","map":{"version":3,"sources":["C:/Users/felip/CodeProjects/Web/Napker/frontend/src/pages/messages_/components/ContactListItem.js"],"names":["React","Link","SERVER_URL","ContactListItem","props","profile","activeChats","activeChatsProfiles","unreadMessagesCounter","lastChatMessage","resetUnreadMessagesCounter","incrementUnreadMessagesCounter","setLastChatMessage","message","undefined","slug","color","textDecoration","whiteSpace","photo","marginRight","maxHeight","height","first_name","last_name","indexOf","messages","map","i","length","content","read","contact","user","username","marginLeft","slice"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../../../config/settings'\r\n\r\nexport default function ContactListItem(props) {\r\n    const profile = props.profile\r\n    const activeChats = props.activeChats\r\n    const activeChatsProfiles = props.activeChatsProfiles\r\n    let unreadMessagesCounter\r\n    let lastChatMessage\r\n\r\n    const resetUnreadMessagesCounter = () => {\r\n        unreadMessagesCounter = 0\r\n    }\r\n\r\n    const incrementUnreadMessagesCounter = () => {\r\n        unreadMessagesCounter++\r\n    }\r\n\r\n    const setLastChatMessage = message => {\r\n        lastChatMessage = message\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {profile !== undefined &&\r\n                <Link to={`/mensagens/${profile.slug}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                    {resetUnreadMessagesCounter()}\r\n                    <li className=\"list-item profile-chat-item\" style={{ whiteSpace: 'nowrap' }}>\r\n                        <img src={`${SERVER_URL}${profile.photo}`}\r\n                            className=\"profile-img-med\"\r\n                            style={{ marginRight: '10px' }}\r\n                        />\r\n                        <div className=\"d-flex flex-column align-items-start\">\r\n                            <div className=\"d-flex\" style={{ maxHeight: '30px' }}>\r\n                                <strong style={{ height: 'fit-content' }}>{profile.first_name} {profile.last_name}</strong>\r\n                                {activeChats[activeChatsProfiles.indexOf(profile)].messages.map((message, i, messages) => {\r\n                                    if (messages[messages.length - 1] === message) setLastChatMessage(message.content)\r\n                                    if (message.read || message.contact.user.username !== profile.user.username) return\r\n                                    incrementUnreadMessagesCounter()\r\n                                })}\r\n                                {unreadMessagesCounter > 0 &&\r\n                                    <div className=\"notification-text-container\">\r\n                                        <div className=\"notification-text\">\r\n                                            {unreadMessagesCounter}\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                                <p className=\"text-secondary\" style={{ marginLeft: '5px' }}>@{profile.user.username}</p>\r\n                            </div>\r\n                            <p className=\"text-secondary\">{lastChatMessage.slice(0, 40)}</p>\r\n                        </div>\r\n                    </li>\r\n                </Link>\r\n            }\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}