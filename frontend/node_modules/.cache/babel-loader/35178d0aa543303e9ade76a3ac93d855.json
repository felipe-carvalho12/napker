{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\felip\\\\CodeProjects\\\\Web\\\\Napker\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"C:\\\\Users\\\\felip\\\\CodeProjects\\\\Web\\\\Napker\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\felip\\\\CodeProjects\\\\Web\\\\Napker\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\felip\\\\CodeProjects\\\\Web\\\\Napker\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\felip\\\\CodeProjects\\\\Web\\\\Napker\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{Link}from'react-router-dom';import{csrftoken}from'../../../../config/utils';import{SERVER_URL}from'../../../../config/settings';import WebSocketInstance from'../../Websocket';import SendMessageForm from'./components/SendMessageForm';import MessageListItem from'./components/MessageListItem';var Chat=/*#__PURE__*/function(_React$Component){_inherits(Chat,_React$Component);var _super=_createSuper(Chat);_createClass(Chat,[{key:\"initialiseChat\",value:function initialiseChat(){var _this2=this;this.waitForSocketConnection(function(){WebSocketInstance.addCallbacks(_this2.getMessages.bind(_this2),_this2.addMessage.bind(_this2));WebSocketInstance.fetchMessages(_this2.props.username,_this2.props.chatId);});if(this.props.chatId)WebSocketInstance.connect(this.props.chatId);}}]);function Chat(_props){var _this;_classCallCheck(this,Chat);_this=_super.call(this,_props);_this.handleComponentChange=function(){_this.scrollToBottom();if(_this.state.otherUsername&&(!_this.state.otherProfile||_this.state.otherProfile.user.username!==_this.state.otherUsername)){fetch(\"\".concat(SERVER_URL,\"/profile-api/user/\").concat(_this.state.otherUsername)).then(function(response){return response.json();}).then(function(data){return _this.setState({otherProfile:data});});}if(!_this.state.myProfile){fetch(\"\".concat(SERVER_URL,\"/profile-api/myprofile\")).then(function(response){return response.json();}).then(function(data){return _this.setState({myProfile:data});});}};_this.readMessages=function(props){fetch(\"\".concat(SERVER_URL,\"/chat-api/read-messages\"),{method:'POST',headers:{'Content-type':'application/json','X-CSRFToken':csrftoken},body:JSON.stringify({chat_id:props.chatId})}).then(function(response){return response.json();}).then(function(data){console.log(data);WebSocketInstance.readMessages(_this.props.chatId);});};_this.scrollToBottom=function(){if(document.querySelector('#chat-log')){var chatLog=document.querySelector('#chat-log');chatLog.scrollTop=chatLog.scrollHeight;}};_this.state={messages:[],myProfile:null,otherUsername:_this.props.otherUsername,otherProfile:null};_this.initialiseChat();return _this;}_createClass(Chat,[{key:\"componentDidMount\",value:function componentDidMount(){this.handleComponentChange();}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.handleComponentChange();document.querySelector('#chat-message-input')&&document.querySelector('#chat-message-input').focus();}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){WebSocketInstance.disconnect();}},{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(newProps){if(newProps.chatId&&newProps.otherUsername&&WebSocketInstance.state()!==1){this.waitForSocketConnection(function(){WebSocketInstance.fetchMessages(newProps.username,newProps.chatId);});WebSocketInstance.connect(newProps.chatId);this.readMessages(newProps);this.props.updateMessagesComponent();this.setState({message:'',otherUsername:newProps.otherUsername});}if(this.props.updateUnreadMessagesNumber){this.props.updateUnreadMessagesNumber();}if(this.state.otherUsername&&!newProps.otherUsername){WebSocketInstance.disconnect();this.setState({otherUsername:undefined,otherProfile:undefined});}}},{key:\"waitForSocketConnection\",value:function waitForSocketConnection(callback){var component=this;setTimeout(function(){if(WebSocketInstance.state()===1){console.log(\"Connection is made\");callback();return;}else{console.log(\"wait for connection...\");component.waitForSocketConnection(callback);}},100);}},{key:\"getMessages\",value:function getMessages(messages){this.setState({messages:messages.reverse()});}},{key:\"addMessage\",value:function addMessage(message){this.setState({messages:[].concat(_toConsumableArray(this.state.messages),[message])});this.readMessages(this.props);}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/React.createElement(React.Fragment,null,this.state.otherProfile!==null||!this.props.otherUsername?/*#__PURE__*/React.createElement(React.Fragment,null,this.state.otherProfile?/*#__PURE__*/React.createElement(\"div\",{className:\"current-chat\"},/*#__PURE__*/React.createElement(\"div\",{className:\"current-chat-header\"},/*#__PURE__*/React.createElement(\"i\",{class:\"fas fa-arrow-left left-arrow-icon\",onClick:function onClick(){return window.history.back();}}),/*#__PURE__*/React.createElement(Link,{to:\"/user/\".concat(this.state.otherProfile.slug)},/*#__PURE__*/React.createElement(\"img\",{src:\"\".concat(SERVER_URL).concat(this.state.otherProfile.photo),className:\"profile-img-sm\",style:{marginRight:'5px'}})),/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex flex-column align-items-start\",style:{height:'52px'}},/*#__PURE__*/React.createElement(\"strong\",null,this.state.otherProfile.first_name,\" \",this.state.otherProfile.last_name),/*#__PURE__*/React.createElement(\"p\",{className:\"text-secondary\"},\"@\",this.state.otherProfile.user.username))),/*#__PURE__*/React.createElement(\"div\",{id:\"chat-log\"},this.state.messages.map(function(message){return/*#__PURE__*/React.createElement(MessageListItem,{message:message,currentUser:_this3.props.username});})),/*#__PURE__*/React.createElement(SendMessageForm,{WebSocketInstance:WebSocketInstance,chatId:this.props.chatId,username:this.props.username,otherProfile:this.state.otherProfile,myProfile:this.state.myProfile,updateMessagesComponent:this.props.updateMessagesComponent})):/*#__PURE__*/React.createElement(\"div\",{className:\"current-chat no-chat-selected\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"strong\",{style:{fontSize:'larger'}},\"Voc\\xEA n\\xE3o tem uma conversa selecionada\"),/*#__PURE__*/React.createElement(\"p\",{className:\"text-secondary\"},\"Selecione uma existente ou comece uma nova\"),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary\",onClick:function onClick(){return _this3.props.openModal();}},\"Nova conversa\")))):/*#__PURE__*/React.createElement(\"div\",{className:\"chat-loader-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"loader\"})));}}]);return Chat;}(React.Component);export default Chat;","map":{"version":3,"sources":["C:/Users/felip/CodeProjects/Web/Napker/frontend/src/pages/messages_/components/chat_/Chat.js"],"names":["React","Link","csrftoken","SERVER_URL","WebSocketInstance","SendMessageForm","MessageListItem","Chat","waitForSocketConnection","addCallbacks","getMessages","bind","addMessage","fetchMessages","props","username","chatId","connect","handleComponentChange","scrollToBottom","state","otherUsername","otherProfile","user","fetch","then","response","json","data","setState","myProfile","readMessages","method","headers","body","JSON","stringify","chat_id","console","log","document","querySelector","chatLog","scrollTop","scrollHeight","messages","initialiseChat","focus","disconnect","newProps","updateMessagesComponent","message","updateUnreadMessagesNumber","undefined","callback","component","setTimeout","reverse","window","history","back","slug","photo","marginRight","height","first_name","last_name","map","fontSize","openModal","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { csrftoken } from '../../../../config/utils'\r\nimport { SERVER_URL } from '../../../../config/settings'\r\nimport WebSocketInstance from '../../Websocket'\r\nimport SendMessageForm from './components/SendMessageForm'\r\nimport MessageListItem from './components/MessageListItem'\r\n\r\nclass Chat extends React.Component {\r\n    initialiseChat() {\r\n        this.waitForSocketConnection(() => {\r\n            WebSocketInstance.addCallbacks(\r\n                this.getMessages.bind(this),\r\n                this.addMessage.bind(this),\r\n            )\r\n            WebSocketInstance.fetchMessages(\r\n                this.props.username,\r\n                this.props.chatId\r\n            );\r\n        });\r\n        if (this.props.chatId) WebSocketInstance.connect(this.props.chatId)\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            messages: [],\r\n            myProfile: null,\r\n            otherUsername: this.props.otherUsername,\r\n            otherProfile: null\r\n        }\r\n        this.initialiseChat();\r\n    }\r\n\r\n    handleComponentChange = () => {\r\n        this.scrollToBottom();\r\n        if (this.state.otherUsername && (!this.state.otherProfile || this.state.otherProfile.user.username !== this.state.otherUsername)) {\r\n            fetch(`${SERVER_URL}/profile-api/user/${this.state.otherUsername}`)\r\n                .then(response => response.json())\r\n                .then(data => this.setState({\r\n                    otherProfile: data\r\n                }))\r\n        }\r\n        if (!this.state.myProfile) {\r\n            fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n                .then(response => response.json())\r\n                .then(data => this.setState({ myProfile: data }))\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n\r\n    componentDidUpdate() {\r\n        this.handleComponentChange()\r\n        document.querySelector('#chat-message-input') && document.querySelector('#chat-message-input').focus()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        WebSocketInstance.disconnect()\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps.chatId && newProps.otherUsername && WebSocketInstance.state() !== 1) {\r\n            this.waitForSocketConnection(() => {\r\n                WebSocketInstance.fetchMessages(\r\n                    newProps.username,\r\n                    newProps.chatId\r\n                );\r\n            });\r\n            WebSocketInstance.connect(newProps.chatId)\r\n            this.readMessages(newProps)\r\n\r\n            this.props.updateMessagesComponent()\r\n            this.setState({\r\n                message: '',\r\n                otherUsername: newProps.otherUsername\r\n            })\r\n        }\r\n        if (this.props.updateUnreadMessagesNumber) {\r\n            this.props.updateUnreadMessagesNumber()\r\n        }\r\n        if (this.state.otherUsername && !newProps.otherUsername) {\r\n            WebSocketInstance.disconnect()\r\n            this.setState({\r\n                otherUsername: undefined,\r\n                otherProfile: undefined\r\n            })\r\n        }\r\n    }\r\n\r\n    readMessages = props => {\r\n        fetch(`${SERVER_URL}/chat-api/read-messages`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({ chat_id: props.chatId })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                WebSocketInstance.readMessages(this.props.chatId)\r\n            })\r\n    }\r\n\r\n    waitForSocketConnection(callback) {\r\n        const component = this;\r\n        setTimeout(function () {\r\n            if (WebSocketInstance.state() === 1) {\r\n                console.log(\"Connection is made\");\r\n                callback();\r\n                return;\r\n            } else {\r\n                console.log(\"wait for connection...\");\r\n                component.waitForSocketConnection(callback);\r\n            }\r\n        }, 100);\r\n    }\r\n\r\n    getMessages(messages) {\r\n        this.setState({ messages: messages.reverse() })\r\n    }\r\n\r\n    addMessage(message) {\r\n        this.setState({ messages: [...this.state.messages, message] })\r\n        this.readMessages(this.props)\r\n    }\r\n\r\n    scrollToBottom = () => {\r\n        if (document.querySelector('#chat-log')) {\r\n            const chatLog = document.querySelector('#chat-log')\r\n            chatLog.scrollTop = chatLog.scrollHeight\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.otherProfile !== null || !this.props.otherUsername ?\r\n                    <>\r\n                        {this.state.otherProfile ?\r\n                            <div className=\"current-chat\">\r\n                                <div className=\"current-chat-header\">\r\n                                    <i class=\"fas fa-arrow-left left-arrow-icon\" onClick={() => window.history.back()} />\r\n                                    <Link to={`/user/${this.state.otherProfile.slug}`}>\r\n                                        <img src={`${SERVER_URL}${this.state.otherProfile.photo}`}\r\n                                            className=\"profile-img-sm\"\r\n                                            style={{ marginRight: '5px' }}\r\n                                        />\r\n                                    </Link>\r\n                                    <div className=\"d-flex flex-column align-items-start\" style={{ height: '52px' }}>\r\n                                        <strong>{this.state.otherProfile.first_name} {this.state.otherProfile.last_name}</strong>\r\n                                        <p className=\"text-secondary\">@{this.state.otherProfile.user.username}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div id=\"chat-log\">\r\n                                    {this.state.messages.map(message => {\r\n                                            return (\r\n                                                <MessageListItem message={message} currentUser={this.props.username} />\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                                <SendMessageForm\r\n                                    WebSocketInstance={WebSocketInstance}\r\n                                    chatId={this.props.chatId}\r\n                                    username={this.props.username}\r\n                                    otherProfile={this.state.otherProfile}\r\n                                    myProfile={this.state.myProfile}\r\n                                    updateMessagesComponent={this.props.updateMessagesComponent}\r\n                                />\r\n                            </div>\r\n                            :\r\n                            <div className=\"current-chat no-chat-selected\">\r\n                                <div>\r\n                                    <strong style={{ fontSize: 'larger' }}>Você não tem uma conversa selecionada</strong>\r\n                                    <p className=\"text-secondary\">Selecione uma existente ou comece uma nova</p>\r\n                                    <button className=\"btn btn-primary\" onClick={() => this.props.openModal()}>Nova conversa</button>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </>\r\n                    :\r\n                    <div className=\"chat-loader-container\">\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chat\r\n"]},"metadata":{},"sourceType":"module"}