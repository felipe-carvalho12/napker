{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\fabio\\\\CodeProjects\\\\Django\\\\napker\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from'react';import Modal from'react-bootstrap/Modal';import{ProfileImageContext}from'../../../../context/edit-profile/EditProfileContext';import CroppieModal from'./components/CroppieModal';import EditProfileModal from'./components/EditProfileModal';export default function EditProfile(props){var _useContext=useContext(ProfileImageContext),_useContext2=_slicedToArray(_useContext,2),profileImage=_useContext2[0],setProfileImage=_useContext2[1];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isCroppingImage=_useState2[0],setIsCropping=_useState2[1];var _handleProfileImageChange=function handleProfileImageChange(e,isCropping){var reader=new FileReader();reader.onload=function(){if(reader.readyState===2){setIsCropping(isCropping);setProfileImage(reader.result);}};try{reader.readAsDataURL(e.target.files[0]);}catch(_unused){}};return/*#__PURE__*/React.createElement(Modal,{show:props.isOpen,onHide:props.closeModal,size:\"lg\"},isCroppingImage?/*#__PURE__*/React.createElement(CroppieModal,{image:profileImage,handleProfileImageChange:function handleProfileImageChange(e){return _handleProfileImageChange(e,false);},handleBackArrow:function handleBackArrow(){return setIsCropping(false);}}):/*#__PURE__*/React.createElement(EditProfileModal,{profile:props.profile,handleProfileImageChange:function handleProfileImageChange(e){return _handleProfileImageChange(e,true);},closeModal:props.closeModal}));}","map":{"version":3,"sources":["C:/Users/fabio/CodeProjects/Django/napker/frontend/src/pages/profile/components/edit-profile/EditProfile.js"],"names":["React","useState","useContext","Modal","ProfileImageContext","CroppieModal","EditProfileModal","EditProfile","props","profileImage","setProfileImage","isCroppingImage","setIsCropping","handleProfileImageChange","e","isCropping","reader","FileReader","onload","readyState","result","readAsDataURL","target","files","isOpen","closeModal","profile"],"mappings":"oLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,KAA4C,OAA5C,CACA,MAAOC,CAAAA,KAAP,KAAkB,uBAAlB,CAEA,OAASC,mBAAT,KAAoC,qDAApC,CACA,MAAOC,CAAAA,YAAP,KAAyB,2BAAzB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,+BAA7B,CAGA,cAAe,SAASC,CAAAA,WAAT,CAAqBC,KAArB,CAA4B,iBACCN,UAAU,CAACE,mBAAD,CADX,4CAChCK,YADgC,iBAClBC,eADkB,+BAEET,QAAQ,CAAC,KAAD,CAFV,wCAEhCU,eAFgC,eAEfC,aAFe,eAIvC,GAAMC,CAAAA,yBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAACC,CAAD,CAAIC,UAAJ,CAAmB,CAChD,GAAMC,CAAAA,MAAM,CAAG,GAAIC,CAAAA,UAAJ,EAAf,CACAD,MAAM,CAACE,MAAP,CAAgB,UAAM,CAClB,GAAIF,MAAM,CAACG,UAAP,GAAsB,CAA1B,CAA6B,CACzBP,aAAa,CAACG,UAAD,CAAb,CACAL,eAAe,CAACM,MAAM,CAACI,MAAR,CAAf,CACH,CACJ,CALD,CAMA,GAAI,CACAJ,MAAM,CAACK,aAAP,CAAqBP,CAAC,CAACQ,MAAF,CAASC,KAAT,CAAe,CAAf,CAArB,EACH,CAAC,cAAM,CAEP,CACJ,CAbD,CAeA,mBACI,oBAAC,KAAD,EAAO,IAAI,CAAEf,KAAK,CAACgB,MAAnB,CACI,MAAM,CAAEhB,KAAK,CAACiB,UADlB,CAEI,IAAI,CAAC,IAFT,EAIKd,eAAe,cACZ,oBAAC,YAAD,EACI,KAAK,CAAEF,YADX,CAEI,wBAAwB,CAAE,kCAAAK,CAAC,QAAID,CAAAA,yBAAwB,CAACC,CAAD,CAAI,KAAJ,CAA5B,EAF/B,CAGI,eAAe,CAAE,iCAAMF,CAAAA,aAAa,CAAC,KAAD,CAAnB,EAHrB,EADY,cAOZ,oBAAC,gBAAD,EACI,OAAO,CAAEJ,KAAK,CAACkB,OADnB,CAEI,wBAAwB,CAAE,kCAAAZ,CAAC,QAAID,CAAAA,yBAAwB,CAACC,CAAD,CAAI,IAAJ,CAA5B,EAF/B,CAGI,UAAU,CAAEN,KAAK,CAACiB,UAHtB,EAXR,CADJ,CAoBH","sourcesContent":["import React, { useState, useContext } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nimport { ProfileImageContext } from '../../../../context/edit-profile/EditProfileContext'\r\nimport CroppieModal from './components/CroppieModal'\r\nimport EditProfileModal from './components/EditProfileModal'\r\n\r\n\r\nexport default function EditProfile(props) {\r\n    const [profileImage, setProfileImage] = useContext(ProfileImageContext)\r\n    const [isCroppingImage, setIsCropping] = useState(false)\r\n\r\n    const handleProfileImageChange = (e, isCropping) => {\r\n        const reader = new FileReader()\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                setIsCropping(isCropping)\r\n                setProfileImage(reader.result)\r\n            }\r\n        }\r\n        try {\r\n            reader.readAsDataURL(e.target.files[0])\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal show={props.isOpen}\r\n            onHide={props.closeModal}\r\n            size=\"lg\"\r\n        >\r\n            {isCroppingImage ?\r\n                <CroppieModal\r\n                    image={profileImage}\r\n                    handleProfileImageChange={e => handleProfileImageChange(e, false)}\r\n                    handleBackArrow={() => setIsCropping(false)}\r\n                />\r\n                :\r\n                <EditProfileModal\r\n                    profile={props.profile}\r\n                    handleProfileImageChange={e => handleProfileImageChange(e, true)}\r\n                    closeModal={props.closeModal}\r\n                />\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}