{"version":3,"sources":["context/app/invites-received-number/InvitesReceivedContext.js","context/app/unvisualized-comments-number/UnvisualizedCommentsContext.js","context/app/unvisualized-likes-number/UnvisualizedLikesContext.js","context/app/unread-messages-number/UnreadMessagesContext.js","context/app/AppContext.js","config/settings.js","config/utils.js","components/fixed/Sidebar.js","components/fixed/Header.js","components/ProfileListItem.js","components/likesmodal.js","pages/home/components/posts_/components/PostForm.js","components/PostListItem.js","pages/home/components/posts_/Posts.js","pages/home/components/profiles/components/ProfilesSearchInput.js","pages/home/components/profiles/Profiles.js","components/fixed/bottom-menu/components/PostIcon.js","components/fixed/bottom-menu/BottomMenu.js","pages/home/Home.js","pages/notifications/components/InviteNotification.js","pages/notifications/components/LikeProfileNotification.js","pages/notifications/components/CommentProfileNotification.js","pages/notifications/components/NewLabel.js","pages/notifications/Notifications.js","components/fixed/header.js","pages/messages_/components/ModalContactSearch.js","pages/messages_/Websocket.js","pages/messages_/components/chat_/components/SendMessageForm.js","pages/messages_/components/chat_/components/MessageListItem.js","pages/messages_/components/chat_/Chat.js","pages/messages_/components/ContactListItem.js","pages/messages_/components/ContactFilterInput.js","pages/messages_/Messages.js","pages/profile/components/EditProfileModal.js","components/LikesModal.js","pages/profile/components/Posts.js","pages/profile/components/interests/Interests.js","pages/profile/components/ProfileData.js","pages/profile/MyProfile.js","pages/settings_/components/SettingsMenu.js","pages/settings_/components/BlockedProfiles.js","pages/settings_/components/ChangePassword.js","pages/settings_/components/DeleteAccount.js","pages/settings_/Settings.js","pages/profile/Profile.js","pages/profile/pages/Friends.js","pages/profile/components/interests/pages/InterestProfiles.js","pages/profile/pages/edit_interests/components/PublicInterests.js","pages/profile/pages/edit_interests/components/PrivateInterests.js","pages/profile/pages/edit_interests/EditInterests.js","components/CommentModal.js","pages/home/components/posts_/pages/post_/components/CommentListItem.js","components/fixed/bottom-menu/components/CommentIcon.js","pages/home/components/posts_/pages/post_/Post.js","pages/PostFormPage.js","App.js","index.js"],"names":["InvitesReceivedContext","createContext","InvitesReceivedProvider","props","useState","invitesReceivedNumber","setInvitesReceived","Provider","value","children","UnvisualizedCommentsContext","UnvisualizedCommentsProvider","unvisualizedCommentsNumber","setUnvisulaizedComments","UnvisualizedLikesContext","UnvisualizedLikesProvider","unvisualizedLikesNumber","setUnvisulaizedLikes","UnreadMessagesContext","UnreadMessagesProvider","unreadMessagesNumber","setUnreadMessagesNumber","AppContextProvider","SERVER_URL","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","handleLogout","window","confirm","location","replace","openCloseEmojiList","closing","el","querySelector","style","display","classList","remove","add","getActivePageOnLoad","querySelectorAll","forEach","currentUrl","href","includes","switchPage","e","isHome","target","Sidebar","useContext","notificationsNumber","useEffect","className","to","textDecoration","onClick","src","id","Header","backArrow","class","history","back","page","ProfileListItem","profile","myProfile","slug","color","key","photo","marginRight","textAlign","first_name","last_name","user","username","bio","LikesModal","setMyProfile","fetch","then","response","json","data","Modal","show","isOpen","onHide","hideModal","size","closeButton","Title","Body","height","overflow","overflowY","likes","map","like","borderTop","borderLeft","borderRight","PostForm","postContent","setPostContent","postFormImagePreview","setPostFormImagePreview","action","method","encType","type","placeholder","maxLength","autoFocus","onChange","disabled","margin","htmlFor","accept","reader","FileReader","onload","readyState","result","readAsDataURL","files","onEmojiClick","event","emojiObject","emoji","PostListItem","post","likeUnlikePost","stopPropagation","likeBtn","contains","dataset","postid","console","log","renderParent","author","created","reverse","join","content","image","postId","animationPlayState","addEventListener","fetchPosts","headers","deletePost","comments","data-postid","openLikesModal","Posts","setState","posts","state","likesModal","this","React","Component","ProfilesSearchInput","setFilteredProfiles","search","setSearch","searchType","setSearchType","openCloseSearchTypeSelector","width","fontSize","Profiles","profiles","setProfiles","filteredProfiles","handleRelationshipUpdate","preventDefault","pk","btn","innerHTML","body","JSON","stringify","cancelFriendRequest","data-pk","BottomMenu","Home","setPage","pages","title","borderRadius","PostIcon","InviteListItem","invite","replyRequest","sender","data-senderid","data-reply","LikeProfileNotification","CommentProfileNotification","comment","NewLabel","Notifications","notificationsFetchInterval","invites","setInvites","unvisualizedPostLikes","setUnvisualizedPostLikes","visualizedPostLikes","setVisualizedPostLikes","unvisualizedComments","setUnvisualizedComments","visualizedComments","setVisualizedComments","fetchNotifications","setInterval","clearInterval","updateNotificationsNumber","requestBody","senderid","reply","getElementById","ModalContactSearch","modalProfiles","setParentState","addingNewChat","padding","query","WebSocketService","callbacks","socketRef","instance","chatUrl","path","WebSocket","onopen","socketNewMessage","command","onmessage","onerror","message","onclose","close","parsedData","parse","Object","keys","messages","chatId","sendMessage","from","messagesCallback","newMessageCallback","send","err","WebSocketInstance","getInstance","SendMessageForm","otherProfile","updateMessagesComponent","setMessage","onSubmit","messageObject","blocked_users","u","alert","newChatMessage","MessageListItem","currentUser","timestamp","ts","Date","day","getDate","month","getMonth","hour","getHours","minute","getMinutes","getFullYear","renderTimestamp","read","Chat","handleComponentChange","otherUsername","scrolledToBottom","scrollToBottom","readMessages","chat_id","chatLog","scrollTop","scrollHeight","initialiseChat","waitForSocketConnection","addCallbacks","getMessages","bind","addMessage","fetchMessages","connect","activeElement","focus","disconnect","newProps","updateUnreadMessagesNumber","undefined","callback","component","setTimeout","openModal","ContactListItem","unreadMessagesCounter","lastChatMessage","activeChats","activeChatsProfiles","whiteSpace","maxHeight","indexOf","setLastChatMessage","contact","marginLeft","slice","ContactFilterInput","setHasFilteredProfiles","fetchActiveChatProfiles","filter","p","renderedActiveChatsProfiles","setContactSearch","Messages","handleReceiveProps","match","params","participants","other_username","hasFilteredProfiles","chats","rerenderingInterval","bool","EditProfileModal","closeModal","profileImagePreview","setProfileImagePreview","editingBioContent","setEditingBioContent","marginBottom","email","defaultValue","birth_date","Footer","submit","setLikesModal","fetchProfile","marginTop","Interests","interests","public","interest","toUpperCase","ProfileData","friends","MyProfile","setProfile","isEditing","setIsEditing","currentPageIsPosts","setCurrentPageIsPosts","SettingsMenu","pageChange","BlockUser","blockedProfiles","setBlockedProfiles","ChangePassword","errorMessage","setErrorMessage","successMessage","setSuccessMessage","role","passwordEl","newPasswordEl","newPasswordcEl","password","newPassword","newPasswordc","new_password","new_passwordc","DeleteAccount","displayErrorMessage","setDisplayErrorMessage","Settings","visualViewport","Profile","sendFriendRequest","removeFromFriends","acceptFriendRequest","blockUnblockUser","alertMessage","openCloseExtraOptions","relationshipButtonLabel","label","relationship","onmouseenter","onmouseout","borderBottom","Friends","setFriends","useParams","friend","InterestProfiles","PublicInterests","addTags","tag","parentElement","removeChild","tags","sort","tagContainer","prepend","div","createElement","span","closeIcon","setAttribute","appendChild","interestsInput","createTag","setInterests","input","push","tagLabel","getAttribute","index","PrivateInterests","EditInterests","publicInterests","setPublicInterests","privateInterests","setPrivateInterests","public_interests","private_interests","documentElement","CommentModal","commentContent","setCommentContent","CommentListItem","fetchPost","setPostLikesModal","likeUnlikeComment","commentid","commentId","deleteComment","data-commentid","Post","setPost","commentModalIsOpen","setCommentModalIsOpen","postLikesModal","commentLikesModal","setCommentLikesModal","CommentIcon","handlePostContentChange","handlePostImageChange","handleCloseImage","App","render","exact","ProfileFriends","PostFormPage","ReactDOM"],"mappings":"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","file":"static/js/main.84ec4700.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react'\r\n\r\nexport const InvitesReceivedContext = createContext()\r\n\r\nexport const InvitesReceivedProvider = props => {\r\n    const [invitesReceivedNumber, setInvitesReceived] = useState(0)\r\n\r\n    return (\r\n        <InvitesReceivedContext.Provider value={[invitesReceivedNumber, setInvitesReceived]}>\r\n            {props.children}\r\n        </InvitesReceivedContext.Provider>\r\n    )\r\n}","import React, { createContext, useState } from 'react'\r\n\r\nexport const UnvisualizedCommentsContext = createContext()\r\n\r\nexport const UnvisualizedCommentsProvider = props => {\r\n    const [unvisualizedCommentsNumber, setUnvisulaizedComments] = useState(0)\r\n\r\n    return (\r\n        <UnvisualizedCommentsContext.Provider value={[unvisualizedCommentsNumber, setUnvisulaizedComments]}>\r\n            {props.children}\r\n        </UnvisualizedCommentsContext.Provider>\r\n    )\r\n}","import React, { createContext, useState } from 'react'\r\n\r\nexport const UnvisualizedLikesContext = createContext()\r\n\r\nexport const UnvisualizedLikesProvider = props => {\r\n    const [unvisualizedLikesNumber, setUnvisulaizedLikes] = useState(0)\r\n\r\n    return (\r\n        <UnvisualizedLikesContext.Provider value={[unvisualizedLikesNumber, setUnvisulaizedLikes]}>\r\n            {props.children}\r\n        </UnvisualizedLikesContext.Provider>\r\n    )\r\n}","import React, { createContext, useState } from 'react'\r\n\r\nexport const UnreadMessagesContext = createContext()\r\n\r\nexport const UnreadMessagesProvider = props => {\r\n    const [unreadMessagesNumber, setUnreadMessagesNumber] = useState(0)\r\n    \r\n    return (\r\n        <UnreadMessagesContext.Provider value={[unreadMessagesNumber, setUnreadMessagesNumber]}>\r\n            {props.children}\r\n        </UnreadMessagesContext.Provider>\r\n    )\r\n}","import React from 'react'\r\n\r\nimport { InvitesReceivedContext, InvitesReceivedProvider } from './invites-received-number/InvitesReceivedContext'\r\nimport { UnvisualizedCommentsContext, UnvisualizedCommentsProvider } from './unvisualized-comments-number/UnvisualizedCommentsContext'\r\nimport { UnvisualizedLikesContext, UnvisualizedLikesProvider } from './unvisualized-likes-number/UnvisualizedLikesContext'\r\nimport { UnreadMessagesContext, UnreadMessagesProvider } from './unread-messages-number/UnreadMessagesContext'\r\nexport { InvitesReceivedContext, UnvisualizedCommentsContext, UnvisualizedLikesContext, UnreadMessagesContext }\r\n\r\nexport default function AppContextProvider(props) {\r\n    return (\r\n        <InvitesReceivedProvider>\r\n            <UnvisualizedCommentsProvider>\r\n                <UnvisualizedLikesProvider>\r\n                    <UnreadMessagesProvider>\r\n                        {props.children}\r\n                    </UnreadMessagesProvider>\r\n                </UnvisualizedLikesProvider>\r\n            </UnvisualizedCommentsProvider>\r\n        </InvitesReceivedProvider>\r\n    )\r\n}","//const SERVER_URL = 'https://napker.herokuapp.com'\r\n//const SOCKET_URL = 'wss://napker.herokuapp.com'\r\nconst SERVER_URL = 'http://127.0.0.1:8000'\r\nconst SOCKET_URL = 'ws://127.0.0.1:8000'\r\n\r\nconst LOGO_URL = '/static/media/napker.png'\r\n\r\nexport { SERVER_URL, SOCKET_URL, LOGO_URL }\r\n","import { SERVER_URL } from './settings'\r\n\r\nexport const csrftoken = getCookie('csrftoken')\r\n\r\nfunction getCookie(name) {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nexport const handleLogout = () => {\r\n  const bool = window.confirm('Sair do Napker?\\nVocê poderá entrar novamente quando quiser.')\r\n  if (bool) {\r\n    window.location.replace(`${SERVER_URL}/logout`)\r\n  }\r\n}\r\n\r\nexport const openCloseEmojiList = (closing = false) => {\r\n  const el = document.querySelector('#emoji-list-container')\r\n  const style = el.style\r\n  if (closing) {\r\n    style.display = 'none'\r\n    document.querySelector('#emoji-button').classList.remove('emoji-button-active')\r\n  } else {\r\n    if (!style.display || style.display === 'none') {\r\n      style.display = 'initial'\r\n      document.querySelector('#emoji-button').classList.add('emoji-button-active')\r\n    } else {\r\n      style.display = 'none'\r\n      document.querySelector('#emoji-button').classList.remove('emoji-button-active')\r\n    }\r\n  }\r\n}\r\n\r\n// NAV AND BOTTOM MENU\r\n\r\nexport const getActivePageOnLoad = () => {\r\n  document.querySelectorAll('.nav-menu-item-active').forEach(el => {\r\n    el.classList.remove('nav-menu-item-active')\r\n  })\r\n  const currentUrl = window.location.href.split('/')\r\n  if (currentUrl.includes('home')) {\r\n    document.querySelector('#home-menu') && document.querySelector('#home-menu').classList.add('nav-menu-item-active')\r\n    document.querySelector('#bottom-home-menu') && document.querySelector('#bottom-home-menu').classList.add('nav-menu-item-active')\r\n  }\r\n  else if (currentUrl.includes('notifica%C3%A7%C3%B5es')) {\r\n    document.querySelector('#notifications-menu') && document.querySelector('#notifications-menu').classList.add('nav-menu-item-active')\r\n    document.querySelector('#bottom-notifications-menu') && document.querySelector('#bottom-notifications-menu').classList.add('nav-menu-item-active')\r\n  }\r\n  else if (currentUrl.includes('mensagens')) {\r\n    document.querySelector('#messages-menu') && document.querySelector('#messages-menu').classList.add('nav-menu-item-active')\r\n    document.querySelector('#bottom-messages-menu') && document.querySelector('#bottom-messages-menu').classList.add('nav-menu-item-active')\r\n  }\r\n  else if (currentUrl.includes('perfil')) {\r\n    document.querySelector('#profile-menu') && document.querySelector('#profile-menu').classList.add('nav-menu-item-active')\r\n    document.querySelector('#bottom-profile-menu') && document.querySelector('#bottom-profile-menu').classList.add('nav-menu-item-active')\r\n  }\r\n  else if (currentUrl.includes('configura%C3%A7%C3%B5es')) {\r\n    document.querySelector('#settings-menu') && document.querySelector('#settings-menu').classList.add('nav-menu-item-active')\r\n    document.querySelector('#bottom-settings-menu') && document.querySelector('#bottom-settings-menu').classList.add('nav-menu-item-active')\r\n  }\r\n}\r\n\r\nexport const switchPage = (e, isHome = false) => {\r\n  if (!isHome) {\r\n    document.querySelectorAll('.nav-menu-item-active').forEach(el => {\r\n      el.classList.remove('nav-menu-item-active')\r\n    })\r\n    e.target.classList.add('nav-menu-item-active')\r\n  } else {\r\n    document.querySelectorAll('.nav-menu-item-active').forEach(el => {\r\n      el.classList.remove('nav-menu-item-active')\r\n    })\r\n    document.querySelector('#home-menu').classList.add('nav-menu-item-active')\r\n  }\r\n}\r\n","import React, { useEffect, useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { SERVER_URL, LOGO_URL } from '../../config/settings'\r\nimport { getActivePageOnLoad, switchPage } from '../../config/utils'\r\nimport {\r\n    InvitesReceivedContext, UnvisualizedCommentsContext,\r\n    UnvisualizedLikesContext, UnreadMessagesContext\r\n} from '../../context/app/AppContext'\r\n\r\nexport default function Sidebar() {\r\n    const [invitesReceivedNumber, setInvitesReceived] = useContext(InvitesReceivedContext)\r\n    const [unvisualizedCommentsNumber, setUnvisulaizedComments] = useContext(UnvisualizedCommentsContext)\r\n    const [unvisualizedLikesNumber, setUnvisulaizedLikes] = useContext(UnvisualizedLikesContext)\r\n\r\n    const [unreadMessagesNumber, setUnreadMessagesNumber] = useContext(UnreadMessagesContext)\r\n\r\n    let notificationsNumber = invitesReceivedNumber + unvisualizedLikesNumber + unvisualizedCommentsNumber\r\n\r\n    useEffect(() => {\r\n        getActivePageOnLoad()\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"logo-container\">\r\n                <Link to=\"/home\" style={{ textDecoration: 'none' }} onClick={e => switchPage(e, true)}>\r\n                    <img src={`${SERVER_URL}${LOGO_URL}`} />\r\n                </Link>\r\n            </div>\r\n            <ul>\r\n                <Link to=\"/home\" style={{ textDecoration: 'none' }}>\r\n                    <li className=\"sidebar-menu-item\" id=\"home-menu\" onClick={switchPage}>\r\n                        <i className=\"fas fa-home sidebar-menu-icon\" />\r\n                        Home\r\n                    </li>\r\n                </Link>\r\n                <Link to=\"/notificações\" style={{ textDecoration: 'none' }}>\r\n                    <li className=\"sidebar-menu-item\" id=\"notifications-menu\" onClick={switchPage}>\r\n                        <i className=\"fas fa-bell sidebar-menu-icon\" />\r\n                        Notificações\r\n                        {!notificationsNumber ? '' :\r\n                            <div className=\"notification-text-container\">\r\n                                <div className=\"notification-text\">\r\n                                    {notificationsNumber}\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </li>\r\n                </Link>\r\n                <Link to=\"/mensagens\" style={{ textDecoration: 'none' }}>\r\n                    <li className=\"sidebar-menu-item\" id=\"messages-menu\" onClick={switchPage}>\r\n                        <i className=\"fas fa-envelope sidebar-menu-icon\" />\r\n                        Mensagens\r\n                        {!unreadMessagesNumber ? '' :\r\n                            <div className=\"notification-text-container\">\r\n                                <div className=\"notification-text\">\r\n                                    {unreadMessagesNumber}\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </li>\r\n                </Link>\r\n                <Link to=\"/perfil\" style={{ textDecoration: 'none' }}>\r\n                    <li className=\"sidebar-menu-item\" id=\"profile-menu\" onClick={switchPage}>\r\n                        <i className=\"fas fa-user sidebar-menu-icon\" />\r\n                        Perfil\r\n                    </li>\r\n                </Link>\r\n                <Link to=\"/configurações\" style={{ textDecoration: 'none' }}>\r\n                    <li className=\"sidebar-menu-item\" id=\"settings-menu\" onClick={switchPage}>\r\n                        <i className=\"fas fa-cog sidebar-menu-icon\" />\r\n                        Configurações\r\n                    </li>\r\n                </Link>\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <div className=\"header fixed-top\">\r\n            {!props.backArrow ? '' :\r\n                <i class=\"fas fa-arrow-left left-arrow-icon\" onClick={() => window.history.back()} />\r\n            }\r\n            <strong>{props.page}</strong>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../config/settings'\r\n\r\nexport default function ProfileListItem(props) {\r\n    const profile = props.profile\r\n    const myProfile = props.myProfile\r\n\r\n    return (\r\n        <Link to={profile.id === myProfile.id ?\r\n            '/perfil' : `/user/${profile.slug}`}\r\n            style={{ color: '#000', textDecoration: 'none' }}\r\n        >\r\n            <li\r\n                className=\"list-group-item profile-row filtered-profile profile-profile-list-item\"\r\n                key={profile.id}\r\n                style={props.style}\r\n                onClick={props.onClick}\r\n            >\r\n                <div className=\"d-flex\">\r\n                    <div className=\"profile-img-container\">\r\n                        <img src={`${SERVER_URL}${profile.photo}`}\r\n                            className=\"profile-img-med\"\r\n                            style={{ marginRight: '10px' }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"d-flex flex-column w-100\">\r\n                        <div className=\"profile-row-top\">\r\n                            <div className=\"main-profile-data\">\r\n                                <strong style={{ textAlign: 'start' }}>\r\n                                    {profile.first_name} {profile.last_name}\r\n                                </strong>\r\n                                <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                            </div>\r\n                            {props.children}\r\n                        </div>\r\n                        <div className=\"profile-row-bottom\">\r\n                            {profile.bio}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </Link>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nimport { SERVER_URL } from '../config/settings'\r\nimport ProfileListItem from '../components/ProfileListItem'\r\n\r\nexport default function LikesModal(props) {\r\n    const [myProfile, setMyProfile] = useState(null)\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n    }, [])\r\n\r\n    return (\r\n        <Modal show={props.isOpen}\r\n            onHide={props.hideModal}\r\n            size=\"lg\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title><strong>Curtidas</strong></Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"list-group\" style={{ height: '400px', overflow: 'hidden', overflowY: 'scroll' }}>\r\n                    {props.likes &&\r\n                        props.likes.map(like => like.profile).map(profile => {\r\n                            return (\r\n                                <ProfileListItem\r\n                                    profile={profile}\r\n                                    myProfile={myProfile}\r\n                                    style={{ borderTop: 'none', borderLeft: 'none', borderRight: 'none' }}\r\n                                    onClick={props.hideModal}\r\n                                />\r\n                            )\r\n                        })}\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport Picker from 'emoji-picker-react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../../../../../config/settings'\r\nimport { csrftoken, openCloseEmojiList } from '../../../../../config/utils'\r\n\r\nexport default function PostForm(props) {\r\n    const myProfile = props.myProfile\r\n\r\n    const [postContent, setPostContent] = useState('')\r\n    const [postFormImagePreview, setPostFormImagePreview] = useState(null)\r\n\r\n    const handlePostContentChange = e => {\r\n        setPostContent(e.target.value)\r\n        const el = document.querySelector('#post-form-submit-btn')\r\n        el.disabled = e.target.value.trim() === '' && !postFormImagePreview\r\n    }\r\n\r\n    const handlePostImageChange = e => {\r\n        const reader = new FileReader()\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                setPostFormImagePreview(reader.result)\r\n                document.querySelector('#post-img-container').style.display = 'initial'\r\n                document.querySelector('#post-form-submit-btn').disabled = false\r\n            }\r\n        }\r\n        try {\r\n            reader.readAsDataURL(e.target.files[0])\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n    const handleCloseImage = () => {\r\n        document.querySelector('#post-img-container').style.display = 'none'\r\n        document.querySelector('#post-image').value = ''\r\n        if (postContent.trim() === '') document.querySelector('#post-form-submit-btn').disabled = true\r\n        setPostFormImagePreview(null)\r\n    }\r\n\r\n    const onEmojiSelect = (event, emojiObject) => {\r\n        setPostContent(postContent + emojiObject.emoji)\r\n        document.querySelector('#post-form-submit-btn').disabled = false\r\n    }\r\n\r\n    return (\r\n        <form\r\n            action={`${SERVER_URL}/post-api/create-post`}\r\n            method=\"POST\"\r\n            className=\"create-post-form\"\r\n            encType=\"multipart/form-data\"\r\n        >\r\n            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n            <div className=\"d-flex\">\r\n                <Link to=\"/perfil\">\r\n                    <img\r\n                        src={`${SERVER_URL}${myProfile.photo}`}\r\n                        className=\"profile-img-med\"\r\n                    />\r\n                </Link>\r\n                <textarea\r\n                    className=\"post-content-textarea\"\r\n                    name=\"post-content\"\r\n                    value={postContent}\r\n                    placeholder=\"No que você está pensando?\"\r\n                    maxLength={300}\r\n                    autoFocus\r\n                    onChange={handlePostContentChange}\r\n                />\r\n            </div>\r\n            <div className=\"w-100 d-flex justify-content-center\">\r\n                <div\r\n                    className=\"post-img-container\"\r\n                    id=\"post-img-container\">\r\n                    <div\r\n                        className=\"post-img-options\"\r\n                    >\r\n                        <i\r\n                            className=\"far fa-times-circle\"\r\n                            onClick={handleCloseImage}\r\n                        />\r\n                    </div>\r\n                    <img\r\n                        src={postFormImagePreview}\r\n                        className=\"post-img post-form-img-preview\"\r\n                        id=\"post-form-img-preview\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"d-flex justify-content-between\" style={{ margin: '0px 70px 0 70px' }}>\r\n                <div className=\"post-extra-options\">\r\n                    <label htmlFor=\"post-image\" class=\"far fa-image\" />\r\n                    <input\r\n                        type=\"file\"\r\n                        accept=\"image/png, image/jpg, image/jpeg\"\r\n                        name=\"post-image\"\r\n                        id=\"post-image\"\r\n                        style={{ display: 'none' }}\r\n                        onChange={handlePostImageChange}\r\n                    />\r\n                    <label\r\n                        className=\"far fa-smile\"\r\n                        id=\"emoji-button\"\r\n                        onClick={() => openCloseEmojiList(false)}\r\n                    />\r\n                    <div className=\"emoji-list-container\" id=\"emoji-list-container\">\r\n                        <Picker onEmojiClick={onEmojiSelect} />\r\n                    </div>\r\n                </div>\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary\"\r\n                    id=\"post-form-submit-btn\"\r\n                    style={{ height: '40px' }}\r\n                    disabled\r\n                >\r\n                    Postar\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../config/settings'\r\nimport { csrftoken } from '../config/utils'\r\n\r\nexport default function PostListItem(props) {\r\n    const post = props.post\r\n    const myProfile = props.myProfile\r\n\r\n    const deletePost = (e, postId) => {\r\n        e.stopPropagation()\r\n        const el = document.querySelector(`#profile-post-${postId}`)\r\n        if (window.confirm('Tem certeza que deseja apagar o post?\\nEssa ação é irreversível.')) {\r\n            el.style.animationPlayState = 'running'\r\n            el.addEventListener('animationend', () => {\r\n                this.fetchPosts()\r\n            })\r\n            fetch(`${SERVER_URL}/post-api/delete-post/${postId}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                })\r\n        }\r\n    }\r\n\r\n    const likeUnlikePost = e => {\r\n        e.stopPropagation()\r\n        const likeBtn = e.target\r\n        if (likeBtn.classList.contains('fas')) {\r\n            likeBtn.classList.remove('fas') //border heart\r\n            likeBtn.classList.add('far')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/unlike-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.renderParent()\r\n                })\r\n        } else {\r\n            likeBtn.classList.remove('far') //border heart\r\n            likeBtn.classList.add('fas')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/like-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.renderParent()\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <li\r\n            className=\"post-container post-list-item\"\r\n            id={`profile-post-${post.id}`}\r\n            key={post.id}\r\n            onClick={() => window.location.href = `/post/${post.id}`}\r\n        >\r\n            <div className=\"d-flex justify-content-between\">\r\n                <div className=\"post-row\">\r\n                    <div className=\"post-col\">\r\n                        <Link\r\n                            to={post.author.id === myProfile.id ?\r\n                                '/perfil' : `/user/${post.author.slug}`}\r\n                            onClick={e => e.stopPropagation()}\r\n                        >\r\n                            <img src={`${SERVER_URL}${post.author.photo}`}\r\n                                className=\"profile-img-med\"\r\n                            />\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"post-col\">\r\n                        <Link\r\n                            to={post.author.id === myProfile.id ?\r\n                                '/perfil' : `/user/${post.author.slug}`}\r\n                            style={{ color: '#000' }}\r\n                            onClick={e => e.stopPropagation()}\r\n                        >\r\n                            <div className=\"post-author-data-wrapper\">\r\n                                <strong style={{ marginRight: '5px' }}>\r\n                                    {post.author.first_name} {post.author.last_name}\r\n                                </strong>\r\n                                <p className=\"text-secondary d-inline-block\">\r\n                                    @{post.author.user.username} • {post.created.split('-').reverse().join('/')}\r\n                                </p>\r\n                            </div>\r\n                        </Link>\r\n                        <div style={{ textAlign: 'start' }}>\r\n                            {post.content}\r\n                        </div>\r\n                        {post.image &&\r\n                            <img src={`${SERVER_URL}${post.image}`} className=\"post-img\" />\r\n                        }\r\n                    </div>\r\n                </div>\r\n                {post.author.id === myProfile.id &&\r\n                    <i\r\n                        className=\"far fa-trash-alt trash-icon text-secondary\"\r\n                        style={{ margin: '20px 20px 0 0' }}\r\n                        onClick={e => deletePost(e, post.id)}\r\n                    />\r\n                }\r\n            </div>\r\n            <div className=\"post-actions\">\r\n                <p className=\"text-secondary\">\r\n                    <Link\r\n                        to={`/post/${post.id}/comentar`}\r\n                        className=\"text-secondary\"\r\n                        onClick={e => e.stopPropagation()}\r\n                    >\r\n                        <i\r\n                            class=\"far fa-comment\"\r\n                        />{post.comments.length}\r\n                    </Link>\r\n                    {post.likes.map(like => like.profile.id).includes(myProfile.id) ?\r\n                        <i class=\"fas fa-heart\"\r\n                            data-postid={post.id}\r\n                            onClick={likeUnlikePost}\r\n                        />\r\n                        :\r\n                        <i class=\"far fa-heart\"\r\n                            data-postid={post.id}\r\n                            onClick={likeUnlikePost}\r\n                        />\r\n                    }\r\n                    <p className=\"post-likes-number\"\r\n                        onClick={e => {\r\n                            e.stopPropagation()\r\n                            props.openLikesModal(post.likes)\r\n                        }\r\n                        }\r\n                    >\r\n                        {post.likes.length}\r\n                    </p>\r\n                </p>\r\n            </div>\r\n        </li>\r\n    )\r\n}","import React from 'react'\r\n\r\nimport { SERVER_URL } from '../../../../config/settings'\r\nimport LikesModal from '../../../../components/likesmodal'\r\nimport PostForm from './components/PostForm'\r\nimport PostListItem from '../../../../components/PostListItem'\r\n\r\nexport default class Posts extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myProfile: null,\r\n            posts: null,\r\n            likesModal: {\r\n                isOpen: false,\r\n                likes: null\r\n            },\r\n            postContent: '',\r\n            postFormImagePreview: null\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ myProfile: data }))\r\n        this.fetchPosts()\r\n    }\r\n\r\n    fetchPosts = () => {\r\n        fetch(`${SERVER_URL}/post-api/post-list`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ posts: data }))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <LikesModal\r\n                    isOpen={this.state.likesModal.isOpen}\r\n                    likes={this.state.likesModal.likes}\r\n                    hideModal={() => this.setState({likesModal: {isOpen: false, likes: null}})}\r\n                />\r\n                {this.state.myProfile &&\r\n                    <PostForm myProfile={this.state.myProfile} />\r\n                }\r\n                <div className=\"post-list\">\r\n                    {this.state.posts && this.state.myProfile ?\r\n                        this.state.posts.map(post => {\r\n                            return (\r\n                                <PostListItem\r\n                                    post={post}\r\n                                    myProfile={this.state.myProfile}\r\n                                    renderParent={this.fetchPosts}\r\n                                    openLikesModal={likes => this.setState({ likesModal: { isOpen: true, likes: likes } })}\r\n                                />\r\n                            )\r\n                        }) :\r\n                        <div className=\"posts-loader-container\" >\r\n                            <div className=\"loader\" />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { SERVER_URL } from '../../../../../config/settings'\r\n\r\n\r\nexport default function ProfilesSearchInput(props) {\r\n    const setFilteredProfiles = props.setFilteredProfiles\r\n    const [search, setSearch] = useState('')\r\n    const [searchType, setSearchType] = useState('byName')\r\n\r\n    useEffect(() => {\r\n        if (search === '') {\r\n            setFilteredProfiles(null)\r\n            return\r\n        }\r\n        if (searchType === 'byName') {\r\n            fetch(`${SERVER_URL}/profile-api/users/${search}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    setFilteredProfiles(data)\r\n                })\r\n        } else if (searchType === 'byInterest') {\r\n            fetch(`${SERVER_URL}/profile-api/users/${search}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    setFilteredProfiles(data)\r\n                })\r\n        }\r\n    }, [search])\r\n\r\n    const openCloseSearchTypeSelector = () => {\r\n        const el = document.querySelector('#search-type-selector')\r\n        const style = el.style\r\n        if (!style.display) style.display = 'none'\r\n        if (style.display === 'none') {\r\n            document.querySelector('#profiles-search-extra-options-icon').classList.add('profiles-search-extra-options-icon-active')\r\n            style.display = 'flex'\r\n        } else {\r\n            document.querySelector('#profiles-search-extra-options-icon').classList.remove('profiles-search-extra-options-icon-active')\r\n            style.display = 'none'\r\n        }\r\n    }\r\n\r\n    const handleSearchTypeSelection = () => {\r\n        setSearchType(searchType === 'byName' ? 'byInterest' : 'byName')\r\n        openCloseSearchTypeSelector()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"profiles-filter-container\">\r\n                <div style={{ width: '89%' }}>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"profiles-filter-input\"\r\n                        placeholder={searchType === 'byName' ? 'Pesquisar perfil' : 'Digite um ou mais interesses'}\r\n                        value={search}\r\n                        onChange={e => setSearch(e.target.value)}\r\n                    />\r\n                </div>\r\n                <i\r\n                    className=\"fas fa-ellipsis-h btn profiles-search-extra-options-icon\"\r\n                    id=\"profiles-search-extra-options-icon\"\r\n                    onClick={openCloseSearchTypeSelector}\r\n                />\r\n            </div>\r\n            <div className=\"profiles-search-type-selector\" id=\"search-type-selector\" onClick={handleSearchTypeSelection}>\r\n                {searchType === 'byName' ?\r\n                    <li className=\"d-flex align-items-center\">\r\n                        <i class=\"fas fa-grin-hearts text-secondary\" style={{ fontSize: 'large', marginRight: '5px' }} />\r\n                        Pesquisar por interesse\r\n                    </li>\r\n                    :\r\n                    <li className=\"d-flex align-items-center\">\r\n                        <i class=\"fas fa-user text-secondary\" style={{ fontSize: 'large', marginRight: '5px' }} />\r\n                        Pesquisar por nome\r\n                    </li>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport { SERVER_URL } from '../../../../config/settings'\r\nimport { csrftoken } from '../../../../config/utils'\r\nimport ProfileListItem from '../../../../components/ProfileListItem'\r\nimport ProfilesSearchInput from './components/ProfilesSearchInput'\r\n\r\nexport default function Profiles() {\r\n    const [myProfile, setMyProfile] = useState(null)\r\n    const [profiles, setProfiles] = useState(null)\r\n    const [filteredProfiles, setFilteredProfiles] = useState(null)\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n        fetch(`${SERVER_URL}/profile-api/profile-list`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setFilteredProfiles(null)\r\n                setProfiles(data)\r\n            })\r\n    }, [])\r\n\r\n    const sendFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/send-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    const cancelFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/cancel-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    const handleRelationshipUpdate = e => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        const btn = e.target\r\n        if (btn.innerHTML === 'Solicitar') {\r\n            sendFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitado'\r\n            btn.className = 'btn btn-primary'\r\n        } else {\r\n            cancelFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitar'\r\n            btn.className = 'btn btn-secondary'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ProfilesSearchInput setFilteredProfiles={setFilteredProfiles} />\r\n            <div className=\"list-group\">\r\n                {myProfile && (profiles || filteredProfiles) ?\r\n                    <div className=\"profile-list-container\">\r\n                        {filteredProfiles ? filteredProfiles.map(profile => {\r\n                            return (\r\n                                <ProfileListItem profile={profile} myProfile={myProfile} />\r\n                            )\r\n                        }\r\n                        ) : profiles && profiles.map(profile => {\r\n                            return (\r\n                                <ProfileListItem profile={profile} myProfile={myProfile}>\r\n                                    <button className=\"btn btn-secondary\" data-pk={profile.id} onClick={handleRelationshipUpdate}>\r\n                                        Solicitar\r\n                                    </button>\r\n                                </ProfileListItem>\r\n                            )\r\n                        })\r\n                        }\r\n                    </div> :\r\n                    <div className=\"profiles-loader-container\">\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default () => (\r\n    <Link to=\"/postar\">\r\n        <i className=\"fas fa-pencil-alt bottom-menu-action-icon\" />\r\n    </Link>\r\n)","import React, { useEffect, useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { getActivePageOnLoad, switchPage } from '../../../config/utils'\r\nimport {\r\n    InvitesReceivedContext, UnvisualizedCommentsContext,\r\n    UnvisualizedLikesContext, UnreadMessagesContext\r\n} from '../../../context/app/AppContext'\r\n\r\nexport default function BottomMenu(props) {\r\n    const [invitesReceivedNumber, setInvitesReceived] = useContext(InvitesReceivedContext)\r\n    const [unvisualizedCommentsNumber, setUnvisulaizedComments] = useContext(UnvisualizedCommentsContext)\r\n    const [unvisualizedLikesNumber, setUnvisulaizedLikes] = useContext(UnvisualizedLikesContext)\r\n\r\n    const [unreadMessagesNumber, setUnreadMessagesNumber] = useContext(UnreadMessagesContext)\r\n\r\n    let notificationsNumber = invitesReceivedNumber + unvisualizedLikesNumber + unvisualizedCommentsNumber\r\n\r\n    useEffect(() => {\r\n        getActivePageOnLoad()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"bottom-menu-action-icon-container fixed-bottom\">\r\n                {props.children}\r\n            </div>\r\n            <div className=\"bottom-menu fixed-bottom\">\r\n                <ul>\r\n                    <Link to=\"/home\" style={{ textDecoration: 'none' }}>\r\n                        <li className=\"sidebar-menu-item\" id=\"bottom-home-menu\" onClick={switchPage}>\r\n                            <i className=\"fas fa-home sidebar-menu-icon\" />\r\n                        </li>\r\n                    </Link>\r\n                    <Link to=\"/notificações\" style={{ textDecoration: 'none' }}>\r\n                        <li className=\"sidebar-menu-item\" id=\"bottom-notifications-menu\" onClick={switchPage}>\r\n                            <i className=\"fas fa-bell sidebar-menu-icon\" />\r\n                            {!notificationsNumber ? '' :\r\n                                <div className=\"notification-text-container\">\r\n                                    <div className=\"notification-text\">\r\n                                        {notificationsNumber}\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </li>\r\n                    </Link>\r\n                    <Link to=\"/mensagens\" style={{ textDecoration: 'none' }}>\r\n                        <li className=\"sidebar-menu-item\" id=\"bottom-messages-menu\" onClick={switchPage}>\r\n                            <i className=\"fas fa-envelope sidebar-menu-icon\" />\r\n                            {!unreadMessagesNumber ? '' :\r\n                                <div className=\"notification-text-container\">\r\n                                    <div className=\"notification-text\">\r\n                                        {unreadMessagesNumber}\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </li>\r\n                    </Link>\r\n                    <Link to=\"/perfil\" style={{ textDecoration: 'none' }}>\r\n                        <li className=\"sidebar-menu-item\" id=\"bottom-profile-menu\" onClick={switchPage}>\r\n                            <i className=\"fas fa-user sidebar-menu-icon\" />\r\n                        </li>\r\n                    </Link>\r\n                    <Link to=\"/configurações\" style={{ textDecoration: 'none' }}>\r\n                        <li className=\"sidebar-menu-item\" id=\"bottom-settings-menu\" onClick={switchPage}>\r\n                            <i className=\"fas fa-cog sidebar-menu-icon\" />\r\n                        </li>\r\n                    </Link>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react'\r\n\r\nimport Header from '../../components/fixed/Header'\r\nimport Posts from './components/posts_/Posts'\r\nimport Profiles from './components/profiles/Profiles'\r\nimport PostIcon from '../../components/fixed/bottom-menu/components/PostIcon'\r\nimport BottomMenu from '../../components/fixed/bottom-menu/BottomMenu'\r\n\r\nexport default function Home(props) {\r\n    const [page, setPage] = useState('Posts')\r\n    const pages = {\r\n        'Perfis': <Profiles />,\r\n        'Posts': <Posts />\r\n    }\r\n\r\n    document.title = 'Home / Napker'\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Home\" />\r\n            <div className=\"content\">\r\n                <div className=\"home-page-subheader\">\r\n                    {page === 'Perfis' ?\r\n                        'Veja o que os seus amigos andam fazendo: ' :\r\n                        'Veja usuários com os mesmos interesses que você: '\r\n                    }\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        style={{ margin: '10px', borderRadius: '20px' }}\r\n                        onClick={() => setPage(page === 'Perfis' ? 'Posts' : 'Perfis')}\r\n                    >\r\n                        {page === 'Perfis' ?\r\n                            'Ver posts' :\r\n                            'Ver perfis'\r\n                        }\r\n                    </button>\r\n                </div>\r\n                {pages[page]}\r\n            </div>\r\n            <BottomMenu>\r\n                <PostIcon />\r\n            </BottomMenu>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { SERVER_URL } from '../../../config/settings'\r\n\r\nexport default function InviteListItem(props) {\r\n    const invite = props.invite\r\n    const replyRequest = props.replyRequest\r\n    \r\n    return (\r\n        <li\r\n            className=\"friend-request-row profile-row\"\r\n            id={`fr-${invite.sender.id}`}\r\n            key={invite.sender.id}\r\n            onClick={() => window.location.href = `/user/${invite.sender.slug}`}\r\n        >\r\n            <div className=\"d-flex\">\r\n                <div className=\"profile-img-container\">\r\n                    <img src={`${SERVER_URL}${invite.sender.photo}`}\r\n                        className=\"profile-img-med\"\r\n                        style={{ marginRight: '10px' }}\r\n                    />\r\n                </div>\r\n                <div className=\"d-flex flex-column w-100\">\r\n                    <div className=\"profile-row-top\">\r\n                        <div className=\"main-profile-data\">\r\n                            <strong style={{ textAlign: 'start' }}>\r\n                                {invite.sender.first_name} {invite.sender.last_name}\r\n                            </strong>\r\n                            <p className=\"text-secondary\">@{invite.sender.user.username}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"profile-row-bottom\">\r\n                        {invite.sender.bio}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"friend-request-col\">\r\n                <button className=\"btn btn-primary btn-reply-fr mr-1\" data-senderid={invite.sender.id} data-reply='accept' onClick={replyRequest}>\r\n                    Aceitar\r\n                </button>\r\n                <button className=\"btn btn-grey btn-reply-fr\" data-senderid={invite.sender.id} data-reply='decline' onClick={replyRequest}>\r\n                    Excluir\r\n                </button>\r\n            </div>\r\n        </li>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../../../config/settings'\r\n\r\nexport default function LikeProfileNotification(props) {\r\n    const like = props.like\r\n    \r\n    return (\r\n        <li className=\"notification-row\" key={like.profile.id}>\r\n            <div className=\"d-flex align-items-center\">\r\n                <i class=\"fas fa-heart notification-like\" />\r\n                <Link to={`/user/${like.profile.slug}`}>\r\n                    <img src={`${SERVER_URL}${like.profile.photo}`}\r\n                        className=\"profile-img-sm\"\r\n                        style={{ marginRight: '10px' }}\r\n                    />\r\n                </Link>\r\n                <p className=\"text-secondary d-inline-block\">\r\n                    {like.created.split('-').reverse().join('/')}\r\n                </p>\r\n                {props.children}\r\n            </div>\r\n            <div className=\"notification-message\">\r\n                <p>\r\n                    <Link to={`/user/${like.profile.slug}`} style={{ color: \"#000\" }}>\r\n                        @{like.profile.user.username}\r\n                    </Link> curtiu seu post.\r\n                </p>\r\n            </div>\r\n            <div className=\"notification-post-content\">\r\n                {like.post.content}\r\n            </div>\r\n        </li>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../../../config/settings'\r\n\r\nexport default function CommentProfileNotification(props) {\r\n    const comment = props.comment\r\n    return (\r\n        <li className=\"notification-row\" key={comment.author.id}>\r\n            <div className=\"d-flex align-items-center\">\r\n                <i class=\"fas fa-comment notification-comment\" />\r\n                <Link to={`/user/${comment.author.slug}`}>\r\n                    <img src={`${SERVER_URL}${comment.author.photo}`}\r\n                        className=\"profile-img-sm\"\r\n                        style={{ marginRight: '10px' }}\r\n                    />\r\n                </Link>\r\n                <p className=\"text-secondary d-inline-block\">\r\n                    {comment.created.split('-').reverse().join('/')}\r\n                </p>\r\n                {props.children}\r\n            </div>\r\n            <div className=\"notification-message\">\r\n                <p>\r\n                    <Link to={`/user/${comment.author.slug}`} style={{ color: \"#000\" }}>\r\n                        @{comment.author.user.username}\r\n                    </Link> comentou seu post.\r\n                </p>\r\n            </div>\r\n            <div className=\"notification-comment-container\">\r\n                <div className=\"notification-comment-content\">\r\n                    {comment.content}\r\n                </div>\r\n                <Link to={`/post/${comment.post.id}`}>\r\n                    <button className=\"btn btn-primary\">\r\n                        Ver Post\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n        </li>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function NewLabel() {\r\n    return (\r\n        <div className=\"notification-text-container\">\r\n            <div className=\"notification-text\">\r\n                novo\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport { SERVER_URL } from '../../config/settings'\r\nimport { csrftoken } from '../../config/utils'\r\nimport Header from '../../components/fixed/Header'\r\nimport InviteNotification from './components/InviteNotification'\r\nimport LikeProfileNotification from './components/LikeProfileNotification'\r\nimport CommentProfileNotification from './components/CommentProfileNotification'\r\nimport NewLabel from './components/NewLabel'\r\nimport BottomMenu from '../../components/fixed/bottom-menu/BottomMenu'\r\n\r\nexport default function Notifications(props) {\r\n    const [invites, setInvites] = useState(null)\r\n    const [unvisualizedPostLikes, setUnvisualizedPostLikes] = useState(null)\r\n    const [visualizedPostLikes, setVisualizedPostLikes] = useState(null)\r\n    const [unvisualizedComments, setUnvisualizedComments] = useState(null)\r\n    const [visualizedComments, setVisualizedComments] = useState(null)\r\n\r\n    let notificationsFetchInterval\r\n\r\n    document.title = 'Notificações / Napker'\r\n\r\n    const fetchNotifications = () => {\r\n        fetch(`${SERVER_URL}/profile-api/myinvites`)\r\n            .then(response => response.json())\r\n            .then(data => setInvites(data))\r\n        fetch(`${SERVER_URL}/post-api/unvisualized-post-likes`)\r\n            .then(response => response.json())\r\n            .then(data => setUnvisualizedPostLikes(data))\r\n        fetch(`${SERVER_URL}/post-api/unvisualized-post-comments`)\r\n            .then(response => response.json())\r\n            .then(data => setUnvisualizedComments(data))\r\n        fetch(`${SERVER_URL}/post-api/post-likes-visualized-last-2-days`)\r\n            .then(response => response.json())\r\n            .then(data => setVisualizedPostLikes(data))\r\n        fetch(`${SERVER_URL}/post-api/post-comments-visualized-last-2-days`)\r\n            .then(response => response.json())\r\n            .then(data => setVisualizedComments(data))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchNotifications()\r\n        notificationsFetchInterval = window.setInterval(fetchNotifications, 3000)\r\n        return () => window.clearInterval(notificationsFetchInterval)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (unvisualizedPostLikes && unvisualizedPostLikes.length) {\r\n            fetch(`${SERVER_URL}/post-api/visualize-likes`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.updateNotificationsNumber()\r\n                })\r\n        }\r\n    }, [unvisualizedPostLikes])\r\n\r\n    useEffect(() => {\r\n        if (unvisualizedComments && unvisualizedComments.length) {\r\n            fetch(`${SERVER_URL}/post-api/visualize-comments`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.updateNotificationsNumber()\r\n                })\r\n        }\r\n    }, [unvisualizedComments])\r\n\r\n    const replyRequest = e => {\r\n        e.stopPropagation()\r\n        const btn = e.target\r\n        const requestBody = {\r\n            'senderid': btn.dataset.senderid,\r\n            'reply': btn.dataset.reply\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/reply-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(requestBody)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                props.updateNotificationsNumber()\r\n            })\r\n        document.getElementById(`fr-${btn.dataset.senderid}`).remove()\r\n        fetchNotifications()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Notificações\" />\r\n            <div className=\"content\">\r\n                <div>\r\n                    {invites !== null && unvisualizedPostLikes && visualizedPostLikes !== null && unvisualizedComments !== null && visualizedComments !== null ?\r\n                        <div>\r\n                            {invites.length || unvisualizedPostLikes.length || visualizedPostLikes.length || unvisualizedComments.length || !!visualizedComments.length ?\r\n                                <div className=\"notifications-container\">\r\n                                    {!!invites.length &&\r\n                                        <div>\r\n                                            {invites.map(invite => {\r\n                                                return (\r\n                                                    <InviteNotification\r\n                                                        invite={invite}\r\n                                                        replyRequest={replyRequest}\r\n                                                    />\r\n                                                )\r\n                                            })}\r\n                                        </div>\r\n                                    }\r\n\r\n                                    {(!!unvisualizedPostLikes.length || !!unvisualizedComments.length) &&\r\n                                        <>\r\n                                            {!!unvisualizedPostLikes.length &&\r\n                                                <>\r\n                                                    {unvisualizedPostLikes.map(like => {\r\n                                                        return (\r\n                                                            <LikeProfileNotification like={like}>\r\n                                                                <NewLabel />\r\n                                                            </LikeProfileNotification>\r\n                                                        )\r\n                                                    })}\r\n                                                </>\r\n                                            }\r\n\r\n                                            {!!unvisualizedComments.length &&\r\n                                                <>\r\n                                                    {unvisualizedComments.map(comment => {\r\n                                                        return (\r\n                                                            <CommentProfileNotification comment={comment}>\r\n                                                                <NewLabel />\r\n                                                            </CommentProfileNotification>\r\n                                                        )\r\n                                                    })}\r\n                                                </>\r\n                                            }\r\n                                        </>\r\n                                    }\r\n\r\n                                    {(!!visualizedPostLikes.length || !!visualizedComments.length) &&\r\n                                        <>\r\n                                            {!!visualizedPostLikes.length &&\r\n                                                <>\r\n                                                    {visualizedPostLikes.map(like => {\r\n                                                        return (\r\n                                                            <LikeProfileNotification like={like} />\r\n                                                        )\r\n                                                    })}\r\n                                                </>\r\n                                            }\r\n\r\n                                            {!!visualizedComments.length &&\r\n                                                <>\r\n                                                    {visualizedComments.map(comment => {\r\n                                                        return (\r\n                                                            <CommentProfileNotification comment={comment} />\r\n                                                        )\r\n                                                    })}\r\n                                                </>\r\n                                            }\r\n                                        </>\r\n                                    }\r\n\r\n                                </div> :\r\n                                <div className=\"no-notifications-container\">\r\n                                    <h3>Você não tem nenhuma notificação</h3>\r\n                                </div>\r\n                            }\r\n\r\n                        </div> :\r\n                        <div className=\"notifications-loader-container\">\r\n                            <div className=\"loader\" />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <BottomMenu />\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <div className=\"header fixed-top\">\r\n            {!props.backArrow ? '' :\r\n                <i class=\"fas fa-arrow-left left-arrow-icon\" onClick={() => window.history.back()} />\r\n            }\r\n            <strong>{props.page}</strong>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../../../config/settings'\r\n\r\nexport default function ModalContactSearch(props) {\r\n    const modalProfiles = props.modalProfiles\r\n    const setParentState = props.setParentState\r\n    const addingNewChat = props.addingNewChat\r\n\r\n    const setModalSearch = query => {\r\n        if (query === '') {\r\n            setParentState({\r\n                modalProfiles: []\r\n            })\r\n            return\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/users/${query}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setParentState({\r\n                    modalProfiles: data\r\n                })\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Modal show={addingNewChat}\r\n            onHide={() => setParentState({ addingNewChat: false })}\r\n            size=\"lg\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title><strong>Nova conversa</strong></Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body style={{ padding: '0' }}>\r\n                <input className=\"modal-search-input\"\r\n                    placeholder=\"Pesquisar pessoas\"\r\n                    onChange={e => setModalSearch(e.target.value)}\r\n                />\r\n                <div className=\"list-group\" style={{ height: '400px', overflow: 'hidden', overflowY: 'scroll' }}>\r\n                    {modalProfiles && modalProfiles.map(profile => {\r\n                        return (\r\n                            <Link to={`/mensagens/${profile.slug}`}\r\n                                style={{ color: '#000', textDecoration: 'none' }}\r\n                                onClick={() => setParentState({ addingNewChat: false })}\r\n                            >\r\n                                <li className=\"list-group-item profile-row modal-profile-li\" key={profile.id}>\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <div className=\"profile-col\">\r\n                                            <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                className=\"profile-img-med\"\r\n                                                style={{ marginRight: '10px' }}\r\n                                            />\r\n                                            <div className=\"main-profile-data\">\r\n                                                <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                                <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            </Link>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}","import { SOCKET_URL } from '../../config/settings'\r\n\r\nclass WebSocketService {\r\n  static instance = null;\r\n  callbacks = {};\r\n\r\n  static getInstance() {\r\n    if (!WebSocketService.instance) {\r\n      WebSocketService.instance = new WebSocketService();\r\n    }\r\n    return WebSocketService.instance;\r\n  }\r\n\r\n  constructor() {\r\n    this.socketRef = null;\r\n  }\r\n\r\n  connect(chatUrl) {\r\n    const path = `${SOCKET_URL}/ws/chat/${chatUrl}/`;\r\n    this.socketRef = new WebSocket(path);\r\n    this.socketRef.onopen = () => {\r\n      console.log(\"WebSocket open\");\r\n    };\r\n    this.socketNewMessage(JSON.stringify({\r\n      command: 'fetch-messages'\r\n    }))\r\n    this.socketRef.onmessage = e => {\r\n      this.socketNewMessage(e.data);\r\n    };\r\n    this.socketRef.onerror = e => {\r\n      console.log(e.message);\r\n    };\r\n    this.socketRef.onclose = () => {\r\n      console.log(\"WebSocket closed\");\r\n    };\r\n  }\r\n\r\n  disconnect() {\r\n    if (this.socketRef) this.socketRef.close();\r\n  }\r\n\r\n  socketNewMessage(data) {\r\n    const parsedData = JSON.parse(data);\r\n    const command = parsedData.command;\r\n    if (Object.keys(this.callbacks).length === 0) {\r\n      return;\r\n    }\r\n    if (command === \"messages\") {\r\n      this.callbacks[command](parsedData.messages);\r\n    }\r\n    if (command === \"new_message\") {\r\n      this.callbacks[command](parsedData.message);\r\n    }\r\n  }\r\n\r\n  fetchMessages(username, chatId) {\r\n    this.sendMessage({\r\n      command: \"fetch_messages\",\r\n      username: username,\r\n      chatId: chatId\r\n    });\r\n  }\r\n\r\n  newChatMessage(message) {\r\n    this.sendMessage({\r\n      command: \"new_message\",\r\n      from: message.from,\r\n      content: message.content,\r\n      chatId: message.chatId\r\n    });\r\n  }\r\n\r\n  readMessages(chatId) {\r\n    this.sendMessage({\r\n      command: \"read_messages\",\r\n      chatId: chatId\r\n    });\r\n  }\r\n\r\n  addCallbacks(messagesCallback, newMessageCallback) {\r\n    this.callbacks[\"messages\"] = messagesCallback\r\n    this.callbacks[\"new_message\"] = newMessageCallback\r\n  }\r\n\r\n  sendMessage(data) {\r\n    try {\r\n      if (this.state() === 1) {\r\n        this.socketRef.send(JSON.stringify({ ...data }))\r\n      }\r\n    } catch (err) {\r\n      console.log(err.message)\r\n    }\r\n  }\r\n\r\n  state() {\r\n    return this.socketRef ? this.socketRef.readyState : 0\r\n  }\r\n}\r\n\r\nconst WebSocketInstance = WebSocketService.getInstance();\r\n\r\nexport default WebSocketInstance;","import React, { useState } from 'react'\r\nimport Picker from 'emoji-picker-react'\r\n\r\nimport { openCloseEmojiList } from '../../../../../config/utils'\r\n\r\nexport default function SendMessageForm(props) {\r\n    const WebSocketInstance = props.WebSocketInstance\r\n    const chatId = props.chatId\r\n    const username = props.username\r\n    const otherProfile = props.otherProfile\r\n    const myProfile = props.myProfile\r\n    const updateMessagesComponent = props.updateMessagesComponent\r\n\r\n    const [message, setMessage] = useState('')\r\n\r\n    const messageChangeHandler = e => {\r\n        setMessage(e.target.value)\r\n        const el = document.querySelector('#chat-message-submit')\r\n        el.disabled = e.target.value.trim() === ''\r\n    }\r\n\r\n    const onEmojiSelect = (event, emojiObject) => {\r\n        setMessage(message + emojiObject.emoji)\r\n        document.querySelector('#chat-message-submit').disabled = false\r\n    }\r\n\r\n    const sendMessageHandler = e => {\r\n        e.preventDefault()\r\n        const messageObject = {\r\n            from: username,\r\n            content: message,\r\n            chatId: chatId\r\n        };\r\n        setMessage('')\r\n        if (otherProfile.blocked_users.map(u => u.id).includes(myProfile.user.id)) {\r\n            window.alert(`Você não pode enviar mensagens para ${otherProfile.first_name}.\r\n            ${otherProfile.first_name} te bloqueou.`)\r\n            return\r\n        }\r\n        if (myProfile.blocked_users.map(u => u.id).includes(otherProfile.user.id)) {\r\n            window.alert(`Você não pode enviar mensagens para ${otherProfile.first_name}.\r\n            Você bloqueou ${otherProfile.first_name}.`)\r\n            return\r\n        }\r\n        WebSocketInstance.newChatMessage(messageObject)\r\n        document.querySelector('#chat-message-submit').disabled = true\r\n        openCloseEmojiList(true)\r\n        updateMessagesComponent()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"emoji-list-container chat-emoji-list\" id=\"emoji-list-container\">\r\n                <Picker onEmojiClick={onEmojiSelect} />\r\n            </div>\r\n            <form className=\"send-message-container\" onSubmit={sendMessageHandler}>\r\n                <label\r\n                    className=\"far fa-smile\"\r\n                    id=\"emoji-button\"\r\n                    onClick={() => openCloseEmojiList(false)}\r\n                />\r\n                <input\r\n                    placeholder=\"Mensagem\"\r\n                    className=\"message-input\"\r\n                    id=\"chat-message-input\"\r\n                    value={message}\r\n                    autoFocus={document.querySelector('#contact-filter-input').value === ''}\r\n                    onChange={messageChangeHandler}\r\n                />\r\n                <button\r\n                    className=\"btn btn-primary chat-message-submit\"\r\n                    id=\"chat-message-submit\"\r\n                    disabled\r\n                >\r\n                    <i class=\"fas fa-chevron-right\" />\r\n                </button>\r\n            </form>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function MessageListItem(props) {\r\n    const message = props.message\r\n    const currentUser = props.currentUser\r\n\r\n    const renderTimestamp = timestamp => {\r\n        const ts = new Date(timestamp)\r\n        const day = ts.getDate() >= 10 ? ts.getDate() : `0${ts.getDate()}`\r\n        const month = ts.getMonth() >= 10 ? ts.getMonth() : `0${ts.getMonth()}`\r\n        const hour = ts.getHours() >= 10 ? ts.getHours() : `0${ts.getHours()}`\r\n        const minute = ts.getMinutes() >= 10 ? ts.getMinutes() : `0${ts.getMinutes()}`\r\n        return `${day}/${month}/${ts.getFullYear()} - ${hour}:${minute}`\r\n    }\r\n\r\n    return (\r\n        <li\r\n            key={message.id}\r\n            className={message.author === currentUser ? \"sent\" : \"received\"}\r\n        >\r\n            <p>\r\n                {message.content}\r\n                <br />\r\n                <small>\r\n                    {renderTimestamp(message.timestamp)} {message.author === currentUser ?\r\n                        message.read ?\r\n                            <i class=\"fas fa-check-double\" />\r\n                            :\r\n                            <i class=\"fas fa-check\" />\r\n                        :\r\n                        ''\r\n                    }\r\n                </small>\r\n            </p>\r\n        </li>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { csrftoken } from '../../../../config/utils'\r\nimport { SERVER_URL } from '../../../../config/settings'\r\nimport WebSocketInstance from '../../Websocket'\r\nimport SendMessageForm from './components/SendMessageForm'\r\nimport MessageListItem from './components/MessageListItem'\r\n\r\nclass Chat extends React.Component {\r\n    initialiseChat() {\r\n        console.log('initializing chat...')\r\n        this.waitForSocketConnection(() => {\r\n            WebSocketInstance.addCallbacks(\r\n                this.getMessages.bind(this),\r\n                this.addMessage.bind(this),\r\n            )\r\n            WebSocketInstance.fetchMessages(\r\n                this.props.username,\r\n                this.props.chatId\r\n            );\r\n        });\r\n        if (this.props.chatId) WebSocketInstance.connect(this.props.chatId)\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            messages: [],\r\n            scrolledToBottom: false,\r\n            myProfile: null,\r\n            otherUsername: this.props.otherUsername,\r\n            otherProfile: null\r\n        }\r\n        this.initialiseChat();\r\n    }\r\n\r\n    handleComponentChange = () => {\r\n        if (this.state.otherUsername && (!this.state.otherProfile || this.state.otherProfile.user.username !== this.state.otherUsername)) {\r\n            fetch(`${SERVER_URL}/profile-api/user/${this.state.otherUsername}`)\r\n                .then(response => response.json())\r\n                .then(data => this.setState({\r\n                    otherProfile: data\r\n                }))\r\n        }\r\n        if (!this.state.myProfile) {\r\n            fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n                .then(response => response.json())\r\n                .then(data => this.setState({ myProfile: data }))\r\n        }\r\n        if (this.state.messages.length && !this.state.scrolledToBottom && document.querySelectorAll('.sent, .received').length) {\r\n            this.scrollToBottom()\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n\r\n    componentDidUpdate() {\r\n        this.handleComponentChange()\r\n        document.querySelector('#contact-filter-input') &&\r\n        document.activeElement !== document.querySelector('#contact-filter-input') &&\r\n        document.querySelector('#chat-message-input') &&\r\n        document.querySelector('#chat-message-input').focus()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        WebSocketInstance.disconnect()\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps.chatId && newProps.chatId !== this.props.chatId && newProps.otherUsername && WebSocketInstance.state() !== 1) {\r\n            this.waitForSocketConnection(() => {\r\n                WebSocketInstance.fetchMessages(\r\n                    newProps.username,\r\n                    newProps.chatId\r\n                );\r\n            });\r\n            WebSocketInstance.connect(newProps.chatId)\r\n            this.readMessages(newProps)\r\n\r\n            this.props.updateMessagesComponent()\r\n            this.setState({\r\n                messages: [],\r\n                scrolledToBottom: false,\r\n            })\r\n        }\r\n        if (this.state.otherUsername !== newProps.otherUsername) {\r\n            this.setState({\r\n                otherUsername: newProps.otherUsername\r\n            })\r\n        }\r\n        if (this.props.updateUnreadMessagesNumber) {\r\n            this.props.updateUnreadMessagesNumber()\r\n        }\r\n        if (this.state.otherUsername && !newProps.otherUsername) {\r\n            WebSocketInstance.disconnect()\r\n            this.setState({\r\n                otherUsername: undefined,\r\n                otherProfile: undefined\r\n            })\r\n        }\r\n    }\r\n\r\n    readMessages = props => {\r\n        fetch(`${SERVER_URL}/chat-api/read-messages`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({ chat_id: props.chatId })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                WebSocketInstance.readMessages(this.props.chatId)\r\n            })\r\n    }\r\n\r\n    waitForSocketConnection(callback) {\r\n        const component = this;\r\n        setTimeout(function () {\r\n            if (WebSocketInstance.state() === 1) {\r\n                console.log(\"Connection is made\");\r\n                callback();\r\n                return;\r\n            } else {\r\n                console.log(\"wait for connection...\");\r\n                component.waitForSocketConnection(callback);\r\n            }\r\n        }, 100);\r\n    }\r\n\r\n    getMessages(messages) {\r\n        this.setState({ messages: messages.reverse() })\r\n    }\r\n\r\n    addMessage(message) {\r\n        this.setState({\r\n            messages: [...this.state.messages, message],\r\n            scrolledToBottom: false\r\n        })\r\n        this.readMessages(this.props)\r\n    }\r\n\r\n    scrollToBottom = () => {\r\n        if (document.querySelector('#chat-log')) {\r\n            const chatLog = document.querySelector('#chat-log')\r\n            chatLog.scrollTop = chatLog.scrollHeight\r\n            this.setState({\r\n                scrolledToBottom: true\r\n            })\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.otherProfile !== null || !this.props.otherUsername ?\r\n                    <>\r\n                        {this.state.otherProfile ?\r\n                            <div className=\"current-chat\">\r\n                                <div className=\"current-chat-header\">\r\n                                    <i class=\"fas fa-arrow-left left-arrow-icon\" onClick={() => window.history.back()} />\r\n                                    <Link to={`/user/${this.state.otherProfile.slug}`}>\r\n                                        <img src={`${SERVER_URL}${this.state.otherProfile.photo}`}\r\n                                            className=\"profile-img-sm\"\r\n                                            style={{ marginRight: '5px' }}\r\n                                        />\r\n                                    </Link>\r\n                                    <div className=\"d-flex flex-column align-items-start\" style={{ height: '52px' }}>\r\n                                        <strong>{this.state.otherProfile.first_name} {this.state.otherProfile.last_name}</strong>\r\n                                        <p className=\"text-secondary\">@{this.state.otherProfile.user.username}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div id=\"chat-log\">\r\n                                    {this.state.messages.map(message => {\r\n                                        return (\r\n                                            <MessageListItem message={message} currentUser={this.props.username} />\r\n                                        )\r\n                                    })\r\n                                    }\r\n                                </div>\r\n                                <SendMessageForm\r\n                                    WebSocketInstance={WebSocketInstance}\r\n                                    chatId={this.props.chatId}\r\n                                    username={this.props.username}\r\n                                    otherProfile={this.state.otherProfile}\r\n                                    myProfile={this.state.myProfile}\r\n                                    updateMessagesComponent={this.props.updateMessagesComponent}\r\n                                />\r\n                            </div>\r\n                            :\r\n                            <div className=\"current-chat no-chat-selected\">\r\n                                <div>\r\n                                    <strong style={{ fontSize: 'larger' }}>Você não tem uma conversa selecionada</strong>\r\n                                    <p className=\"text-secondary\">Selecione uma existente ou comece uma nova</p>\r\n                                    <button className=\"btn btn-primary\" onClick={() => this.props.openModal()}>Nova conversa</button>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </>\r\n                    :\r\n                    <div className=\"chat-loader-container\">\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chat\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../../../config/settings'\r\n\r\nexport default function ContactListItem(props) {\r\n    const profile = props.profile\r\n    const activeChats = props.activeChats\r\n    const activeChatsProfiles = props.activeChatsProfiles\r\n    let unreadMessagesCounter\r\n    let lastChatMessage\r\n\r\n    const resetUnreadMessagesCounter = () => {\r\n        unreadMessagesCounter = 0\r\n    }\r\n\r\n    const incrementUnreadMessagesCounter = () => {\r\n        unreadMessagesCounter++\r\n    }\r\n\r\n    const setLastChatMessage = message => {\r\n        lastChatMessage = message\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {profile !== undefined &&\r\n                <Link to={`/mensagens/${profile.slug}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                    {resetUnreadMessagesCounter()}\r\n                    <li className=\"list-item profile-chat-item\" style={{ whiteSpace: 'nowrap' }}>\r\n                        <img src={`${SERVER_URL}${profile.photo}`}\r\n                            className=\"profile-img-med\"\r\n                            style={{ marginRight: '10px' }}\r\n                        />\r\n                        <div className=\"d-flex flex-column align-items-start\">\r\n                            <div className=\"d-flex\" style={{ maxHeight: '30px' }}>\r\n                                <strong style={{ height: 'fit-content' }}>{profile.first_name} {profile.last_name}</strong>\r\n                                {activeChats[activeChatsProfiles.indexOf(profile)].messages.map((message, i, messages) => {\r\n                                    if (messages[messages.length - 1] === message) setLastChatMessage(message.content)\r\n                                    if (message.read || message.contact.user.username !== profile.user.username) return\r\n                                    incrementUnreadMessagesCounter()\r\n                                })}\r\n                                {unreadMessagesCounter > 0 &&\r\n                                    <div className=\"notification-text-container\">\r\n                                        <div className=\"notification-text\">\r\n                                            {unreadMessagesCounter}\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                                <p className=\"text-secondary\" style={{ marginLeft: '5px' }}>@{profile.user.username}</p>\r\n                            </div>\r\n                            <p className=\"text-secondary\">{lastChatMessage.slice(0, 40)}</p>\r\n                        </div>\r\n                    </li>\r\n                </Link>\r\n            }\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function ContactFilterInput(props) {\r\n    const activeChatsProfiles = props.activeChatsProfiles\r\n    const setHasFilteredProfiles = props.setHasFilteredProfiles\r\n    const fetchActiveChatProfiles = props.fetchActiveChatProfiles\r\n    const setParentState = props.setParentState\r\n    const openModal = props.openModal\r\n\r\n    const setContactSearch = query => {\r\n        if (query === '') {\r\n            setHasFilteredProfiles(false)\r\n            fetchActiveChatProfiles()\r\n            return\r\n        }\r\n        if (activeChatsProfiles) {\r\n            console.log(activeChatsProfiles)\r\n            const filteredProfiles = activeChatsProfiles.filter(p => p.user.username.includes(query))\r\n            setHasFilteredProfiles(true)\r\n            setParentState({\r\n                renderedActiveChatsProfiles: filteredProfiles\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"search-input-container\">\r\n            <input\r\n                className=\"search-input contact-filter-input\"\r\n                id=\"contact-filter-input\"\r\n                placeholder=\"Pesquisar pessoas\"\r\n                onChange={e => setContactSearch(e.target.value)}\r\n            />\r\n            <i className=\"fas fa-plus add-icon\" onClick={openModal}></i>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nimport { SERVER_URL } from '../../config/settings'\r\nimport Header from '../../components/fixed/header'\r\nimport ModalContactSearch from './components/ModalContactSearch'\r\nimport Chat from './components/chat_/Chat'\r\nimport ContactListItem from './components/ContactListItem'\r\nimport ContactFilterInput from './components/ContactFilterInput'\r\nimport BottomMenu from '../../components/fixed/bottom-menu/BottomMenu'\r\nimport WebSocketInstance from './Websocket'\r\n\r\nexport default class Messages extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myProfile: null,\r\n            username: null,\r\n            chatId: null,\r\n            activeChats: null,\r\n            activeChatsProfiles: null,\r\n            renderedActiveChatsProfiles: null,\r\n            addingNewChat: false,\r\n            modalProfiles: [],\r\n        }\r\n        this.rerenderingInterval = null\r\n        this.hasFilteredProfiles = false\r\n    }\r\n\r\n    handleReceiveProps = props => {\r\n        if (props.match.params.slug) {\r\n            if (props.match.params.slug !== this.props.match.params.slug && WebSocketInstance.state() === 1) {\r\n                WebSocketInstance.disconnect()\r\n            }\r\n            const participants = { username: this.state.username, other_username: props.match.params.slug }\r\n            fetch(`${SERVER_URL}/chat-api/chat-id/${JSON.stringify(participants)}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    this.setState({ chatId: data['chat_id'] })\r\n                })\r\n        } else if (this.state.chatId) {\r\n            this.setState({\r\n                chatId: null\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps === this.props) return\r\n        this.handleReceiveProps(newProps)\r\n    }\r\n\r\n    handleComponentChange() {\r\n        if (!this.state.username) {\r\n            fetch(`${SERVER_URL}/profile-api/logged-user`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    this.setState({\r\n                        username: data.username\r\n                    })\r\n                    if (this.props.match.params.slug) {\r\n                        this.handleReceiveProps(this.props)\r\n                    }\r\n                })\r\n        }\r\n        if (!this.state.activeChatsProfiles && this.state.activeChatsProfiles !== []) {\r\n            this.fetchActiveChatProfiles()\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.title = 'Mensagens / Napker'\r\n        this.handleComponentChange()\r\n        this.rerenderingInterval = window.setInterval(this.fetchActiveChatProfiles, 4000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.clearInterval(this.rerenderingInterval)\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    fetchActiveChatProfiles = () => {\r\n        fetch(`${SERVER_URL}/chat-api/active-chats-profiles`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (!this.state.username) return\r\n                if (!this.hasFilteredProfiles) {\r\n                    this.setState({\r\n                        activeChats: data.chats,\r\n                        activeChatsProfiles: data.profiles,\r\n                        renderedActiveChatsProfiles: data.profiles\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    openModal = () => {\r\n        this.setState({\r\n            addingNewChat: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header page=\"Mensagens\" />\r\n                <div className=\"content d-flex messages-wrapper\">\r\n                    <ModalContactSearch\r\n                        addingNewChat={this.state.addingNewChat}\r\n                        setParentState={this.setState.bind(this)}\r\n                        modalProfiles={this.state.modalProfiles}\r\n                    />\r\n                    <div className=\"chats-list\">\r\n                        <ContactFilterInput\r\n                            activeChatsProfiles={this.state.activeChatsProfiles}\r\n                            setHasFilteredProfiles={bool => this.hasFilteredProfiles = bool}\r\n                            fetchActiveChatProfiles={this.fetchActiveChatProfiles}\r\n                            setParentState={this.setState.bind(this)}\r\n                            openModal={this.openModal}\r\n                        />\r\n                        <div className=\"list-group chats-container\">\r\n                            {this.state.renderedActiveChatsProfiles !== null ?\r\n                                this.state.renderedActiveChatsProfiles.map(profile => {\r\n                                    return (\r\n                                        <ContactListItem\r\n                                            profile={profile}\r\n                                            activeChats={this.state.activeChats}\r\n                                            activeChatsProfiles={this.state.activeChatsProfiles}\r\n                                        />\r\n                                    )\r\n                                })\r\n                                :\r\n                                <div className=\"messages-loader-container\">\r\n                                    <div className=\"loader\" />\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <Chat\r\n                        username={this.state.username}\r\n                        otherUsername={this.props.match.params.slug}\r\n                        chatId={this.state.chatId}\r\n                        openModal={this.openModal}\r\n                        updateUnreadMessagesNumber={this.props.updateUnreadMessagesNumber}\r\n                        updateMessagesComponent={this.fetchActiveChatProfiles}\r\n                    />\r\n                </div>\r\n                {!this.props.match.params.slug &&\r\n                    <BottomMenu />\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Picker from 'emoji-picker-react'\r\n\r\nimport { SERVER_URL } from '../../../config/settings'\r\nimport { csrftoken, openCloseEmojiList } from '../../../config/utils'\r\n\r\nexport default function EditProfileModal(props) {\r\n    const profile = props.profile\r\n    const isOpen = props.isOpen\r\n    const closeModal = props.closeModal\r\n\r\n    const [profileImagePreview, setProfileImagePreview] = useState(`${SERVER_URL}${profile.photo}`)\r\n    const [editingBioContent, setEditingBioContent] = useState('')\r\n\r\n    const handleProfileImageChange = e => {\r\n        const reader = new FileReader()\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                setProfileImagePreview(reader.result)\r\n            }\r\n        }\r\n        try {\r\n            reader.readAsDataURL(e.target.files[0])\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n    const handleUsernameChange = e => {\r\n        if (e.target.value.trim() !== '') {\r\n            fetch(`${SERVER_URL}/profile-api/user/${e.target.value}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if (data.bool !== 'false' && data.id !== profile.id) {\r\n                        document.querySelector('#username-taken').style.display = 'initial'\r\n                    } else {\r\n                        document.querySelector('#username-taken').style.display = 'none'\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    const onEmojiSelect = (event, emojiObject) => {\r\n        setEditingBioContent(editingBioContent + emojiObject.emoji)\r\n    }\r\n\r\n    return (\r\n        <Modal show={isOpen}\r\n            onHide={closeModal}\r\n            size=\"lg\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Editar perfil</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form\r\n                    action={`${SERVER_URL}/update-profile`}\r\n                    className=\"d-flex flex-column justify-content-center\"\r\n                    id=\"update-profile-form\"\r\n                    method=\"POST\"\r\n                    encType=\"multipart/form-data\"\r\n                >\r\n                    <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n                    <div className=\"d-flex flex-column justify-content-center align-items-center mb-2\">\r\n                        <img src={profileImagePreview}\r\n                            className=\"profile-img-big\"\r\n                            style={{ marginBottom: '25px' }}\r\n                        />\r\n                        <input\r\n                            type=\"file\"\r\n                            accept=\"image/png, image/jpg, image/jpeg\"\r\n                            className=\"profile-photo-input\"\r\n                            name=\"profile-photo\"\r\n                            onChange={handleProfileImageChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        Email: {profile.email}\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"edit-profile-input\">\r\n                        <label htmlFor=\"first-name\" className=\"profile-field-label\">Nome:</label>\r\n                        <input className=\"profile-field-input\" type=\"text\" name=\"first-name\" id=\"first-name\" placeholder={profile.first_name} />\r\n                    </div>\r\n                    <div className=\"edit-profile-input\">\r\n                        <label htmlFor=\"last-name\" className=\"profile-field-label\">Sobrenome:</label>\r\n                        <input className=\"profile-field-input\" type=\"text\" name=\"last-name\" id=\"last-name\" placeholder={profile.last_name} />\r\n                    </div>\r\n                    <div className=\"edit-profile-input\">\r\n                        <label htmlFor=\"username\" className=\"profile-field-label\">Nome de usuário:</label>\r\n                        <input\r\n                            className=\"profile-field-input\"\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            id=\"username\"\r\n                            placeholder={`@${profile.user.username}`}\r\n                            onChange={handleUsernameChange}\r\n                        />\r\n                    </div>\r\n                    <div\r\n                        id=\"username-taken\"\r\n                        style={{ display: 'none', width: '100%', textAlign: 'center', padding: '3px' }}\r\n                    >\r\n                        <span>Nome de usuário já existe</span>\r\n                    </div>\r\n                    <div className=\"edit-profile-input\">\r\n                        <label htmlFor=\"birth-date\" className=\"profile-field-label\">Data de nascimento:</label>\r\n                        <input className=\"profile-field-input\" type=\"date\" name=\"birth-date\" id=\"birth-date\" defaultValue={profile.birth_date} />\r\n                    </div>\r\n                    <div className=\"emoji-list-container bio-emoji-list\" id=\"emoji-list-container\">\r\n                        <Picker onEmojiClick={onEmojiSelect} />\r\n                    </div>\r\n                    <div className=\"edit-profile-input\">\r\n                        <label htmlFor=\"bio\" className=\"profile-field-label\">Bio:</label>\r\n                        <div className=\"email-input-container\">\r\n                            <input\r\n                                className=\"profile-field-input-email\"\r\n                                type=\"email\"\r\n                                name=\"bio\"\r\n                                id=\"bio\"\r\n                                value={editingBioContent}\r\n                                placeholder={profile.bio}\r\n                                maxLength={100}\r\n                                onChange={e => setEditingBioContent(e.target.value)}\r\n                            />\r\n                            <label\r\n                                className=\"far fa-smile\"\r\n                                id=\"emoji-button\"\r\n                                onClick={() => openCloseEmojiList(false)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <button className=\"btn btn-grey\" onClick={closeModal}>Fechar</button>\r\n                <button className=\"btn btn-primary\" onClick={() => document.querySelector('form#update-profile-form').submit()}>Salvar</button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nimport { SERVER_URL } from '../config/settings'\r\nimport ProfileListItem from '../components/ProfileListItem'\r\n\r\nexport default function LikesModal(props) {\r\n    const [myProfile, setMyProfile] = useState(null)\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n    }, [])\r\n\r\n    return (\r\n        <Modal show={props.isOpen}\r\n            onHide={props.hideModal}\r\n            size=\"lg\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title><strong>Curtidas</strong></Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"list-group\" style={{ height: '400px', overflow: 'hidden', overflowY: 'scroll' }}>\r\n                    {props.likes &&\r\n                        props.likes.map(like => like.profile).map(profile => {\r\n                            return (\r\n                                <ProfileListItem\r\n                                    profile={profile}\r\n                                    myProfile={myProfile}\r\n                                    style={{ borderTop: 'none', borderLeft: 'none', borderRight: 'none' }}\r\n                                    onClick={props.hideModal}\r\n                                />\r\n                            )\r\n                        })}\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport { SERVER_URL } from '../../../config/settings'\r\nimport LikesModal from '../../../components/LikesModal'\r\nimport PostListItem from '../../../components/PostListItem'\r\n\r\nexport default function Posts(props) {\r\n    const [myProfile, setMyProfile] = useState(null)\r\n    const [likesModal, setLikesModal] = useState({ isOpen: false, likes: null })\r\n    const profile = props.profile\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n    }, [])\r\n\r\n    const hideLikesModal = () => {\r\n        setLikesModal({\r\n            isOpen: false,\r\n            likes: null\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <LikesModal\r\n                isOpen={likesModal.isOpen}\r\n                likes={likesModal.likes}\r\n                hideModal={hideLikesModal}\r\n            />\r\n            <div className=\"post-list\">\r\n                {profile && myProfile ?\r\n                    <>\r\n                        {profile.posts.length ? profile.posts.map(post => {\r\n                            return (\r\n                                <PostListItem\r\n                                    post={post}\r\n                                    myProfile={myProfile}\r\n                                    renderParent={props.fetchProfile}\r\n                                    openLikesModal={likes => setLikesModal({ isOpen: true, likes: likes })}\r\n                                />\r\n                            )\r\n                        }) :\r\n                            <div className=\"no-posts-container\">\r\n                                {profile.id === myProfile.id ?\r\n                                    <h3 style={{ marginTop: '50px' }}>Você não tem posts</h3>\r\n                                    :\r\n                                    <h3 style={{ marginTop: '50px' }}>{profile.first_name} não tem posts</h3>\r\n                                }\r\n                            </div>\r\n                        }\r\n                    </>\r\n                    :\r\n                    <div className=\"posts-loader-container\" >\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Interests(props) {\r\n    const profile = props.profile\r\n\r\n    return (\r\n        <div className=\"interests-page-container\">\r\n            <h3>Interesses públicos de {profile.first_name}</h3>\r\n            <div className=\"interest-list-container\">\r\n                {profile && profile.interests.filter(i => i.public).map(interest => {\r\n                    return (\r\n                        <>\r\n                            {interest.title &&\r\n                                <>\r\n                                    <hr />\r\n                                    <li className=\"interest-item\">\r\n                                        {interest.title[0].toUpperCase() + interest.title.slice(1)}\r\n                                        <Link to={`/interesses/${interest.title}`}>\r\n                                            <button className=\"btn btn-secondary\" style={{ padding: '5px' }}>Pesquisar usuários</button>\r\n                                        </Link>\r\n                                    </li>\r\n                                </>\r\n                            }\r\n                        </>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../../../config/settings'\r\n\r\nexport default function ProfileData(props) {\r\n    const profile = props.profile\r\n\r\n    return (\r\n        <div className=\"profile-data-container\">\r\n            <div className=\"d-flex flex-column align-items-start\" style={{ textAlign: 'start' }}>\r\n                <p>\r\n                    <img src={`${SERVER_URL}${profile.photo}`}\r\n                        className=\"profile-img-big\"\r\n                        style={{ marginBottom: '25px' }}\r\n                    />\r\n                </p>\r\n                <p style={{ marginBottom: 0 }}><strong>{profile.first_name} {profile.last_name}</strong></p>\r\n                <p className=\"text-secondary\" style={{ marginTop: 0 }}>@{profile.user.username}</p>\r\n                <p>{profile.bio}</p>\r\n                <p className=\"text-secondary\">\r\n                    <i className=\"far fa-calendar-alt\"></i> Entrou em {profile.created.split('-').reverse().join('/')}\r\n                </p>\r\n                <p>\r\n                    <Link to={`/user/${profile.slug}/amigos`} style={{ color: '#000' }}>\r\n                        <strong>{profile.friends.length}</strong> {profile.friends.length === 1 ? 'amigo' : 'amigos'}\r\n                    </Link>\r\n                </p>\r\n            </div>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../../config/settings'\r\nimport Header from '../../components/fixed/Header'\r\nimport EditProfileModal from './components/EditProfileModal'\r\nimport Posts from './components/Posts'\r\nimport Interests from './components/interests/Interests'\r\nimport ProfileData from './components/ProfileData'\r\nimport BottomMenu from '../../components/fixed/bottom-menu/BottomMenu'\r\n\r\nexport default function MyProfile() {\r\n    const [myProfile, setProfile] = useState(null)\r\n    const [isEditing, setIsEditing] = useState(false)\r\n    const [currentPageIsPosts, setCurrentPageIsPosts] = useState(true)\r\n\r\n    document.title = 'Perfil / Napker'\r\n\r\n    useEffect(() => {\r\n        fetchProfile()\r\n    }, [])\r\n\r\n    const fetchProfile = () => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setProfile(data))\r\n    }\r\n\r\n    const switchPage = e => {\r\n        document.querySelectorAll('.profile-page-menu-item-active').forEach(el => {\r\n            el.classList.remove('profile-page-menu-item-active')\r\n        })\r\n        e.target.classList.add('profile-page-menu-item-active')\r\n        if (e.target.id === 'profile-posts-page-menu-item') {\r\n            setCurrentPageIsPosts(true)\r\n        } else if (e.target.id === 'profile-interests-page-menu-item') {\r\n            setCurrentPageIsPosts(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Perfil\" />\r\n            <div className=\"content\">\r\n                {myProfile ?\r\n                    <>\r\n                        <EditProfileModal\r\n                            profile={myProfile}\r\n                            isOpen={isEditing}\r\n                            closeModal={() => setIsEditing(false)}\r\n                        />\r\n\r\n                        <ProfileData profile={myProfile}>\r\n                            <div className=\"myprofile-btn-wrapper\">\r\n                                <button\r\n                                    className=\"btn btn-secondary\"\r\n                                    type=\"button\"\r\n                                    onClick={() => setIsEditing(true)}\r\n                                    style={{ marginBottom: '10px' }}\r\n                                >\r\n                                    Editar perfil\r\n                                </button>\r\n                                <Link to='/perfil/meus-interesses'>\r\n                                    <button className=\"btn btn-secondary\">Editar interesses</button>\r\n                                </Link>\r\n                            </div>\r\n                        </ProfileData>\r\n                        <div className=\"profile-page-menu\">\r\n                            <div\r\n                                className=\"profile-page-menu-item profile-page-menu-item-active\"\r\n                                id=\"profile-posts-page-menu-item\"\r\n                                onClick={switchPage}\r\n                            >\r\n                                Posts ({myProfile.posts.length})\r\n                            </div>\r\n                            <div\r\n                                className=\"profile-page-menu-item\"\r\n                                id=\"profile-interests-page-menu-item\"\r\n                                onClick={switchPage}\r\n                            >\r\n                                Interesses ({myProfile.interests.filter(i => i.public).length})\r\n                            </div>\r\n                        </div>\r\n                        {currentPageIsPosts ?\r\n                            <Posts profile={myProfile} fetchProfile={fetchProfile} />\r\n                            :\r\n                            <Interests profile={myProfile} />\r\n                        }\r\n                    </> :\r\n                    <div className=\"profile-page-loader-container\">\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n            <BottomMenu />\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { handleLogout } from '../../../config/utils'\r\n\r\nexport default function SettingsMenu(props) {\r\n\r\n    return (\r\n        <div className=\"settings-page-menu\">\r\n            <div className=\"d-flex flex-column w-100\">\r\n                <Link to=\"/configurações/perfis-bloqueados\" style={{ textDecoration: 'none', width: '100%' }}>\r\n                    <li id=\"blocked-profiles\" onClick={() => props.pageChange('blocked-profiles')}>\r\n                        Perfis bloqueados\r\n                        <i className=\"fas fa-angle-right\" />\r\n                    </li>\r\n                </Link>\r\n                <Link to=\"/configurações/alterar-senha\" style={{ textDecoration: 'none', width: '100%' }}>\r\n                    <li id=\"change-password\" onClick={() => props.pageChange('change-password')}>\r\n                        Alterar senha\r\n                        <i className=\"fas fa-angle-right\" />\r\n                    </li>\r\n                </Link>\r\n                <Link to=\"/configurações/deletar-conta\" style={{ textDecoration: 'none', width: '100%' }}>\r\n                    <li id=\"delete-account\" onClick={() => props.pageChange('delete-account')}>\r\n                        Apagar conta\r\n                        <i className=\"fas fa-angle-right\" />\r\n                    </li>\r\n                </Link>\r\n            </div>\r\n            <li className=\"logout-btn\" onClick={handleLogout}>\r\n                Sair da conta\r\n            </li>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport { SERVER_URL } from '../../../config/settings'\r\nimport ProfileListItem from '../../../components/ProfileListItem'\r\n\r\nexport default function BlockUser() {\r\n    const [blockedProfiles, setBlockedProfiles] = useState(null)\r\n    const [myProfile, setMyProfile] = useState(null)\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n        fetch(`${SERVER_URL}/profile-api/get-blocked-profiles`)\r\n            .then(response => response.json())\r\n            .then(data => setBlockedProfiles(data))\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"settings-description-container\">\r\n            {blockedProfiles !== null && myProfile !== null ?\r\n                <>\r\n                    {!!blockedProfiles.length ?\r\n                        <div className=\"blocked-profiles-list\">\r\n                            <div className=\"blocked-profiles-title\">\r\n                                <h4>\r\n                                    Você possui {blockedProfiles.length} {blockedProfiles.length === 1 ? 'perfil bloqueado' : 'perfis bloqueados'}\r\n                                </h4>\r\n                            </div>\r\n                            {blockedProfiles.map(profile => {\r\n                                return (\r\n                                    <ProfileListItem\r\n                                        profile={profile}\r\n                                        myProfile={myProfile}\r\n                                        style={{ borderTop: 'none', borderLeft: 'none', borderRight: 'none' }}\r\n                                    />\r\n                                )\r\n                            })\r\n                            }\r\n                        </div>\r\n                        :\r\n                        <div className=\"no-blocked-profiles\">\r\n                            <h3>Você não possui perfis bloqueados</h3>\r\n                        </div>\r\n                    }\r\n                </>\r\n                :\r\n                <div className=\"settings-loader-container\">\r\n                    <div className=\"loader\" />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\n\r\nimport { csrftoken } from '../../../config/utils'\r\nimport { SERVER_URL } from '../../../config/settings'\r\n\r\nexport default function ChangePassword() {\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n    const [successMessage, setSuccessMessage] = useState(null)\r\n\r\n    const handleFormSubmit = e => {\r\n        e.preventDefault()\r\n        let passwordEl = document.querySelector('#password')\r\n        let newPasswordEl = document.querySelector('#new_password')\r\n        let newPasswordcEl = document.querySelector('#new_passwordc')\r\n        let password = passwordEl.value\r\n        let newPassword = newPasswordEl.value\r\n        let newPasswordc = newPasswordcEl.value\r\n        for (let input of document.querySelectorAll('form > input')) {\r\n            if (!input.value) {\r\n                alert('Todos os campos devem ser preenchidos!')\r\n                return\r\n            }\r\n        }\r\n        if (newPassword !== newPasswordc) {\r\n            setErrorMessage('Os campos \"Nova senha\" e \"Confirmar nova senha\" devem ter o mesmo valor!')\r\n            setSuccessMessage(null)\r\n            return\r\n        }\r\n        fetch(`${SERVER_URL}/change-password`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({\r\n                password: password,\r\n                new_password: newPassword,\r\n                new_passwordc: newPasswordc,\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data === 'success') {\r\n                    setSuccessMessage('Senha alterada com successo!')\r\n                    setErrorMessage(null)\r\n                    passwordEl.value = newPasswordEl.value = newPasswordcEl.value = ''\r\n                } else {\r\n                    setErrorMessage(data)\r\n                    setSuccessMessage(null)\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"settings-description-container\">\r\n            {errorMessage &&\r\n                <div class=\"alert alert-danger alert\" role=\"alert\">\r\n                    {errorMessage}\r\n                </div>\r\n            }\r\n            {successMessage &&\r\n                <div class=\"alert alert-success alert\" role=\"alert\">\r\n                    {successMessage}\r\n                </div>\r\n            }\r\n            <div className=\"change-password-title-container\">\r\n                <h3>Alterar senha</h3>\r\n            </div>\r\n            <hr />\r\n            <form className=\"change-password-form\">\r\n                <input id=\"password\" type=\"password\" placeholder=\"Senha atual\" autoFocus />\r\n                <br />\r\n                <a href={`${SERVER_URL}/recuperar-senha`}>Esqueceu sua senha?</a>\r\n                <hr />\r\n                <br />\r\n                <input id=\"new_password\" type=\"password\" placeholder=\"Nova senha\" />\r\n                <br />\r\n                <input id=\"new_passwordc\" type=\"password\" placeholder=\"Confirmar nova senha\" />\r\n                <br />\r\n                <button\r\n                    className=\"btn btn-primary\"\r\n                    type=\"submit\"\r\n                    onClick={handleFormSubmit}\r\n                >Confirmar</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\n\r\nimport { csrftoken } from '../../../config/utils'\r\nimport { SERVER_URL } from '../../../config/settings'\r\n\r\nexport default function DeleteAccount() {\r\n    const [displayErrorMessage, setDisplayErrorMessage] = useState(null)\r\n\r\n    const deleteAccount = () => {\r\n        if (window.confirm('Tem certeza que deseja deletar a sua conta ?\\nEsta ação é irreversível?')) {\r\n            const password = document.querySelector('#password').value\r\n            if (!password) {\r\n                window.alert('A senha não pode ficar em branco!')\r\n            } else {\r\n                fetch(`${SERVER_URL}/delete-account`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-type': 'application/json',\r\n                        'X-CSRFToken': csrftoken,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        password: password\r\n                    })\r\n                })\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        if (data === 'Wrong password') {\r\n                            setDisplayErrorMessage(true)\r\n                        } else {\r\n                            window.alert('Conta deletada com sucesso.')\r\n                            window.location.href = SERVER_URL\r\n                        }\r\n                    })\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"settings-description-container\">\r\n            {displayErrorMessage &&\r\n                <div className=\"alert\">\r\n                    <div className=\"alert alert-danger\" role=\"alert\">Senha incorreta!</div>\r\n                </div>\r\n            }\r\n            <div className=\"delete-account-title-container\">\r\n                <h3>Deletar conta</h3>\r\n            </div>\r\n            <hr />\r\n            <div className=\"delete-account-confirmation\">\r\n                <input id=\"password\" type=\"password\" placeholder=\"Senha\" autoFocus />\r\n                <hr />\r\n                <br />\r\n                Tem certeza que deseja apagar a sua conta ?\r\n                <br />\r\n                Esta ação é irreversível\r\n                <br />\r\n                <button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={deleteAccount}\r\n                >Deletar conta</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react'\r\n\r\nimport Header from '../../components/fixed/Header'\r\nimport SettingsMenu from './components/SettingsMenu'\r\nimport BlockedProfiles from './components/BlockedProfiles'\r\nimport ChangePassword from './components/ChangePassword'\r\nimport DeleteAccount from './components/DeleteAccount'\r\nimport BottomMenu from '../../components/fixed/bottom-menu/BottomMenu'\r\n\r\nexport default function Settings(props) {\r\n    const defaultPage = 'blocked-profiles'\r\n    if (!props.page) props.page = 'default'\r\n\r\n    document.title = 'Configurações / Napker'\r\n\r\n    useEffect(() => {\r\n        document.getElementById(props.page !== 'default' ? props.page : defaultPage).classList.add('active')\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (props.page !== 'default') {\r\n            document.querySelector('.settings-description-container').classList.remove('mobile-d-none')\r\n        } else {\r\n            document.querySelector('.settings-description-container').classList.add('mobile-d-none')\r\n        }\r\n    }, [props.page])\r\n\r\n    const pageChange = page => {\r\n        document.querySelectorAll('.active').forEach(el => {\r\n            el.classList.remove('active')\r\n        })\r\n        document.getElementById(page).classList.add('active')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Configurações\" backArrow={visualViewport.width <= 635 && props.page !== 'default'} />\r\n            <div className=\"content\">\r\n                <div className=\"settings-page-container\">\r\n                    <SettingsMenu pageChange={pageChange} />\r\n                    {props.page === 'blocked-profiles' || props.page === 'default' ?\r\n                        <BlockedProfiles />\r\n                        :\r\n                        <>\r\n                            {props.page === 'change-password' ?\r\n                                <ChangePassword />\r\n                                :\r\n                                <DeleteAccount />\r\n                            }\r\n                        </>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <BottomMenu />\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../../config/settings'\r\nimport { csrftoken } from '../../config/utils'\r\nimport Header from '../../components/fixed/header'\r\nimport Posts from './components/Posts'\r\nimport Interests from './components/interests/Interests'\r\nimport ProfileData from './components/ProfileData'\r\nimport BottomMenu from '../../components/fixed/bottom-menu/BottomMenu'\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myProfile: null,\r\n            profile: null,\r\n            alertMessage: null,\r\n            relationshipButtonLabel: '',\r\n            currentPageIsPosts: true,\r\n        }\r\n        this.slug = this.props.match.params.slug\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.fetchProfile()\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${SERVER_URL}/profile-api/relationship/${this.slug}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                let label\r\n                switch (data.relationship) {\r\n                    case 'friends':\r\n                        label = 'Amigos'\r\n                        break\r\n                    case 'invite-sent':\r\n                        label = 'Solicitado'\r\n                        break\r\n                    case 'invite-received':\r\n                        label = 'Aceitar'\r\n                        break\r\n                    case 'none':\r\n                        label = 'Solicitar'\r\n                }\r\n                this.setState({\r\n                    relationshipButtonLabel: label\r\n                })\r\n            })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        let btn = document.querySelector('#profile-page-relationship-btn')\r\n        if (btn) {\r\n            switch (btn.innerHTML) {\r\n                case 'Amigos':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.onmouseenter = () => {\r\n                        if (btn.innerHTML === 'Amigos') btn.innerHTML = 'Remover'\r\n                    }\r\n                    btn.onmouseout = () => {\r\n                        if (btn.innerHTML === 'Remover') btn.innerHTML = 'Amigos'\r\n                    }\r\n                    btn.classList.add('friend-btn')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Solicitado':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Aceitar':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Solicitar':\r\n                    btn.classList.add('btn-secondary')\r\n                    btn.classList.remove('d-none')\r\n            }\r\n        }\r\n    }\r\n\r\n    fetchProfile = () => {\r\n        fetch(`${SERVER_URL}/profile-api/user/${this.slug}`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                profile: data\r\n            }))\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ myProfile: data }))\r\n    }\r\n\r\n    sendFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/send-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    cancelFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/cancel-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    removeFromFriends = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/remove-from-friends`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    acceptFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/reply-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({\r\n                'senderid': pk,\r\n                'reply': 'accept'\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                this.props.updateNotificationsNumber()\r\n            })\r\n    }\r\n\r\n    handleRelationshipUpdate = e => {\r\n        const btn = e.target\r\n        if (btn.innerHTML === 'Solicitar') {\r\n            this.sendFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitado'\r\n            btn.className = 'btn btn-primary'\r\n        } else if (btn.innerHTML === 'Solicitado') {\r\n            this.cancelFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitar'\r\n            btn.className = 'btn btn-secondary'\r\n        } else if (btn.innerHTML === 'Amigos' || btn.innerHTML === 'Remover') {\r\n            if (window.confirm(`Remover @${this.state.profile.user.username} dos amigos?`)) {\r\n                this.removeFromFriends(btn.dataset.pk)\r\n                btn.innerHTML = 'Solicitar'\r\n                btn.className = 'btn btn-secondary'\r\n            }\r\n        } else if (btn.innerHTML === 'Aceitar') {\r\n            this.acceptFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Amigos'\r\n            btn.className = 'btn btn-primary'\r\n        }\r\n    }\r\n\r\n    blockUnblockUser = () => {\r\n        if (this.state.myProfile.blocked_users.map(u => u.id).includes(this.state.profile.user.id)) {\r\n            if (window.confirm(`Tem certeza que deseja desbloquear ${this.state.profile.first_name} ?`)) {\r\n                fetch(`${SERVER_URL}/profile-api/unblock-user`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-type': 'application/json',\r\n                        'X-CSRFToken': csrftoken,\r\n                    },\r\n                    body: JSON.stringify(this.state.profile)\r\n                })\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        console.log(data)\r\n                        this.setState({ alertMessage: `Você desbloqueou @${this.state.profile.user.username}.` })\r\n                        this.fetchProfile()\r\n                    })\r\n            }\r\n        } else {\r\n            if (window.confirm(`Tem certeza que deseja bloquear ${this.state.profile.first_name} ?`)) {\r\n                fetch(`${SERVER_URL}/profile-api/block-user`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-type': 'application/json',\r\n                        'X-CSRFToken': csrftoken,\r\n                    },\r\n                    body: JSON.stringify(this.state.profile)\r\n                })\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        console.log(data)\r\n                        this.setState({\r\n                            alertMessage: `Você bloqueou @${this.state.profile.user.username}.\r\n                         ${this.state.profile.first_name} não conseguirá mais ver o seu perfil ou te enviar mensagens.`\r\n                        })\r\n                        this.fetchProfile()\r\n                    })\r\n            }\r\n        }\r\n        this.fetchProfile()\r\n        document.querySelector('#view-more-select').style.display = 'none'\r\n    }\r\n\r\n    openCloseExtraOptions = () => {\r\n        const el = document.querySelector('#view-more-select')\r\n        const style = el.style\r\n        if (!style.display) style.display = 'none'\r\n        if (style.display === 'none') {\r\n            document.querySelector('#view-more-icon').classList.add('view-more-icon-active')\r\n            style.display = 'flex'\r\n        } else {\r\n            document.querySelector('#view-more-icon').classList.remove('view-more-icon-active')\r\n            style.display = 'none'\r\n        }\r\n    }\r\n\r\n    switchPage = e => {\r\n        document.querySelectorAll('.profile-page-menu-item-active').forEach(el => {\r\n            el.classList.remove('profile-page-menu-item-active')\r\n        })\r\n        e.target.classList.add('profile-page-menu-item-active')\r\n        if (e.target.id === 'profile-posts-page-menu-item') {\r\n            this.setState({ currentPageIsPosts: true })\r\n        } else if (e.target.id === 'profile-interests-page-menu-item') {\r\n            this.setState({ currentPageIsPosts: false })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header page={this.state.profile ? `${this.state.profile.first_name} ${this.state.profile.last_name}` : 'Perfil'}\r\n                    backArrow={true}\r\n                />\r\n                {this.state.myProfile !== null && this.state.profile !== null ?\r\n                    <div className=\"content\">\r\n                        {this.state.profile.blocked_users.map(u => u.id).includes(this.state.myProfile.user.id) ?\r\n                            <div className=\"user-blocked-me-container\">\r\n                                <h3>O usuário te bloqueou</h3>\r\n                            </div>\r\n                            :\r\n                            <>\r\n                                {this.state.alertMessage &&\r\n                                    <div class=\"alert alert-success profile-page-alert-success\" role=\"alert\">\r\n                                        {this.state.alertMessage}\r\n                                    </div>\r\n                                }\r\n                                <ProfileData profile={this.state.profile}>\r\n                                    <div className=\"profile-btn-wrapper\">\r\n                                        <i\r\n                                            className=\"fas fa-ellipsis-h btn btn-secondary mr-2\"\r\n                                            id=\"view-more-icon\"\r\n                                            onClick={this.openCloseExtraOptions}\r\n                                        />\r\n                                        <div className=\"view-more-select profile-view-more-select\" id=\"view-more-select\">\r\n                                            <Link to={`/mensagens/${this.state.profile.slug}`} style={{ color: '#000', textDecoration: 'none', borderBottom: '1px solid rgba(0,0,0,.1)' }}>\r\n                                                {!this.state.myProfile.blocked_users.map(u => u.id).includes(this.state.profile.user.id) &&\r\n                                                    <li>\r\n                                                        <i class=\"fas fa-envelope text-secondary\" />\r\n                                                        Enviar mensagem\r\n                                                    </li>\r\n                                                }\r\n                                            </Link>\r\n                                            <li onClick={this.blockUnblockUser}>\r\n                                                <i class=\"fas fa-user-lock text-secondary\" />\r\n                                                {this.state.myProfile.blocked_users.map(u => u.id).includes(this.state.profile.user.id) ?\r\n                                                    'Desbloquear'\r\n                                                    :\r\n                                                    'Bloquear'\r\n                                                }\r\n                                            </li>\r\n                                        </div>\r\n                                        {!this.state.myProfile.blocked_users.map(u => u.id).includes(this.state.profile.user.id) &&\r\n                                            <button className=\"btn d-none\"\r\n                                                id=\"profile-page-relationship-btn\"\r\n                                                data-pk={this.state.profile.id}\r\n                                                onClick={this.handleRelationshipUpdate}\r\n                                            >{this.state.relationshipButtonLabel}</button>\r\n                                        }\r\n                                    </div>\r\n                                </ProfileData>\r\n                                <div className=\"profile-page-menu\">\r\n                                    <div\r\n                                        className=\"profile-page-menu-item profile-page-menu-item-active\"\r\n                                        id=\"profile-posts-page-menu-item\"\r\n                                        onClick={this.switchPage}\r\n                                    >\r\n                                        Posts ({this.state.profile.posts.length})\r\n                                    </div>\r\n                                    <div\r\n                                        className=\"profile-page-menu-item\"\r\n                                        id=\"profile-interests-page-menu-item\"\r\n                                        onClick={this.switchPage}\r\n                                    >\r\n                                        Interesses ({this.state.profile.interests.filter(i => i.public).length})\r\n                                    </div>\r\n                                </div>\r\n                                {this.state.currentPageIsPosts ?\r\n                                    <Posts profile={this.state.profile} fetchProfile={this.fetchProfile} /> :\r\n                                    <Interests profile={this.state.profile} />\r\n                                }\r\n                            </>\r\n                        }\r\n                    </div>\r\n                    :\r\n                    <div className=\"profile-page-loader-container\">\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n                <BottomMenu />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../../../config/settings'\r\nimport Header from '../../../components/fixed/header'\r\nimport ProfileListItem from '../../../components/ProfileListItem'\r\nimport BottomMenu from '../../../components/fixed/bottom-menu/BottomMenu'\r\n\r\nexport default function Friends() {\r\n    const [friends, setFriends] = useState(null)\r\n    const [profile, setProfile] = useState(null)\r\n    const [myProfile, setMyProfile] = useState(null)\r\n    const { slug } = useParams()\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/user/${slug}`)\r\n            .then(response => response.json())\r\n            .then(data => setProfile(data))\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (profile) {\r\n            fetch(`${SERVER_URL}/profile-api/get-friends-profiles/${profile.slug}`)\r\n                .then(response => response.json())\r\n                .then(data => setFriends(data))\r\n        }\r\n    }, [profile])\r\n\r\n    return (\r\n        <>\r\n            <Header page={profile !== null ? `${profile.first_name} ${profile.last_name} / Amigos` : 'Perfil / Amigos'}\r\n                backArrow={true}\r\n            />\r\n            <div className=\"content\">\r\n                <div className=\"list-group profile-friends-container\">\r\n                    {friends !== null && myProfile !== null ?\r\n                        <>\r\n                            {friends.length ? friends.map(friend => {\r\n                                return (\r\n                                    <ProfileListItem\r\n                                        profile={friend}\r\n                                        myProfile={myProfile}\r\n                                        style={{ borderTop: 'none', borderLeft: 'none', borderRight: 'none' }}\r\n                                    />\r\n                                )\r\n                            }) :\r\n                                <h3 style={{ marginTop: '30px' }}>\r\n                                    {profile ? `${profile.first_name} ainda não possui amigos` : 'Você ainda não possui amigos'}\r\n                                </h3>\r\n                            }\r\n                        </>\r\n                        :\r\n                        <div className=\"profiles-loader-container\">\r\n                            <div className=\"loader\" />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <BottomMenu />\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../../../../../config/settings'\r\nimport Header from '../../../../../components/fixed/header'\r\nimport ProfileListItem from '../../../../../components/ProfileListItem'\r\n\r\nexport default function InterestProfiles() {\r\n    const [myProfile, setMyProfile] = useState(null)\r\n    const [profiles, setProfiles] = useState(null)\r\n\r\n    const { interest } = useParams()\r\n\r\n    document.title = `${interest[0].toUpperCase() + interest.slice(1)} / Napker`\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n        fetch(`${SERVER_URL}/profile-api/interest-profile-list/${interest}`)\r\n            .then(response => response.json())\r\n            .then(data => setProfiles(data))\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Header\r\n                page={`Interesse / ${interest[0].toUpperCase() + interest.slice(1)}`}\r\n                backArrow={true}\r\n            />\r\n            <div className=\"content\">\r\n                <div className=\"interests-title-container\">\r\n                    <h3>Perfis interessados em \"{interest}\"</h3>\r\n                </div>\r\n                <div className=\"list-group interest-profile-list\">\r\n                    {myProfile !== null && profiles !== null ?\r\n                        profiles.map(profile => {\r\n                            return (\r\n                                <ProfileListItem\r\n                                    profile={profile}\r\n                                    myProfile={myProfile}\r\n                                    style={{ borderLeft: 'none', borderTop: 'none', borderRight: 'none' }}\r\n                                />\r\n                            )\r\n                        }) :\r\n                        <div className=\"profiles-loader-container\">\r\n                            <div className=\"loader\" />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport { SERVER_URL } from '../../../../../config/settings'\r\n\r\nexport default function PublicInterests(props) {\r\n\r\n    useEffect(() => {\r\n        if (document.querySelector('.public-interests-container')) {\r\n            const tagContainer = document.querySelector('.public-tag-container');\r\n            const input = document.querySelector('.public-tag-container input');\r\n\r\n            let tags = props.myProfile.interests.filter(i => i.public).map(i => i.title);\r\n            const interestsInput = document.querySelector('#public-interests')\r\n            addTags()\r\n\r\n            function createTag(label) {\r\n                const div = document.createElement('div');\r\n                div.classList.add('tag');\r\n                div.classList.add('public-tag');\r\n                const span = document.createElement('span');\r\n                span.innerHTML = label;\r\n                const closeIcon = document.createElement('i');\r\n                closeIcon.classList.add('public-close-icon')\r\n                closeIcon.innerHTML = '×';\r\n                closeIcon.classList.add('material-icons')\r\n                closeIcon.setAttribute('data-item', label);\r\n                div.appendChild(span);\r\n                div.appendChild(closeIcon);\r\n                if (!interestsInput.value.includes(label)) interestsInput.value += ` ${label}`;\r\n                return div;\r\n            }\r\n\r\n            function clearTags() {\r\n                document.querySelectorAll('.public-tag').forEach(tag => {\r\n                    tag.parentElement.removeChild(tag);\r\n                });\r\n            }\r\n\r\n            function addTags() {\r\n                clearTags();\r\n                tags.sort()\r\n                tags.slice().reverse().forEach(tag => {\r\n                    tagContainer.prepend(createTag(tag));\r\n                });\r\n                props.setInterests(tags)\r\n            }\r\n\r\n            input.addEventListener('keydown', (e) => {\r\n                if (e.key === 'Enter') {\r\n                    e.target.value.split(',').forEach(tag => {\r\n                        if (tag.length < 3) {\r\n                            window.alert('Os interesses devem ter no mínimo 3 caracteres!')\r\n                        } else {\r\n                            tags.push(tag)\r\n                        }\r\n                    });\r\n\r\n                    e.preventDefault()\r\n\r\n                    addTags();\r\n                    input.value = '';\r\n                    return false; //prevent the form to submit\r\n                }\r\n            });\r\n            document.addEventListener('click', (e) => {\r\n                if (e.target.classList.contains('public-close-icon')) {\r\n                    const tagLabel = e.target.getAttribute('data-item');\r\n                    const index = tags.indexOf(tagLabel);\r\n                    tags = [...tags.slice(0, index), ...tags.slice(index + 1)];\r\n                    addTags();\r\n                }\r\n            })\r\n\r\n            input.focus();\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"public-interests-container\">\r\n            <h3>Interesses públicos</h3>\r\n            <p>\r\n                Os interesses públicos são visíveis para os outros usuários.\r\n                Coloque aqui interesses que sem eles seu perfil ficaria incompleto.\r\n            </p>\r\n            <div class=\"tag-container public-tag-container\">\r\n                <input placeholder=\"Digite e pressione 'Enter'\" maxLength=\"50\" />\r\n                <input type=\"hidden\" name=\"public-interests\" id=\"public-interests\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport { SERVER_URL } from '../../../../../config/settings'\r\n\r\nexport default function PrivateInterests(props) {\r\n\r\n    useEffect(() => {\r\n        if (document.querySelector('.private-interests-container')) {\r\n            const tagContainer = document.querySelector('.private-tag-container');\r\n            const input = document.querySelector('.private-tag-container input');\r\n\r\n            let tags = props.myProfile.interests.filter(i => !i.public).map(i => i.title);\r\n            const interestsInput = document.querySelector('#private-interests')\r\n            addTags()\r\n\r\n            function createTag(label) {\r\n                const div = document.createElement('div');\r\n                div.classList.add('tag');\r\n                div.classList.add('private-tag');\r\n                const span = document.createElement('span');\r\n                span.innerHTML = label;\r\n                const closeIcon = document.createElement('i');\r\n                closeIcon.classList.add('private-close-icon')\r\n                closeIcon.classList.add('material-icons')\r\n                closeIcon.innerHTML = '×';\r\n                closeIcon.setAttribute('data-item', label);\r\n                div.appendChild(span);\r\n                div.appendChild(closeIcon);\r\n                if (!interestsInput.value.includes(label)) interestsInput.value += ` ${label}`;\r\n                return div;\r\n            }\r\n\r\n            function clearTags() {\r\n                document.querySelectorAll('.private-tag').forEach(tag => {\r\n                    tag.parentElement.removeChild(tag);\r\n                });\r\n            }\r\n\r\n            function addTags() {\r\n                clearTags();\r\n                tags.sort()\r\n                tags.slice().reverse().forEach(tag => {\r\n                    tagContainer.prepend(createTag(tag));\r\n                });\r\n                props.setInterests(tags)\r\n            }\r\n\r\n            input.addEventListener('keydown', (e) => {\r\n                if (e.key === 'Enter') {\r\n                    e.target.value.split(',').forEach(tag => {\r\n                        if (tag.length < 3) {\r\n                            window.alert('Os interesses devem ter no mínimo 3 caracteres!')\r\n                        } else {\r\n                            tags.push(tag)\r\n                        }\r\n                    });\r\n\r\n                    e.preventDefault()\r\n\r\n                    addTags();\r\n                    input.value = '';\r\n                    return false; //prevent the form to submit\r\n                }\r\n            });\r\n            document.addEventListener('click', (e) => {\r\n                if (e.target.classList.contains('private-close-icon')) {\r\n                    const tagLabel = e.target.getAttribute('data-item');\r\n                    const index = tags.indexOf(tagLabel);\r\n                    tags = [...tags.slice(0, index), ...tags.slice(index + 1)];\r\n                    addTags();\r\n                }\r\n            })\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"private-interests-container\">\r\n            <h3>Interesses privados</h3>\r\n            <p>\r\n                Os interesses privados não são visíveis para os outros usuários.\r\n                Eles servem para aumentar a precisão das recomendações de perfis que\r\n                possuem o máximo de afinidade possível com você.\r\n            </p>\r\n            <div class=\"tag-container private-tag-container\">\r\n                <input placeholder=\"Digite e pressione 'Enter'\" maxLength=\"50\" />\r\n                <input type=\"hidden\" name=\"private-interests\" id=\"private-interests\" />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport { SERVER_URL } from '../../../../config/settings'\r\nimport { csrftoken } from '../../../../config/utils'\r\nimport Header from '../../../../components/fixed/header'\r\nimport PublicInterests from './components/PublicInterests'\r\nimport PrivateInterests from './components/PrivateInterests'\r\nimport BottomMenu from '../../../../components/fixed/bottom-menu/BottomMenu'\r\n\r\nexport default function EditInterests() {\r\n    const [myProfile, setMyProfile] = useState(null)\r\n    let [publicInterests, setPublicInterests] = [null, value => publicInterests = value]\r\n    let [privateInterests, setPrivateInterests] = [null, value => privateInterests = value]\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n    }, [])\r\n\r\n    const submitInterests = () => {\r\n        fetch(`${SERVER_URL}/profile-api/set-myinterests`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({\r\n                public_interests: publicInterests.sort(),\r\n                private_interests: privateInterests.sort()\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                document.querySelector('#interests-updated-message').style.display = 'block'\r\n                document.documentElement.scrollTop = 0\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Meus interesses\" backArrow={true} />\r\n            <div className=\"content\">\r\n                <p\r\n                    className=\"edit-interests-success-message\"\r\n                    id=\"interests-updated-message\"\r\n                >\r\n                    Interesses atualizados com sucesso\r\n                </p>\r\n                {myProfile ?\r\n                    <div className=\"interests-page-container\">\r\n                        <button\r\n                            className=\"btn btn-primary\"\r\n                            onClick={submitInterests}\r\n                        >\r\n                            Salvar\r\n                        </button>\r\n                        <hr />\r\n                        <PublicInterests\r\n                            myProfile={myProfile}\r\n                            setInterests={setPublicInterests}\r\n                        />\r\n\r\n                        <br />\r\n                        <hr />\r\n                        <br />\r\n\r\n                        <PrivateInterests\r\n                            myProfile={myProfile}\r\n                            setInterests={setPrivateInterests}\r\n                        />\r\n                    </div> :\r\n                    <div className=\"edit-interests-loader-container\">\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n            <BottomMenu />\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Picker from 'emoji-picker-react'\r\n\r\nimport { csrftoken, openCloseEmojiList } from '../config/utils'\r\nimport { SERVER_URL } from '../config/settings'\r\n\r\nexport default function CommentModal(props) {\r\n    const [commentContent, setCommentContent] = useState('')\r\n\r\n    const post = props.post\r\n\r\n    const handleCommentChange = e => {\r\n        setCommentContent(e.target.value)\r\n        const el = document.querySelector('#comment-form-submit')\r\n        el.disabled = e.target.value === ''\r\n    }\r\n\r\n    const onEmojiSelect = (event, emojiObject) => {\r\n        setCommentContent(commentContent + emojiObject.emoji)\r\n        document.querySelector('#comment-form-submit').disabled = false\r\n    }\r\n\r\n    return (\r\n        <Modal show={props.isOpen}\r\n            onHide={props.hideModal}\r\n            size=\"lg\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title><strong>Comentar</strong></Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"post-container\">\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <div className=\"post-row\">\r\n                            <div className=\"post-col\">\r\n                                <img src={`${SERVER_URL}${post.author.photo}`}\r\n                                    className=\"profile-img-med\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"post-col\">\r\n                                <div>\r\n                                    <strong>{post.author.first_name} {post.author.last_name} </strong>\r\n                                    <p className=\"text-secondary d-inline-block\">\r\n                                        @{post.author.user.username} • {post.created.split('-').reverse().join('/')}\r\n                                    </p>\r\n                                </div>\r\n                                <div style={{ textAlign: 'start' }}>\r\n                                    {post.content}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <form action={`${SERVER_URL}/post-api/comment-post/${post.id}`} method=\"POST\" className=\"comment-form\">\r\n                    <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n                    <label\r\n                        className=\"far fa-smile\"\r\n                        id=\"emoji-button\"\r\n                        onClick={() => openCloseEmojiList(false)}\r\n                    />\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"comment-content\"\r\n                        value={commentContent}\r\n                        placeholder=\"Comente alguma coisa\"\r\n                        style={{ marginRight: '5px', height: '40px' }}\r\n                        onChange={handleCommentChange}\r\n                    />\r\n                    <div className=\"emoji-list-container chat-emoji-list\" id=\"emoji-list-container\">\r\n                        <Picker onEmojiClick={onEmojiSelect} />\r\n                    </div>\r\n                    <button\r\n                        className=\"btn btn-primary\"\r\n                        id=\"comment-form-submit\"\r\n                        type=\"submit\"\r\n                        disabled\r\n                    >\r\n                        Enviar\r\n                    </button>\r\n                </form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../../../../../../../config/settings'\r\nimport { csrftoken } from '../../../../../../../config/utils'\r\n\r\nexport default function CommentListItem(props) {\r\n    const comment = props.comment\r\n    const myProfile = props.myProfile\r\n    const fetchPost = props.fetchPost\r\n    const setPostLikesModal = props.setPostLikesModal\r\n\r\n    const likeUnlikeComment = e => {\r\n        const likeBtn = e.target\r\n        if (likeBtn.classList.contains('fas')) {\r\n            likeBtn.classList.remove('fas') //border heart\r\n            likeBtn.classList.add('far')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/unlike-comment/${likeBtn.dataset.commentid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPost()\r\n                })\r\n        } else {\r\n            likeBtn.classList.remove('far') //border heart\r\n            likeBtn.classList.add('fas')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/like-comment/${likeBtn.dataset.commentid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPost()\r\n                })\r\n        }\r\n    }\r\n\r\n    const deleteComment = (e, commentId) => {\r\n        e.stopPropagation()\r\n        const el = document.querySelector(`#post-comment-${commentId}`)\r\n        if (window.confirm('Tem certeza que deseja apagar o comentário?\\nEssa ação é irreversível.')) {\r\n            el.style.animationPlayState = 'running'\r\n            console.log(el, el.style.animationPlayState)\r\n            el.addEventListener('animationend', () => {\r\n                fetchPost()\r\n            })\r\n            fetch(`${SERVER_URL}/post-api/delete-comment/${commentId}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <li\r\n            className=\"post-container\"\r\n            id={`post-comment-${comment.id}`}\r\n            key={comment.id}\r\n        >\r\n            <div className=\"d-flex justify-content-between\">\r\n                <div className=\"post-row\">\r\n                    <div className=\"post-col\">\r\n                        <Link to={comment.author.id === myProfile.id ?\r\n                            '/perfil' : `/user/${comment.author.slug}`}\r\n                        >\r\n                            <img src={`${SERVER_URL}${comment.author.photo}`}\r\n                                className=\"profile-img-sm\"\r\n                            />\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"post-col\">\r\n                        <Link to={comment.author.id === myProfile.id ?\r\n                            '/perfil' : `/user/${comment.author.slug}`}\r\n                            style={{ color: '#000' }}\r\n                        >\r\n                            <div style={{ textAlign: 'start' }}>\r\n                                <strong style={{ marginRight: '5px' }}>\r\n                                    {comment.author.first_name} {comment.author.last_name}\r\n                                </strong>\r\n                                <p className=\"text-secondary d-inline-block\">\r\n                                    @{comment.author.user.username} • {comment.created.split('-').reverse().join('/')}\r\n                                </p>\r\n                            </div>\r\n                        </Link>\r\n                        <div style={{ textAlign: 'start' }}>\r\n                            {comment.content}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {comment.author.id == myProfile.id &&\r\n                    <i\r\n                        className=\"far fa-trash-alt trash-icon text-secondary\"\r\n                        style={{ margin: '20px 20px 0 0' }}\r\n                        onClick={e => deleteComment(e, comment.id)}\r\n                    />\r\n                }\r\n            </div>\r\n            <div className=\"post-actions\" style={{ padding: '0 0 2px 63px' }}>\r\n                <p className=\"text-secondary\">\r\n                    {comment.likes.map(like => like.profile.id).includes(myProfile.id) ?\r\n                        <i class=\"fas fa-heart\"\r\n                            data-commentid={comment.id}\r\n                            onClick={likeUnlikeComment}\r\n                        />\r\n                        :\r\n                        <i class=\"far fa-heart\"\r\n                            data-commentid={comment.id}\r\n                            onClick={likeUnlikeComment}\r\n                        />\r\n                    }\r\n                    <p\r\n                        className=\"post-likes-number\"\r\n                        onClick={() => setPostLikesModal({ isOpen: true, likes: comment.likes })}\r\n                    >\r\n                        {comment.likes.length}\r\n                    </p>\r\n                </p>\r\n            </div>\r\n        </li>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default props => (\r\n    <Link to={`/post/${props.postId}/comentar`}>\r\n        <i className=\"far fa-comment bottom-menu-action-icon\" />\r\n    </Link>\r\n)","import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../../../../../../config/settings'\r\nimport { csrftoken } from '../../../../../../config/utils'\r\nimport CommentModal from '../../../../../../components/CommentModal'\r\nimport LikesModal from '../../../../../../components/LikesModal'\r\nimport Header from '../../../../../../components/fixed/Header'\r\nimport CommentListItem from './components/CommentListItem'\r\nimport BottomMenu from '../../../../../../components/fixed/bottom-menu/BottomMenu'\r\nimport CommentIcon from '../../../../../../components/fixed/bottom-menu/components/CommentIcon'\r\n\r\nexport default function Post(props) {\r\n    const [post, setPost] = useState(null)\r\n    const [myProfile, setMyProfile] = useState(null)\r\n    const [commentModalIsOpen, setCommentModalIsOpen] = useState(props.commentModalIsOpen)\r\n    const [postLikesModal, setPostLikesModal] = useState({ isOpen: false, likes: null })\r\n    const [commentLikesModal, setCommentLikesModal] = useState({ isOpen: false, likes: null })\r\n\r\n    const { id } = useParams()\r\n\r\n    useEffect(() => {\r\n        fetchPost()\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log('got here')\r\n        setCommentModalIsOpen(!!props.commentModalIsOpen)\r\n    }, [props.commentModalIsOpen])\r\n\r\n    const fetchPost = () => {\r\n        fetch(`${SERVER_URL}/post-api/post/${id}`)\r\n            .then(response => response.json())\r\n            .then(data => setPost(data))\r\n    }\r\n\r\n    const likeUnlikePost = e => {\r\n        const likeBtn = e.target\r\n        if (likeBtn.classList.contains('fas')) {\r\n            likeBtn.classList.remove('fas') //border heart\r\n            likeBtn.classList.add('far')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/unlike-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPost()\r\n                })\r\n        } else {\r\n            likeBtn.classList.remove('far') //border heart\r\n            likeBtn.classList.add('fas')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/like-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPost()\r\n                })\r\n        }\r\n    }\r\n\r\n    const deletePost = (e, postId) => {\r\n        e.stopPropagation()\r\n        const el = document.querySelector(`#profile-post-${postId}`)\r\n        if (window.confirm('Tem certeza que deseja apagar o post?\\nEssa ação é irreversível.')) {\r\n            fetch(`${SERVER_URL}/post-api/delete-post/${postId}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    window.location.href = '/'\r\n                })\r\n        }\r\n    }\r\n\r\n    const hideCommentModal = () => {\r\n        setCommentModalIsOpen(false)\r\n        window.history.back()\r\n    }\r\n\r\n    const hidePostLikesModal = () => {\r\n        setPostLikesModal({\r\n            isOpen: false,\r\n            likes: null\r\n        })\r\n    }\r\n\r\n    const hideCommentLikesModal = () => {\r\n        setCommentLikesModal({\r\n            isOpen: false,\r\n            likes: null\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"post-page-container\">\r\n            {post &&\r\n                <CommentModal\r\n                    isOpen={commentModalIsOpen}\r\n                    hideModal={hideCommentModal}\r\n                    post={post}\r\n                />\r\n            }\r\n            <LikesModal\r\n                isOpen={postLikesModal.isOpen}\r\n                likes={postLikesModal.likes}\r\n                hideModal={hidePostLikesModal}\r\n            />\r\n            <LikesModal\r\n                isOpen={commentLikesModal.isOpen}\r\n                likes={commentLikesModal.likes}\r\n                hideModal={hideCommentLikesModal}\r\n            />\r\n            <Header page=\"Post\" backArrow={true} />\r\n            <div className=\"content\">\r\n                {post && myProfile ?\r\n                    <>\r\n                        <div className=\"post-container\">\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                <div className=\"post-row\">\r\n                                    <div className=\"post-col\">\r\n                                        <Link to={post.author.id === myProfile.id ?\r\n                                            '/perfil' : `/user/${post.author.slug}`}\r\n                                        >\r\n                                            <img src={`${SERVER_URL}${post.author.photo}`}\r\n                                                className=\"profile-img-med\"\r\n                                            />\r\n                                        </Link>\r\n                                    </div>\r\n                                    <div className=\"post-col\">\r\n                                        <Link to={post.author.id === myProfile.id ?\r\n                                            '/perfil' : `/user/${post.author.slug}`}\r\n                                            style={{ color: '#000' }}\r\n                                        >\r\n                                            <div style={{ textAlign: 'start' }}>\r\n                                                <strong>{post.author.first_name} {post.author.last_name} </strong>\r\n                                                <p className=\"text-secondary d-inline-block\">\r\n                                                    @{post.author.user.username} • {post.created.split('-').reverse().join('/')}\r\n                                                </p>\r\n                                            </div>\r\n                                        </Link>\r\n                                        <div style={{ textAlign: 'start', fontSize: 'larger' }}>\r\n                                            {post.content}\r\n                                        </div>\r\n                                        {post.image &&\r\n                                            <img src={`${SERVER_URL}${post.image}`} className=\"post-img\" />\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                {myProfile.id == post.author.id &&\r\n                                    <i\r\n                                        className=\"far fa-trash-alt trash-icon text-secondary\"\r\n                                        style={{ margin: '20px 20px 0 0' }}\r\n                                        onClick={e => deletePost(e, post.id)}\r\n                                    />\r\n                                }\r\n                            </div>\r\n                            <div className=\"post-actions\">\r\n                                <p className=\"text-secondary\" style={{ fontSize: 'large' }}>\r\n                                    <Link to={`/post/${id}/comentar`} className=\"text-secondary\">\r\n                                        <i\r\n                                            class=\"far fa-comment\"\r\n                                        />\r\n                                    </Link>{post.comments.length}\r\n                                    {post.likes.map(like => like.profile.id).includes(myProfile.id) ?\r\n                                        <i class=\"fas fa-heart\"\r\n                                            data-postid={post.id}\r\n                                            onClick={likeUnlikePost}\r\n                                        />\r\n                                        :\r\n                                        <i class=\"far fa-heart\"\r\n                                            data-postid={post.id}\r\n                                            onClick={likeUnlikePost}\r\n                                        />\r\n                                    }\r\n                                    <p className=\"post-likes-number\"\r\n                                        onClick={() => setPostLikesModal({ isOpen: true, likes: post.likes })}\r\n                                    >\r\n                                        {post.likes.length}\r\n                                    </p>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"comment-list\">\r\n                            {post.comments.map(comment => {\r\n                                return (\r\n                                    <CommentListItem\r\n                                        comment={comment}\r\n                                        myProfile={myProfile}\r\n                                        fetchPost={fetchPost}\r\n                                        setPostLikesModal={setPostLikesModal}\r\n                                    />\r\n                                )\r\n                            })\r\n                            }\r\n                        </div>\r\n                    </> :\r\n                    <div className=\"posts-loader-container\" >\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n            <BottomMenu>\r\n                <CommentIcon postId={id} />\r\n            </BottomMenu>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Header from '../components/fixed/header'\r\nimport { SERVER_URL } from '../config/settings'\r\nimport { csrftoken } from '../config/utils'\r\n\r\nexport default class Posts extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            profile: null,\r\n            postContent: '',\r\n            postFormImagePreview: null\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ profile: data }))\r\n    }\r\n\r\n\r\n    handlePostContentChange = e => {\r\n        this.setState({ postContent: e.target.value })\r\n        const el = document.querySelector('#post-form-submit-btn')\r\n        el.disabled = e.target.value.trim() === '' && !this.state.postFormImagePreview\r\n    }\r\n\r\n    handlePostImageChange = e => {\r\n        const reader = new FileReader()\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                this.setState({ postFormImagePreview: reader.result })\r\n                document.querySelector('#post-img-container').style.display = 'initial'\r\n                document.querySelector('#post-form-submit-btn').disabled = false\r\n            }\r\n        }\r\n        try {\r\n            reader.readAsDataURL(e.target.files[0])\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n    handleCloseImage = () => {\r\n        document.querySelector('#post-img-container').style.display = 'none'\r\n        document.querySelector('#post-image').value = ''\r\n        if (this.state.postContent.trim() === '') document.querySelector('#post-form-submit-btn').disabled = true\r\n        this.setState({ postFormImagePreview: null })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content\">\r\n                <Header page=\"Novo post\" backArrow={true} />\r\n                <div className=\"post-form-page-container\">\r\n                    {this.state.profile ?\r\n                        <form\r\n                            action={`${SERVER_URL}/post-api/create-post`}\r\n                            method=\"POST\"\r\n                            className=\"create-post-form-mobile\"\r\n                            encType=\"multipart/form-data\"\r\n                        >\r\n                            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n                            <div className=\"d-flex\">\r\n                                <Link to=\"/perfil\">\r\n                                    <img\r\n                                        src={`${SERVER_URL}${this.state.profile.photo}`}\r\n                                        className=\"profile-img-med\"\r\n                                    />\r\n                                </Link>\r\n                                <textarea\r\n                                    className=\"post-content-textarea\"\r\n                                    name=\"post-content\"\r\n                                    value={this.state.postContent}\r\n                                    placeholder=\"No que você está pensando?\"\r\n                                    maxLength={300}\r\n                                    autoFocus\r\n                                    onChange={this.handlePostContentChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"w-100 d-flex justify-content-center\">\r\n                                <div\r\n                                    className=\"post-img-container\"\r\n                                    id=\"post-img-container\">\r\n                                    <div\r\n                                        className=\"post-img-options\"\r\n                                    >\r\n                                        <i\r\n                                            className=\"far fa-times-circle\"\r\n                                            onClick={this.handleCloseImage}\r\n                                        />\r\n                                    </div>\r\n                                    <img\r\n                                        src={this.state.postFormImagePreview}\r\n                                        className=\"post-img post-form-img-preview\"\r\n                                        id=\"post-form-img-preview\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"d-flex justify-content-between\" style={{ margin: '0px 70px 0 70px' }}>\r\n                                <div className=\"post-extra-options\">\r\n                                    <label htmlFor=\"post-image\" class=\"far fa-image\" />\r\n                                    <input\r\n                                        type=\"file\"\r\n                                        accept=\"image/png, image/jpg, image/jpeg\"\r\n                                        name=\"post-image\"\r\n                                        id=\"post-image\"\r\n                                        style={{ display: 'none' }}\r\n                                        onChange={this.handlePostImageChange}\r\n                                    />\r\n                                </div>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\"\r\n                                    id=\"post-form-submit-btn\"\r\n                                    style={{ height: '40px' }}\r\n                                    disabled\r\n                                >\r\n                                    Postar\r\n                            </button>\r\n                            </div>\r\n                        </form>\r\n                        :\r\n                        <div className=\"posts-loader-container\" >\r\n                            <div className=\"loader\" />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { useContext, useEffect, useState } from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from './config/settings'\r\nimport {\r\n    InvitesReceivedContext, UnvisualizedCommentsContext,\r\n    UnvisualizedLikesContext, UnreadMessagesContext\r\n} from './context/app/AppContext'\r\n\r\nimport Sidebar from './components/fixed/Sidebar'\r\nimport Home from './pages/home/Home'\r\nimport Notifications from './pages/notifications/Notifications'\r\nimport Messages from './pages/messages_/Messages'\r\nimport MyProfile from './pages/profile/MyProfile'\r\nimport Settings from './pages/settings_/Settings'\r\nimport Profile from './pages/profile/Profile'\r\nimport ProfileFriends from './pages/profile/pages/Friends'\r\nimport InterestProfiles from './pages/profile/components/interests/pages/InterestProfiles'\r\nimport EditInterests from './pages/profile/pages/edit_interests/EditInterests'\r\nimport Post from './pages/home/components/posts_/pages/post_/Post'\r\n\r\nimport PostFormPage from './pages/PostFormPage'\r\n\r\nexport default function App() {\r\n    const [invitesReceivedNumber, setInvitesReceived] = useContext(InvitesReceivedContext)\r\n    const [unvisualizedCommentsNumber, setUnvisulaizedComments] = useContext(UnvisualizedCommentsContext)\r\n    const [unvisualizedLikesNumber, setUnvisulaizedLikes] = useContext(UnvisualizedLikesContext)\r\n\r\n    const [unreadMessagesNumber, setUnreadMessagesNumber] = useContext(UnreadMessagesContext)\r\n\r\n    let notificationsNumber = invitesReceivedNumber + unvisualizedLikesNumber + unvisualizedCommentsNumber\r\n\r\n    useEffect(() => {\r\n        updateNotificationsNumber()\r\n        updateUnreadMessagesNumber()\r\n        window.setInterval(() => {\r\n            updateNotificationsNumber()\r\n            updateUnreadMessagesNumber()\r\n        }, 6000)\r\n    }, [])\r\n\r\n    const updateNotificationsNumber = () => {\r\n        fetch(`${SERVER_URL}/profile-api/myinvites`)\r\n            .then(response => response.json())\r\n            .then(data => setInvitesReceived(data.length))\r\n        fetch(`${SERVER_URL}/post-api/unvisualized-post-likes`)\r\n            .then(response => response.json())\r\n            .then(data => setUnvisulaizedLikes(data.length))\r\n        fetch(`${SERVER_URL}/post-api/unvisualized-post-comments`)\r\n            .then(response => response.json())\r\n            .then(data => setUnvisulaizedComments(data.length))\r\n    }\r\n\r\n    const updateUnreadMessagesNumber = () => {\r\n        fetch(`${SERVER_URL}/chat-api/all-unread-messages-number`)\r\n            .then(response => response.json())\r\n            .then(data => setUnreadMessagesNumber(data['unread_messages_number']))\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <Sidebar />\r\n            <div className=\"main-content\">\r\n                <Switch>\r\n                    <Route path=\"/home\" component={Home} />\r\n                    <Route path=\"/notificações\" render={props => (\r\n                        <Notifications {...props} updateNotificationsNumber={updateNotificationsNumber} />\r\n                    )} />\r\n                    <Route path=\"/mensagens\" exact component={Messages} />\r\n                    <Route path=\"/mensagens/:slug\" render={props => (\r\n                        <Messages {...props} updateUnreadMessagesNumber={updateUnreadMessagesNumber} />\r\n                    )} />\r\n                    <Route path=\"/perfil\" exact component={MyProfile} />\r\n                    <Route path=\"/perfil/meus-interesses\" component={EditInterests} />\r\n                    <Route path=\"/configurações\" exact component={Settings} />\r\n                    <Route path=\"/configurações/perfis-bloqueados\" exact render={props => (\r\n                        <Settings {...props} page={'blocked-profiles'} />\r\n                    )} />\r\n                    <Route path=\"/configurações/alterar-senha\" exact render={props => (\r\n                        <Settings {...props} page={'change-password'} />\r\n                    )} />\r\n                    <Route path=\"/configurações/deletar-conta\" exact render={props => (\r\n                        <Settings {...props} page={'delete-account'} />\r\n                    )} />\r\n                    <Route path=\"/user/:slug\" exact render={props => (\r\n                        <Profile {...props} updateNotificationsNumber={updateNotificationsNumber} />\r\n                    )} />\r\n                    <Route path=\"/user/:slug/amigos\" component={ProfileFriends} />\r\n                    <Route path=\"/post/:id\" exact component={Post} />\r\n                    <Route path=\"/post/:id/comentar\" render={props => (\r\n                        <Post {...props} commentModalIsOpen={true} />\r\n                    )} />\r\n                    <Route path=\"/interesses/:interest\" component={InterestProfiles} />\r\n\r\n                    <Route path=\"/postar\" component={PostFormPage} />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './assets/bottomMenu.css'\r\nimport './assets/chat.css'\r\nimport './assets/commentModal.css'\r\nimport './assets/notifications.css'\r\nimport './assets/posts.css'\r\nimport './assets/profile.css'\r\nimport './assets/profiles.css'\r\nimport './assets/settings.css'\r\nimport './assets/sidebar.css'\r\nimport './assets/style.css'\r\nimport './assets/responsivity.css'\r\n\r\nimport AppContextProvider from './context/app/AppContext'\r\nimport App from './App'\r\n\r\nReactDOM.render((<AppContextProvider><App /></AppContextProvider>), document.querySelector('#root'))\r\n"],"sourceRoot":""}