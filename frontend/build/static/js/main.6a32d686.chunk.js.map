{"version":3,"sources":["config/settings.js","components/fixed/Sidebar.js","components/fixed/BottomMenu.js","components/ProfileListItem.js","components/likesmodal.js","config/utils.js","pages/home/components/posts_/components/PostForm.js","components/PostListItem.js","pages/home/components/posts_/Posts.js","pages/home/components/Profiles.js","components/fixed/Header.js","pages/home/Home.js","pages/notifications/components/InviteNotification.js","pages/notifications/components/LikeProfileNotification.js","pages/notifications/components/CommentProfileNotification.js","pages/notifications/components/NewLabel.js","pages/notifications/Notifications.js","components/fixed/header.js","pages/messages_/components/ModalContactSearch.js","pages/messages_/Websocket.js","pages/messages_/components/chat_/components/SendMessageForm.js","pages/messages_/components/chat_/components/MessageListItem.js","pages/messages_/components/chat_/Chat.js","pages/messages_/components/ContactListItem.js","pages/messages_/components/ContactFilterInput.js","pages/messages_/Messages.js","pages/profile/components/EditProfileModal.js","components/LikesModal.js","pages/profile/components/Posts.js","pages/profile/components/interests/Interests.js","pages/profile/components/ProfileData.js","pages/profile/MyProfile.js","pages/settings_/components/SettingsMenu.js","pages/settings_/components/BlockedProfiles.js","pages/settings_/components/ChangePassword.js","pages/settings_/components/DeleteAccount.js","pages/settings_/Settings.js","pages/profile/Profile.js","pages/profile/pages/Friends.js","pages/profile/components/interests/pages/InterestProfiles.js","pages/profile/pages/edit_interests/components/PublicInterests.js","pages/profile/pages/edit_interests/components/PrivateInterests.js","pages/profile/pages/edit_interests/EditInterests.js","components/CommentModal.js","pages/home/components/posts_/pages/post_/components/CommentListItem.js","pages/home/components/posts_/pages/post_/Post.js","pages/PostFormPage.js","App.js","index.js"],"names":["SERVER_URL","Sidebar","props","useEffect","document","querySelectorAll","forEach","el","classList","remove","currentUrl","window","location","href","split","includes","querySelector","add","switchPage","e","isHome","target","className","to","style","textDecoration","onClick","src","id","notificationsNumber","unreadMessagesNumber","ProfileListItem","profile","myProfile","slug","color","key","photo","marginRight","textAlign","first_name","last_name","user","username","children","bio","LikesModal","useState","setMyProfile","fetch","then","response","json","data","Modal","show","isOpen","onHide","hideModal","size","Header","closeButton","Title","Body","height","overflow","overflowY","likes","map","like","borderTop","borderLeft","borderRight","csrftoken","name","cookieValue","cookie","cookies","i","length","trim","substring","decodeURIComponent","getCookie","handleLogout","confirm","replace","openCloseEmojiList","closing","display","PostForm","postContent","setPostContent","postFormImagePreview","setPostFormImagePreview","action","method","encType","type","value","placeholder","maxLength","autoFocus","onChange","disabled","margin","htmlFor","class","accept","reader","FileReader","onload","readyState","result","readAsDataURL","files","onEmojiClick","event","emojiObject","emoji","PostListItem","post","likeUnlikePost","stopPropagation","likeBtn","contains","dataset","postid","console","log","renderParent","author","created","reverse","join","content","image","postId","animationPlayState","addEventListener","fetchPosts","headers","deletePost","comments","data-postid","openLikesModal","Posts","setState","posts","state","likesModal","this","React","Component","Profiles","profiles","setProfiles","filteredProfiles","setFilteredProfiles","search","setSearch","handleRelationshipUpdate","pk","btn","innerHTML","body","JSON","stringify","cancelFriendRequest","data-pk","backArrow","history","back","page","Home","setPage","pages","title","borderRadius","InviteListItem","invite","replyRequest","sender","data-senderid","data-reply","LikeProfileNotification","CommentProfileNotification","comment","NewLabel","Notifications","notificationsFetchInterval","invites","setInvites","unvisualizedPostLikes","setUnvisualizedPostLikes","visualizedPostLikes","setVisualizedPostLikes","unvisualizedComments","setUnvisualizedComments","visualizedComments","setVisualizedComments","fetchNotifications","setInterval","clearInterval","updateNotificationsNumber","requestBody","senderid","reply","getElementById","ModalContactSearch","modalProfiles","setParentState","addingNewChat","padding","query","WebSocketService","callbacks","socketRef","instance","chatUrl","path","WebSocket","onopen","socketNewMessage","command","onmessage","onerror","message","onclose","close","parsedData","parse","Object","keys","messages","chatId","sendMessage","from","messagesCallback","newMessageCallback","send","err","WebSocketInstance","getInstance","SendMessageForm","otherProfile","updateMessagesComponent","setMessage","onSubmit","preventDefault","messageObject","blocked_users","u","alert","newChatMessage","MessageListItem","currentUser","timestamp","ts","Date","day","getDate","month","getMonth","hour","getHours","minute","getMinutes","getFullYear","renderTimestamp","read","Chat","handleComponentChange","scrollToBottom","otherUsername","readMessages","chat_id","chatLog","scrollTop","scrollHeight","initialiseChat","waitForSocketConnection","addCallbacks","getMessages","bind","addMessage","getUpdatedMessages","fetchMessages","connect","focus","disconnect","newProps","updateUnreadMessagesNumber","undefined","callback","component","setTimeout","fontSize","openModal","ContactListItem","unreadMessagesCounter","lastChatMessage","activeChats","activeChatsProfiles","whiteSpace","maxHeight","indexOf","setLastChatMessage","contact","marginLeft","slice","ContactFilterInput","setHasFilteredProfiles","fetchActiveChatProfiles","filter","p","renderedActiveChatsProfiles","setContactSearch","Messages","handleReceiveProps","match","params","participants","other_username","hasFilteredProfiles","chats","rerenderingInterval","bool","EditProfileModal","closeModal","profileImagePreview","setProfileImagePreview","editingBioContent","setEditingBioContent","marginBottom","email","width","defaultValue","birth_date","Footer","submit","setLikesModal","fetchProfile","marginTop","Interests","interests","public","interest","toUpperCase","ProfileData","friends","MyProfile","setProfile","isEditing","setIsEditing","currentPageIsPosts","setCurrentPageIsPosts","SettingsMenu","pageChange","BlockUser","blockedProfiles","setBlockedProfiles","ChangePassword","errorMessage","setErrorMessage","successMessage","setSuccessMessage","role","password","newPassword","newPasswordc","new_password","new_passwordc","DeleteAccount","displayErrorMessage","setDisplayErrorMessage","Settings","Profile","sendFriendRequest","removeFromFriends","acceptFriendRequest","blockUnblockUser","alertMessage","openCloseExtraOptions","relationshipButtonLabel","label","relationship","onmouseenter","onmouseout","Friends","setFriends","useParams","friend","InterestProfiles","PublicInterests","addTags","tag","parentElement","removeChild","tags","sort","tagContainer","prepend","div","createElement","span","closeIcon","setAttribute","appendChild","interestsInput","createTag","setInterests","input","push","tagLabel","getAttribute","index","PrivateInterests","EditInterests","publicInterests","setPublicInterests","privateInterests","setPrivateInterests","public_interests","private_interests","documentElement","CommentModal","commentContent","setCommentContent","CommentListItem","fetchPost","setPostLikesModal","likeUnlikeComment","commentid","commentId","deleteComment","data-commentid","Post","setPost","commentModalIsOpen","setCommentModalIsOpen","postLikesModal","commentLikesModal","setCommentLikesModal","handlePostContentChange","handlePostImageChange","handleCloseImage","App","invitesReceivedNumber","setInvitesReceived","unvisualizedLikesNumber","setUnvisulaizedLikes","unvisualizedCommentsNumber","setUnvisulaizedComments","setUnreadMessagesNumber","render","exact","ProfileFriends","PostFormPage","ReactDOM"],"mappings":"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","file":"static/js/main.6a32d686.chunk.js","sourcesContent":["const SERVER_URL = 'https://napker.herokuapp.com'\r\nconst SOCKET_URL = 'wss://napker.herokuapp.com'\r\n//const SERVER_URL = 'http://127.0.0.1:8000'\r\n//const SOCKET_URL = 'ws://127.0.0.1:8000'\r\n\r\nconst LOGO_URL = '/static/media/napker.png'\r\n\r\nexport { SERVER_URL, SOCKET_URL, LOGO_URL }\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { SERVER_URL, LOGO_URL } from '../../config/settings'\r\n\r\nexport default function Sidebar(props) {\r\n    useEffect(() => {\r\n        document.querySelectorAll('.sidebar-menu-item-active').forEach(el => {\r\n            el.classList.remove('sidebar-menu-item-active')\r\n        })\r\n        const currentUrl = window.location.href.split('/')\r\n        if (currentUrl.includes('home')) {\r\n            document.querySelector('#home-menu').classList.add('sidebar-menu-item-active')\r\n        }\r\n        else if (currentUrl.includes('notifica%C3%A7%C3%B5es')) {\r\n            document.querySelector('#notifications-menu').classList.add('sidebar-menu-item-active')\r\n        }\r\n        else if (currentUrl.includes('mensagens')) {\r\n            document.querySelector('#messages-menu').classList.add('sidebar-menu-item-active')\r\n        }\r\n        else if (currentUrl.includes('perfil')) {\r\n            document.querySelector('#profile-menu').classList.add('sidebar-menu-item-active')\r\n        }\r\n        else if (currentUrl.includes('configura%C3%A7%C3%B5es')) {\r\n            document.querySelector('#settings-menu').classList.add('sidebar-menu-item-active')\r\n        }\r\n    }, [])\r\n\r\n    const switchPage = (e, isHome = false) => {\r\n        if (!isHome) {\r\n            document.querySelectorAll('.sidebar-menu-item-active').forEach(el => {\r\n                el.classList.remove('sidebar-menu-item-active')\r\n            })\r\n            e.target.classList.add('sidebar-menu-item-active')\r\n        } else {\r\n            document.querySelectorAll('.sidebar-menu-item-active').forEach(el => {\r\n                el.classList.remove('sidebar-menu-item-active')\r\n            })\r\n            document.querySelector('#home-menu').classList.add('sidebar-menu-item-active')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"logo-container\">\r\n                <Link to=\"/home\" style={{ textDecoration: 'none' }} onClick={e => switchPage(e, true)}>\r\n                    <img src={`${SERVER_URL}${LOGO_URL}`} />\r\n                </Link>\r\n            </div>\r\n            <ul>\r\n                <Link to=\"/home\" style={{ textDecoration: 'none' }}>\r\n                    <li className=\"sidebar-menu-item\" id=\"home-menu\" onClick={switchPage}>\r\n                        <i className=\"fas fa-home sidebar-menu-icon\" />\r\n                        Home\r\n                    </li>\r\n                </Link>\r\n                <Link to=\"/notificações\" style={{ textDecoration: 'none' }}>\r\n                    <li className=\"sidebar-menu-item\" id=\"notifications-menu\" onClick={switchPage}>\r\n                        <i className=\"fas fa-bell sidebar-menu-icon\" />\r\n                        Notificações\r\n                        {!props.notificationsNumber ? '' :\r\n                            <div className=\"notification-text-container\">\r\n                                <div className=\"notification-text\">\r\n                                    {props.notificationsNumber}\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </li>\r\n                </Link>\r\n                <Link to=\"/mensagens\" style={{ textDecoration: 'none' }}>\r\n                    <li className=\"sidebar-menu-item\" id=\"messages-menu\" onClick={switchPage}>\r\n                        <i className=\"fas fa-envelope sidebar-menu-icon\" />\r\n                        Mensagens\r\n                        {!props.unreadMessagesNumber ? '' :\r\n                            <div className=\"notification-text-container\">\r\n                                <div className=\"notification-text\">\r\n                                    {props.unreadMessagesNumber}\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </li>\r\n                </Link>\r\n                <Link to=\"/perfil\" style={{ textDecoration: 'none' }}>\r\n                    <li className=\"sidebar-menu-item\" id=\"profile-menu\" onClick={switchPage}>\r\n                        <i className=\"fas fa-user sidebar-menu-icon\" />\r\n                        Perfil\r\n                    </li>\r\n                </Link>\r\n                <Link to=\"/configurações\" style={{ textDecoration: 'none' }}>\r\n                    <li className=\"sidebar-menu-item\" id=\"settings-menu\" onClick={switchPage}>\r\n                        <i className=\"fas fa-cog sidebar-menu-icon\" />\r\n                        Configurações\r\n                    </li>\r\n                </Link>\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { SERVER_URL, LOGO_URL } from '../../config/settings'\r\n\r\nexport default function Sidebar(props) {\r\n    useEffect(() => {\r\n        document.querySelectorAll('.sidebar-menu-item-active').forEach(el => {\r\n            el.classList.remove('sidebar-menu-item-active')\r\n        })\r\n        const currentUrl = window.location.href.split('/')\r\n        if (currentUrl.includes('home')) {\r\n            document.querySelector('#home-menu').classList.add('sidebar-menu-item-active')\r\n        }\r\n        else if (currentUrl.includes('notifica%C3%A7%C3%B5es')) {\r\n            document.querySelector('#notifications-menu').classList.add('sidebar-menu-item-active')\r\n        }\r\n        else if (currentUrl.includes('mensagens')) {\r\n            document.querySelector('#messages-menu').classList.add('sidebar-menu-item-active')\r\n        }\r\n        else if (currentUrl.includes('perfil')) {\r\n            document.querySelector('#profile-menu').classList.add('sidebar-menu-item-active')\r\n        }\r\n        else if (currentUrl.includes('configura%C3%A7%C3%B5es')) {\r\n            document.querySelector('#settings-menu').classList.add('sidebar-menu-item-active')\r\n        }\r\n    }, [])\r\n\r\n    const switchPage = (e, isHome = false) => {\r\n        if (!isHome) {\r\n            document.querySelectorAll('.sidebar-menu-item-active').forEach(el => {\r\n                el.classList.remove('sidebar-menu-item-active')\r\n            })\r\n            e.target.classList.add('sidebar-menu-item-active')\r\n        } else {\r\n            document.querySelectorAll('.sidebar-menu-item-active').forEach(el => {\r\n                el.classList.remove('sidebar-menu-item-active')\r\n            })\r\n            document.querySelector('#home-menu').classList.add('sidebar-menu-item-active')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"bottom-menu-action-icon fixed-bottom\">\r\n                <Link to=\"/postar\">\r\n                    <i className=\"fas fa-pencil-alt\" id=\"bottom-menu-post-icon\" />\r\n                </Link>\r\n            </div>\r\n            <div className=\"bottom-menu fixed-bottom\">\r\n                <ul>\r\n                    <Link to=\"/home\" style={{ textDecoration: 'none' }}>\r\n                        <li className=\"sidebar-menu-item\" id=\"home-menu\" onClick={switchPage}>\r\n                            <i className=\"fas fa-home sidebar-menu-icon\" />\r\n                        </li>\r\n                    </Link>\r\n                    <Link to=\"/notificações\" style={{ textDecoration: 'none' }}>\r\n                        <li className=\"sidebar-menu-item\" id=\"notifications-menu\" onClick={switchPage}>\r\n                            <i className=\"fas fa-bell sidebar-menu-icon\" />\r\n                            {!props.notificationsNumber ? '' :\r\n                                <div className=\"notification-text-container\">\r\n                                    <div className=\"notification-text\">\r\n                                        {props.notificationsNumber}\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </li>\r\n                    </Link>\r\n                    <Link to=\"/mensagens\" style={{ textDecoration: 'none' }}>\r\n                        <li className=\"sidebar-menu-item\" id=\"messages-menu\" onClick={switchPage}>\r\n                            <i className=\"fas fa-envelope sidebar-menu-icon\" />\r\n                            {!props.unreadMessagesNumber ? '' :\r\n                                <div className=\"notification-text-container\">\r\n                                    <div className=\"notification-text\">\r\n                                        {props.unreadMessagesNumber}\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </li>\r\n                    </Link>\r\n                    <Link to=\"/perfil\" style={{ textDecoration: 'none' }}>\r\n                        <li className=\"sidebar-menu-item\" id=\"profile-menu\" onClick={switchPage}>\r\n                            <i className=\"fas fa-user sidebar-menu-icon\" />\r\n                        </li>\r\n                    </Link>\r\n                    <Link to=\"/configurações\" style={{ textDecoration: 'none' }}>\r\n                        <li className=\"sidebar-menu-item\" id=\"settings-menu\" onClick={switchPage}>\r\n                            <i className=\"fas fa-cog sidebar-menu-icon\" />\r\n                        </li>\r\n                    </Link>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../config/settings'\r\n\r\nexport default function ProfileListItem(props) {\r\n    const profile = props.profile\r\n    const myProfile = props.myProfile\r\n\r\n    return (\r\n        <Link to={profile.id === myProfile.id ?\r\n            '/perfil' : `/user/${profile.slug}`}\r\n            style={{ color: '#000', textDecoration: 'none' }}\r\n        >\r\n            <li\r\n                className=\"list-group-item profile-row filtered-profile profile-profile-list-item\"\r\n                key={profile.id}\r\n                style={props.style}\r\n                onClick={props.onClick}\r\n            >\r\n                <div className=\"d-flex\">\r\n                    <div className=\"profile-img-container\">\r\n                        <img src={`${SERVER_URL}${profile.photo}`}\r\n                            className=\"profile-img-med\"\r\n                            style={{ marginRight: '10px' }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"d-flex flex-column w-100\">\r\n                        <div className=\"profile-row-top\">\r\n                            <div className=\"main-profile-data\">\r\n                                <strong style={{ textAlign: 'start' }}>\r\n                                    {profile.first_name} {profile.last_name}\r\n                                </strong>\r\n                                <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                {props.children}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"profile-row-bottom\">\r\n                            {profile.bio}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </Link>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nimport { SERVER_URL } from '../config/settings'\r\nimport ProfileListItem from '../components/ProfileListItem'\r\n\r\nexport default function LikesModal(props) {\r\n    const [myProfile, setMyProfile] = useState(null)\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n    }, [])\r\n\r\n    return (\r\n        <Modal show={props.isOpen}\r\n            onHide={props.hideModal}\r\n            size=\"lg\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title><strong>Curtidas</strong></Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"list-group\" style={{ height: '400px', overflow: 'hidden', overflowY: 'scroll' }}>\r\n                    {props.likes &&\r\n                        props.likes.map(like => like.profile).map(profile => {\r\n                            return (\r\n                                <ProfileListItem\r\n                                    profile={profile}\r\n                                    myProfile={myProfile}\r\n                                    style={{ borderTop: 'none', borderLeft: 'none', borderRight: 'none' }}\r\n                                    onClick={props.hideModal}\r\n                                />\r\n                            )\r\n                        })}\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}","import { SERVER_URL } from './settings'\r\n\r\nconst csrftoken = getCookie('csrftoken')\r\n\r\nfunction getCookie(name) {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nfunction handleLogout() {\r\n  const bool = window.confirm('Sair do Napker?\\nVocê poderá entrar novamente quando quiser.')\r\n  if (bool) {\r\n    window.location.replace(`${SERVER_URL}/logout`)\r\n  }\r\n}\r\n\r\nfunction openCloseEmojiList(closing = false) {\r\n  const el = document.querySelector('#emoji-list-container')\r\n  const style = el.style\r\n  if (closing) {\r\n    style.display = 'none'\r\n    document.querySelector('#emoji-button').classList.remove('emoji-button-active')\r\n  } else {\r\n    if (!style.display || style.display === 'none') {\r\n      style.display = 'initial'\r\n      document.querySelector('#emoji-button').classList.add('emoji-button-active')\r\n    } else {\r\n      style.display = 'none'\r\n      document.querySelector('#emoji-button').classList.remove('emoji-button-active')\r\n    }\r\n  }\r\n}\r\n\r\nexport { csrftoken, handleLogout, openCloseEmojiList };","import React, { useState } from 'react'\r\nimport Picker from 'emoji-picker-react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../../../../../config/settings'\r\nimport { csrftoken, openCloseEmojiList } from '../../../../../config/utils'\r\n\r\nexport default function PostForm(props) {\r\n    const myProfile = props.myProfile\r\n\r\n    const [postContent, setPostContent] = useState('')\r\n    const [postFormImagePreview, setPostFormImagePreview] = useState(null)\r\n\r\n    const handlePostContentChange = e => {\r\n        setPostContent(e.target.value)\r\n        const el = document.querySelector('#post-form-submit-btn')\r\n        el.disabled = e.target.value.trim() === '' && !postFormImagePreview\r\n    }\r\n\r\n    const handlePostImageChange = e => {\r\n        const reader = new FileReader()\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                setPostFormImagePreview(reader.result)\r\n                document.querySelector('#post-img-container').style.display = 'initial'\r\n                document.querySelector('#post-form-submit-btn').disabled = false\r\n            }\r\n        }\r\n        try {\r\n            reader.readAsDataURL(e.target.files[0])\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n    const handleCloseImage = () => {\r\n        document.querySelector('#post-img-container').style.display = 'none'\r\n        document.querySelector('#post-image').value = ''\r\n        if (postContent.trim() === '') document.querySelector('#post-form-submit-btn').disabled = true\r\n        setPostFormImagePreview(null)\r\n    }\r\n\r\n    const onEmojiSelect = (event, emojiObject) => {\r\n        setPostContent(postContent + emojiObject.emoji)\r\n        document.querySelector('#post-form-submit-btn').disabled = false\r\n    }\r\n\r\n    return (\r\n        <form\r\n            action={`${SERVER_URL}/post-api/create-post`}\r\n            method=\"POST\"\r\n            className=\"create-post-form\"\r\n            encType=\"multipart/form-data\"\r\n        >\r\n            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n            <div className=\"d-flex\">\r\n                <Link to=\"/perfil\">\r\n                    <img\r\n                        src={`${SERVER_URL}${myProfile.photo}`}\r\n                        className=\"profile-img-med\"\r\n                    />\r\n                </Link>\r\n                <textarea\r\n                    className=\"post-content-textarea\"\r\n                    name=\"post-content\"\r\n                    value={postContent}\r\n                    placeholder=\"No que você está pensando?\"\r\n                    maxLength={300}\r\n                    autoFocus\r\n                    onChange={handlePostContentChange}\r\n                />\r\n            </div>\r\n            <div className=\"w-100 d-flex justify-content-center\">\r\n                <div\r\n                    className=\"post-img-container\"\r\n                    id=\"post-img-container\">\r\n                    <div\r\n                        className=\"post-img-options\"\r\n                    >\r\n                        <i\r\n                            className=\"far fa-times-circle\"\r\n                            onClick={handleCloseImage}\r\n                        />\r\n                    </div>\r\n                    <img\r\n                        src={postFormImagePreview}\r\n                        className=\"post-img post-form-img-preview\"\r\n                        id=\"post-form-img-preview\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"d-flex justify-content-between\" style={{ margin: '0px 70px 0 70px' }}>\r\n                <div className=\"post-extra-options\">\r\n                    <label htmlFor=\"post-image\" class=\"far fa-image\" />\r\n                    <input\r\n                        type=\"file\"\r\n                        accept=\"image/png, image/jpg, image/jpeg\"\r\n                        name=\"post-image\"\r\n                        id=\"post-image\"\r\n                        style={{ display: 'none' }}\r\n                        onChange={handlePostImageChange}\r\n                    />\r\n                    <label\r\n                        className=\"far fa-smile\"\r\n                        id=\"emoji-button\"\r\n                        onClick={() => openCloseEmojiList(false)}\r\n                    />\r\n                    <div className=\"emoji-list-container\" id=\"emoji-list-container\">\r\n                        <Picker onEmojiClick={onEmojiSelect} />\r\n                    </div>\r\n                </div>\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary\"\r\n                    id=\"post-form-submit-btn\"\r\n                    style={{ height: '40px' }}\r\n                    disabled\r\n                >\r\n                    Postar\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../config/settings'\r\nimport { csrftoken } from '../config/utils'\r\n\r\nexport default function PostListItem(props) {\r\n    const post = props.post\r\n    const myProfile = props.myProfile\r\n\r\n    const deletePost = (e, postId) => {\r\n        e.stopPropagation()\r\n        const el = document.querySelector(`#profile-post-${postId}`)\r\n        if (window.confirm('Tem certeza que deseja apagar o post?\\nEssa ação é irreversível.')) {\r\n            el.style.animationPlayState = 'running'\r\n            el.addEventListener('animationend', () => {\r\n                this.fetchPosts()\r\n            })\r\n            fetch(`${SERVER_URL}/post-api/delete-post/${postId}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                })\r\n        }\r\n    }\r\n\r\n    const likeUnlikePost = e => {\r\n        e.stopPropagation()\r\n        const likeBtn = e.target\r\n        if (likeBtn.classList.contains('fas')) {\r\n            likeBtn.classList.remove('fas') //border heart\r\n            likeBtn.classList.add('far')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/unlike-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.renderParent()\r\n                })\r\n        } else {\r\n            likeBtn.classList.remove('far') //border heart\r\n            likeBtn.classList.add('fas')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/like-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.renderParent()\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <li\r\n            className=\"post-container post-list-item\"\r\n            id={`profile-post-${post.id}`}\r\n            key={post.id}\r\n            onClick={() => window.location.href = `/post/${post.id}`}\r\n        >\r\n            <div className=\"d-flex justify-content-between\">\r\n                <div className=\"post-row\">\r\n                    <div className=\"post-col\">\r\n                        <Link\r\n                            to={post.author.id === myProfile.id ?\r\n                                '/perfil' : `/user/${post.author.slug}`}\r\n                            onClick={e => e.stopPropagation()}\r\n                        >\r\n                            <img src={`${SERVER_URL}${post.author.photo}`}\r\n                                className=\"profile-img-med\"\r\n                            />\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"post-col\">\r\n                        <Link\r\n                            to={post.author.id === myProfile.id ?\r\n                                '/perfil' : `/user/${post.author.slug}`}\r\n                            style={{ color: '#000' }}\r\n                            onClick={e => e.stopPropagation()}\r\n                        >\r\n                            <div className=\"post-author-data-wrapper\">\r\n                                <strong style={{ marginRight: '5px' }}>\r\n                                    {post.author.first_name} {post.author.last_name}\r\n                                </strong>\r\n                                <p className=\"text-secondary d-inline-block\">\r\n                                    @{post.author.user.username} • {post.created.split('-').reverse().join('/')}\r\n                                </p>\r\n                            </div>\r\n                        </Link>\r\n                        <div style={{ textAlign: 'start' }}>\r\n                            {post.content}\r\n                        </div>\r\n                        {post.image &&\r\n                            <img src={`${SERVER_URL}${post.image}`} className=\"post-img\" />\r\n                        }\r\n                    </div>\r\n                </div>\r\n                {post.author.id === myProfile.id &&\r\n                    <i\r\n                        className=\"far fa-trash-alt trash-icon text-secondary\"\r\n                        style={{ margin: '20px 20px 0 0' }}\r\n                        onClick={e => deletePost(e, post.id)}\r\n                    />\r\n                }\r\n            </div>\r\n            <div className=\"post-actions\">\r\n                <p className=\"text-secondary\">\r\n                    <Link\r\n                        to={`/post/${post.id}/comentar`}\r\n                        className=\"text-secondary\"\r\n                        onClick={e => e.stopPropagation()}\r\n                    >\r\n                        <i\r\n                            class=\"far fa-comment\"\r\n                        />{post.comments.length}\r\n                    </Link>\r\n                    {post.likes.map(like => like.profile.id).includes(myProfile.id) ?\r\n                        <i class=\"fas fa-heart\"\r\n                            data-postid={post.id}\r\n                            onClick={likeUnlikePost}\r\n                        />\r\n                        :\r\n                        <i class=\"far fa-heart\"\r\n                            data-postid={post.id}\r\n                            onClick={likeUnlikePost}\r\n                        />\r\n                    }\r\n                    <p className=\"post-likes-number\"\r\n                        onClick={e => {\r\n                            e.stopPropagation()\r\n                            props.openLikesModal(post.likes)\r\n                        }\r\n                        }\r\n                    >\r\n                        {post.likes.length}\r\n                    </p>\r\n                </p>\r\n            </div>\r\n        </li>\r\n    )\r\n}","import React from 'react'\r\n\r\nimport { SERVER_URL } from '../../../../config/settings'\r\nimport LikesModal from '../../../../components/likesmodal'\r\nimport PostForm from './components/PostForm'\r\nimport PostListItem from '../../../../components/PostListItem'\r\n\r\nexport default class Posts extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myProfile: null,\r\n            posts: null,\r\n            likesModal: {\r\n                isOpen: false,\r\n                likes: null\r\n            },\r\n            postContent: '',\r\n            postFormImagePreview: null\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ myProfile: data }))\r\n        this.fetchPosts()\r\n    }\r\n\r\n    fetchPosts = () => {\r\n        fetch(`${SERVER_URL}/post-api/post-list`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ posts: data }))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <LikesModal\r\n                    isOpen={this.state.likesModal.isOpen}\r\n                    likes={this.state.likesModal.likes}\r\n                    hideModal={() => this.setState({likesModal: {isOpen: false, likes: null}})}\r\n                />\r\n                {this.state.myProfile &&\r\n                    <PostForm myProfile={this.state.myProfile} />\r\n                }\r\n                <div className=\"post-list\">\r\n                    {this.state.posts && this.state.myProfile ?\r\n                        this.state.posts.map(post => {\r\n                            return (\r\n                                <PostListItem\r\n                                    post={post}\r\n                                    myProfile={this.state.myProfile}\r\n                                    renderParent={this.fetchPosts}\r\n                                    openLikesModal={likes => this.setState({ likesModal: { isOpen: true, likes: likes } })}\r\n                                />\r\n                            )\r\n                        }) :\r\n                        <div className=\"posts-loader-container\" >\r\n                            <div className=\"loader\" />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport { SERVER_URL } from '../../../config/settings'\r\nimport { csrftoken } from '../../../config/utils'\r\nimport ProfileListItem from '../../../components/ProfileListItem'\r\n\r\nexport default function Profiles() {\r\n    const [myProfile, setMyProfile] = useState(null)\r\n    const [profiles, setProfiles] = useState(null)\r\n    const [filteredProfiles, setFilteredProfiles] = useState(null)\r\n    const [search, setSearch] = useState('')\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n        fetch(`${SERVER_URL}/profile-api/profile-list`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setFilteredProfiles(null)\r\n                setProfiles(data)\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (search === '') {\r\n            setFilteredProfiles(null)\r\n            return\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/users/${search}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setFilteredProfiles(data)\r\n            })\r\n    }, [search])\r\n\r\n    const sendFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/send-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    const cancelFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/cancel-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    const handleRelationshipUpdate = e => {\r\n        e.stopPropagation()\r\n        const btn = e.target\r\n        if (btn.innerHTML === 'Solicitar') {\r\n            sendFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitado'\r\n            btn.className = 'btn btn-primary'\r\n        } else {\r\n            cancelFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitar'\r\n            btn.className = 'btn btn-secondary'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"profiles-filter-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"profiles-filter-input\"\r\n                    placeholder=\"Pesquisar\"\r\n                    value={search}\r\n                    onChange={e => setSearch(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"list-group\">\r\n                {myProfile && (profiles || filteredProfiles) ?\r\n                    <div className=\"profile-list-container\">\r\n                        {filteredProfiles ? filteredProfiles.map(profile => {\r\n                            return (\r\n                                <ProfileListItem profile={profile} myProfile={myProfile} />\r\n                            )\r\n                        }\r\n                        ) : profiles && profiles.map(profile => {\r\n                            return (\r\n                                <ProfileListItem profile={profile} myProfile={myProfile}>\r\n                                    <button className=\"btn btn-secondary\" data-pk={profile.id} onClick={handleRelationshipUpdate}>\r\n                                        Solicitar\r\n                                     </button>\r\n                                </ProfileListItem>\r\n                            )\r\n                        })\r\n                        }\r\n                    </div> :\r\n                    <div className=\"profiles-loader-container\">\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <div className=\"header fixed-top\">\r\n            {!props.backArrow ? '' :\r\n                <i class=\"fas fa-arrow-left left-arrow-icon\" onClick={() => window.history.back()} />\r\n            }\r\n            <strong>{props.page}</strong>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport Posts from './components/posts_/Posts'\r\nimport Profiles from './components/Profiles'\r\nimport Header from '../../components/fixed/Header'\r\n\r\nexport default function Home(props) {\r\n    const [page, setPage] = useState('Posts')\r\n    const pages = {\r\n        'Perfis': <Profiles />,\r\n        'Posts': <Posts />\r\n    }\r\n\r\n    document.title = 'Home / Napker'\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Home\" />\r\n            <div className=\"content\">\r\n                <div className=\"home-page-subheader\">\r\n                    {page === 'Perfis' ?\r\n                        'Veja o que os seus amigos andam fazendo: ' :\r\n                        'Veja usuários com os mesmos interesses que você: '\r\n                    }\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        style={{ margin: '10px', borderRadius: '20px' }}\r\n                        onClick={() => setPage(page === 'Perfis' ? 'Posts' : 'Perfis')}\r\n                    >\r\n                        {page === 'Perfis' ?\r\n                            'Ver posts' :\r\n                            'Ver perfis'\r\n                        }\r\n                    </button>\r\n                </div>\r\n                {pages[page]}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nimport { SERVER_URL } from '../../../config/settings'\r\n\r\nexport default function InviteListItem(props) {\r\n    const invite = props.invite\r\n    const replyRequest = props.replyRequest\r\n    \r\n    return (\r\n        <li\r\n            className=\"friend-request-row profile-row\"\r\n            id={`fr-${invite.sender.id}`}\r\n            key={invite.sender.id}\r\n            onClick={() => window.location.href = `/user/${invite.sender.slug}`}\r\n        >\r\n            <div className=\"d-flex\">\r\n                <div className=\"profile-img-container\">\r\n                    <img src={`${SERVER_URL}${invite.sender.photo}`}\r\n                        className=\"profile-img-med\"\r\n                        style={{ marginRight: '10px' }}\r\n                    />\r\n                </div>\r\n                <div className=\"d-flex flex-column w-100\">\r\n                    <div className=\"profile-row-top\">\r\n                        <div className=\"main-profile-data\">\r\n                            <strong style={{ textAlign: 'start' }}>\r\n                                {invite.sender.first_name} {invite.sender.last_name}\r\n                            </strong>\r\n                            <p className=\"text-secondary\">@{invite.sender.user.username}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"profile-row-bottom\">\r\n                        {invite.sender.bio}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"friend-request-col\">\r\n                <button className=\"btn btn-primary btn-reply-fr mr-1\" data-senderid={invite.sender.id} data-reply='accept' onClick={replyRequest}>\r\n                    Aceitar\r\n                </button>\r\n                <button className=\"btn btn-grey btn-reply-fr\" data-senderid={invite.sender.id} data-reply='decline' onClick={replyRequest}>\r\n                    Excluir\r\n                </button>\r\n            </div>\r\n        </li>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../../../config/settings'\r\n\r\nexport default function LikeProfileNotification(props) {\r\n    const like = props.like\r\n    \r\n    return (\r\n        <li className=\"notification-row\" key={like.profile.id}>\r\n            <div className=\"d-flex align-items-center\">\r\n                <i class=\"fas fa-heart notification-like\" />\r\n                <Link to={`/user/${like.profile.slug}`}>\r\n                    <img src={`${SERVER_URL}${like.profile.photo}`}\r\n                        className=\"profile-img-sm\"\r\n                        style={{ marginRight: '10px' }}\r\n                    />\r\n                </Link>\r\n                <p className=\"text-secondary d-inline-block\">\r\n                    {like.created.split('-').reverse().join('/')}\r\n                </p>\r\n                {props.children}\r\n            </div>\r\n            <div className=\"notification-message\">\r\n                <p>\r\n                    <Link to={`/user/${like.profile.slug}`} style={{ color: \"#000\" }}>\r\n                        @{like.profile.user.username}\r\n                    </Link> curtiu seu post.\r\n                </p>\r\n            </div>\r\n            <div className=\"notification-post-content\">\r\n                {like.post.content}\r\n            </div>\r\n        </li>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../../../config/settings'\r\n\r\nexport default function CommentProfileNotification(props) {\r\n    const comment = props.comment\r\n    return (\r\n        <li className=\"notification-row\" key={comment.author.id}>\r\n            <div className=\"d-flex align-items-center\">\r\n                <i class=\"fas fa-comment notification-comment\" />\r\n                <Link to={`/user/${comment.author.slug}`}>\r\n                    <img src={`${SERVER_URL}${comment.author.photo}`}\r\n                        className=\"profile-img-sm\"\r\n                        style={{ marginRight: '10px' }}\r\n                    />\r\n                </Link>\r\n                <p className=\"text-secondary d-inline-block\">\r\n                    {comment.created.split('-').reverse().join('/')}\r\n                </p>\r\n                {props.children}\r\n            </div>\r\n            <div className=\"notification-message\">\r\n                <p>\r\n                    <Link to={`/user/${comment.author.slug}`} style={{ color: \"#000\" }}>\r\n                        @{comment.author.user.username}\r\n                    </Link> comentou seu post.\r\n                </p>\r\n            </div>\r\n            <div className=\"notification-comment-container\">\r\n                <div className=\"notification-comment-content\">\r\n                    {comment.content}\r\n                </div>\r\n                <Link to={`/post/${comment.post.id}`}>\r\n                    <button className=\"btn btn-primary\">\r\n                        Ver Post\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n        </li>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function NewLabel() {\r\n    return (\r\n        <div className=\"notification-text-container\">\r\n            <div className=\"notification-text\">\r\n                novo\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Header from '../../components/fixed/Header'\r\nimport InviteNotification from './components/InviteNotification'\r\nimport LikeProfileNotification from './components/LikeProfileNotification'\r\nimport CommentProfileNotification from './components/CommentProfileNotification'\r\nimport NewLabel from './components/NewLabel'\r\nimport { SERVER_URL } from '../../config/settings'\r\nimport { csrftoken } from '../../config/utils'\r\n\r\nexport default function Notifications(props) {\r\n    const [invites, setInvites] = useState(null)\r\n    const [unvisualizedPostLikes, setUnvisualizedPostLikes] = useState(null)\r\n    const [visualizedPostLikes, setVisualizedPostLikes] = useState(null)\r\n    const [unvisualizedComments, setUnvisualizedComments] = useState(null)\r\n    const [visualizedComments, setVisualizedComments] = useState(null)\r\n\r\n    let notificationsFetchInterval\r\n\r\n    document.title = 'Notificações / Napker'\r\n\r\n    const fetchNotifications = () => {\r\n        fetch(`${SERVER_URL}/profile-api/myinvites`)\r\n            .then(response => response.json())\r\n            .then(data => setInvites(data))\r\n        fetch(`${SERVER_URL}/post-api/unvisualized-post-likes`)\r\n            .then(response => response.json())\r\n            .then(data => setUnvisualizedPostLikes(data))\r\n        fetch(`${SERVER_URL}/post-api/unvisualized-post-comments`)\r\n            .then(response => response.json())\r\n            .then(data => setUnvisualizedComments(data))\r\n        fetch(`${SERVER_URL}/post-api/post-likes-visualized-last-2-days`)\r\n            .then(response => response.json())\r\n            .then(data => setVisualizedPostLikes(data))\r\n        fetch(`${SERVER_URL}/post-api/post-comments-visualized-last-2-days`)\r\n            .then(response => response.json())\r\n            .then(data => setVisualizedComments(data))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchNotifications()\r\n        notificationsFetchInterval = window.setInterval(fetchNotifications, 3000)\r\n        return () => window.clearInterval(notificationsFetchInterval)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (unvisualizedPostLikes && unvisualizedPostLikes.length) {\r\n            fetch(`${SERVER_URL}/post-api/visualize-likes`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.updateNotificationsNumber()\r\n                })\r\n        }\r\n    }, [unvisualizedPostLikes])\r\n\r\n    useEffect(() => {\r\n        if (unvisualizedComments && unvisualizedComments.length) {\r\n            fetch(`${SERVER_URL}/post-api/visualize-comments`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.updateNotificationsNumber()\r\n                })\r\n        }\r\n    }, [unvisualizedComments])\r\n\r\n    const replyRequest = e => {\r\n        e.stopPropagation()\r\n        const btn = e.target\r\n        const requestBody = {\r\n            'senderid': btn.dataset.senderid,\r\n            'reply': btn.dataset.reply\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/reply-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(requestBody)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                props.updateNotificationsNumber()\r\n            })\r\n        document.getElementById(`fr-${btn.dataset.senderid}`).remove()\r\n        fetchNotifications()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header page=\"Notificações\" />\r\n            <div className=\"content\">\r\n                <div>\r\n                    {invites !== null && unvisualizedPostLikes && visualizedPostLikes !== null && unvisualizedComments !== null && visualizedComments !== null ?\r\n                        <div>\r\n                            {invites.length || unvisualizedPostLikes.length || visualizedPostLikes.length || unvisualizedComments.length || !!visualizedComments.length ?\r\n                                <div className=\"notifications-container\">\r\n                                    {!!invites.length &&\r\n                                        <div>\r\n                                            {invites.map(invite => {\r\n                                                return (\r\n                                                    <InviteNotification\r\n                                                        invite={invite}\r\n                                                        replyRequest={replyRequest}\r\n                                                    />\r\n                                                )\r\n                                            })}\r\n                                        </div>\r\n                                    }\r\n\r\n                                    {(!!unvisualizedPostLikes.length || !!unvisualizedComments.length) &&\r\n                                        <>\r\n                                            {!!unvisualizedPostLikes.length &&\r\n                                                <>\r\n                                                    {unvisualizedPostLikes.map(like => {\r\n                                                        return (\r\n                                                            <LikeProfileNotification like={like}>\r\n                                                                <NewLabel />\r\n                                                            </LikeProfileNotification>\r\n                                                        )\r\n                                                    })}\r\n                                                </>\r\n                                            }\r\n\r\n                                            {!!unvisualizedComments.length &&\r\n                                                <>\r\n                                                    {unvisualizedComments.map(comment => {\r\n                                                        return (\r\n                                                            <CommentProfileNotification comment={comment}>\r\n                                                                <NewLabel />\r\n                                                            </CommentProfileNotification>\r\n                                                        )\r\n                                                    })}\r\n                                                </>\r\n                                            }\r\n                                        </>\r\n                                    }\r\n\r\n                                    {(!!visualizedPostLikes.length || !!visualizedComments.length) &&\r\n                                        <>\r\n                                            {!!visualizedPostLikes.length &&\r\n                                                <>\r\n                                                    {visualizedPostLikes.map(like => {\r\n                                                        return (\r\n                                                            <LikeProfileNotification like={like} />\r\n                                                        )\r\n                                                    })}\r\n                                                </>\r\n                                            }\r\n\r\n                                            {!!visualizedComments.length &&\r\n                                                <>\r\n                                                    {visualizedComments.map(comment => {\r\n                                                        return (\r\n                                                            <CommentProfileNotification comment={comment} />\r\n                                                        )\r\n                                                    })}\r\n                                                </>\r\n                                            }\r\n                                        </>\r\n                                    }\r\n\r\n                                </div> :\r\n                                <div className=\"no-notifications-container\">\r\n                                    <h3>Você não tem nenhuma notificação</h3>\r\n                                </div>\r\n                            }\r\n\r\n                        </div> :\r\n                        <div className=\"notifications-loader-container\">\r\n                            <div className=\"loader\" />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <div className=\"header fixed-top\">\r\n            {!props.backArrow ? '' :\r\n                <i class=\"fas fa-arrow-left left-arrow-icon\" onClick={() => window.history.back()} />\r\n            }\r\n            <strong>{props.page}</strong>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../../../config/settings'\r\n\r\nexport default function ModalContactSearch(props) {\r\n    const modalProfiles = props.modalProfiles\r\n    const setParentState = props.setParentState\r\n    const addingNewChat = props.addingNewChat\r\n\r\n    const setModalSearch = query => {\r\n        if (query === '') {\r\n            setParentState({\r\n                modalProfiles: []\r\n            })\r\n            return\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/users/${query}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setParentState({\r\n                    modalProfiles: data\r\n                })\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Modal show={addingNewChat}\r\n            onHide={() => setParentState({ addingNewChat: false })}\r\n            size=\"lg\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title><strong>Nova conversa</strong></Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body style={{ padding: '0' }}>\r\n                <input className=\"modal-search-input\"\r\n                    placeholder=\"Pesquisar pessoas\"\r\n                    onChange={e => setModalSearch(e.target.value)}\r\n                />\r\n                <div className=\"list-group\" style={{ height: '400px', overflow: 'hidden', overflowY: 'scroll' }}>\r\n                    {modalProfiles && modalProfiles.map(profile => {\r\n                        return (\r\n                            <Link to={`/mensagens/${profile.slug}`}\r\n                                style={{ color: '#000', textDecoration: 'none' }}\r\n                                onClick={() => setParentState({ addingNewChat: false })}\r\n                            >\r\n                                <li className=\"list-group-item profile-row modal-profile-li\" key={profile.id}>\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <div className=\"profile-col\">\r\n                                            <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                className=\"profile-img-med\"\r\n                                                style={{ marginRight: '10px' }}\r\n                                            />\r\n                                            <div className=\"main-profile-data\">\r\n                                                <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                                <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            </Link>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}","import { SOCKET_URL } from '../../config/settings'\r\n\r\nclass WebSocketService {\r\n  static instance = null;\r\n  callbacks = {};\r\n\r\n  static getInstance() {\r\n    if (!WebSocketService.instance) {\r\n      WebSocketService.instance = new WebSocketService();\r\n    }\r\n    return WebSocketService.instance;\r\n  }\r\n\r\n  constructor() {\r\n    this.socketRef = null;\r\n  }\r\n\r\n  connect(chatUrl) {\r\n    const path = `${SOCKET_URL}/ws/chat/${chatUrl}/`;\r\n    this.socketRef = new WebSocket(path);\r\n    this.socketRef.onopen = () => {\r\n      console.log(\"WebSocket open\");\r\n    };\r\n    this.socketNewMessage(JSON.stringify({\r\n      command: 'fetch-messages'\r\n    }))\r\n    this.socketRef.onmessage = e => {\r\n      this.socketNewMessage(e.data);\r\n    };\r\n    this.socketRef.onerror = e => {\r\n      console.log(e.message);\r\n    };\r\n    this.socketRef.onclose = () => {\r\n      console.log(\"WebSocket closed\");\r\n    };\r\n  }\r\n\r\n  disconnect() {\r\n    if (this.socketRef) this.socketRef.close();\r\n  }\r\n\r\n  socketNewMessage(data) {\r\n    const parsedData = JSON.parse(data);\r\n    const command = parsedData.command;\r\n    if (Object.keys(this.callbacks).length === 0) {\r\n      return;\r\n    }\r\n    if (command === \"messages\") {\r\n      this.callbacks[command](parsedData.messages);\r\n    }\r\n    if (command === \"new_message\") {\r\n      this.callbacks[command](parsedData.message);\r\n    }\r\n  }\r\n\r\n  fetchMessages(username, chatId) {\r\n    this.sendMessage({\r\n      command: \"fetch_messages\",\r\n      username: username,\r\n      chatId: chatId\r\n    });\r\n  }\r\n\r\n  newChatMessage(message) {\r\n    this.sendMessage({\r\n      command: \"new_message\",\r\n      from: message.from,\r\n      content: message.content,\r\n      chatId: message.chatId\r\n    });\r\n  }\r\n\r\n  readMessages(chatId) {\r\n    this.sendMessage({\r\n      command: \"read_messages\",\r\n      chatId: chatId\r\n    });\r\n  }\r\n\r\n  addCallbacks(messagesCallback, newMessageCallback) {\r\n    this.callbacks[\"messages\"] = messagesCallback\r\n    this.callbacks[\"new_message\"] = newMessageCallback\r\n    this.callbacks[\"updated_messages\"] = newMessageCallback\r\n  }\r\n\r\n  sendMessage(data) {\r\n    try {\r\n      this.socketRef.send(JSON.stringify({ ...data }));\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  }\r\n\r\n  state() {\r\n    return this.socketRef ? this.socketRef.readyState : 0\r\n  }\r\n}\r\n\r\nconst WebSocketInstance = WebSocketService.getInstance();\r\n\r\nexport default WebSocketInstance;","import React, { useState } from 'react'\r\nimport Picker from 'emoji-picker-react'\r\n\r\nimport { openCloseEmojiList } from '../../../../../config/utils'\r\n\r\nexport default function SendMessageForm(props) {\r\n    const WebSocketInstance = props.WebSocketInstance\r\n    const chatId = props.chatId\r\n    const username = props.username\r\n    const otherProfile = props.otherProfile\r\n    const myProfile = props.myProfile\r\n    const updateMessagesComponent = props.updateMessagesComponent\r\n\r\n    const [message, setMessage] = useState('')\r\n\r\n    const messageChangeHandler = e => {\r\n        setMessage(e.target.value)\r\n        const el = document.querySelector('#chat-message-submit')\r\n        el.disabled = e.target.value.trim() === ''\r\n    }\r\n\r\n    const onEmojiSelect = (event, emojiObject) => {\r\n        setMessage(message + emojiObject.emoji)\r\n        document.querySelector('#chat-message-submit').disabled = false\r\n    }\r\n\r\n    const sendMessageHandler = e => {\r\n        e.preventDefault()\r\n        const messageObject = {\r\n            from: username,\r\n            content: message,\r\n            chatId: chatId\r\n        };\r\n        setMessage('')\r\n        if (otherProfile.blocked_users.map(u => u.id).includes(myProfile.user.id)) {\r\n            window.alert(`Você não pode enviar mensagens para ${otherProfile.first_name}.\r\n            ${otherProfile.first_name} te bloqueou.`)\r\n            return\r\n        }\r\n        if (myProfile.blocked_users.map(u => u.id).includes(otherProfile.user.id)) {\r\n            window.alert(`Você não pode enviar mensagens para ${otherProfile.first_name}.\r\n            Você bloqueou ${otherProfile.first_name}.`)\r\n            return\r\n        }\r\n        WebSocketInstance.newChatMessage(messageObject)\r\n        document.querySelector('#chat-message-submit').disabled = true\r\n        openCloseEmojiList(true)\r\n        updateMessagesComponent()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"emoji-list-container chat-emoji-list\" id=\"emoji-list-container\">\r\n                <Picker onEmojiClick={onEmojiSelect} />\r\n            </div>\r\n            <form className=\"send-message-container\" onSubmit={sendMessageHandler}>\r\n                <label\r\n                    className=\"far fa-smile\"\r\n                    id=\"emoji-button\"\r\n                    onClick={() => openCloseEmojiList(false)}\r\n                />\r\n                <input\r\n                    placeholder=\"Mensagem\"\r\n                    className=\"message-input\"\r\n                    id=\"chat-message-input\"\r\n                    value={message}\r\n                    autoFocus={document.querySelector('#contact-filter-input').value === ''}\r\n                    onChange={messageChangeHandler}\r\n                />\r\n                <button\r\n                    className=\"btn btn-primary chat-message-submit\"\r\n                    id=\"chat-message-submit\"\r\n                    disabled\r\n                >\r\n                    <i class=\"fas fa-chevron-right\" />\r\n                </button>\r\n            </form>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function MessageListItem(props) {\r\n    const message = props.message\r\n    const currentUser = props.currentUser\r\n\r\n    const renderTimestamp = timestamp => {\r\n        const ts = new Date(timestamp)\r\n        const day = ts.getDate() >= 10 ? ts.getDate() : `0${ts.getDate()}`\r\n        const month = ts.getMonth() >= 10 ? ts.getMonth() : `0${ts.getMonth()}`\r\n        const hour = ts.getHours() >= 10 ? ts.getHours() : `0${ts.getHours()}`\r\n        const minute = ts.getMinutes() >= 10 ? ts.getMinutes() : `0${ts.getMinutes()}`\r\n        return `${day}/${month}/${ts.getFullYear()} - ${hour}:${minute}`\r\n    }\r\n\r\n    return (\r\n        <li\r\n            key={message.id}\r\n            className={message.author === currentUser ? \"sent\" : \"received\"}\r\n        >\r\n            <p>\r\n                {message.content}\r\n                <br />\r\n                <small>\r\n                    {renderTimestamp(message.timestamp)} {message.author === currentUser ?\r\n                        message.read ?\r\n                            <i class=\"fas fa-check-double\" />\r\n                            :\r\n                            <i class=\"fas fa-check\" />\r\n                        :\r\n                        ''\r\n                    }\r\n                </small>\r\n            </p>\r\n        </li>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { csrftoken } from '../../../../config/utils'\r\nimport { SERVER_URL } from '../../../../config/settings'\r\nimport WebSocketInstance from '../../Websocket'\r\nimport SendMessageForm from './components/SendMessageForm'\r\nimport MessageListItem from './components/MessageListItem'\r\n\r\nclass Chat extends React.Component {\r\n    initialiseChat() {\r\n        this.waitForSocketConnection(() => {\r\n            WebSocketInstance.addCallbacks(\r\n                this.getMessages.bind(this),\r\n                this.addMessage.bind(this),\r\n                this.getUpdatedMessages.bind(this)\r\n            )\r\n            WebSocketInstance.fetchMessages(\r\n                this.props.username,\r\n                this.props.chatId\r\n            );\r\n        });\r\n        if (this.props.chatId) WebSocketInstance.connect(this.props.chatId)\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            messages: [],\r\n            myProfile: null,\r\n            otherUsername: this.props.otherUsername,\r\n            otherProfile: null\r\n        }\r\n        this.initialiseChat();\r\n    }\r\n\r\n    handleComponentChange = () => {\r\n        this.scrollToBottom();\r\n        if (this.state.otherUsername && (!this.state.otherProfile || this.state.otherProfile.user.username !== this.state.otherUsername)) {\r\n            fetch(`${SERVER_URL}/profile-api/user/${this.state.otherUsername}`)\r\n                .then(response => response.json())\r\n                .then(data => this.setState({\r\n                    otherProfile: data\r\n                }))\r\n        }\r\n        if (!this.state.myProfile) {\r\n            fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n                .then(response => response.json())\r\n                .then(data => this.setState({ myProfile: data }))\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n\r\n    componentDidUpdate() {\r\n        this.handleComponentChange()\r\n        document.querySelector('#chat-message-input') && document.querySelector('#chat-message-input').focus()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        WebSocketInstance.disconnect()\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (this.props.chatId !== newProps.chatId) {\r\n            WebSocketInstance.disconnect();\r\n            this.waitForSocketConnection(() => {\r\n                WebSocketInstance.fetchMessages(\r\n                    this.props.username,\r\n                    newProps.chatId\r\n                );\r\n            });\r\n            WebSocketInstance.connect(newProps.chatId);\r\n\r\n            this.props.updateMessagesComponent()\r\n            this.setState({\r\n                message: '',\r\n                otherUsername: newProps.otherUsername\r\n            })\r\n        }\r\n        if (newProps.chatId) {\r\n            this.readMessages(newProps)\r\n        }\r\n        if (this.props.updateUnreadMessagesNumber) {\r\n            this.props.updateUnreadMessagesNumber()\r\n        }\r\n        if (this.state.otherUsername && !newProps.otherUsername) {\r\n            this.setState({\r\n                otherUsername: undefined,\r\n                otherProfile: undefined\r\n            })\r\n        }\r\n    }\r\n\r\n    readMessages = props => {\r\n        fetch(`${SERVER_URL}/chat-api/read-messages`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({ chat_id: props.chatId })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                WebSocketInstance.readMessages(this.props.chatId)\r\n            })\r\n    }\r\n\r\n    waitForSocketConnection(callback) {\r\n        const component = this;\r\n        setTimeout(function () {\r\n            if (WebSocketInstance.state() === 1) {\r\n                console.log(\"Connection is made\");\r\n                callback();\r\n                return;\r\n            } else {\r\n                console.log(\"wait for connection...\");\r\n                component.waitForSocketConnection(callback);\r\n            }\r\n        }, 100);\r\n    }\r\n\r\n    getMessages(messages) {\r\n        this.setState({ messages: messages.reverse() })\r\n    }\r\n\r\n    addMessage(message) {\r\n        this.setState({ messages: [...this.state.messages, message] })\r\n        this.readMessages(this.props)\r\n    }\r\n\r\n    getUpdatedMessages(messages) {\r\n        this.setState({ messages: messages.reverse() })\r\n    }\r\n\r\n    scrollToBottom = () => {\r\n        if (document.querySelector('#chat-log')) {\r\n            const chatLog = document.querySelector('#chat-log')\r\n            chatLog.scrollTop = chatLog.scrollHeight\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.otherProfile !== null || !this.props.otherUsername ?\r\n                    <>\r\n                        {this.state.otherProfile ?\r\n                            <div className=\"current-chat\">\r\n                                <div className=\"current-chat-header\">\r\n                                    <i class=\"fas fa-arrow-left left-arrow-icon\" onClick={() => window.history.back()} />\r\n                                    <Link to={`/user/${this.state.otherProfile.slug}`}>\r\n                                        <img src={`${SERVER_URL}${this.state.otherProfile.photo}`}\r\n                                            className=\"profile-img-sm\"\r\n                                            style={{ marginRight: '5px' }}\r\n                                        />\r\n                                    </Link>\r\n                                    <div className=\"d-flex flex-column align-items-start\" style={{ height: '52px' }}>\r\n                                        <strong>{this.state.otherProfile.first_name} {this.state.otherProfile.last_name}</strong>\r\n                                        <p className=\"text-secondary\">@{this.state.otherProfile.user.username}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div id=\"chat-log\">\r\n                                    {this.state.messages.map(message => {\r\n                                            return (\r\n                                                <MessageListItem message={message} currentUser={this.props.username} />\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                                <SendMessageForm\r\n                                    WebSocketInstance={WebSocketInstance}\r\n                                    chatId={this.props.chatId}\r\n                                    username={this.props.username}\r\n                                    otherProfile={this.state.otherProfile}\r\n                                    myProfile={this.state.myProfile}\r\n                                    updateMessagesComponent={this.props.updateMessagesComponent}\r\n                                />\r\n                            </div>\r\n                            :\r\n                            <div className=\"current-chat no-chat-selected\">\r\n                                <div>\r\n                                    <strong style={{ fontSize: 'larger' }}>Você não tem uma conversa selecionada</strong>\r\n                                    <p className=\"text-secondary\">Selecione uma existente ou comece uma nova</p>\r\n                                    <button className=\"btn btn-primary\" onClick={() => this.props.openModal()}>Nova conversa</button>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </>\r\n                    :\r\n                    <div className=\"chat-loader-container\">\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chat\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../../../config/settings'\r\n\r\nexport default function ContactListItem(props) {\r\n    const profile = props.profile\r\n    const activeChats = props.activeChats\r\n    const activeChatsProfiles = props.activeChatsProfiles\r\n\r\n    let unreadMessagesCounter\r\n    let lastChatMessage\r\n\r\n    const resetUnreadMessagesCounter = () => {\r\n        unreadMessagesCounter = 0\r\n    }\r\n\r\n    const incrementUnreadMessagesCounter = () => {\r\n        unreadMessagesCounter++\r\n    }\r\n\r\n    const setLastChatMessage = message => {\r\n        lastChatMessage = message\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {profile !== undefined &&\r\n                <Link to={`/mensagens/${profile.slug}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                    {resetUnreadMessagesCounter()}\r\n                    <li className=\"list-item profile-chat-item\" style={{ whiteSpace: 'nowrap' }}>\r\n                        <img src={`${SERVER_URL}${profile.photo}`}\r\n                            className=\"profile-img-med\"\r\n                            style={{ marginRight: '10px' }}\r\n                        />\r\n                        <div className=\"d-flex flex-column align-items-start\">\r\n                            <div className=\"d-flex\" style={{ maxHeight: '30px' }}>\r\n                                <strong style={{ height: 'fit-content' }}>{profile.first_name} {profile.last_name}</strong>\r\n                                {activeChats[activeChatsProfiles.indexOf(profile)].messages.map(message => {\r\n                                    const messages = activeChats[activeChatsProfiles.indexOf(profile)].messages\r\n                                    if (messages[messages.length - 1] === message) setLastChatMessage(message.content)\r\n                                    if (message.read || message.contact.user.username !== profile.user.username) return\r\n                                    incrementUnreadMessagesCounter()\r\n                                })}\r\n                                {unreadMessagesCounter ?\r\n                                    <div className=\"notification-text-container\">\r\n                                        <div className=\"notification-text\">\r\n                                            {unreadMessagesCounter}\r\n                                        </div>\r\n                                    </div>\r\n                                    : ''\r\n                                }\r\n                                <p className=\"text-secondary\" style={{ marginLeft: '5px' }}>@{profile.user.username}</p>\r\n                            </div>\r\n                            <p className=\"text-secondary\">{lastChatMessage.slice(0, 40)}</p>\r\n                        </div>\r\n                    </li>\r\n                </Link>\r\n            }\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function ContactFilterInput(props) {\r\n    const activeChatsProfiles = props.activeChatsProfiles\r\n    const setHasFilteredProfiles = props.setHasFilteredProfiles\r\n    const fetchActiveChatProfiles = props.fetchActiveChatProfiles\r\n    const setParentState = props.setParentState\r\n    const openModal = props.openModal\r\n\r\n    const setContactSearch = query => {\r\n        if (query === '') {\r\n            setHasFilteredProfiles(false)\r\n            fetchActiveChatProfiles()\r\n            return\r\n        }\r\n        if (activeChatsProfiles) {\r\n            console.log(activeChatsProfiles)\r\n            const filteredProfiles = activeChatsProfiles.filter(p => p.user.username.includes(query))\r\n            setHasFilteredProfiles(true)\r\n            setParentState({\r\n                renderedActiveChatsProfiles: filteredProfiles\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"search-input-container\">\r\n            <input\r\n                className=\"search-input contact-filter-input\"\r\n                id=\"contact-filter-input\"\r\n                placeholder=\"Pesquisar pessoas\"\r\n                onChange={e => setContactSearch(e.target.value)}\r\n            />\r\n            <i className=\"fas fa-plus add-icon\" onClick={openModal}></i>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nimport { SERVER_URL } from '../../config/settings'\r\nimport Header from '../../components/fixed/header'\r\nimport ModalContactSearch from './components/ModalContactSearch'\r\nimport Chat from './components/chat_/Chat'\r\nimport ContactListItem from './components/ContactListItem'\r\nimport ContactFilterInput from './components/ContactFilterInput'\r\n\r\nexport default class Messages extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myProfile: null,\r\n            username: null,\r\n            chatId: null,\r\n            activeChats: null,\r\n            activeChatsProfiles: null,\r\n            renderedActiveChatsProfiles: null,\r\n            addingNewChat: false,\r\n            modalProfiles: [],\r\n        }\r\n        this.rerenderingInterval = null\r\n        this.hasFilteredProfiles = false\r\n    }\r\n\r\n    handleReceiveProps = props => {\r\n        if (props.match.params.slug) {\r\n            const participants = { username: this.state.username, other_username: props.match.params.slug }\r\n            fetch(`${SERVER_URL}/chat-api/chat-id/${JSON.stringify(participants)}`)\r\n                .then(response => response.json())\r\n                .then(data => this.setState({\r\n                    chatId: data['chat_id']\r\n                }))\r\n        }\r\n\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps === this.props) return\r\n        this.handleReceiveProps(newProps)\r\n    }\r\n\r\n    handleComponentChange() {\r\n        if (!this.state.username) {\r\n            fetch(`${SERVER_URL}/profile-api/logged-user`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    this.setState({\r\n                        username: data.username\r\n                    })\r\n                    if (this.props.match.params.slug) {\r\n                        this.handleReceiveProps(this.props)\r\n                    }\r\n                })\r\n        }\r\n        if (!this.state.activeChatsProfiles && this.state.activeChatsProfiles !== []) {\r\n            this.fetchActiveChatProfiles()\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.title = 'Mensagens / Napker'\r\n        this.handleComponentChange()\r\n        this.rerenderingInterval = window.setInterval(this.fetchActiveChatProfiles, 4000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.clearInterval(this.rerenderingInterval)\r\n        if (document.querySelector('#bottom-menu-post-icon')) {\r\n            document.querySelector('#bottom-menu-post-icon').style.display = 'unset'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (document.querySelector('#bottom-menu-post-icon') && document.querySelector('#bottom-menu-post-icon').display !== 'none') {\r\n            document.querySelector('#bottom-menu-post-icon').style.display = 'none'\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    fetchActiveChatProfiles = () => {\r\n        fetch(`${SERVER_URL}/chat-api/active-chats-profiles`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (!this.state.username) return\r\n                if (!this.hasFilteredProfiles) {\r\n                    this.setState({\r\n                        activeChats: data.chats,\r\n                        activeChatsProfiles: data.profiles,\r\n                        renderedActiveChatsProfiles: data.profiles\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    openModal = () => {\r\n        this.setState({\r\n            addingNewChat: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header page=\"Mensagens\" />\r\n                <div className=\"content d-flex messages-wrapper\">\r\n                    <ModalContactSearch\r\n                        addingNewChat={this.state.addingNewChat}\r\n                        setParentState={this.setState.bind(this)}\r\n                        modalProfiles={this.state.modalProfiles}\r\n                    />\r\n                    <div className=\"chats-list\">\r\n                        <ContactFilterInput\r\n                            activeChatsProfiles={this.state.activeChatsProfiles}\r\n                            setHasFilteredProfiles={bool => this.hasFilteredProfiles = bool}\r\n                            fetchActiveChatProfiles={this.fetchActiveChatProfiles}\r\n                            setParentState={this.setState.bind(this)}\r\n                            openModal={this.openModal}\r\n                        />\r\n                        <div className=\"list-group chats-container\">\r\n                            {this.state.renderedActiveChatsProfiles !== null ?\r\n                                this.state.renderedActiveChatsProfiles.map(profile => {\r\n                                    return (\r\n                                        <ContactListItem\r\n                                            profile={profile}\r\n                                            activeChats={this.state.activeChats}\r\n                                            activeChatsProfiles={this.state.activeChatsProfiles}\r\n                                        />\r\n                                    )\r\n                                })\r\n                                :\r\n                                <div className=\"messages-loader-container\">\r\n                                    <div className=\"loader\" />\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <Chat\r\n                        username={this.state.username}\r\n                        otherUsername={this.props.match.params.slug}\r\n                        chatId={this.state.chatId}\r\n                        openModal={this.openModal}\r\n                        updateUnreadMessagesNumber={this.props.updateUnreadMessagesNumber}\r\n                        updateMessagesComponent={this.fetchActiveChatProfiles}\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Picker from 'emoji-picker-react'\r\n\r\nimport { SERVER_URL } from '../../../config/settings'\r\nimport { csrftoken, openCloseEmojiList } from '../../../config/utils'\r\n\r\nexport default function EditProfileModal(props) {\r\n    const profile = props.profile\r\n    const isOpen = props.isOpen\r\n    const closeModal = props.closeModal\r\n\r\n    const [profileImagePreview, setProfileImagePreview] = useState(`${SERVER_URL}${profile.photo}`)\r\n    const [editingBioContent, setEditingBioContent] = useState('')\r\n\r\n    const handleProfileImageChange = e => {\r\n        const reader = new FileReader()\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                setProfileImagePreview(reader.result)\r\n            }\r\n        }\r\n        try {\r\n            reader.readAsDataURL(e.target.files[0])\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n    const handleUsernameChange = e => {\r\n        if (e.target.value.trim() !== '') {\r\n            fetch(`${SERVER_URL}/profile-api/user/${e.target.value}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if (data.bool !== 'false' && data.id !== profile.id) {\r\n                        document.querySelector('#username-taken').style.display = 'initial'\r\n                    } else {\r\n                        document.querySelector('#username-taken').style.display = 'none'\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    const onEmojiSelect = (event, emojiObject) => {\r\n        setEditingBioContent(editingBioContent + emojiObject.emoji)\r\n    }\r\n\r\n    return (\r\n        <Modal show={isOpen}\r\n            onHide={closeModal}\r\n            size=\"lg\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Editar perfil</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form\r\n                    action={`${SERVER_URL}/update-profile`}\r\n                    className=\"d-flex flex-column justify-content-center\"\r\n                    id=\"update-profile-form\"\r\n                    method=\"POST\"\r\n                    encType=\"multipart/form-data\"\r\n                >\r\n                    <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n                    <div className=\"d-flex flex-column justify-content-center align-items-center mb-2\">\r\n                        <img src={profileImagePreview}\r\n                            className=\"profile-img-big\"\r\n                            style={{ marginBottom: '25px' }}\r\n                        />\r\n                        <input\r\n                            type=\"file\"\r\n                            accept=\"image/png, image/jpg, image/jpeg\"\r\n                            className=\"profile-photo-input\"\r\n                            name=\"profile-photo\"\r\n                            onChange={handleProfileImageChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        Email: {profile.email}\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"edit-profile-input\">\r\n                        <label htmlFor=\"first-name\" className=\"profile-field-label\">Nome:</label>\r\n                        <input className=\"profile-field-input\" type=\"text\" name=\"first-name\" id=\"first-name\" placeholder={profile.first_name} />\r\n                    </div>\r\n                    <div className=\"edit-profile-input\">\r\n                        <label htmlFor=\"last-name\" className=\"profile-field-label\">Sobrenome:</label>\r\n                        <input className=\"profile-field-input\" type=\"text\" name=\"last-name\" id=\"last-name\" placeholder={profile.last_name} />\r\n                    </div>\r\n                    <div className=\"edit-profile-input\">\r\n                        <label htmlFor=\"username\" className=\"profile-field-label\">Nome de usuário:</label>\r\n                        <input\r\n                            className=\"profile-field-input\"\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            id=\"username\"\r\n                            placeholder={`@${profile.user.username}`}\r\n                            onChange={handleUsernameChange}\r\n                        />\r\n                    </div>\r\n                    <div\r\n                        id=\"username-taken\"\r\n                        style={{ display: 'none', width: '100%', textAlign: 'center', padding: '3px' }}\r\n                    >\r\n                        <span>Nome de usuário já existe</span>\r\n                    </div>\r\n                    <div className=\"edit-profile-input\">\r\n                        <label htmlFor=\"birth-date\" className=\"profile-field-label\">Data de nascimento:</label>\r\n                        <input className=\"profile-field-input\" type=\"date\" name=\"birth-date\" id=\"birth-date\" defaultValue={profile.birth_date} />\r\n                    </div>\r\n                    <div className=\"emoji-list-container bio-emoji-list\" id=\"emoji-list-container\">\r\n                        <Picker onEmojiClick={onEmojiSelect} />\r\n                    </div>\r\n                    <div className=\"edit-profile-input\">\r\n                        <label htmlFor=\"bio\" className=\"profile-field-label\">Bio:</label>\r\n                        <div className=\"email-input-container\">\r\n                            <input\r\n                                className=\"profile-field-input-email\"\r\n                                type=\"email\"\r\n                                name=\"bio\"\r\n                                id=\"bio\"\r\n                                value={editingBioContent}\r\n                                placeholder={profile.bio}\r\n                                maxLength={100}\r\n                                onChange={e => setEditingBioContent(e.target.value)}\r\n                            />\r\n                            <label\r\n                                className=\"far fa-smile\"\r\n                                id=\"emoji-button\"\r\n                                onClick={() => openCloseEmojiList(false)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <button className=\"btn btn-grey\" onClick={closeModal}>Fechar</button>\r\n                <button className=\"btn btn-primary\" onClick={() => document.querySelector('form#update-profile-form').submit()}>Salvar</button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nimport { SERVER_URL } from '../config/settings'\r\nimport ProfileListItem from '../components/ProfileListItem'\r\n\r\nexport default function LikesModal(props) {\r\n    const [myProfile, setMyProfile] = useState(null)\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n    }, [])\r\n\r\n    return (\r\n        <Modal show={props.isOpen}\r\n            onHide={props.hideModal}\r\n            size=\"lg\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title><strong>Curtidas</strong></Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"list-group\" style={{ height: '400px', overflow: 'hidden', overflowY: 'scroll' }}>\r\n                    {props.likes &&\r\n                        props.likes.map(like => like.profile).map(profile => {\r\n                            return (\r\n                                <ProfileListItem\r\n                                    profile={profile}\r\n                                    myProfile={myProfile}\r\n                                    style={{ borderTop: 'none', borderLeft: 'none', borderRight: 'none' }}\r\n                                    onClick={props.hideModal}\r\n                                />\r\n                            )\r\n                        })}\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport { SERVER_URL } from '../../../config/settings'\r\nimport LikesModal from '../../../components/LikesModal'\r\nimport PostListItem from '../../../components/PostListItem'\r\n\r\nexport default function Posts(props) {\r\n    const [myProfile, setMyProfile] = useState(null)\r\n    const [likesModal, setLikesModal] = useState({ isOpen: false, likes: null })\r\n    const profile = props.profile\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n    }, [])\r\n\r\n    const hideLikesModal = () => {\r\n        setLikesModal({\r\n            isOpen: false,\r\n            likes: null\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <LikesModal\r\n                isOpen={likesModal.isOpen}\r\n                likes={likesModal.likes}\r\n                hideModal={hideLikesModal}\r\n            />\r\n            <div className=\"post-list\">\r\n                {profile && myProfile ?\r\n                    <>\r\n                        {profile.posts.length ? profile.posts.map(post => {\r\n                            return (\r\n                                <PostListItem\r\n                                    post={post}\r\n                                    myProfile={myProfile}\r\n                                    renderParent={props.fetchProfile}\r\n                                    openLikesModal={likes => setLikesModal({ isOpen: true, likes: likes })}\r\n                                />\r\n                            )\r\n                        }) :\r\n                            <div className=\"no-posts-container\">\r\n                                {profile.id === myProfile.id ?\r\n                                    <h3 style={{ marginTop: '50px' }}>Você não tem posts</h3>\r\n                                    :\r\n                                    <h3 style={{ marginTop: '50px' }}>{profile.first_name} não tem posts</h3>\r\n                                }\r\n                            </div>\r\n                        }\r\n                    </>\r\n                    :\r\n                    <div className=\"posts-loader-container\" >\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Interests(props) {\r\n    const profile = props.profile\r\n\r\n    return (\r\n        <div className=\"interests-page-container\">\r\n            <h3>Interesses públicos de {profile.first_name}</h3>\r\n            <div className=\"interest-list-container\">\r\n                {profile && profile.interests.filter(i => i.public).map(interest => {\r\n                    return (\r\n                        <>\r\n                            {interest.title &&\r\n                                <>\r\n                                    <hr />\r\n                                    <li className=\"interest-item\">\r\n                                        {interest.title[0].toUpperCase() + interest.title.slice(1)}\r\n                                        <Link to={`/interesses/${interest.title}`}>\r\n                                            <button className=\"btn btn-secondary\" style={{ padding: '5px' }}>Pesquisar usuários</button>\r\n                                        </Link>\r\n                                    </li>\r\n                                </>\r\n                            }\r\n                        </>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../../../config/settings'\r\n\r\nexport default function ProfileData(props) {\r\n    const profile = props.profile\r\n\r\n    return (\r\n        <div className=\"profile-data-container\">\r\n            <div className=\"d-flex flex-column align-items-start\" style={{ textAlign: 'start' }}>\r\n                <p>\r\n                    <img src={`${SERVER_URL}${profile.photo}`}\r\n                        className=\"profile-img-big\"\r\n                        style={{ marginBottom: '25px' }}\r\n                    />\r\n                </p>\r\n                <p style={{ marginBottom: 0 }}><strong>{profile.first_name} {profile.last_name}</strong></p>\r\n                <p className=\"text-secondary\" style={{ marginTop: 0 }}>@{profile.user.username}</p>\r\n                <p>{profile.bio}</p>\r\n                <p className=\"text-secondary\">\r\n                    <i className=\"far fa-calendar-alt\"></i> Entrou em {profile.created.split('-').reverse().join('/')}\r\n                </p>\r\n                <p>\r\n                    <Link to={`/user/${profile.slug}/amigos`} style={{ color: '#000' }}>\r\n                        <strong>{profile.friends.length}</strong> {profile.friends.length === 1 ? 'amigo' : 'amigos'}\r\n                    </Link>\r\n                </p>\r\n            </div>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Header from '../../components/fixed/Header'\r\nimport EditProfileModal from './components/EditProfileModal'\r\nimport Posts from './components/Posts'\r\nimport Interests from './components/interests/Interests'\r\nimport { SERVER_URL } from '../../config/settings'\r\nimport ProfileData from './components/ProfileData'\r\n\r\nexport default function MyProfile() {\r\n    const [myProfile, setProfile] = useState(null)\r\n    const [isEditing, setIsEditing] = useState(false)\r\n    const [currentPageIsPosts, setCurrentPageIsPosts] = useState(true)\r\n\r\n    document.title = 'Perfil / Napker'\r\n\r\n    useEffect(() => {\r\n        fetchProfile()\r\n    }, [])\r\n\r\n    const fetchProfile = () => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setProfile(data))\r\n    }\r\n\r\n    const switchPage = e => {\r\n        document.querySelectorAll('.profile-page-menu-item-active').forEach(el => {\r\n            el.classList.remove('profile-page-menu-item-active')\r\n        })\r\n        e.target.classList.add('profile-page-menu-item-active')\r\n        if (e.target.id === 'profile-posts-page-menu-item') {\r\n            setCurrentPageIsPosts(true)\r\n        } else if (e.target.id === 'profile-interests-page-menu-item') {\r\n            setCurrentPageIsPosts(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Perfil\" />\r\n            <div className=\"content\">\r\n                {myProfile ?\r\n                    <>\r\n                        <EditProfileModal\r\n                            profile={myProfile}\r\n                            isOpen={isEditing}\r\n                            closeModal={() => setIsEditing(false)}\r\n                        />\r\n\r\n                        <ProfileData profile={myProfile}>\r\n                            <div className=\"myprofile-btn-wrapper\">\r\n                                <button\r\n                                    className=\"btn btn-secondary\"\r\n                                    type=\"button\"\r\n                                    onClick={() => setIsEditing(true)}\r\n                                    style={{ marginBottom: '10px' }}\r\n                                >\r\n                                    Editar perfil\r\n                                </button>\r\n                                <Link to='/perfil/meus-interesses'>\r\n                                    <button className=\"btn btn-secondary\">Editar interesses</button>\r\n                                </Link>\r\n                            </div>\r\n                        </ProfileData>\r\n                        <div className=\"profile-page-menu\">\r\n                            <div\r\n                                className=\"profile-page-menu-item profile-page-menu-item-active\"\r\n                                id=\"profile-posts-page-menu-item\"\r\n                                onClick={switchPage}\r\n                            >\r\n                                Posts ({myProfile.posts.length})\r\n                            </div>\r\n                            <div\r\n                                className=\"profile-page-menu-item\"\r\n                                id=\"profile-interests-page-menu-item\"\r\n                                onClick={switchPage}\r\n                            >\r\n                                Interesses ({myProfile.interests.filter(i => i.public).length})\r\n                            </div>\r\n                        </div>\r\n                        {currentPageIsPosts ?\r\n                            <Posts profile={myProfile} fetchProfile={fetchProfile} />\r\n                            :\r\n                            <Interests profile={myProfile} />\r\n                        }\r\n                    </> :\r\n                    <div className=\"profile-page-loader-container\">\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { handleLogout } from '../../../config/utils'\r\n\r\nexport default function SettingsMenu(props) {\r\n\r\n    return (\r\n        <div className=\"settings-page-menu\">\r\n            <div className=\"d-flex flex-column w-100\">\r\n                <Link to=\"/configurações/perfis-bloqueados\" style={{ textDecoration: 'none', width: '100%' }}>\r\n                    <li id=\"blocked-profiles\" onClick={() => props.pageChange('blocked-profiles')}>\r\n                        Perfis bloqueados\r\n                        <i className=\"fas fa-angle-right\" />\r\n                    </li>\r\n                </Link>\r\n                <Link to=\"/configurações/alterar-senha\" style={{ textDecoration: 'none', width: '100%' }}>\r\n                    <li id=\"change-password\" onClick={() => props.pageChange('change-password')}>\r\n                        Alterar senha\r\n                        <i className=\"fas fa-angle-right\" />\r\n                    </li>\r\n                </Link>\r\n                <Link to=\"/configurações/deletar-conta\" style={{ textDecoration: 'none', width: '100%' }}>\r\n                    <li id=\"delete-account\" onClick={() => props.pageChange('delete-account')}>\r\n                        Apagar conta\r\n                        <i className=\"fas fa-angle-right\" />\r\n                    </li>\r\n                </Link>\r\n            </div>\r\n            <li className=\"logout-btn\" onClick={handleLogout}>\r\n                Sair da conta\r\n            </li>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport { SERVER_URL } from '../../../config/settings'\r\nimport ProfileListItem from '../../../components/ProfileListItem'\r\n\r\nexport default function BlockUser() {\r\n    const [blockedProfiles, setBlockedProfiles] = useState(null)\r\n    const [myProfile, setMyProfile] = useState(null)\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n        fetch(`${SERVER_URL}/profile-api/get-blocked-profiles`)\r\n            .then(response => response.json())\r\n            .then(data => setBlockedProfiles(data))\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"settings-description-container\">\r\n            {blockedProfiles !== null && myProfile !== null ?\r\n                <>\r\n                    {!!blockedProfiles.length ?\r\n                        <div className=\"blocked-profiles-list\">\r\n                            <div className=\"blocked-profiles-title\">\r\n                                <h4>\r\n                                    Você possui {blockedProfiles.length} {blockedProfiles.length === 1 ? 'perfil bloqueado' : 'perfis bloqueados'}\r\n                                </h4>\r\n                            </div>\r\n                            {blockedProfiles.map(profile => {\r\n                                return (\r\n                                    <ProfileListItem\r\n                                        profile={profile}\r\n                                        myProfile={myProfile}\r\n                                        style={{ borderTop: 'none', borderLeft: 'none', borderRight: 'none' }}\r\n                                    />\r\n                                )\r\n                            })\r\n                            }\r\n                        </div>\r\n                        :\r\n                        <div className=\"no-blocked-profiles\">\r\n                            <h3>Você não possui perfis bloqueados</h3>\r\n                        </div>\r\n                    }\r\n                </>\r\n                :\r\n                <div className=\"settings-loader-container\">\r\n                    <div className=\"loader\" />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\n\r\nimport { csrftoken } from '../../../config/utils'\r\nimport { SERVER_URL } from '../../../config/settings'\r\n\r\nexport default function ChangePassword() {\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n    const [successMessage, setSuccessMessage] = useState(null)\r\n\r\n    const handleFormSubmit = e => {\r\n        e.preventDefault()\r\n        let password = document.querySelector('#password').value\r\n        let newPassword = document.querySelector('#new_password').value\r\n        let newPasswordc = document.querySelector('#new_passwordc').value\r\n        for (let input of document.querySelectorAll('form > input')) {\r\n            if (!input.value) {\r\n                alert('Todos os campos devem ser preenchidos!')\r\n                return\r\n            }\r\n        }\r\n        if (newPassword !== newPasswordc) {\r\n            setErrorMessage('Os campos \"Nova senha\" e \"Confirmar nova senha\" devem ter o mesmo valor!')\r\n            return\r\n        }\r\n        fetch(`${SERVER_URL}/change-password`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({\r\n                password: password,\r\n                new_password: newPassword,\r\n                new_passwordc: newPasswordc,\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data === 'success') {\r\n                    setSuccessMessage('Senha alterada com successo!')\r\n                    password = newPassword = newPasswordc = ''\r\n                } else {\r\n                    setErrorMessage(data)\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"settings-description-container\">\r\n            {errorMessage &&\r\n                <div class=\"alert alert-danger alert\" role=\"alert\">\r\n                    {errorMessage}\r\n                </div>\r\n            }\r\n            {successMessage &&\r\n                <div class=\"alert alert-success alert\" role=\"alert\">\r\n                    {successMessage}\r\n                </div>\r\n            }\r\n            <div className=\"change-password-title-container\">\r\n                <h3>Alterar senha</h3>\r\n            </div>\r\n            <hr />\r\n            <form className=\"change-password-form\">\r\n                <input id=\"password\" type=\"password\" placeholder=\"Senha atual\" autoFocus />\r\n                <br />\r\n                <a href=\"#\">Esqueceu sua senha?</a>\r\n                <hr />\r\n                <br />\r\n                <input id=\"new_password\" type=\"password\" placeholder=\"Nova senha\" />\r\n                <br />\r\n                <input id=\"new_passwordc\" type=\"password\" placeholder=\"Confirmar nova senha\" />\r\n                <br />\r\n                <button\r\n                    className=\"btn btn-primary\"\r\n                    type=\"submit\"\r\n                    onClick={handleFormSubmit}\r\n                >Confirmar</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\n\r\nimport { csrftoken } from '../../../config/utils'\r\nimport { SERVER_URL } from '../../../config/settings'\r\n\r\nexport default function DeleteAccount() {\r\n    const [displayErrorMessage, setDisplayErrorMessage] = useState(null)\r\n\r\n    const deleteAccount = () => {\r\n        if (window.confirm('Tem certeza que deseja deletar a sua conta ?\\nEsta ação é irreversível?')) {\r\n            const password = document.querySelector('#password').value\r\n            if (!password) {\r\n                window.alert('A senha não pode ficar em branco!')\r\n            } else {\r\n                fetch(`${SERVER_URL}/delete-account`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-type': 'application/json',\r\n                        'X-CSRFToken': csrftoken,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        password: password\r\n                    })\r\n                })\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        if (data === 'Wrong password') {\r\n                            setDisplayErrorMessage(true)\r\n                        } else {\r\n                            window.alert('Conta deletada com sucesso.')\r\n                            window.location.href = SERVER_URL\r\n                        }\r\n                    })\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"settings-description-container\">\r\n            {displayErrorMessage &&\r\n                <div className=\"alert\">\r\n                    <div className=\"alert alert-danger\" role=\"alert\">Senha incorreta!</div>\r\n                </div>\r\n            }\r\n            <div className=\"delete-account-title-container\">\r\n                <h3>Deletar conta</h3>\r\n            </div>\r\n            <hr />\r\n            <div className=\"delete-account-confirmation\">\r\n                <input id=\"password\" type=\"password\" placeholder=\"Senha\" autoFocus />\r\n                <hr />\r\n                <br />\r\n                Tem certeza que deseja apagar a sua conta ?\r\n                <br />\r\n                Esta ação é irreversível\r\n                <br />\r\n                <button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={deleteAccount}\r\n                >Deletar conta</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react'\r\n\r\nimport Header from '../../components/fixed/Header'\r\nimport SettingsMenu from './components/SettingsMenu'\r\nimport BlockedProfiles from './components/BlockedProfiles'\r\nimport ChangePassword from './components/ChangePassword'\r\nimport DeleteAccount from './components/DeleteAccount'\r\n\r\nexport default function Settings(props) {\r\n    if (!props.page) props.page = 'blocked-profiles'\r\n\r\n    document.title = 'Configurações / Napker'\r\n\r\n    useEffect(() => {\r\n        document.getElementById(props.page).classList.add('active')\r\n    }, [])\r\n\r\n    const pageChange = page => {\r\n        document.querySelectorAll('.active').forEach(el => {\r\n            el.classList.remove('active')\r\n        })\r\n        document.getElementById(page).classList.add('active')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Configurações\" />\r\n            <div className=\"content\">\r\n                <div className=\"settings-page-container\">\r\n                    <SettingsMenu pageChange={pageChange} />\r\n                    {props.page === 'blocked-profiles' ?\r\n                        <BlockedProfiles />\r\n                        :\r\n                        <>\r\n                            {props.page === 'change-password' ?\r\n                                <ChangePassword />\r\n                                :\r\n                                <DeleteAccount />\r\n                            }\r\n                        </>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Header from '../../components/fixed/header'\r\nimport Posts from './components/Posts'\r\nimport Interests from './components/interests/Interests'\r\nimport { SERVER_URL } from '../../config/settings'\r\nimport { csrftoken } from '../../config/utils'\r\nimport ProfileData from './components/ProfileData'\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myProfile: null,\r\n            profile: null,\r\n            alertMessage: null,\r\n            relationshipButtonLabel: '',\r\n            currentPageIsPosts: true,\r\n        }\r\n        this.slug = this.props.match.params.slug\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.fetchProfile()\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${SERVER_URL}/profile-api/relationship/${this.slug}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                let label\r\n                switch (data.relationship) {\r\n                    case 'friends':\r\n                        label = 'Amigos'\r\n                        break\r\n                    case 'invite-sent':\r\n                        label = 'Solicitado'\r\n                        break\r\n                    case 'invite-received':\r\n                        label = 'Aceitar'\r\n                        break\r\n                    case 'none':\r\n                        label = 'Solicitar'\r\n                }\r\n                this.setState({\r\n                    relationshipButtonLabel: label\r\n                })\r\n            })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        let btn = document.querySelector('#profile-page-relationship-btn')\r\n        if (btn) {\r\n            switch (btn.innerHTML) {\r\n                case 'Amigos':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.onmouseenter = () => {\r\n                        if (btn.innerHTML === 'Amigos') btn.innerHTML = 'Remover'\r\n                    }\r\n                    btn.onmouseout = () => {\r\n                        if (btn.innerHTML === 'Remover') btn.innerHTML = 'Amigos'\r\n                    }\r\n                    btn.classList.add('friend-btn')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Solicitado':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Aceitar':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Solicitar':\r\n                    btn.classList.add('btn-secondary')\r\n                    btn.classList.remove('d-none')\r\n            }\r\n        }\r\n    }\r\n\r\n    fetchProfile = () => {\r\n        fetch(`${SERVER_URL}/profile-api/user/${this.slug}`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                profile: data\r\n            }))\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ myProfile: data }))\r\n    }\r\n\r\n    sendFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/send-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    cancelFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/cancel-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    removeFromFriends = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/remove-from-friends`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    acceptFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/reply-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({\r\n                'senderid': pk,\r\n                'reply': 'accept'\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                this.props.updateNotificationsNumber()\r\n            })\r\n    }\r\n\r\n    handleRelationshipUpdate = e => {\r\n        const btn = e.target\r\n        if (btn.innerHTML === 'Solicitar') {\r\n            this.sendFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitado'\r\n            btn.className = 'btn btn-primary'\r\n        } else if (btn.innerHTML === 'Solicitado') {\r\n            this.cancelFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitar'\r\n            btn.className = 'btn btn-secondary'\r\n        } else if (btn.innerHTML === 'Amigos' || btn.innerHTML === 'Remover') {\r\n            if (window.confirm(`Remover @${this.state.profile.user.username} dos amigos?`)) {\r\n                this.removeFromFriends(btn.dataset.pk)\r\n                btn.innerHTML = 'Solicitar'\r\n                btn.className = 'btn btn-secondary'\r\n            }\r\n        } else if (btn.innerHTML === 'Aceitar') {\r\n            this.acceptFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Amigos'\r\n            btn.className = 'btn btn-primary'\r\n        }\r\n    }\r\n\r\n    blockUnblockUser = () => {\r\n        if (this.state.myProfile.blocked_users.map(u => u.id).includes(this.state.profile.user.id)) {\r\n            if (window.confirm(`Tem certeza que deseja desbloquear ${this.state.profile.first_name} ?`)) {\r\n                fetch(`${SERVER_URL}/profile-api/unblock-user`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-type': 'application/json',\r\n                        'X-CSRFToken': csrftoken,\r\n                    },\r\n                    body: JSON.stringify(this.state.profile)\r\n                })\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        console.log(data)\r\n                        this.setState({ alertMessage: `Você desbloqueou @${this.state.profile.user.username}.` })\r\n                        this.fetchProfile()\r\n                    })\r\n            }\r\n        } else {\r\n            if (window.confirm(`Tem certeza que deseja bloquear ${this.state.profile.first_name} ?`)) {\r\n                fetch(`${SERVER_URL}/profile-api/block-user`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-type': 'application/json',\r\n                        'X-CSRFToken': csrftoken,\r\n                    },\r\n                    body: JSON.stringify(this.state.profile)\r\n                })\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        console.log(data)\r\n                        this.setState({\r\n                            alertMessage: `Você bloqueou @${this.state.profile.user.username}.\r\n                         ${this.state.profile.first_name} não conseguirá mais ver o seu perfil ou te enviar mensagens.`\r\n                        })\r\n                        this.fetchProfile()\r\n                    })\r\n            }\r\n        }\r\n        this.fetchProfile()\r\n        document.querySelector('#view-more-select').style.display = 'none'\r\n    }\r\n\r\n    openCloseExtraOptions = () => {\r\n        const el = document.querySelector('#view-more-select')\r\n        const style = el.style\r\n        if (!style.display) style.display = 'none'\r\n        if (style.display === 'none') {\r\n            document.querySelector('#view-more-icon').classList.add('view-more-icon-active')\r\n            style.display = 'flex'\r\n        } else {\r\n            document.querySelector('#view-more-icon').classList.remove('view-more-icon-active')\r\n            style.display = 'none'\r\n        }\r\n    }\r\n\r\n    switchPage = e => {\r\n        document.querySelectorAll('.profile-page-menu-item-active').forEach(el => {\r\n            el.classList.remove('profile-page-menu-item-active')\r\n        })\r\n        e.target.classList.add('profile-page-menu-item-active')\r\n        if (e.target.id === 'profile-posts-page-menu-item') {\r\n            this.setState({ currentPageIsPosts: true })\r\n        } else if (e.target.id === 'profile-interests-page-menu-item') {\r\n            this.setState({ currentPageIsPosts: false })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header page={this.state.profile ? `${this.state.profile.first_name} ${this.state.profile.last_name}` : 'Perfil'}\r\n                    backArrow={true}\r\n                />\r\n                {this.state.myProfile !== null && this.state.profile !== null ?\r\n                    <div className=\"content\">\r\n                        {this.state.profile.blocked_users.map(u => u.id).includes(this.state.myProfile.user.id) ?\r\n                            <div className=\"user-blocked-me-container\">\r\n                                <h3>O usuário te bloqueou</h3>\r\n                            </div>\r\n                            :\r\n                            <>\r\n                                {this.state.alertMessage &&\r\n                                    <div class=\"alert alert-success profile-page-alert-success\" role=\"alert\">\r\n                                        {this.state.alertMessage}\r\n                                    </div>\r\n                                }\r\n                                <ProfileData profile={this.state.profile}>\r\n                                    <div className=\"profile-btn-wrapper\">\r\n                                        <i\r\n                                            className=\"fas fa-ellipsis-h btn btn-secondary mr-2\"\r\n                                            id=\"view-more-icon\"\r\n                                            onClick={this.openCloseExtraOptions}\r\n                                        />\r\n                                        <div className=\"view-more-select profile-view-more-select\" id=\"view-more-select\">\r\n                                            <Link to={`/mensagens/${this.state.profile.slug}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                                                {!this.state.myProfile.blocked_users.map(u => u.id).includes(this.state.profile.user.id) &&\r\n                                                    <li>\r\n                                                        <i class=\"fas fa-envelope text-secondary\" />\r\n                                                        Enviar mensagem\r\n                                                    </li>\r\n                                                }\r\n                                            </Link>\r\n                                            <li onClick={this.blockUnblockUser}>\r\n                                                <i class=\"fas fa-user-lock text-secondary\" />\r\n                                                {this.state.myProfile.blocked_users.map(u => u.id).includes(this.state.profile.user.id) ?\r\n                                                    'Desbloquear'\r\n                                                    :\r\n                                                    'Bloquear'\r\n                                                }\r\n                                            </li>\r\n                                        </div>\r\n                                        {!this.state.myProfile.blocked_users.map(u => u.id).includes(this.state.profile.user.id) &&\r\n                                            <button className=\"btn d-none\"\r\n                                                id=\"profile-page-relationship-btn\"\r\n                                                data-pk={this.state.profile.id}\r\n                                                onClick={this.handleRelationshipUpdate}\r\n                                            >{this.state.relationshipButtonLabel}</button>\r\n                                        }\r\n                                    </div>\r\n                                </ProfileData>\r\n                                <div className=\"profile-page-menu\">\r\n                                    <div\r\n                                        className=\"profile-page-menu-item profile-page-menu-item-active\"\r\n                                        id=\"profile-posts-page-menu-item\"\r\n                                        onClick={this.switchPage}\r\n                                    >\r\n                                        Posts ({this.state.profile.posts.length})\r\n                                    </div>\r\n                                    <div\r\n                                        className=\"profile-page-menu-item\"\r\n                                        id=\"profile-interests-page-menu-item\"\r\n                                        onClick={this.switchPage}\r\n                                    >\r\n                                        Interesses ({this.state.profile.interests.filter(i => i.public).length})\r\n                                    </div>\r\n                                </div>\r\n                                {this.state.currentPageIsPosts ?\r\n                                    <Posts profile={this.state.profile} fetchProfile={this.fetchProfile} /> :\r\n                                    <Interests profile={this.state.profile} />\r\n                                }\r\n                            </>\r\n                        }\r\n                    </div>\r\n                    :\r\n                    <div className=\"profile-page-loader-container\">\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile","import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../../../config/settings'\r\nimport Header from '../../../components/fixed/header'\r\nimport ProfileListItem from '../../../components/ProfileListItem'\r\n\r\nexport default function Friends() {\r\n    const [friends, setFriends] = useState(null)\r\n    const [profile, setProfile] = useState(null)\r\n    const [myProfile, setMyProfile] = useState(null)\r\n    const { slug } = useParams()\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/user/${slug}`)\r\n            .then(response => response.json())\r\n            .then(data => setProfile(data))\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (profile) {\r\n            fetch(`${SERVER_URL}/profile-api/get-friends-profiles/${profile.slug}`)\r\n                .then(response => response.json())\r\n                .then(data => setFriends(data))\r\n        }\r\n    }, [profile])\r\n\r\n    return (\r\n        <>\r\n            <Header page={profile !== null ? `${profile.first_name} ${profile.last_name} / Amigos` : 'Perfil / Amigos'}\r\n                backArrow={true}\r\n            />\r\n            <div className=\"content\">\r\n                <div className=\"list-group profile-friends-container\">\r\n                    {friends !== null && myProfile !== null ?\r\n                        <>\r\n                            {friends.length ? friends.map(friend => {\r\n                                return (\r\n                                    <ProfileListItem\r\n                                        profile={friend}\r\n                                        myProfile={myProfile}\r\n                                        style={{ borderTop: 'none', borderLeft: 'none', borderRight: 'none' }}\r\n                                    />\r\n                                )\r\n                            }) :\r\n                                <h3 style={{ marginTop: '30px' }}>\r\n                                    {profile ? `${profile.first_name} ainda não possui amigos` : 'Você ainda não possui amigos'}\r\n                                </h3>\r\n                            }\r\n                        </>\r\n                        :\r\n                        <div className=\"profiles-loader-container\">\r\n                            <div className=\"loader\" />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../../../../../config/settings'\r\nimport Header from '../../../../../components/fixed/header'\r\nimport ProfileListItem from '../../../../../components/ProfileListItem'\r\n\r\nexport default function InterestProfiles() {\r\n    const [myProfile, setMyProfile] = useState(null)\r\n    const [profiles, setProfiles] = useState(null)\r\n\r\n    const { interest } = useParams()\r\n\r\n    document.title = `${interest[0].toUpperCase() + interest.slice(1)} / Napker`\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n        fetch(`${SERVER_URL}/profile-api/interest-profile-list/${interest}`)\r\n            .then(response => response.json())\r\n            .then(data => setProfiles(data))\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Header\r\n                page={`Interesse / ${interest[0].toUpperCase() + interest.slice(1)}`}\r\n                backArrow={true}\r\n            />\r\n            <div className=\"content\">\r\n                <div className=\"interests-title-container\">\r\n                    <h3>Perfis interessados em \"{interest}\"</h3>\r\n                </div>\r\n                <div className=\"list-group interest-profile-list\">\r\n                    {myProfile !== null && profiles !== null ?\r\n                        profiles.map(profile => {\r\n                            return (\r\n                                <ProfileListItem\r\n                                    profile={profile}\r\n                                    myProfile={myProfile}\r\n                                    style={{ borderLeft: 'none', borderTop: 'none', borderRight: 'none' }}\r\n                                />\r\n                            )\r\n                        }) :\r\n                        <div className=\"profiles-loader-container\">\r\n                            <div className=\"loader\" />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport { SERVER_URL } from '../../../../../config/settings'\r\n\r\nexport default function PublicInterests(props) {\r\n\r\n    useEffect(() => {\r\n        if (document.querySelector('.public-interests-container')) {\r\n            const tagContainer = document.querySelector('.public-tag-container');\r\n            const input = document.querySelector('.public-tag-container input');\r\n\r\n            let tags = props.myProfile.interests.filter(i => i.public).map(i => i.title);\r\n            const interestsInput = document.querySelector('#public-interests')\r\n            addTags()\r\n\r\n            function createTag(label) {\r\n                const div = document.createElement('div');\r\n                div.classList.add('tag');\r\n                div.classList.add('public-tag');\r\n                const span = document.createElement('span');\r\n                span.innerHTML = label;\r\n                const closeIcon = document.createElement('i');\r\n                closeIcon.classList.add('public-close-icon')\r\n                closeIcon.innerHTML = '×';\r\n                closeIcon.classList.add('material-icons')\r\n                closeIcon.setAttribute('data-item', label);\r\n                div.appendChild(span);\r\n                div.appendChild(closeIcon);\r\n                if (!interestsInput.value.includes(label)) interestsInput.value += ` ${label}`;\r\n                return div;\r\n            }\r\n\r\n            function clearTags() {\r\n                document.querySelectorAll('.public-tag').forEach(tag => {\r\n                    tag.parentElement.removeChild(tag);\r\n                });\r\n            }\r\n\r\n            function addTags() {\r\n                clearTags();\r\n                tags.sort()\r\n                tags.slice().reverse().forEach(tag => {\r\n                    tagContainer.prepend(createTag(tag));\r\n                });\r\n                props.setInterests(tags)\r\n            }\r\n\r\n            input.addEventListener('keydown', (e) => {\r\n                if (e.key === 'Enter') {\r\n                    e.target.value.split(',').forEach(tag => {\r\n                        if (tag.length < 3) {\r\n                            window.alert('Os interesses devem ter no mínimo 3 caracteres!')\r\n                        } else {\r\n                            tags.push(tag)\r\n                        }\r\n                    });\r\n\r\n                    e.preventDefault()\r\n\r\n                    addTags();\r\n                    input.value = '';\r\n                    return false; //prevent the form to submit\r\n                }\r\n            });\r\n            document.addEventListener('click', (e) => {\r\n                if (e.target.classList.contains('public-close-icon')) {\r\n                    const tagLabel = e.target.getAttribute('data-item');\r\n                    const index = tags.indexOf(tagLabel);\r\n                    tags = [...tags.slice(0, index), ...tags.slice(index + 1)];\r\n                    addTags();\r\n                }\r\n            })\r\n\r\n            input.focus();\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"public-interests-container\">\r\n            <h3>Interesses públicos</h3>\r\n            <p>\r\n                Os interesses públicos são visíveis para os outros usuários.\r\n                Coloque aqui interesses que sem eles seu perfil ficaria incompleto.\r\n            </p>\r\n            <div class=\"tag-container public-tag-container\">\r\n                <input placeholder=\"Digite e pressione 'Enter'\" maxLength=\"50\" />\r\n                <input type=\"hidden\" name=\"public-interests\" id=\"public-interests\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport { SERVER_URL } from '../../../../../config/settings'\r\n\r\nexport default function PrivateInterests(props) {\r\n\r\n    useEffect(() => {\r\n        if (document.querySelector('.private-interests-container')) {\r\n            const tagContainer = document.querySelector('.private-tag-container');\r\n            const input = document.querySelector('.private-tag-container input');\r\n\r\n            let tags = props.myProfile.interests.filter(i => !i.public).map(i => i.title);\r\n            const interestsInput = document.querySelector('#private-interests')\r\n            addTags()\r\n\r\n            function createTag(label) {\r\n                const div = document.createElement('div');\r\n                div.classList.add('tag');\r\n                div.classList.add('private-tag');\r\n                const span = document.createElement('span');\r\n                span.innerHTML = label;\r\n                const closeIcon = document.createElement('i');\r\n                closeIcon.classList.add('private-close-icon')\r\n                closeIcon.classList.add('material-icons')\r\n                closeIcon.innerHTML = '×';\r\n                closeIcon.setAttribute('data-item', label);\r\n                div.appendChild(span);\r\n                div.appendChild(closeIcon);\r\n                if (!interestsInput.value.includes(label)) interestsInput.value += ` ${label}`;\r\n                return div;\r\n            }\r\n\r\n            function clearTags() {\r\n                document.querySelectorAll('.private-tag').forEach(tag => {\r\n                    tag.parentElement.removeChild(tag);\r\n                });\r\n            }\r\n\r\n            function addTags() {\r\n                clearTags();\r\n                tags.sort()\r\n                tags.slice().reverse().forEach(tag => {\r\n                    tagContainer.prepend(createTag(tag));\r\n                });\r\n                props.setInterests(tags)\r\n            }\r\n\r\n            input.addEventListener('keydown', (e) => {\r\n                if (e.key === 'Enter') {\r\n                    e.target.value.split(',').forEach(tag => {\r\n                        if (tag.length < 3) {\r\n                            window.alert('Os interesses devem ter no mínimo 3 caracteres!')\r\n                        } else {\r\n                            tags.push(tag)\r\n                        }\r\n                    });\r\n\r\n                    e.preventDefault()\r\n\r\n                    addTags();\r\n                    input.value = '';\r\n                    return false; //prevent the form to submit\r\n                }\r\n            });\r\n            document.addEventListener('click', (e) => {\r\n                if (e.target.classList.contains('private-close-icon')) {\r\n                    const tagLabel = e.target.getAttribute('data-item');\r\n                    const index = tags.indexOf(tagLabel);\r\n                    tags = [...tags.slice(0, index), ...tags.slice(index + 1)];\r\n                    addTags();\r\n                }\r\n            })\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"private-interests-container\">\r\n            <h3>Interesses privados</h3>\r\n            <p>\r\n                Os interesses privados não são visíveis para os outros usuários.\r\n                Eles servem para aumentar a precisão das recomendações de perfis que\r\n                possuem o máximo de afinidade possível com você.\r\n            </p>\r\n            <div class=\"tag-container private-tag-container\">\r\n                <input placeholder=\"Digite e pressione 'Enter'\" maxLength=\"50\" />\r\n                <input type=\"hidden\" name=\"private-interests\" id=\"private-interests\" />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport Header from '../../../../components/fixed/header'\r\nimport PublicInterests from './components/PublicInterests'\r\nimport PrivateInterests from './components/PrivateInterests'\r\nimport { SERVER_URL } from '../../../../config/settings'\r\nimport { csrftoken } from '../../../../config/utils'\r\n\r\nexport default function EditInterests() {\r\n    const [myProfile, setMyProfile] = useState(null)\r\n    let [publicInterests, setPublicInterests] = [null, value => publicInterests = value]\r\n    let [privateInterests, setPrivateInterests] = [null, value => privateInterests = value]\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n    }, [])\r\n\r\n    const submitInterests = () => {\r\n        fetch(`${SERVER_URL}/profile-api/set-myinterests`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({\r\n                public_interests: publicInterests.sort(),\r\n                private_interests: privateInterests.sort()\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                document.querySelector('#interests-updated-message').style.display = 'block'\r\n                document.documentElement.scrollTop = 0\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Meus interesses\" backArrow={true} />\r\n            <div className=\"content\">\r\n                <p\r\n                    className=\"edit-interests-success-message\"\r\n                    id=\"interests-updated-message\"\r\n                >\r\n                    Interesses atualizados com sucesso\r\n                </p>\r\n                {myProfile ?\r\n                    <div className=\"interests-page-container\">\r\n                        <button\r\n                            className=\"btn btn-primary\"\r\n                            onClick={submitInterests}\r\n                        >\r\n                            Salvar\r\n                        </button>\r\n                        <hr />\r\n                        <PublicInterests\r\n                            myProfile={myProfile}\r\n                            setInterests={setPublicInterests}\r\n                        />\r\n\r\n                        <br />\r\n                        <hr />\r\n                        <br />\r\n\r\n                        <PrivateInterests\r\n                            myProfile={myProfile}\r\n                            setInterests={setPrivateInterests}\r\n                        />\r\n                    </div> :\r\n                    <div className=\"edit-interests-loader-container\">\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Picker from 'emoji-picker-react'\r\n\r\nimport { csrftoken, openCloseEmojiList } from '../config/utils'\r\nimport { SERVER_URL } from '../config/settings'\r\n\r\nexport default function CommentModal(props) {\r\n    const [commentContent, setCommentContent] = useState('')\r\n\r\n    const post = props.post\r\n\r\n    const handleCommentChange = e => {\r\n        setCommentContent(e.target.value)\r\n        const el = document.querySelector('#comment-form-submit')\r\n        el.disabled = e.target.value === ''\r\n    }\r\n\r\n    const onEmojiSelect = (event, emojiObject) => {\r\n        setCommentContent(commentContent + emojiObject.emoji)\r\n        document.querySelector('#comment-form-submit').disabled = false\r\n    }\r\n\r\n    return (\r\n        <Modal show={props.isOpen}\r\n            onHide={props.hideModal}\r\n            size=\"lg\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title><strong>Comentar</strong></Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"post-container\">\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <div className=\"post-row\">\r\n                            <div className=\"post-col\">\r\n                                <img src={`${SERVER_URL}${post.author.photo}`}\r\n                                    className=\"profile-img-med\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"post-col\">\r\n                                <div>\r\n                                    <strong>{post.author.first_name} {post.author.last_name} </strong>\r\n                                    <p className=\"text-secondary d-inline-block\">\r\n                                        @{post.author.user.username} • {post.created.split('-').reverse().join('/')}\r\n                                    </p>\r\n                                </div>\r\n                                <div style={{ textAlign: 'start' }}>\r\n                                    {post.content}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <form action={`${SERVER_URL}/post-api/comment-post/${post.id}`} method=\"POST\" className=\"comment-form\">\r\n                    <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n                    <label\r\n                        className=\"far fa-smile\"\r\n                        id=\"emoji-button\"\r\n                        onClick={() => openCloseEmojiList(false)}\r\n                    />\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"comment-content\"\r\n                        value={commentContent}\r\n                        placeholder=\"Comente alguma coisa\"\r\n                        style={{ marginRight: '5px', height: '40px' }}\r\n                        onChange={handleCommentChange}\r\n                    />\r\n                    <div className=\"emoji-list-container chat-emoji-list\" id=\"emoji-list-container\">\r\n                        <Picker onEmojiClick={onEmojiSelect} />\r\n                    </div>\r\n                    <button\r\n                        className=\"btn btn-primary\"\r\n                        id=\"comment-form-submit\"\r\n                        type=\"submit\"\r\n                        disabled\r\n                    >\r\n                        Enviar\r\n                    </button>\r\n                </form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../../../../../../../config/settings'\r\nimport { csrftoken } from '../../../../../../../config/utils'\r\n\r\nexport default function CommentListItem(props) {\r\n    const comment = props.comment\r\n    const myProfile = props.myProfile\r\n    const fetchPost = props.fetchPost\r\n    const setPostLikesModal = props.setPostLikesModal\r\n\r\n    const likeUnlikeComment = e => {\r\n        const likeBtn = e.target\r\n        if (likeBtn.classList.contains('fas')) {\r\n            likeBtn.classList.remove('fas') //border heart\r\n            likeBtn.classList.add('far')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/unlike-comment/${likeBtn.dataset.commentid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPost()\r\n                })\r\n        } else {\r\n            likeBtn.classList.remove('far') //border heart\r\n            likeBtn.classList.add('fas')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/like-comment/${likeBtn.dataset.commentid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPost()\r\n                })\r\n        }\r\n    }\r\n\r\n    const deleteComment = (e, commentId) => {\r\n        e.stopPropagation()\r\n        const el = document.querySelector(`#post-comment-${commentId}`)\r\n        if (window.confirm('Tem certeza que deseja apagar o comentário?\\nEssa ação é irreversível.')) {\r\n            el.style.animationPlayState = 'running'\r\n            console.log(el, el.style.animationPlayState)\r\n            el.addEventListener('animationend', () => {\r\n                fetchPost()\r\n            })\r\n            fetch(`${SERVER_URL}/post-api/delete-comment/${commentId}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <li\r\n            className=\"post-container\"\r\n            id={`post-comment-${comment.id}`}\r\n            key={comment.id}\r\n        >\r\n            <div className=\"d-flex justify-content-between\">\r\n                <div className=\"post-row\">\r\n                    <div className=\"post-col\">\r\n                        <Link to={comment.author.id === myProfile.id ?\r\n                            '/perfil' : `/user/${comment.author.slug}`}\r\n                        >\r\n                            <img src={`${SERVER_URL}${comment.author.photo}`}\r\n                                className=\"profile-img-sm\"\r\n                            />\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"post-col\">\r\n                        <Link to={comment.author.id === myProfile.id ?\r\n                            '/perfil' : `/user/${comment.author.slug}`}\r\n                            style={{ color: '#000' }}\r\n                        >\r\n                            <div style={{ textAlign: 'start' }}>\r\n                                <strong style={{ marginRight: '5px' }}>\r\n                                    {comment.author.first_name} {comment.author.last_name}\r\n                                </strong>\r\n                                <p className=\"text-secondary d-inline-block\">\r\n                                    @{comment.author.user.username} • {comment.created.split('-').reverse().join('/')}\r\n                                </p>\r\n                            </div>\r\n                        </Link>\r\n                        <div style={{ textAlign: 'start' }}>\r\n                            {comment.content}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {comment.author.id == myProfile.id &&\r\n                    <i\r\n                        className=\"far fa-trash-alt trash-icon text-secondary\"\r\n                        style={{ margin: '20px 20px 0 0' }}\r\n                        onClick={e => deleteComment(e, comment.id)}\r\n                    />\r\n                }\r\n            </div>\r\n            <div className=\"post-actions\" style={{ padding: '0 0 2px 63px' }}>\r\n                <p className=\"text-secondary\">\r\n                    {comment.likes.map(like => like.profile.id).includes(myProfile.id) ?\r\n                        <i class=\"fas fa-heart\"\r\n                            data-commentid={comment.id}\r\n                            onClick={likeUnlikeComment}\r\n                        />\r\n                        :\r\n                        <i class=\"far fa-heart\"\r\n                            data-commentid={comment.id}\r\n                            onClick={likeUnlikeComment}\r\n                        />\r\n                    }\r\n                    <p\r\n                        className=\"post-likes-number\"\r\n                        onClick={() => setPostLikesModal({ isOpen: true, likes: comment.likes })}\r\n                    >\r\n                        {comment.likes.length}\r\n                    </p>\r\n                </p>\r\n            </div>\r\n        </li>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../../../../../../config/settings'\r\nimport { csrftoken } from '../../../../../../config/utils'\r\nimport CommentModal from '../../../../../../components/CommentModal'\r\nimport LikesModal from '../../../../../../components/LikesModal'\r\nimport Header from '../../../../../../components/fixed/Header'\r\nimport CommentListItem from './components/CommentListItem'\r\n\r\nexport default function Post(props) {\r\n    const [post, setPost] = useState(null)\r\n    const [myProfile, setMyProfile] = useState(null)\r\n    const [commentModalIsOpen, setCommentModalIsOpen] = useState(props.commentModalIsOpen)\r\n    const [postLikesModal, setPostLikesModal] = useState({ isOpen: false, likes: null })\r\n    const [commentLikesModal, setCommentLikesModal] = useState({ isOpen: false, likes: null })\r\n\r\n    const { id } = useParams()\r\n\r\n    useEffect(() => {\r\n        fetchPost()\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n    }, [])\r\n\r\n    const fetchPost = () => {\r\n        fetch(`${SERVER_URL}/post-api/post/${id}`)\r\n            .then(response => response.json())\r\n            .then(data => setPost(data))\r\n    }\r\n\r\n    const likeUnlikePost = e => {\r\n        const likeBtn = e.target\r\n        if (likeBtn.classList.contains('fas')) {\r\n            likeBtn.classList.remove('fas') //border heart\r\n            likeBtn.classList.add('far')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/unlike-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPost()\r\n                })\r\n        } else {\r\n            likeBtn.classList.remove('far') //border heart\r\n            likeBtn.classList.add('fas')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/like-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPost()\r\n                })\r\n        }\r\n    }\r\n\r\n    const deletePost = (e, postId) => {\r\n        e.stopPropagation()\r\n        const el = document.querySelector(`#profile-post-${postId}`)\r\n        if (window.confirm('Tem certeza que deseja apagar o post?\\nEssa ação é irreversível.')) {\r\n            fetch(`${SERVER_URL}/post-api/delete-post/${postId}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    window.location.href = '/'\r\n                })\r\n        }\r\n    }\r\n\r\n    const hideCommentModal = () => {\r\n        setCommentModalIsOpen(false)\r\n    }\r\n\r\n    const hidePostLikesModal = () => {\r\n        setPostLikesModal({\r\n            isOpen: false,\r\n            likes: null\r\n        })\r\n    }\r\n\r\n    const hideCommentLikesModal = () => {\r\n        setCommentLikesModal({\r\n            isOpen: false,\r\n            likes: null\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"post-page-container\">\r\n            {post &&\r\n                <CommentModal\r\n                    isOpen={commentModalIsOpen}\r\n                    hideModal={hideCommentModal}\r\n                    post={post}\r\n                />\r\n            }\r\n            <LikesModal\r\n                isOpen={postLikesModal.isOpen}\r\n                likes={postLikesModal.likes}\r\n                hideModal={hidePostLikesModal}\r\n            />\r\n            <LikesModal\r\n                isOpen={commentLikesModal.isOpen}\r\n                likes={commentLikesModal.likes}\r\n                hideModal={hideCommentLikesModal}\r\n            />\r\n            <Header page=\"Post\" backArrow={true} />\r\n            <div className=\"content\">\r\n                {post && myProfile ?\r\n                    <>\r\n                        <div className=\"post-container\">\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                <div className=\"post-row\">\r\n                                    <div className=\"post-col\">\r\n                                        <Link to={post.author.id === myProfile.id ?\r\n                                            '/perfil' : `/user/${post.author.slug}`}\r\n                                        >\r\n                                            <img src={`${SERVER_URL}${post.author.photo}`}\r\n                                                className=\"profile-img-med\"\r\n                                            />\r\n                                        </Link>\r\n                                    </div>\r\n                                    <div className=\"post-col\">\r\n                                        <Link to={post.author.id === myProfile.id ?\r\n                                            '/perfil' : `/user/${post.author.slug}`}\r\n                                            style={{ color: '#000' }}\r\n                                        >\r\n                                            <div style={{ textAlign: 'start' }}>\r\n                                                <strong>{post.author.first_name} {post.author.last_name} </strong>\r\n                                                <p className=\"text-secondary d-inline-block\">\r\n                                                    @{post.author.user.username} • {post.created.split('-').reverse().join('/')}\r\n                                                </p>\r\n                                            </div>\r\n                                        </Link>\r\n                                        <div style={{ textAlign: 'start', fontSize: 'larger' }}>\r\n                                            {post.content}\r\n                                        </div>\r\n                                        {post.image &&\r\n                                            <img src={`${SERVER_URL}${post.image}`} className=\"post-img\" />\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                {myProfile.id == post.author.id &&\r\n                                    <i\r\n                                        className=\"far fa-trash-alt trash-icon text-secondary\"\r\n                                        style={{ margin: '20px 20px 0 0' }}\r\n                                        onClick={e => deletePost(e, post.id)}\r\n                                    />\r\n                                }\r\n                            </div>\r\n                            <div className=\"post-actions\">\r\n                                <p className=\"text-secondary\" style={{ fontSize: 'large' }}>\r\n                                    <Link to={`/post/${id}/comentar`} className=\"text-secondary\">\r\n                                        <i\r\n                                            class=\"far fa-comment\"\r\n                                            onClick={() => setCommentModalIsOpen(true)}\r\n                                        />\r\n                                    </Link>{post.comments.length}\r\n                                    {post.likes.map(like => like.profile.id).includes(myProfile.id) ?\r\n                                        <i class=\"fas fa-heart\"\r\n                                            data-postid={post.id}\r\n                                            onClick={likeUnlikePost}\r\n                                        />\r\n                                        :\r\n                                        <i class=\"far fa-heart\"\r\n                                            data-postid={post.id}\r\n                                            onClick={likeUnlikePost}\r\n                                        />\r\n                                    }\r\n                                    <p className=\"post-likes-number\"\r\n                                        onClick={() => setPostLikesModal({ isOpen: true, likes: post.likes })}\r\n                                    >\r\n                                        {post.likes.length}\r\n                                    </p>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"comment-list\">\r\n                            {post.comments.map(comment => {\r\n                                return (\r\n                                    <CommentListItem\r\n                                        comment={comment}\r\n                                        myProfile={myProfile}\r\n                                        fetchPost={fetchPost}\r\n                                        setPostLikesModal={setPostLikesModal}\r\n                                    />\r\n                                )\r\n                            })\r\n                            }\r\n                        </div>\r\n                    </> :\r\n                    <div className=\"posts-loader-container\" >\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Header from '../components/fixed/header'\r\nimport { SERVER_URL } from '../config/settings'\r\nimport { csrftoken } from '../config/utils'\r\n\r\nexport default class Posts extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            profile: null,\r\n            postContent: '',\r\n            postFormImagePreview: null\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ profile: data }))\r\n    }\r\n\r\n\r\n    handlePostContentChange = e => {\r\n        this.setState({ postContent: e.target.value })\r\n        const el = document.querySelector('#post-form-submit-btn')\r\n        el.disabled = e.target.value.trim() === '' && !this.state.postFormImagePreview\r\n    }\r\n\r\n    handlePostImageChange = e => {\r\n        const reader = new FileReader()\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                this.setState({ postFormImagePreview: reader.result })\r\n                document.querySelector('#post-img-container').style.display = 'initial'\r\n                document.querySelector('#post-form-submit-btn').disabled = false\r\n            }\r\n        }\r\n        try {\r\n            reader.readAsDataURL(e.target.files[0])\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n    handleCloseImage = () => {\r\n        document.querySelector('#post-img-container').style.display = 'none'\r\n        document.querySelector('#post-image').value = ''\r\n        if (this.state.postContent.trim() === '') document.querySelector('#post-form-submit-btn').disabled = true\r\n        this.setState({ postFormImagePreview: null })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content\">\r\n                <Header page=\"Novo post\" backArrow={true} />\r\n                <div className=\"post-form-page-container\">\r\n                    {this.state.profile ?\r\n                        <form\r\n                            action={`${SERVER_URL}/post-api/create-post`}\r\n                            method=\"POST\"\r\n                            className=\"create-post-form-mobile\"\r\n                            encType=\"multipart/form-data\"\r\n                        >\r\n                            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n                            <div className=\"d-flex\">\r\n                                <Link to=\"/perfil\">\r\n                                    <img\r\n                                        src={`${SERVER_URL}${this.state.profile.photo}`}\r\n                                        className=\"profile-img-med\"\r\n                                    />\r\n                                </Link>\r\n                                <textarea\r\n                                    className=\"post-content-textarea\"\r\n                                    name=\"post-content\"\r\n                                    value={this.state.postContent}\r\n                                    placeholder=\"No que você está pensando?\"\r\n                                    maxLength={300}\r\n                                    autoFocus\r\n                                    onChange={this.handlePostContentChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"w-100 d-flex justify-content-center\">\r\n                                <div\r\n                                    className=\"post-img-container\"\r\n                                    id=\"post-img-container\">\r\n                                    <div\r\n                                        className=\"post-img-options\"\r\n                                    >\r\n                                        <i\r\n                                            className=\"far fa-times-circle\"\r\n                                            onClick={this.handleCloseImage}\r\n                                        />\r\n                                    </div>\r\n                                    <img\r\n                                        src={this.state.postFormImagePreview}\r\n                                        className=\"post-img post-form-img-preview\"\r\n                                        id=\"post-form-img-preview\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"d-flex justify-content-between\" style={{ margin: '0px 70px 0 70px' }}>\r\n                                <div className=\"post-extra-options\">\r\n                                    <label htmlFor=\"post-image\" class=\"far fa-image\" />\r\n                                    <input\r\n                                        type=\"file\"\r\n                                        accept=\"image/png, image/jpg, image/jpeg\"\r\n                                        name=\"post-image\"\r\n                                        id=\"post-image\"\r\n                                        style={{ display: 'none' }}\r\n                                        onChange={this.handlePostImageChange}\r\n                                    />\r\n                                </div>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\"\r\n                                    id=\"post-form-submit-btn\"\r\n                                    style={{ height: '40px' }}\r\n                                    disabled\r\n                                >\r\n                                    Postar\r\n                            </button>\r\n                            </div>\r\n                        </form>\r\n                        :\r\n                        <div className=\"posts-loader-container\" >\r\n                            <div className=\"loader\" />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\nimport Sidebar from './components/fixed/Sidebar'\r\nimport BottomMenu from './components/fixed/BottomMenu'\r\nimport Home from './pages/home/Home'\r\nimport Notifications from './pages/notifications/Notifications'\r\nimport Messages from './pages/messages_/Messages'\r\nimport MyProfile from './pages/profile/MyProfile'\r\nimport Settings from './pages/settings_/Settings'\r\nimport Profile from './pages/profile/Profile'\r\nimport ProfileFriends from './pages/profile/pages/Friends'\r\nimport InterestProfiles from './pages/profile/components/interests/pages/InterestProfiles'\r\nimport EditInterests from './pages/profile/pages/edit_interests/EditInterests'\r\nimport Post from './pages/home/components/posts_/pages/post_/Post'\r\n\r\nimport PostFormPage from './pages/PostFormPage'\r\n\r\nimport { SERVER_URL } from './config/settings'\r\n\r\nexport default function App() {\r\n    const [invitesReceivedNumber, setInvitesReceived] = useState(0)\r\n    const [unvisualizedLikesNumber, setUnvisulaizedLikes] = useState(0)\r\n    const [unvisualizedCommentsNumber, setUnvisulaizedComments] = useState(0)\r\n    let notificationsNumber = invitesReceivedNumber + unvisualizedLikesNumber + unvisualizedCommentsNumber\r\n    const [unreadMessagesNumber, setUnreadMessagesNumber] = useState(0)\r\n\r\n    useEffect(() => {\r\n        updateNotificationsNumber()\r\n        updateUnreadMessagesNumber()\r\n        window.setInterval(() => {\r\n            updateNotificationsNumber()\r\n            updateUnreadMessagesNumber()\r\n        }, 6000)\r\n    }, [])\r\n\r\n    const updateNotificationsNumber = () => {\r\n        fetch(`${SERVER_URL}/profile-api/myinvites`)\r\n            .then(response => response.json())\r\n            .then(data => setInvitesReceived(data.length))\r\n        fetch(`${SERVER_URL}/post-api/unvisualized-post-likes`)\r\n            .then(response => response.json())\r\n            .then(data => setUnvisulaizedLikes(data.length))\r\n        fetch(`${SERVER_URL}/post-api/unvisualized-post-comments`)\r\n            .then(response => response.json())\r\n            .then(data => setUnvisulaizedComments(data.length))\r\n    }\r\n\r\n    const updateUnreadMessagesNumber = () => {\r\n        fetch(`${SERVER_URL}/chat-api/all-unread-messages-number`)\r\n            .then(response => response.json())\r\n            .then(data => setUnreadMessagesNumber(data['unread_messages_number']))\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <Sidebar notificationsNumber={notificationsNumber} unreadMessagesNumber={unreadMessagesNumber} />\r\n            <div className=\"main-content\">\r\n                <Switch>\r\n                    <Route path=\"/home\" component={Home} />\r\n                    <Route path=\"/notificações\" render={props => (\r\n                        <Notifications {...props} updateNotificationsNumber={updateNotificationsNumber} />\r\n                    )} />\r\n                    <Route path=\"/mensagens\" exact component={Messages} />\r\n                    <Route path=\"/mensagens/:slug\" render={props => (\r\n                        <Messages {...props} updateUnreadMessagesNumber={updateUnreadMessagesNumber} />\r\n                    )} />\r\n                    <Route path=\"/perfil\" exact component={MyProfile} />\r\n                    <Route path=\"/perfil/meus-interesses\" component={EditInterests} />\r\n                    <Route path=\"/configurações\" exact component={Settings} />\r\n                    <Route path=\"/configurações/perfis-bloqueados\" exact render={props => (\r\n                        <Settings {...props} page={'blocked-profiles'} />\r\n                    )} />\r\n                    <Route path=\"/configurações/alterar-senha\" exact render={props => (\r\n                        <Settings {...props} page={'change-password'} />\r\n                    )} />\r\n                    <Route path=\"/configurações/deletar-conta\" exact render={props => (\r\n                        <Settings {...props} page={'delete-account'} />\r\n                    )} />\r\n                    <Route path=\"/user/:slug\" exact render={props => (\r\n                        <Profile {...props} updateNotificationsNumber={updateNotificationsNumber} />\r\n                    )} />\r\n                    <Route path=\"/user/:slug/amigos\" component={ProfileFriends} />\r\n                    <Route path=\"/post/:id\" exact component={Post} />\r\n                    <Route path=\"/post/:id/comentar\" render={props => (\r\n                        <Post {...props} commentModalIsOpen={true} />\r\n                    )} />\r\n                    <Route path=\"/interesses/:interest\" component={InterestProfiles} />\r\n\r\n                    <Route path=\"/postar\" component={PostFormPage} />\r\n                </Switch>\r\n                <BottomMenu notificationsNumber={notificationsNumber} unreadMessagesNumber={unreadMessagesNumber} />\r\n            </div>\r\n        </Router>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './assets/bottomMenu.css'\r\nimport './assets/chat.css'\r\nimport './assets/commentModal.css'\r\nimport './assets/notifications.css'\r\nimport './assets/posts.css'\r\nimport './assets/profile.css'\r\nimport './assets/profiles.css'\r\nimport './assets/settings.css'\r\nimport './assets/sidebar.css'\r\nimport './assets/style.css'\r\nimport './assets/responsivity.css'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'))\r\n"],"sourceRoot":""}