{"version":3,"sources":["config/settings.js","components/fixed/Sidebar.js","components/fixed/BottomMenu.js","config/utils.js","components/ProfileListItem.js","components/likesmodal.js","components/PostListItem.js","pages/home-components/Posts.js","pages/home-components/Profiles.js","components/fixed/Header.js","pages/Home.js","pages/Notifications.js","components/fixed/header.js","pages/messages_page/components/ModalContactSearch.js","pages/messages_page/Websocket.js","pages/messages_page/Chat.js","pages/messages_page/Messages.js","components/LikesModal.js","pages/profile-components/Posts.js","pages/profile-components/Interests.js","pages/MyProfile.js","pages/settings_page/blockedProfiles.js","pages/settings_page/changePassword.js","pages/settings_page/deleteAccount.js","pages/settings_page/SettingsMenu.js","pages/profile-components/posts.js","pages/profile-components/interests.js","pages/home-components/Profile.js","pages/profile-components/Friends.js","pages/profile-components/InterestProfiles.js","pages/profile-components/edit-interests/publicInterests.js","pages/profile-components/edit-interests/privateInterests.js","pages/profile-components/edit-interests/EditInterests.js","components/CommentModal.js","pages/home-components/Post.js","pages/PostFormPage.js","App.js","index.js"],"names":["SERVER_URL","Sidebar","props","useEffect","document","querySelectorAll","forEach","el","classList","remove","currentUrl","window","location","href","split","includes","querySelector","add","switchPage","e","isHome","target","className","to","style","textDecoration","onClick","src","id","notificationsNumber","unreadMessagesNumber","csrftoken","name","cookieValue","cookie","cookies","i","length","trim","substring","decodeURIComponent","getCookie","handleLogout","confirm","replace","openCloseEmojiList","closing","display","ProfileListItem","profile","myProfile","slug","color","key","photo","marginRight","textAlign","first_name","last_name","user","username","bio","LikesModal","useState","setMyProfile","fetch","then","response","json","data","Modal","show","isOpen","onHide","hideModal","size","Header","closeButton","Title","Body","height","overflow","overflowY","likes","map","like","borderTop","borderLeft","borderRight","PostListItem","post","likeUnlikePost","stopPropagation","likeBtn","contains","dataset","postid","console","log","renderParent","author","created","reverse","join","content","image","margin","postId","animationPlayState","addEventListener","fetchPosts","method","headers","deletePost","class","comments","data-postid","openLikesModal","Posts","setState","posts","hideLikesModal","likesModal","handlePostContentChange","postContent","value","disabled","state","postFormImagePreview","handlePostImageChange","reader","FileReader","onload","readyState","result","readAsDataURL","files","handleCloseImage","onEmojiSelect","event","emojiObject","emoji","this","action","encType","type","placeholder","maxLength","autoFocus","onChange","htmlFor","accept","onEmojiClick","React","Component","Profiles","profiles","setProfiles","filteredProfiles","setFilteredProfiles","search","setSearch","handleRelationshipUpdate","pk","btn","innerHTML","body","JSON","stringify","cancelFriendRequest","data-pk","backArrow","history","back","page","Home","setPage","pages","title","borderRadius","Notifications","notificationsFetchInterval","invites","setInvites","unvisualizedPostLikes","setUnvisualizedPostLikes","visualizedPostLikes","setVisualizedPostLikes","unvisualizedComments","setUnvisualizedComments","visualizedComments","setVisualizedComments","fetchNotifications","setInterval","clearInterval","updateNotificationsNumber","replyRequest","requestBody","senderid","reply","getElementById","sender","data-senderid","data-reply","comment","ModalContactSearch","addingNewChat","padding","setModalSearch","modalProfiles","WebSocketService","callbacks","socketRef","instance","chatUrl","path","WebSocket","onopen","socketNewMessage","command","onmessage","onerror","message","onclose","close","parsedData","parse","Object","keys","messages","chatId","sendMessage","from","messagesCallback","newMessageCallback","send","err","WebSocketInstance","getInstance","Chat","handleComponentChange","scrollToBottom","otherUsername","otherProfile","readMessages","chat_id","messageChangeHandler","sendMessageHandler","preventDefault","messageObject","blocked_users","u","alert","newChatMessage","updateMessagesComponent","renderTimestamp","timestamp","ts","Date","day","getDate","month","getMonth","hour","getHours","minute","getMinutes","getFullYear","renderMessages","currentUser","read","chatLog","scrollTop","scrollHeight","initialiseChat","waitForSocketConnection","addCallbacks","getMessages","bind","addMessage","getUpdatedMessages","fetchMessages","connect","focus","disconnect","newProps","updateUnreadMessagesNumber","callback","component","setTimeout","onSubmit","Array","prototype","slice","call","filter","lenght","fontSize","openModal","MessagesPageBifurcator","handleReceiveProps","participants","other_username","match","params","fetchActiveChatProfiles","activeChats","chats","activeChatsProfiles","query","setContactSearch","p","resetUnreadMessagesCounter","unreadMessagesCounter","incrementUnreadMessagesCounter","setLastChatMessage","lastChatMessage","rerenderingInterval","whiteSpace","maxHeight","indexOf","contact","marginLeft","setLikesModal","fetchProfile","marginTop","Interests","interests","public","interest","toUpperCase","MyProfile","setProfile","profileImagePreview","setProfileImagePreview","isEditing","setIsEditing","editingBioContent","setEditingBioContent","currentPageIsPosts","setCurrentPageIsPosts","marginBottom","email","bool","width","defaultValue","birth_date","Footer","submit","friends","BlockUser","blockedProfiles","setBlockedProfiles","ChangePassword","errorMessage","setErrorMessage","successMessage","setSuccessMessage","role","password","newPassword","newPasswordc","new_password","new_passwordc","DeleteAccount","displayErrorMessage","setDisplayErrorMessage","Settings","pageChange","Profile","sendFriendRequest","removeFromFriends","acceptFriendRequest","blockUnblockUser","alertMessage","openCloseExtraOptions","relationshipButtonLabel","label","relationship","onmouseenter","onmouseout","Friends","setFriends","useParams","friend","InterestProfiles","PublicInterests","addTags","tag","parentElement","removeChild","tags","sort","tagContainer","prepend","div","createElement","span","closeIcon","setAttribute","appendChild","interestsInput","createTag","setInterests","input","push","tagLabel","getAttribute","index","PrivateInterests","EditInterests","publicInterests","setPublicInterests","privateInterests","setPrivateInterests","public_interests","private_interests","documentElement","CommentModal","commentContent","setCommentContent","Post","setPost","myprofile","commentModalIsOpen","setCommentModalIsOpen","postLikesModal","setPostLikesModal","commentLikesModal","setCommentLikesModal","fetchPost","likeUnlikeComment","commentid","commentId","deleteComment","data-commentid","App","invitesReceivedNumber","setInvitesReceived","unvisualizedLikesNumber","setUnvisulaizedLikes","unvisualizedCommentsNumber","setUnvisulaizedComments","setUnreadMessagesNumber","render","exact","Messages","ProfileFriends","PostFormPage","ReactDOM"],"mappings":"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","file":"static/js/main.457fc2e0.chunk.js","sourcesContent":["const SERVER_URL = 'https://napker.herokuapp.com'\r\nconst SOCKET_URL = 'wss://napker.herokuapp.com'\r\n//const SERVER_URL = 'http://127.0.0.1:8000'\r\n//const SOCKET_URL = 'ws://127.0.0.1:8000'\r\n\r\nconst LOGO_URL = '/static/media/napker.png'\r\n\r\nexport { SERVER_URL, SOCKET_URL, LOGO_URL }\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { SERVER_URL, LOGO_URL } from '../../config/settings'\r\n\r\nexport default function Sidebar(props) {\r\n    useEffect(() => {\r\n        document.querySelectorAll('.sidebar-menu-item-active').forEach(el => {\r\n            el.classList.remove('sidebar-menu-item-active')\r\n        })\r\n        const currentUrl = window.location.href.split('/')\r\n        if (currentUrl.includes('home')) {\r\n            document.querySelector('#home-menu').classList.add('sidebar-menu-item-active')\r\n        }\r\n        else if (currentUrl.includes('notifica%C3%A7%C3%B5es')) {\r\n            document.querySelector('#notifications-menu').classList.add('sidebar-menu-item-active')\r\n        }\r\n        else if (currentUrl.includes('mensagens')) {\r\n            document.querySelector('#messages-menu').classList.add('sidebar-menu-item-active')\r\n        }\r\n        else if (currentUrl.includes('perfil')) {\r\n            document.querySelector('#profile-menu').classList.add('sidebar-menu-item-active')\r\n        }\r\n        else if (currentUrl.includes('configura%C3%A7%C3%B5es')) {\r\n            document.querySelector('#settings-menu').classList.add('sidebar-menu-item-active')\r\n        }\r\n    }, [])\r\n\r\n    const switchPage = (e, isHome = false) => {\r\n        if (!isHome) {\r\n            document.querySelectorAll('.sidebar-menu-item-active').forEach(el => {\r\n                el.classList.remove('sidebar-menu-item-active')\r\n            })\r\n            e.target.classList.add('sidebar-menu-item-active')\r\n        } else {\r\n            document.querySelectorAll('.sidebar-menu-item-active').forEach(el => {\r\n                el.classList.remove('sidebar-menu-item-active')\r\n            })\r\n            document.querySelector('#home-menu').classList.add('sidebar-menu-item-active')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"logo-container\">\r\n                <Link to=\"/home\" style={{ textDecoration: 'none' }} onClick={e => switchPage(e, true)}>\r\n                    <img src={`${SERVER_URL}${LOGO_URL}`} />\r\n                </Link>\r\n            </div>\r\n            <ul>\r\n                <Link to=\"/home\" style={{ textDecoration: 'none' }}>\r\n                    <li className=\"sidebar-menu-item\" id=\"home-menu\" onClick={switchPage}>\r\n                        <i className=\"fas fa-home sidebar-menu-icon\" />\r\n                        Home\r\n                    </li>\r\n                </Link>\r\n                <Link to=\"/notificações\" style={{ textDecoration: 'none' }}>\r\n                    <li className=\"sidebar-menu-item\" id=\"notifications-menu\" onClick={switchPage}>\r\n                        <i className=\"fas fa-bell sidebar-menu-icon\" />\r\n                        Notificações\r\n                        {!props.notificationsNumber ? '' :\r\n                            <div className=\"notification-text-container\">\r\n                                <div className=\"notification-text\">\r\n                                    {props.notificationsNumber}\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </li>\r\n                </Link>\r\n                <Link to=\"/mensagens\" style={{ textDecoration: 'none' }}>\r\n                    <li className=\"sidebar-menu-item\" id=\"messages-menu\" onClick={switchPage}>\r\n                        <i className=\"fas fa-envelope sidebar-menu-icon\" />\r\n                        Mensagens\r\n                        {!props.unreadMessagesNumber ? '' :\r\n                            <div className=\"notification-text-container\">\r\n                                <div className=\"notification-text\">\r\n                                    {props.unreadMessagesNumber}\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </li>\r\n                </Link>\r\n                <Link to=\"/perfil\" style={{ textDecoration: 'none' }}>\r\n                    <li className=\"sidebar-menu-item\" id=\"profile-menu\" onClick={switchPage}>\r\n                        <i className=\"fas fa-user sidebar-menu-icon\" />\r\n                        Perfil\r\n                    </li>\r\n                </Link>\r\n                <Link to=\"/configurações\" style={{ textDecoration: 'none' }}>\r\n                    <li className=\"sidebar-menu-item\" id=\"settings-menu\" onClick={switchPage}>\r\n                        <i className=\"fas fa-cog sidebar-menu-icon\" />\r\n                        Configurações\r\n                    </li>\r\n                </Link>\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { SERVER_URL, LOGO_URL } from '../../config/settings'\r\n\r\nexport default function Sidebar(props) {\r\n    useEffect(() => {\r\n        document.querySelectorAll('.sidebar-menu-item-active').forEach(el => {\r\n            el.classList.remove('sidebar-menu-item-active')\r\n        })\r\n        const currentUrl = window.location.href.split('/')\r\n        if (currentUrl.includes('home')) {\r\n            document.querySelector('#home-menu').classList.add('sidebar-menu-item-active')\r\n        }\r\n        else if (currentUrl.includes('notifica%C3%A7%C3%B5es')) {\r\n            document.querySelector('#notifications-menu').classList.add('sidebar-menu-item-active')\r\n        }\r\n        else if (currentUrl.includes('mensagens')) {\r\n            document.querySelector('#messages-menu').classList.add('sidebar-menu-item-active')\r\n        }\r\n        else if (currentUrl.includes('perfil')) {\r\n            document.querySelector('#profile-menu').classList.add('sidebar-menu-item-active')\r\n        }\r\n        else if (currentUrl.includes('configura%C3%A7%C3%B5es')) {\r\n            document.querySelector('#settings-menu').classList.add('sidebar-menu-item-active')\r\n        }\r\n    }, [])\r\n\r\n    const switchPage = (e, isHome = false) => {\r\n        if (!isHome) {\r\n            document.querySelectorAll('.sidebar-menu-item-active').forEach(el => {\r\n                el.classList.remove('sidebar-menu-item-active')\r\n            })\r\n            e.target.classList.add('sidebar-menu-item-active')\r\n        } else {\r\n            document.querySelectorAll('.sidebar-menu-item-active').forEach(el => {\r\n                el.classList.remove('sidebar-menu-item-active')\r\n            })\r\n            document.querySelector('#home-menu').classList.add('sidebar-menu-item-active')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"bottom-menu-action-icon fixed-bottom\">\r\n                <Link to=\"/postar\">\r\n                    <i className=\"fas fa-pencil-alt\" />\r\n                </Link>\r\n            </div>\r\n            <div className=\"bottom-menu fixed-bottom\">\r\n                <ul>\r\n                    <Link to=\"/home\" style={{ textDecoration: 'none' }}>\r\n                        <li className=\"sidebar-menu-item\" id=\"home-menu\" onClick={switchPage}>\r\n                            <i className=\"fas fa-home sidebar-menu-icon\" />\r\n                        </li>\r\n                    </Link>\r\n                    <Link to=\"/notificações\" style={{ textDecoration: 'none' }}>\r\n                        <li className=\"sidebar-menu-item\" id=\"notifications-menu\" onClick={switchPage}>\r\n                            <i className=\"fas fa-bell sidebar-menu-icon\" />\r\n                            {!props.notificationsNumber ? '' :\r\n                                <div className=\"notification-text-container\">\r\n                                    <div className=\"notification-text\">\r\n                                        {props.notificationsNumber}\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </li>\r\n                    </Link>\r\n                    <Link to=\"/mensagens\" style={{ textDecoration: 'none' }}>\r\n                        <li className=\"sidebar-menu-item\" id=\"messages-menu\" onClick={switchPage}>\r\n                            <i className=\"fas fa-envelope sidebar-menu-icon\" />\r\n                            {!props.unreadMessagesNumber ? '' :\r\n                                <div className=\"notification-text-container\">\r\n                                    <div className=\"notification-text\">\r\n                                        {props.unreadMessagesNumber}\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </li>\r\n                    </Link>\r\n                    <Link to=\"/perfil\" style={{ textDecoration: 'none' }}>\r\n                        <li className=\"sidebar-menu-item\" id=\"profile-menu\" onClick={switchPage}>\r\n                            <i className=\"fas fa-user sidebar-menu-icon\" />\r\n                        </li>\r\n                    </Link>\r\n                    <Link to=\"/configurações\" style={{ textDecoration: 'none' }}>\r\n                        <li className=\"sidebar-menu-item\" id=\"settings-menu\" onClick={switchPage}>\r\n                            <i className=\"fas fa-cog sidebar-menu-icon\" />\r\n                        </li>\r\n                    </Link>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    )\r\n}","import { SERVER_URL } from './settings'\r\n\r\nconst csrftoken = getCookie('csrftoken')\r\n\r\nfunction getCookie(name) {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nfunction handleLogout() {\r\n  const bool = window.confirm('Sair do Napker?\\nVocê poderá entrar novamente quando quiser.')\r\n  if (bool) {\r\n    window.location.replace(`${SERVER_URL}/logout`)\r\n  }\r\n}\r\n\r\nfunction openCloseEmojiList(closing = false) {\r\n  const el = document.querySelector('#emoji-list-container')\r\n  const style = el.style\r\n  if (closing) {\r\n    style.display = 'none'\r\n    document.querySelector('#emoji-button').classList.remove('emoji-button-active')\r\n  } else {\r\n    if (!style.display || style.display === 'none') {\r\n      style.display = 'initial'\r\n      document.querySelector('#emoji-button').classList.add('emoji-button-active')\r\n    } else {\r\n      style.display = 'none'\r\n      document.querySelector('#emoji-button').classList.remove('emoji-button-active')\r\n    }\r\n  }\r\n}\r\n\r\nexport { csrftoken, handleLogout, openCloseEmojiList };","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../config/settings'\r\n\r\nexport default function ProfileListItem(props) {\r\n    const profile = props.profile\r\n    const myProfile = props.myProfile\r\n\r\n    return (\r\n        <Link to={profile.id === myProfile.id ?\r\n            '/perfil' : `/user/${profile.slug}`}\r\n            style={{ color: '#000', textDecoration: 'none' }}\r\n        >\r\n            <li\r\n                className=\"list-group-item profile-row filtered-profile profile-profile-list-item\"\r\n                key={profile.id}\r\n                style={props.style}\r\n                onClick={props.onClick}\r\n            >\r\n                <div className=\"d-flex\">\r\n                    <div className=\"profile-img-container\">\r\n                        <img src={`${SERVER_URL}${profile.photo}`}\r\n                            className=\"profile-img-med\"\r\n                            style={{ marginRight: '10px' }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"d-flex flex-column w-100\">\r\n                        <div className=\"profile-row-top\">\r\n                            <div className=\"main-profile-data\">\r\n                                <strong style={{ textAlign: 'start' }}>\r\n                                    {profile.first_name} {profile.last_name}\r\n                                </strong>\r\n                                <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"profile-row-bottom\">\r\n                            {profile.bio}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </Link>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nimport { SERVER_URL } from '../config/settings'\r\nimport ProfileListItem from '../components/ProfileListItem'\r\n\r\nexport default function LikesModal(props) {\r\n    const [myProfile, setMyProfile] = useState(null)\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n    }, [])\r\n\r\n    return (\r\n        <Modal show={props.isOpen}\r\n            onHide={props.hideModal}\r\n            size=\"lg\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title><strong>Curtidas</strong></Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"list-group\" style={{ height: '400px', overflow: 'hidden', overflowY: 'scroll' }}>\r\n                    {props.likes &&\r\n                        props.likes.map(like => like.profile).map(profile => {\r\n                            return (\r\n                                <ProfileListItem\r\n                                    profile={profile}\r\n                                    myProfile={myProfile}\r\n                                    style={{ borderTop: 'none', borderLeft: 'none', borderRight: 'none' }}\r\n                                    onClick={props.hideModal}\r\n                                />\r\n                            )\r\n                        })}\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../config/settings'\r\nimport { csrftoken } from '../config/utils'\r\n\r\nexport default function PostListItem(props) {\r\n    const post = props.post\r\n    const myProfile = props.myProfile\r\n\r\n    const deletePost = (e, postId) => {\r\n        e.stopPropagation()\r\n        const el = document.querySelector(`#profile-post-${postId}`)\r\n        if (window.confirm('Tem certeza que deseja apagar o post?\\nEssa ação é irreversível.')) {\r\n            el.style.animationPlayState = 'running'\r\n            el.addEventListener('animationend', () => {\r\n                this.fetchPosts()\r\n            })\r\n            fetch(`${SERVER_URL}/post-api/delete-post/${postId}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                })\r\n        }\r\n    }\r\n\r\n    const likeUnlikePost = e => {\r\n        e.stopPropagation()\r\n        const likeBtn = e.target\r\n        if (likeBtn.classList.contains('fas')) {\r\n            likeBtn.classList.remove('fas') //border heart\r\n            likeBtn.classList.add('far')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/unlike-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.renderParent()\r\n                })\r\n        } else {\r\n            likeBtn.classList.remove('far') //border heart\r\n            likeBtn.classList.add('fas')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/like-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.renderParent()\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <li\r\n            className=\"post-container post-list-item\"\r\n            id={`profile-post-${post.id}`}\r\n            key={post.id}\r\n            onClick={() => window.location.href = `/post/${post.id}`}\r\n        >\r\n            <div className=\"d-flex justify-content-between\">\r\n                <div className=\"post-row\">\r\n                    <div className=\"post-col\">\r\n                        <Link\r\n                            to={post.author.id === myProfile.id ?\r\n                                '/perfil' : `/user/${post.author.slug}`}\r\n                            onClick={e => e.stopPropagation()}\r\n                        >\r\n                            <img src={`${SERVER_URL}${post.author.photo}`}\r\n                                className=\"profile-img-med\"\r\n                            />\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"post-col\">\r\n                        <Link\r\n                            to={post.author.id === myProfile.id ?\r\n                                '/perfil' : `/user/${post.author.slug}`}\r\n                            style={{ color: '#000' }}\r\n                            onClick={e => e.stopPropagation()}\r\n                        >\r\n                            <div className=\"post-author-data-wrapper\">\r\n                                <strong style={{ marginRight: '5px' }}>\r\n                                    {post.author.first_name} {post.author.last_name}\r\n                                </strong>\r\n                                <p className=\"text-secondary d-inline-block\">\r\n                                    @{post.author.user.username} • {post.created.split('-').reverse().join('/')}\r\n                                </p>\r\n                            </div>\r\n                        </Link>\r\n                        <div style={{ textAlign: 'start' }}>\r\n                            {post.content}\r\n                        </div>\r\n                        {post.image &&\r\n                            <img src={`${SERVER_URL}${post.image}`} className=\"post-img\" />\r\n                        }\r\n                    </div>\r\n                </div>\r\n                {post.author.id === myProfile.id &&\r\n                    <i\r\n                        className=\"far fa-trash-alt trash-icon text-secondary\"\r\n                        style={{ margin: '20px 20px 0 0' }}\r\n                        onClick={e => deletePost(e, post.id)}\r\n                    />\r\n                }\r\n            </div>\r\n            <div className=\"post-actions\">\r\n                <p className=\"text-secondary\">\r\n                    <Link\r\n                        to={`/post/${post.id}/comentar`}\r\n                        className=\"text-secondary\"\r\n                        onClick={e => e.stopPropagation()}\r\n                    >\r\n                        <i\r\n                            class=\"far fa-comment\"\r\n                        />{post.comments.length}\r\n                    </Link>\r\n                    {post.likes.map(like => like.profile.id).includes(myProfile.id) ?\r\n                        <i class=\"fas fa-heart\"\r\n                            data-postid={post.id}\r\n                            onClick={likeUnlikePost}\r\n                        />\r\n                        :\r\n                        <i class=\"far fa-heart\"\r\n                            data-postid={post.id}\r\n                            onClick={likeUnlikePost}\r\n                        />\r\n                    }\r\n                    <p className=\"post-likes-number\"\r\n                        onClick={e => {\r\n                            e.stopPropagation()\r\n                            props.openLikesModal(post.likes)\r\n                        }\r\n                        }\r\n                    >\r\n                        {post.likes.length}\r\n                    </p>\r\n                </p>\r\n            </div>\r\n        </li>\r\n    )\r\n}","import React from 'react'\r\nimport Picker from 'emoji-picker-react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../../config/settings'\r\nimport { csrftoken, openCloseEmojiList } from '../../config/utils'\r\nimport LikesModal from '../../components/likesmodal'\r\nimport PostListItem from '../../components/PostListItem'\r\n\r\nexport default class Posts extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myProfile: null,\r\n            posts: null,\r\n            likesModal: {\r\n                isOpen: false,\r\n                likes: null\r\n            },\r\n            postContent: '',\r\n            postFormImagePreview: null\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ myProfile: data }))\r\n        this.fetchPosts()\r\n    }\r\n\r\n    fetchPosts = () => {\r\n        fetch(`${SERVER_URL}/post-api/post-list`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ posts: data }))\r\n    }\r\n\r\n    hideLikesModal = () => {\r\n        this.setState({\r\n            likesModal: {\r\n                isOpen: false,\r\n                likes: null\r\n            }\r\n        })\r\n    }\r\n\r\n    handlePostContentChange = e => {\r\n        this.setState({ postContent: e.target.value })\r\n        const el = document.querySelector('#post-form-submit-btn')\r\n        el.disabled = e.target.value.trim() === '' && !this.state.postFormImagePreview\r\n    }\r\n\r\n    handlePostImageChange = e => {\r\n        const reader = new FileReader()\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                this.setState({ postFormImagePreview: reader.result })\r\n                document.querySelector('#post-img-container').style.display = 'initial'\r\n                document.querySelector('#post-form-submit-btn').disabled = false\r\n            }\r\n        }\r\n        try {\r\n            reader.readAsDataURL(e.target.files[0])\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n    handleCloseImage = () => {\r\n        document.querySelector('#post-img-container').style.display = 'none'\r\n        document.querySelector('#post-image').value = ''\r\n        if (this.state.postContent.trim() === '') document.querySelector('#post-form-submit-btn').disabled = true\r\n        this.setState({ postFormImagePreview: null })\r\n    }\r\n\r\n    onEmojiSelect = (event, emojiObject) => {\r\n        this.setState({ postContent: this.state.postContent + emojiObject.emoji })\r\n        document.querySelector('#post-form-submit-btn').disabled = false\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <LikesModal\r\n                    isOpen={this.state.likesModal.isOpen}\r\n                    likes={this.state.likesModal.likes}\r\n                    hideModal={this.hideLikesModal}\r\n                />\r\n                {this.state.myProfile &&\r\n                    <form\r\n                        action={`${SERVER_URL}/post-api/create-post`}\r\n                        method=\"POST\"\r\n                        className=\"create-post-form\"\r\n                        encType=\"multipart/form-data\"\r\n                    >\r\n                        <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n                        <div className=\"d-flex\">\r\n                            <Link to=\"/perfil\">\r\n                                <img\r\n                                    src={`${SERVER_URL}${this.state.myProfile.photo}`}\r\n                                    className=\"profile-img-med\"\r\n                                />\r\n                            </Link>\r\n                            <textarea\r\n                                className=\"post-content-textarea\"\r\n                                name=\"post-content\"\r\n                                value={this.state.postContent}\r\n                                placeholder=\"No que você está pensando?\"\r\n                                maxLength={300}\r\n                                autoFocus\r\n                                onChange={this.handlePostContentChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"w-100 d-flex justify-content-center\">\r\n                            <div\r\n                                className=\"post-img-container\"\r\n                                id=\"post-img-container\">\r\n                                <div\r\n                                    className=\"post-img-options\"\r\n                                >\r\n                                    <i\r\n                                        className=\"far fa-times-circle\"\r\n                                        onClick={this.handleCloseImage}\r\n                                    />\r\n                                </div>\r\n                                <img\r\n                                    src={this.state.postFormImagePreview}\r\n                                    className=\"post-img post-form-img-preview\"\r\n                                    id=\"post-form-img-preview\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"d-flex justify-content-between\" style={{ margin: '0px 70px 0 70px' }}>\r\n                            <div className=\"post-extra-options\">\r\n                                <label htmlFor=\"post-image\" class=\"far fa-image\" />\r\n                                <input\r\n                                    type=\"file\"\r\n                                    accept=\"image/png, image/jpg, image/jpeg\"\r\n                                    name=\"post-image\"\r\n                                    id=\"post-image\"\r\n                                    style={{ display: 'none' }}\r\n                                    onChange={this.handlePostImageChange}\r\n                                />\r\n                                <label\r\n                                    className=\"far fa-smile\"\r\n                                    id=\"emoji-button\"\r\n                                    onClick={() => openCloseEmojiList(false)}\r\n                                />\r\n                                <div className=\"emoji-list-container\" id=\"emoji-list-container\">\r\n                                    <Picker onEmojiClick={this.onEmojiSelect} />\r\n                                </div>\r\n                            </div>\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"btn btn-primary\"\r\n                                id=\"post-form-submit-btn\"\r\n                                style={{ height: '40px' }}\r\n                                disabled\r\n                            >\r\n                                Postar\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                }\r\n                <div className=\"post-list\">\r\n                    {this.state.posts && this.state.myProfile ?\r\n                        this.state.posts.map(post => {\r\n                            return (\r\n                                <PostListItem\r\n                                    post={post}\r\n                                    myProfile={this.state.myProfile}\r\n                                    renderParent={this.fetchPosts}\r\n                                    openLikesModal={likes => this.setState({ likesModal: { isOpen: true, likes: likes } })}\r\n                                />\r\n                            )\r\n                        }) :\r\n                        <div className=\"posts-loader-container\" >\r\n                            <div className=\"loader\" />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../../config/settings'\r\nimport { csrftoken } from '../../config/utils'\r\nimport ProfileListItem from '../../components/ProfileListItem'\r\n\r\nexport default function Profiles() {\r\n    const [myProfile, setMyProfile] = useState(null)\r\n    const [profiles, setProfiles] = useState(null)\r\n    const [filteredProfiles, setFilteredProfiles] = useState(null)\r\n    const [search, setSearch] = useState('')\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n        fetch(`${SERVER_URL}/profile-api/profile-list`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setFilteredProfiles(null)\r\n                setProfiles(data)\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (search === '') {\r\n            setFilteredProfiles(null)\r\n            return\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/users/${search}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setFilteredProfiles(data)\r\n            })\r\n    }, [search])\r\n\r\n    const sendFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/send-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    const cancelFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/cancel-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    const handleRelationshipUpdate = e => {\r\n        e.stopPropagation()\r\n        const btn = e.target\r\n        if (btn.innerHTML === 'Solicitar') {\r\n            sendFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitado'\r\n            btn.className = 'btn btn-primary'\r\n        } else {\r\n            cancelFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitar'\r\n            btn.className = 'btn btn-secondary'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"profiles-filter-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"profiles-filter-input\"\r\n                    placeholder=\"Pesquisar\"\r\n                    value={search}\r\n                    onChange={e => setSearch(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"list-group\">\r\n                {myProfile && (profiles || filteredProfiles) ?\r\n                    <div className=\"profile-list-container\">\r\n                        {filteredProfiles ? filteredProfiles.map(profile => {\r\n                            return (\r\n                                <ProfileListItem profile={profile} myProfile={myProfile} />\r\n                            )\r\n                        }\r\n                        ) : profiles && profiles.map(profile => {\r\n                            return (\r\n                                <li\r\n                                    className=\"list-group-item profile-row\"\r\n                                    key={profile.id}\r\n                                    onClick={() => window.location.href = `/user/${profile.slug}`}\r\n                                >\r\n                                    <div className=\"d-flex\">\r\n                                        <div className=\"profile-img-container\">\r\n                                            <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                className=\"profile-img-med\"\r\n                                                style={{ marginRight: '10px' }}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"d-flex flex-column w-100\">\r\n                                            <div className=\"profile-row-top\">\r\n                                                <div className=\"main-profile-data\">\r\n                                                    <strong style={{ textAlign: 'start' }}>\r\n                                                        {profile.first_name} {profile.last_name}\r\n                                                    </strong>\r\n                                                    <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                                </div>\r\n                                                <button className=\"btn btn-secondary\" data-pk={profile.id} onClick={handleRelationshipUpdate}>\r\n                                                    Solicitar\r\n                                                </button>\r\n                                            </div>\r\n                                            <div className=\"profile-row-bottom\">\r\n                                                {profile.bio}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })\r\n                        }\r\n                    </div> :\r\n                    <div className=\"profiles-loader-container\">\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <div className=\"header fixed-top\">\r\n            {!props.backArrow ? '' :\r\n                <i class=\"fas fa-arrow-left left-arrow-icon\" onClick={() => window.history.back()} />\r\n            }\r\n            <strong>{props.page}</strong>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport Posts from './home-components/Posts'\r\nimport Profiles from './home-components/Profiles'\r\nimport Header from '../components/fixed/Header'\r\n\r\nexport default function Home(props) {\r\n    const [page, setPage] = useState('Posts')\r\n    const pages = {\r\n        'Perfis': <Profiles />,\r\n        'Posts': <Posts />\r\n    }\r\n\r\n    document.title = 'Home / Napker'\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Home\" />\r\n            <div className=\"content\">\r\n                <div className=\"home-page-subheader\">\r\n                    {page === 'Perfis' ?\r\n                        'Veja o que os seus amigos andam fazendo: ' :\r\n                        'Veja usuários com os mesmos interesses que você: '\r\n                    }\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        style={{ margin: '10px', borderRadius: '20px' }}\r\n                        onClick={() => setPage(page === 'Perfis' ? 'Posts' : 'Perfis')}\r\n                    >\r\n                        {page === 'Perfis' ?\r\n                            'Ver posts' :\r\n                            'Ver perfis'\r\n                        }\r\n                    </button>\r\n                </div>\r\n                {pages[page]}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Header from '../components/fixed/Header'\r\nimport { SERVER_URL } from '../config/settings'\r\nimport { csrftoken } from '../config/utils'\r\n\r\nexport default function Notifications(props) {\r\n    const [invites, setInvites] = useState(null)\r\n    const [unvisualizedPostLikes, setUnvisualizedPostLikes] = useState(null)\r\n    const [visualizedPostLikes, setVisualizedPostLikes] = useState(null)\r\n    const [unvisualizedComments, setUnvisualizedComments] = useState(null)\r\n    const [visualizedComments, setVisualizedComments] = useState(null)\r\n\r\n    let notificationsFetchInterval\r\n\r\n    document.title = 'Notificações / Napker'\r\n\r\n    const fetchNotifications = () => {\r\n        fetch(`${SERVER_URL}/profile-api/myinvites`)\r\n            .then(response => response.json())\r\n            .then(data => setInvites(data))\r\n        fetch(`${SERVER_URL}/post-api/unvisualized-post-likes`)\r\n            .then(response => response.json())\r\n            .then(data => setUnvisualizedPostLikes(data))\r\n        fetch(`${SERVER_URL}/post-api/unvisualized-post-comments`)\r\n            .then(response => response.json())\r\n            .then(data => setUnvisualizedComments(data))\r\n        fetch(`${SERVER_URL}/post-api/post-likes-visualized-last-2-days`)\r\n            .then(response => response.json())\r\n            .then(data => setVisualizedPostLikes(data))\r\n        fetch(`${SERVER_URL}/post-api/post-comments-visualized-last-2-days`)\r\n            .then(response => response.json())\r\n            .then(data => setVisualizedComments(data))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchNotifications()\r\n        notificationsFetchInterval = window.setInterval(fetchNotifications, 3000)\r\n        return () => window.clearInterval(notificationsFetchInterval)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (unvisualizedPostLikes && unvisualizedPostLikes.length) {\r\n            fetch(`${SERVER_URL}/post-api/visualize-likes`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.updateNotificationsNumber()\r\n                })\r\n        }\r\n    }, [unvisualizedPostLikes])\r\n\r\n    useEffect(() => {\r\n        if (unvisualizedComments && unvisualizedComments.length) {\r\n            fetch(`${SERVER_URL}/post-api/visualize-comments`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.updateNotificationsNumber()\r\n                })\r\n        }\r\n    }, [unvisualizedComments])\r\n\r\n    const replyRequest = e => {\r\n        e.stopPropagation()\r\n        const btn = e.target\r\n        const requestBody = {\r\n            'senderid': btn.dataset.senderid,\r\n            'reply': btn.dataset.reply\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/reply-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(requestBody)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                props.updateNotificationsNumber()\r\n            })\r\n        document.getElementById(`fr-${btn.dataset.senderid}`).remove()\r\n        fetchNotifications()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header page=\"Notificações\" />\r\n            <div className=\"content\">\r\n                <div>\r\n                    {invites !== null && unvisualizedPostLikes && visualizedPostLikes !== null && unvisualizedComments !== null && visualizedComments !== null ?\r\n                        <div>\r\n                            {invites.length || unvisualizedPostLikes.length || visualizedPostLikes.length || unvisualizedComments.length || !!visualizedComments.length ?\r\n                                <div className=\"notifications-container\">\r\n                                    {!!invites.length &&\r\n                                        <div>\r\n                                            {invites.map(i => {\r\n                                                return (\r\n                                                    <li\r\n                                                        className=\"friend-request-row profile-row\"\r\n                                                        id={`fr-${i.sender.id}`}\r\n                                                        key={i.sender.id}\r\n                                                        onClick={() => window.location.href = `/user/${i.sender.slug}`}\r\n                                                    >\r\n                                                        <div className=\"d-flex\">\r\n                                                            <div className=\"profile-img-container\">\r\n                                                                <img src={`${SERVER_URL}${i.sender.photo}`}\r\n                                                                    className=\"profile-img-med\"\r\n                                                                    style={{ marginRight: '10px' }}\r\n                                                                />\r\n                                                            </div>\r\n                                                            <div className=\"d-flex flex-column w-100\">\r\n                                                                <div className=\"profile-row-top\">\r\n                                                                    <div className=\"main-profile-data\">\r\n                                                                        <strong style={{ textAlign: 'start' }}>\r\n                                                                            {i.sender.first_name} {i.sender.last_name}\r\n                                                                        </strong>\r\n                                                                        <p className=\"text-secondary\">@{i.sender.user.username}</p>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"profile-row-bottom\">\r\n                                                                    {i.sender.bio}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"friend-request-col\">\r\n                                                            <button className=\"btn btn-primary btn-reply-fr mr-1\" data-senderid={i.sender.id} data-reply='accept' onClick={replyRequest}>\r\n                                                                Aceitar\r\n                                                            </button>\r\n                                                            <button className=\"btn btn-grey btn-reply-fr\" data-senderid={i.sender.id} data-reply='decline' onClick={replyRequest}>\r\n                                                                Excluir\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </li>\r\n                                                )\r\n                                            })}\r\n                                        </div>\r\n                                    }\r\n\r\n                                    {(!!unvisualizedPostLikes.length || !!unvisualizedComments.length) &&\r\n                                        <>\r\n                                            {!!unvisualizedPostLikes.length &&\r\n                                                <>\r\n                                                    {unvisualizedPostLikes.map(like => {\r\n                                                        return (\r\n                                                            <li className=\"notification-row\" key={like.profile.id}>\r\n                                                                <div className=\"d-flex align-items-center\">\r\n                                                                    <i class=\"fas fa-heart notification-like\" />\r\n                                                                    <Link to={`/user/${like.profile.slug}`}>\r\n                                                                        <img src={`${SERVER_URL}${like.profile.photo}`}\r\n                                                                            className=\"profile-img-sm\"\r\n                                                                            style={{ marginRight: '10px' }}\r\n                                                                        />\r\n                                                                    </Link>\r\n                                                                    <p className=\"text-secondary d-inline-block\">\r\n                                                                        {like.created.split('-').reverse().join('/')}\r\n                                                                    </p>\r\n                                                                    <div className=\"notification-text-container\">\r\n                                                                        <div className=\"notification-text\">\r\n                                                                            novo\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"notification-message\">\r\n                                                                    <p>\r\n                                                                        <Link to={`/user/${like.profile.slug}`} style={{ color: \"#000\" }}>\r\n                                                                            @{like.profile.user.username}\r\n                                                                        </Link> curtiu seu post.\r\n                                                                    </p>\r\n                                                                </div>\r\n                                                                <div className=\"notification-post-content\">\r\n                                                                    {like.post.content}\r\n                                                                </div>\r\n                                                            </li>\r\n                                                        )\r\n                                                    })}\r\n                                                </>\r\n                                            }\r\n\r\n                                            {!!unvisualizedComments.length &&\r\n                                                <>\r\n                                                    {unvisualizedComments.map(comment => {\r\n                                                        return (\r\n                                                            <li className=\"notification-row\" key={comment.author.id}>\r\n                                                                <div className=\"d-flex align-items-center\">\r\n                                                                    <i class=\"fas fa-comment notification-comment\" />\r\n                                                                    <Link to={`/user/${comment.author.slug}`}>\r\n                                                                        <img src={`${SERVER_URL}${comment.author.photo}`}\r\n                                                                            className=\"profile-img-sm\"\r\n                                                                            style={{ marginRight: '10px' }}\r\n                                                                        />\r\n                                                                    </Link>\r\n                                                                    <p className=\"text-secondary d-inline-block\">\r\n                                                                        {comment.created.split('-').reverse().join('/')}\r\n                                                                    </p>\r\n                                                                    <div className=\"notification-text-container\">\r\n                                                                        <div className=\"notification-text\">\r\n                                                                            novo\r\n                                                                    </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"notification-message\">\r\n                                                                    <p>\r\n                                                                        <Link to={`/user/${comment.author.slug}`} style={{ color: \"#000\" }}>\r\n                                                                            @{comment.author.user.username}\r\n                                                                        </Link> comentou seu post.\r\n                                                                </p>\r\n                                                                </div>\r\n                                                                <div className=\"notification-comment-container\">\r\n                                                                    <div className=\"notification-comment-content\">\r\n                                                                        {comment.content}\r\n                                                                    </div>\r\n                                                                    <Link to={`/post/${comment.post.id}`}>\r\n                                                                        <button className=\"btn btn-primary\">\r\n                                                                            Ver Post\r\n                                                                        </button>\r\n                                                                    </Link>\r\n                                                                </div>\r\n                                                            </li>\r\n                                                        )\r\n                                                    })}\r\n                                                </>\r\n                                            }\r\n                                        </>\r\n                                    }\r\n\r\n                                    {(!!visualizedPostLikes.length || !!visualizedComments.length) &&\r\n                                        <>\r\n                                            {!!visualizedPostLikes.length &&\r\n                                                <>\r\n                                                    {visualizedPostLikes.map(like => {\r\n                                                        return (\r\n                                                            <li className=\"notification-row\" key={like.profile.id}>\r\n                                                                <div className=\"d-flex align-items-center\">\r\n                                                                    <i class=\"fas fa-heart notification-like\" />\r\n                                                                    <Link to={`/user/${like.profile.slug}`}>\r\n                                                                        <img src={`${SERVER_URL}${like.profile.photo}`}\r\n                                                                            className=\"profile-img-sm\"\r\n                                                                            style={{ marginRight: '10px' }}\r\n                                                                        />\r\n                                                                    </Link>\r\n                                                                    <p className=\"text-secondary d-inline-block\">\r\n                                                                        {like.created.split('-').reverse().join('/')}\r\n                                                                    </p>\r\n                                                                </div>\r\n                                                                <div className=\"notification-message\">\r\n                                                                    <p>\r\n                                                                        <Link to={`/user/${like.profile.slug}`} style={{ color: \"#000\" }}>\r\n                                                                            @{like.profile.user.username}\r\n                                                                        </Link> curtiu seu post.\r\n                                                                    </p>\r\n                                                                </div>\r\n                                                                <div className=\"notification-post-content\">\r\n                                                                    {like.post.content}\r\n                                                                </div>\r\n                                                            </li>\r\n                                                        )\r\n                                                    })}\r\n                                                </>\r\n                                            }\r\n\r\n                                            {!!visualizedComments.length &&\r\n                                                <>\r\n                                                    {visualizedComments.map(comment => {\r\n                                                        return (\r\n                                                            <li className=\"notification-row\" key={comment.author.id}>\r\n                                                                <div className=\"d-flex align-items-center\">\r\n                                                                    <i class=\"fas fa-comment notification-comment\" />\r\n                                                                    <Link to={`/user/${comment.author.slug}`}>\r\n                                                                        <img src={`${SERVER_URL}${comment.author.photo}`}\r\n                                                                            className=\"profile-img-sm\"\r\n                                                                            style={{ marginRight: '10px' }}\r\n                                                                        />\r\n                                                                    </Link>\r\n                                                                    <p className=\"text-secondary d-inline-block\">\r\n                                                                        {comment.created.split('-').reverse().join('/')}\r\n                                                                    </p>\r\n                                                                </div>\r\n                                                                <div className=\"notification-message\">\r\n                                                                    <p>\r\n                                                                        <Link to={`/user/${comment.author.slug}`} style={{ color: \"#000\" }}>\r\n                                                                            @{comment.author.user.username}\r\n                                                                        </Link> comentou seu post.\r\n                                                                    </p>\r\n                                                                </div>\r\n                                                                <div className=\"notification-comment-container\">\r\n                                                                    <div className=\"notification-comment-content\">\r\n                                                                        {comment.content}\r\n                                                                    </div>\r\n                                                                    <Link to={`/post/${comment.post.id}`}>\r\n                                                                        <button className=\"btn btn-primary\">\r\n                                                                            Ver Post\r\n                                                                        </button>\r\n                                                                    </Link>\r\n                                                                </div>\r\n                                                            </li>\r\n                                                        )\r\n                                                    })}\r\n                                                </>\r\n                                            }\r\n                                        </>\r\n                                    }\r\n\r\n                                </div> :\r\n                                <div className=\"no-notifications-container\">\r\n                                    <h3>Você não tem nenhuma notificação</h3>\r\n                                </div>\r\n                            }\r\n\r\n\r\n                        </div> :\r\n                        <div className=\"notifications-loader-container\">\r\n                            <div className=\"loader\" />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <div className=\"header fixed-top\">\r\n            {!props.backArrow ? '' :\r\n                <i class=\"fas fa-arrow-left left-arrow-icon\" onClick={() => window.history.back()} />\r\n            }\r\n            <strong>{props.page}</strong>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../../../config/settings'\r\n\r\nexport default function ModalContactSearch(props) {\r\n    return (\r\n        <Modal show={props.addingNewChat}\r\n            onHide={() => this.setState({ addingNewChat: false })}\r\n            size=\"lg\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title><strong>Nova conversa</strong></Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body style={{ padding: '0' }}>\r\n                <input className=\"modal-search-input\"\r\n                    placeholder=\"Pesquisar pessoas\"\r\n                    onChange={e => this.setModalSearch(e.target.value)}\r\n                />\r\n                <div className=\"list-group\" style={{ height: '400px', overflow: 'hidden', overflowY: 'scroll' }}>\r\n                    {props.modalProfiles && props.modalProfiles.map(profile => {\r\n                        return (\r\n                            <Link to={`/mensagens/${profile.slug}`}\r\n                                style={{ color: '#000', textDecoration: 'none' }}\r\n                                onClick={() => this.setState({\r\n                                    addingNewChat: false\r\n                                })}\r\n                            >\r\n                                <li className=\"list-group-item profile-row modal-profile-li\" key={profile.id}>\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <div className=\"profile-col\">\r\n                                            <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                className=\"profile-img-med\"\r\n                                                style={{ marginRight: '10px' }}\r\n                                            />\r\n                                            <div className=\"main-profile-data\">\r\n                                                <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                                <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"profile-col\">\r\n                                            {profile.bio}\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            </Link>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}","import { SOCKET_URL } from '../../config/settings'\r\n\r\nclass WebSocketService {\r\n  static instance = null;\r\n  callbacks = {};\r\n\r\n  static getInstance() {\r\n    if (!WebSocketService.instance) {\r\n      WebSocketService.instance = new WebSocketService();\r\n    }\r\n    return WebSocketService.instance;\r\n  }\r\n\r\n  constructor() {\r\n    this.socketRef = null;\r\n  }\r\n\r\n  connect(chatUrl) {\r\n    const path = `${SOCKET_URL}/ws/chat/${chatUrl}/`;\r\n    this.socketRef = new WebSocket(path);\r\n    this.socketRef.onopen = () => {\r\n      console.log(\"WebSocket open\");\r\n    };\r\n    this.socketNewMessage(JSON.stringify({\r\n      command: 'fetch-messages'\r\n    }))\r\n    this.socketRef.onmessage = e => {\r\n      this.socketNewMessage(e.data);\r\n    };\r\n    this.socketRef.onerror = e => {\r\n      console.log(e.message);\r\n    };\r\n    this.socketRef.onclose = () => {\r\n      console.log(\"WebSocket closed\");\r\n    };\r\n  }\r\n\r\n  disconnect() {\r\n    if (this.socketRef) this.socketRef.close();\r\n  }\r\n\r\n  socketNewMessage(data) {\r\n    const parsedData = JSON.parse(data);\r\n    const command = parsedData.command;\r\n    if (Object.keys(this.callbacks).length === 0) {\r\n      return;\r\n    }\r\n    if (command === \"messages\") {\r\n      this.callbacks[command](parsedData.messages);\r\n    }\r\n    if (command === \"new_message\") {\r\n      this.callbacks[command](parsedData.message);\r\n    }\r\n  }\r\n\r\n  fetchMessages(username, chatId) {\r\n    this.sendMessage({\r\n      command: \"fetch_messages\",\r\n      username: username,\r\n      chatId: chatId\r\n    });\r\n  }\r\n\r\n  newChatMessage(message) {\r\n    this.sendMessage({\r\n      command: \"new_message\",\r\n      from: message.from,\r\n      content: message.content,\r\n      chatId: message.chatId\r\n    });\r\n  }\r\n\r\n  readMessages(chatId) {\r\n    this.sendMessage({\r\n      command: \"read_messages\",\r\n      chatId: chatId\r\n    });\r\n  }\r\n\r\n  addCallbacks(messagesCallback, newMessageCallback) {\r\n    this.callbacks[\"messages\"] = messagesCallback\r\n    this.callbacks[\"new_message\"] = newMessageCallback\r\n    this.callbacks[\"updated_messages\"] = newMessageCallback\r\n  }\r\n\r\n  sendMessage(data) {\r\n    try {\r\n      this.socketRef.send(JSON.stringify({ ...data }));\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  }\r\n\r\n  state() {\r\n    return this.socketRef ? this.socketRef.readyState : 0\r\n  }\r\n}\r\n\r\nconst WebSocketInstance = WebSocketService.getInstance();\r\n\r\nexport default WebSocketInstance;","import React from 'react'\r\nimport Picker from 'emoji-picker-react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { csrftoken, openCloseEmojiList } from '../../config/utils'\r\nimport { SERVER_URL } from '../../config/settings'\r\nimport WebSocketInstance from './Websocket'\r\n\r\nclass Chat extends React.Component {\r\n    initialiseChat() {\r\n        this.waitForSocketConnection(() => {\r\n            WebSocketInstance.addCallbacks(\r\n                this.getMessages.bind(this),\r\n                this.addMessage.bind(this),\r\n                this.getUpdatedMessages.bind(this)\r\n            )\r\n            WebSocketInstance.fetchMessages(\r\n                this.props.username,\r\n                this.props.chatId\r\n            );\r\n        });\r\n        if (this.props.chatId) WebSocketInstance.connect(this.props.chatId)\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            message: '',\r\n            messages: [],\r\n            myProfile: null,\r\n            otherUsername: this.props.otherUsername,\r\n            otherProfile: null\r\n        }\r\n        this.initialiseChat();\r\n    }\r\n\r\n    handleComponentChange = () => {\r\n        this.scrollToBottom();\r\n        if (this.state.otherUsername && (!this.state.otherProfile || this.state.otherProfile.user.username !== this.state.otherUsername)) {\r\n            fetch(`${SERVER_URL}/profile-api/user/${this.state.otherUsername}`)\r\n                .then(response => response.json())\r\n                .then(data => this.setState({\r\n                    otherProfile: data\r\n                }))\r\n        }\r\n        if (!this.state.myProfile) {\r\n            fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n                .then(response => response.json())\r\n                .then(data => this.setState({ myProfile: data }))\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n\r\n    componentDidUpdate() {\r\n        this.handleComponentChange()\r\n        document.querySelector('#chat-message-input') && document.querySelector('#chat-message-input').focus()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        WebSocketInstance.disconnect()\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (this.props.chatId !== newProps.chatId) {\r\n            WebSocketInstance.disconnect();\r\n            this.waitForSocketConnection(() => {\r\n                WebSocketInstance.fetchMessages(\r\n                    this.props.username,\r\n                    newProps.chatId\r\n                );\r\n            });\r\n            WebSocketInstance.connect(newProps.chatId);\r\n\r\n            this.props.updateMessagesComponent()\r\n            this.setState({\r\n                message: '',\r\n                otherUsername: newProps.otherUsername\r\n            })\r\n        }\r\n        if (newProps.chatId) {\r\n            this.readMessages(newProps)\r\n        }\r\n        if (this.props.updateUnreadMessagesNumber) {\r\n            this.props.updateUnreadMessagesNumber()\r\n        }\r\n    }\r\n\r\n    readMessages = props => {\r\n        fetch(`${SERVER_URL}/chat-api/read-messages`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({ chat_id: props.chatId })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                WebSocketInstance.readMessages(this.props.chatId)\r\n            })\r\n    }\r\n\r\n    waitForSocketConnection(callback) {\r\n        const component = this;\r\n        setTimeout(function () {\r\n            if (WebSocketInstance.state() === 1) {\r\n                console.log(\"Connection is made\");\r\n                callback();\r\n                return;\r\n            } else {\r\n                console.log(\"wait for connection...\");\r\n                component.waitForSocketConnection(callback);\r\n            }\r\n        }, 100);\r\n    }\r\n\r\n    getMessages(messages) {\r\n        this.setState({ messages: messages.reverse() })\r\n    }\r\n\r\n    addMessage(message) {\r\n        this.setState({ messages: [...this.state.messages, message] })\r\n        this.readMessages(this.props)\r\n    }\r\n\r\n    getUpdatedMessages(messages) {\r\n        this.setState({ messages: messages.reverse() })\r\n    }\r\n\r\n    messageChangeHandler = e => {\r\n        this.setState({ message: e.target.value })\r\n        const el = document.querySelector('#chat-message-submit')\r\n        el.disabled = e.target.value.trim() === ''\r\n    };\r\n\r\n    sendMessageHandler = e => {\r\n        e.preventDefault()\r\n        const messageObject = {\r\n            from: this.props.username,\r\n            content: this.state.message,\r\n            chatId: this.props.chatId\r\n        };\r\n        this.setState({ message: '' })\r\n        if (this.state.otherProfile.blocked_users.map(u => u.id).includes(this.state.myProfile.user.id)) {\r\n            window.alert(`Você não pode enviar mensagens para @${this.state.otherUsername}.\r\n            ${this.state.otherProfile.first_name} te bloqueou.`)\r\n            return\r\n        }\r\n        if (this.state.myProfile.blocked_users.map(u => u.id).includes(this.state.otherProfile.user.id)) {\r\n            window.alert(`Você não pode enviar mensagens para @${this.state.otherUsername}.\r\n            Você bloqueou ${this.state.otherProfile.first_name}.`)\r\n            return\r\n        }\r\n        WebSocketInstance.newChatMessage(messageObject)\r\n        document.querySelector('#chat-message-submit').disabled = true\r\n        openCloseEmojiList(true)\r\n        this.props.updateMessagesComponent()\r\n    };\r\n\r\n    renderTimestamp = timestamp => {\r\n        const ts = new Date(timestamp)\r\n        const day = ts.getDate() >= 10 ? ts.getDate() : `0${ts.getDate()}`\r\n        const month = ts.getMonth() >= 10 ? ts.getMonth() : `0${ts.getMonth()}`\r\n        const hour = ts.getHours() >= 10 ? ts.getHours() : `0${ts.getHours()}`\r\n        const minute = ts.getMinutes() >= 10 ? ts.getMinutes() : `0${ts.getMinutes()}`\r\n        return `${day}/${month}/${ts.getFullYear()} - ${hour}:${minute}`\r\n    };\r\n\r\n    renderMessages = messages => {\r\n        const currentUser = this.props.username;\r\n        return messages.map(message => (\r\n            <li\r\n                key={message.id}\r\n                className={message.author === currentUser ? \"sent\" : \"received\"}\r\n            >\r\n                <p>\r\n                    {message.content}\r\n                    <br />\r\n                    <small>\r\n                        {this.renderTimestamp(message.timestamp)} {message.author === currentUser ?\r\n                            message.read ?\r\n                                <i class=\"fas fa-check-double\" />\r\n                                :\r\n                                <i class=\"fas fa-check\" />\r\n                            :\r\n                            ''\r\n                        }\r\n                    </small>\r\n                </p>\r\n            </li>\r\n        ));\r\n    };\r\n\r\n    scrollToBottom = () => {\r\n        if (document.querySelector('#chat-log')) {\r\n            const chatLog = document.querySelector('#chat-log')\r\n            chatLog.scrollTop = chatLog.scrollHeight\r\n        }\r\n    };\r\n\r\n    onEmojiSelect = (event, emojiObject) => {\r\n        this.setState({ message: this.state.message + emojiObject.emoji })\r\n        document.querySelector('#chat-message-submit').disabled = false\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.otherProfile !== null || !this.props.otherUsername ?\r\n                    <>\r\n                        {this.state.otherProfile ?\r\n                            <div className=\"current-chat\">\r\n                                <div className=\"current-chat-header\">\r\n                                    {this.props.backArrow &&\r\n                                        <i class=\"fas fa-arrow-left left-arrow-icon\" onClick={() => window.history.back()} />\r\n                                    }\r\n                                    <Link to={`/user/${this.state.otherProfile.slug}`}>\r\n                                        <img src={`${SERVER_URL}${this.state.otherProfile.photo}`}\r\n                                            className=\"profile-img-sm\"\r\n                                            style={{ marginRight: '5px' }}\r\n                                        />\r\n                                    </Link>\r\n                                    <div className=\"d-flex flex-column align-items-start\" style={{ height: '52px' }}>\r\n                                        <strong>{this.state.otherProfile.first_name} {this.state.otherProfile.last_name}</strong>\r\n                                        <p className=\"text-secondary\">@{this.state.otherProfile.user.username}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div id=\"chat-log\">\r\n                                    {this.state.messages ? this.renderMessages(this.state.messages) : ''}\r\n                                </div>\r\n                                <div className=\"emoji-list-container chat-emoji-list\" id=\"emoji-list-container\">\r\n                                    <Picker onEmojiClick={this.onEmojiSelect} />\r\n                                </div>\r\n                                <form className=\"send-message-container\" onSubmit={this.sendMessageHandler}>\r\n                                    <label\r\n                                        className=\"far fa-smile\"\r\n                                        id=\"emoji-button\"\r\n                                        onClick={() => openCloseEmojiList(false)}\r\n                                    />\r\n                                    <input\r\n                                        placeholder=\"Mensagem\"\r\n                                        className=\"message-input\"\r\n                                        id=\"chat-message-input\"\r\n                                        value={this.state.message}\r\n                                        autoFocus={Array.prototype.slice.call(document.querySelectorAll('.contact-filter-input')).filter(el => {\r\n                                            return el.value !== ''\r\n                                        })\r\n                                            .lenght > 0\r\n                                        }\r\n                                        onChange={this.messageChangeHandler}\r\n                                    />\r\n                                    <button\r\n                                        className=\"btn btn-primary chat-message-submit\"\r\n                                        id=\"chat-message-submit\"\r\n                                        disabled\r\n                                    >\r\n                                        <i class=\"fas fa-chevron-right\" />\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n                            :\r\n                            <div className=\"current-chat no-chat-selected\">\r\n                                <div>\r\n                                    <strong style={{ fontSize: 'larger' }}>Você não tem uma conversa selecionada</strong>\r\n                                    <p className=\"text-secondary\">Selecione uma existente ou comece uma nova</p>\r\n                                    <button className=\"btn btn-primary\" onClick={() => this.props.openModal()}>Nova conversa</button>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </>\r\n                    :\r\n                    <div className=\"chat-loader-container\">\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chat\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Header from '../../components/fixed/header'\r\nimport ModalContactSearch from './components/ModalContactSearch'\r\nimport Chat from './Chat'\r\nimport { SERVER_URL } from '../../config/settings'\r\n\r\nexport default class MessagesPageBifurcator extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myProfile: null,\r\n            username: null,\r\n            chatId: null,\r\n            activeChats: null,\r\n            activeChatsProfiles: null,\r\n            addingNewChat: false,\r\n            modalProfiles: [],\r\n        }\r\n        this.rerenderingInterval = null\r\n    }\r\n\r\n    handleReceiveProps = props => {\r\n        const participants = { username: this.state.username, other_username: props.match.params.slug }\r\n        fetch(`${SERVER_URL}/chat-api/chat-id/${JSON.stringify(participants)}`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                chatId: data['chat_id']\r\n            }))\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps === this.props) return\r\n        this.handleReceiveProps(newProps)\r\n    }\r\n\r\n    handleComponentChange() {\r\n        if (!this.state.username) {\r\n            fetch(`${SERVER_URL}/profile-api/logged-user`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    this.setState({\r\n                        username: data.username\r\n                    })\r\n                    if (this.props.match.params.slug) {\r\n                        this.handleReceiveProps(this.props)\r\n                    }\r\n                })\r\n        }\r\n        if (!this.state.activeChatsProfiles && this.state.activeChatsProfiles !== []) {\r\n            this.fetchActiveChatProfiles()\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.title = 'Mensagens / Napker'\r\n        this.handleComponentChange()\r\n        this.rerenderingInterval = window.setInterval(this.fetchActiveChatProfiles, 3000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.clearInterval(this.rerenderingInterval)\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    fetchActiveChatProfiles = () => {\r\n        console.log('fetching profiles...')\r\n        fetch(`${SERVER_URL}/chat-api/active-chats-profiles`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (!this.state.username) return\r\n                this.setState({\r\n                    activeChats: data.chats.reverse(),\r\n                    activeChatsProfiles: data.profiles.reverse()\r\n                })\r\n            })\r\n    }\r\n\r\n    openModal = () => {\r\n        this.setState({\r\n            addingNewChat: true\r\n        })\r\n    }\r\n\r\n    setModalSearch = query => {\r\n        if (query === '') {\r\n            this.setState({\r\n                modalProfiles: []\r\n            })\r\n            return\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/users/${query}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    modalProfiles: data\r\n                })\r\n            })\r\n    }\r\n\r\n    setContactSearch = query => {\r\n        if (query === '') {\r\n            this.fetchActiveChatProfiles()\r\n            return\r\n        }\r\n        if (this.state.activeChatsProfiles) {\r\n            const filteredProfiles = this.state.activeChatsProfiles.filter(p => p.user.username.includes(query))\r\n            this.setState({\r\n                activeChatsProfiles: filteredProfiles\r\n            })\r\n        }\r\n    }\r\n\r\n    resetUnreadMessagesCounter = () => {\r\n        this.unreadMessagesCounter = 0\r\n    }\r\n\r\n    incrementUnreadMessagesCounter = () => {\r\n        this.unreadMessagesCounter++\r\n    }\r\n\r\n    setLastChatMessage = message => {\r\n        this.lastChatMessage = message\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"default-messages-page\">\r\n                    <Header page=\"Mensagens\" />\r\n                    <div className=\"content d-flex messages-wrapper\">\r\n                        <ModalContactSearch\r\n                            addingNewChat={this.state.addingNewChat}\r\n                            modalProfiles={this.state.modalProfiles}\r\n                        />\r\n                        <div className=\"chats-list\">\r\n                            <div className=\"search-input-container\">\r\n                                <input className=\"search-input contact-filter-input\" placeholder=\"Pesquisar pessoas\" onChange={e => this.setContactSearch(e.target.value)} />\r\n                                <i className=\"fas fa-plus add-icon\" onClick={this.openModal}></i>\r\n                            </div>\r\n                            <div className=\"list-group chats-container\">\r\n                                {this.state.activeChatsProfiles !== null ?\r\n                                    this.state.activeChatsProfiles.map(profile => {\r\n                                        return (\r\n                                            <Link to={`/mensagens/${profile.slug}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                                                {this.resetUnreadMessagesCounter()}\r\n                                                <li className=\"list-item profile-chat-item\" style={{ whiteSpace: 'nowrap' }}>\r\n                                                    <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                        className=\"profile-img-med\"\r\n                                                        style={{ marginRight: '10px' }}\r\n                                                    />\r\n                                                    <div className=\"d-flex flex-column align-items-start\">\r\n                                                        <div className=\"d-flex\" style={{ maxHeight: '30px' }}>\r\n                                                            <strong style={{ height: 'fit-content' }}>{profile.first_name} {profile.last_name}</strong>\r\n                                                            {this.state.activeChats[this.state.activeChatsProfiles.indexOf(profile)].messages.map(message => {\r\n                                                                const messages = this.state.activeChats[this.state.activeChatsProfiles.indexOf(profile)].messages\r\n                                                                if (messages[messages.length - 1] === message) this.setLastChatMessage(message.content)\r\n                                                                if (message.read || message.contact.user.username !== profile.user.username) return\r\n                                                                this.incrementUnreadMessagesCounter()\r\n                                                            })}\r\n                                                            {this.unreadMessagesCounter ?\r\n                                                                <div className=\"notification-text-container\">\r\n                                                                    <div className=\"notification-text\">\r\n                                                                        {this.unreadMessagesCounter}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                : ''\r\n                                                            }\r\n                                                            <p className=\"text-secondary\" style={{ marginLeft: '5px' }}>@{profile.user.username}</p>\r\n                                                        </div>\r\n                                                        <p className=\"text-secondary\">{this.lastChatMessage.slice(0, 40)}</p>\r\n                                                    </div>\r\n                                                </li>\r\n                                            </Link>\r\n                                        )\r\n                                    }) :\r\n                                    <div className=\"messages-loader-container\">\r\n                                        <div className=\"loader\" />\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <Chat\r\n                            username={this.state.username}\r\n                            otherUsername={this.props.match.params.slug}\r\n                            chatId={this.state.chatId}\r\n                            openModal={this.openModal}\r\n                            updateUnreadMessagesNumber={this.props.updateUnreadMessagesNumber}\r\n                            updateMessagesComponent={this.fetchActiveChatProfiles}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"mobile-messages-page\">\r\n                    <div className=\"content d-flex messages-wrapper\">\r\n                        <ModalContactSearch\r\n                            addingNewChat={this.state.addingNewChat}\r\n                            modalProfiles={this.state.modalProfiles}\r\n                        />\r\n                        <div className=\"chats-list\">\r\n                            <div className=\"search-input-container\">\r\n                                <input className=\"search-input contact-filter-input\" placeholder=\"Pesquisar pessoas\" onChange={e => this.setContactSearch(e.target.value)} />\r\n                                <i className=\"fas fa-plus add-icon\" onClick={this.openModal}></i>\r\n                            </div>\r\n                            <div className=\"list-group chats-container\">\r\n                                {this.state.activeChatsProfiles !== null ?\r\n                                    this.state.activeChatsProfiles.map(profile => {\r\n                                        return (\r\n                                            <Link to={`/mensagens/${profile.slug}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                                                {this.resetUnreadMessagesCounter()}\r\n                                                <li className=\"list-item profile-chat-item\" style={{ whiteSpace: 'nowrap' }}>\r\n                                                    <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                        className=\"profile-img-med\"\r\n                                                        style={{ marginRight: '10px' }}\r\n                                                    />\r\n                                                    <div className=\"d-flex flex-column align-items-start\">\r\n                                                        <div className=\"d-flex\" style={{ maxHeight: '30px' }}>\r\n                                                            <strong style={{ height: 'fit-content' }}>{profile.first_name} {profile.last_name}</strong>\r\n                                                            {this.state.activeChats[this.state.activeChatsProfiles.indexOf(profile)].messages.map(message => {\r\n                                                                const messages = this.state.activeChats[this.state.activeChatsProfiles.indexOf(profile)].messages\r\n                                                                if (messages[messages.length - 1] === message) this.setLastChatMessage(message.content)\r\n                                                                if (message.read || message.contact.user.username !== profile.user.username) return\r\n                                                                this.incrementUnreadMessagesCounter()\r\n                                                            })}\r\n                                                            {this.unreadMessagesCounter ?\r\n                                                                <div className=\"notification-text-container\">\r\n                                                                    <div className=\"notification-text\">\r\n                                                                        {this.unreadMessagesCounter}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                : ''\r\n                                                            }\r\n                                                            <p className=\"text-secondary\" style={{ marginLeft: '5px' }}>@{profile.user.username}</p>\r\n                                                        </div>\r\n                                                        <p className=\"text-secondary\">{this.lastChatMessage.slice(0, 40)}</p>\r\n                                                    </div>\r\n                                                </li>\r\n                                            </Link>\r\n                                        )\r\n                                    }) :\r\n                                    <div className=\"messages-loader-container\">\r\n                                        <div className=\"loader\" />\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {!!this.props.match.params.slug &&\r\n                        <div className=\"mobile-chat-page\">\r\n                            <Chat\r\n                                backArrow={true}\r\n                                username={this.state.username}\r\n                                otherUsername={this.props.match.params.slug}\r\n                                chatId={this.state.chatId}\r\n                                openModal={this.openModal}\r\n                                updateUnreadMessagesNumber={this.props.updateUnreadMessagesNumber}\r\n                                updateMessagesComponent={this.fetchActiveChatProfiles}\r\n                            />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nimport { SERVER_URL } from '../config/settings'\r\nimport ProfileListItem from '../components/ProfileListItem'\r\n\r\nexport default function LikesModal(props) {\r\n    const [myProfile, setMyProfile] = useState(null)\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n    }, [])\r\n\r\n    return (\r\n        <Modal show={props.isOpen}\r\n            onHide={props.hideModal}\r\n            size=\"lg\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title><strong>Curtidas</strong></Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"list-group\" style={{ height: '400px', overflow: 'hidden', overflowY: 'scroll' }}>\r\n                    {props.likes &&\r\n                        props.likes.map(like => like.profile).map(profile => {\r\n                            return (\r\n                                <ProfileListItem\r\n                                    profile={profile}\r\n                                    myProfile={myProfile}\r\n                                    style={{ borderTop: 'none', borderLeft: 'none', borderRight: 'none' }}\r\n                                    onClick={props.hideModal}\r\n                                />\r\n                            )\r\n                        })}\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport { SERVER_URL } from '../../config/settings'\r\nimport LikesModal from '../../components/LikesModal'\r\nimport PostListItem from '../../components/PostListItem'\r\n\r\nexport default function Posts(props) {\r\n    const [myProfile, setMyProfile] = useState(null)\r\n    const [likesModal, setLikesModal] = useState({ isOpen: false, likes: null })\r\n    const profile = props.profile\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n    }, [])\r\n\r\n    const hideLikesModal = () => {\r\n        setLikesModal({\r\n            isOpen: false,\r\n            likes: null\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <LikesModal\r\n                isOpen={likesModal.isOpen}\r\n                likes={likesModal.likes}\r\n                hideModal={hideLikesModal}\r\n            />\r\n            <div className=\"post-list\">\r\n                {profile && myProfile ?\r\n                    <>\r\n                        {profile.posts.length ? profile.posts.map(post => {\r\n                            return (\r\n                                <PostListItem\r\n                                    post={post}\r\n                                    myProfile={myProfile}\r\n                                    renderParent={props.fetchProfile}\r\n                                    openLikesModal={likes => setLikesModal({ isOpen: true, likes: likes })}\r\n                                />\r\n                            )\r\n                        }) :\r\n                            <div className=\"no-posts-container\">\r\n                                {profile.id === myProfile.id ?\r\n                                    <h3 style={{ marginTop: '50px' }}>Você não tem posts</h3>\r\n                                    :\r\n                                    <h3 style={{ marginTop: '50px' }}>{profile.first_name} não tem posts</h3>\r\n                                }\r\n                            </div>\r\n                        }\r\n                    </>\r\n                    :\r\n                    <div className=\"posts-loader-container\" >\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Interests(props) {\r\n    const profile = props.profile\r\n\r\n    return (\r\n        <div className=\"interests-page-container\">\r\n            <h3>Interesses públicos de {profile.first_name}</h3>\r\n            <div className=\"interest-list-container\">\r\n                {profile && profile.interests.filter(i => i.public).map(interest => {\r\n                    return (\r\n                        <>\r\n                            {interest.title &&\r\n                                <>\r\n                                    <hr />\r\n                                    <li className=\"interest-item\">\r\n                                        {interest.title[0].toUpperCase() + interest.title.slice(1)}\r\n                                        <Link to={`/interesses/${interest.title}`}>\r\n                                            <button className=\"btn btn-secondary\" style={{ padding: '5px' }}>Pesquisar usuários</button>\r\n                                        </Link>\r\n                                    </li>\r\n                                </>\r\n                            }\r\n                        </>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Picker from 'emoji-picker-react'\r\n\r\nimport Header from '../components/fixed/Header'\r\nimport Posts from './profile-components/Posts'\r\nimport Interests from './profile-components/Interests'\r\nimport { SERVER_URL } from '../config/settings'\r\nimport { csrftoken, openCloseEmojiList } from '../config/utils'\r\n\r\nexport default function MyProfile() {\r\n    const [profile, setProfile] = useState(null)\r\n    const [profileImagePreview, setProfileImagePreview] = useState(null)\r\n    const [isEditing, setIsEditing] = useState(false)\r\n    const [editingBioContent, setEditingBioContent] = useState('')\r\n    const [currentPageIsPosts, setCurrentPageIsPosts] = useState(true)\r\n\r\n    document.title = 'Perfil / Napker'\r\n\r\n    useEffect(() => {\r\n        fetchProfile()\r\n    }, [])\r\n\r\n    const fetchProfile = () => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setProfile(data)\r\n                setProfileImagePreview(`${SERVER_URL}${data.photo}`)\r\n            })\r\n    }\r\n\r\n    const switchPage = e => {\r\n        document.querySelectorAll('.profile-page-menu-item-active').forEach(el => {\r\n            el.classList.remove('profile-page-menu-item-active')\r\n        })\r\n        e.target.classList.add('profile-page-menu-item-active')\r\n        if (e.target.id === 'profile-posts-page-menu-item') {\r\n            setCurrentPageIsPosts(true)\r\n        } else if (e.target.id === 'profile-interests-page-menu-item') {\r\n            setCurrentPageIsPosts(false)\r\n        }\r\n    }\r\n\r\n    const handleProfileImageChange = e => {\r\n        const reader = new FileReader()\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                setProfileImagePreview(reader.result)\r\n            }\r\n        }\r\n        try {\r\n            reader.readAsDataURL(e.target.files[0])\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n\r\n    const handleUsernameChange = e => {\r\n        if (e.target.value.trim() !== '') {\r\n            fetch(`${SERVER_URL}/profile-api/user/${e.target.value}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if (data.bool !== 'false' && data.id !== profile.id) {\r\n                        document.querySelector('#username-taken').style.display = 'initial'\r\n                    } else {\r\n                        document.querySelector('#username-taken').style.display = 'none'\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    const onEmojiSelect = (event, emojiObject) => {\r\n        setEditingBioContent(editingBioContent + emojiObject.emoji)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Perfil\" />\r\n            <div className=\"content\">\r\n                {profile ?\r\n                    <>\r\n                        <Modal show={isEditing}\r\n                            onHide={() => setIsEditing(false)}\r\n                            size=\"lg\">\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title>Editar perfil</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                <form\r\n                                    action={`${SERVER_URL}/update-profile`}\r\n                                    className=\"d-flex flex-column justify-content-center\"\r\n                                    id=\"update-profile-form\"\r\n                                    method=\"POST\"\r\n                                    encType=\"multipart/form-data\"\r\n                                >\r\n                                    <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n                                    <div className=\"d-flex flex-column justify-content-center align-items-center mb-2\">\r\n                                        <img src={profileImagePreview}\r\n                                            className=\"profile-img-big\"\r\n                                            style={{ marginBottom: '25px' }}\r\n                                        />\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            accept=\"image/png, image/jpg, image/jpeg\"\r\n                                            className=\"profile-photo-input\"\r\n                                            name=\"profile-photo\"\r\n                                            onChange={handleProfileImageChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-center\">\r\n                                        Email: {profile.email}\r\n                                    </div>\r\n                                    <hr />\r\n                                    <div className=\"edit-profile-input\">\r\n                                        <label htmlFor=\"first-name\" className=\"profile-field-label\">Nome:</label>\r\n                                        <input className=\"profile-field-input\" type=\"text\" name=\"first-name\" id=\"first-name\" placeholder={profile.first_name} />\r\n                                    </div>\r\n                                    <div className=\"edit-profile-input\">\r\n                                        <label htmlFor=\"last-name\" className=\"profile-field-label\">Sobrenome:</label>\r\n                                        <input className=\"profile-field-input\" type=\"text\" name=\"last-name\" id=\"last-name\" placeholder={profile.last_name} />\r\n                                    </div>\r\n                                    <div className=\"edit-profile-input\">\r\n                                        <label htmlFor=\"username\" className=\"profile-field-label\">Nome de usuário:</label>\r\n                                        <input\r\n                                            className=\"profile-field-input\"\r\n                                            type=\"text\"\r\n                                            name=\"username\"\r\n                                            id=\"username\"\r\n                                            placeholder={`@${profile.user.username}`}\r\n                                            onChange={handleUsernameChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div\r\n                                        id=\"username-taken\"\r\n                                        style={{ display: 'none', width: '100%', textAlign: 'center', padding: '3px' }}\r\n                                    >\r\n                                        <span>Nome de usuário já existe</span>\r\n                                    </div>\r\n                                    <div className=\"edit-profile-input\">\r\n                                        <label htmlFor=\"birth-date\" className=\"profile-field-label\">Data de nascimento:</label>\r\n                                        <input className=\"profile-field-input\" type=\"date\" name=\"birth-date\" id=\"birth-date\" defaultValue={profile.birth_date} />\r\n                                    </div>\r\n                                    <div className=\"emoji-list-container bio-emoji-list\" id=\"emoji-list-container\">\r\n                                        <Picker onEmojiClick={onEmojiSelect} />\r\n                                    </div>\r\n                                    <div className=\"edit-profile-input\">\r\n                                        <label htmlFor=\"bio\" className=\"profile-field-label\">Bio:</label>\r\n                                        <div className=\"email-input-container\">\r\n                                            <input\r\n                                                className=\"profile-field-input-email\"\r\n                                                type=\"email\"\r\n                                                name=\"bio\"\r\n                                                id=\"bio\"\r\n                                                value={editingBioContent}\r\n                                                placeholder={profile.bio}\r\n                                                onChange={e => setEditingBioContent(e.target.value)}\r\n                                            />\r\n                                            <label\r\n                                                className=\"far fa-smile\"\r\n                                                id=\"emoji-button\"\r\n                                                onClick={() => openCloseEmojiList(false)}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <button className=\"btn btn-grey\" onClick={() => setIsEditing(false)}>Fechar</button>\r\n                                <button className=\"btn btn-primary\" onClick={() => document.querySelector('form#update-profile-form').submit()}>Salvar</button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n                        <div className=\"profile-data-container\">\r\n                            <div className=\"d-flex flex-column align-items-start\" style={{ textAlign: 'start' }}>\r\n                                <p>\r\n                                    <img src={`${SERVER_URL}${profile.photo}`}\r\n                                        className=\"profile-img-big\"\r\n                                        style={{ marginBottom: '25px' }}\r\n                                    />\r\n                                </p>\r\n                                <p style={{ marginBottom: 0 }}><strong>{profile.first_name} {profile.last_name}</strong></p>\r\n                                <p className=\"text-secondary\" style={{ marginTop: 0 }}>@{profile.user.username}</p>\r\n                                <p>{profile.bio}</p>\r\n                                <p className=\"text-secondary\">\r\n                                    <i className=\"far fa-calendar-alt\"></i> Entrou em {profile.created.split('-').reverse().join('/')}\r\n                                </p>\r\n                                <p>\r\n                                    <Link to={`/user/${profile.slug}/amigos`} style={{ color: '#000' }}>\r\n                                        <strong>{profile.friends.length}</strong> {profile.friends.length === 1 ? 'amigo' : 'amigos'}\r\n                                    </Link>\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"myprofile-btn-wrapper\">\r\n                                <button\r\n                                    className=\"btn btn-secondary\"\r\n                                    type=\"button\"\r\n                                    onClick={() => setIsEditing(true)}\r\n                                    style={{ marginBottom: '10px' }}\r\n                                >\r\n                                    Editar perfil\r\n                                </button>\r\n                                <Link to='/perfil/meus-interesses'>\r\n                                    <button className=\"btn btn-secondary\">Editar interesses</button>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"profile-page-menu\">\r\n                            <div\r\n                                className=\"profile-page-menu-item profile-page-menu-item-active\"\r\n                                id=\"profile-posts-page-menu-item\"\r\n                                onClick={switchPage}\r\n                            >\r\n                                Posts ({profile.posts.length})\r\n                            </div>\r\n                            <div\r\n                                className=\"profile-page-menu-item\"\r\n                                id=\"profile-interests-page-menu-item\"\r\n                                onClick={switchPage}\r\n                            >\r\n                                Interesses ({profile.interests.filter(i => i.public).length})\r\n                            </div>\r\n                        </div>\r\n                        {currentPageIsPosts ?\r\n                            <Posts profile={profile} fetchProfile={fetchProfile} /> :\r\n                            <Interests profile={profile} />\r\n                        }\r\n                    </> :\r\n                    <div className=\"profile-page-loader-container\">\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport { SERVER_URL } from '../../config/settings'\r\nimport ProfileListItem from '../../components/ProfileListItem'\r\n\r\nexport default function BlockUser() {\r\n    const [blockedProfiles, setBlockedProfiles] = useState(null)\r\n    const [myProfile, setMyProfile] = useState(null)\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n        fetch(`${SERVER_URL}/profile-api/get-blocked-profiles`)\r\n            .then(response => response.json())\r\n            .then(data => setBlockedProfiles(data))\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"settings-description-container\">\r\n            {blockedProfiles !== null && myProfile !== null ?\r\n                <>\r\n                    {!!blockedProfiles.length ?\r\n                        <div className=\"blocked-profiles-list\">\r\n                            <div className=\"blocked-profiles-title\">\r\n                                <h4>\r\n                                    Você possui {blockedProfiles.length} {blockedProfiles.length === 1 ? 'perfil bloqueado' : 'perfis bloqueados'}\r\n                                </h4>\r\n                            </div>\r\n                            {blockedProfiles.map(profile => {\r\n                                return (\r\n                                    <ProfileListItem\r\n                                        profile={profile}\r\n                                        myProfile={myProfile}\r\n                                        style={{ borderTop: 'none', borderLeft: 'none', borderRight: 'none' }}\r\n                                    />\r\n                                )\r\n                            })\r\n                            }\r\n                        </div>\r\n                        :\r\n                        <div className=\"no-blocked-profiles\">\r\n                            <h3>Você não possui perfis bloqueados</h3>\r\n                        </div>\r\n                    }\r\n                </>\r\n                :\r\n                <div className=\"settings-loader-container\">\r\n                    <div className=\"loader\" />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\n\r\nimport { csrftoken } from '../../config/utils'\r\nimport { SERVER_URL } from '../../config/settings'\r\n\r\nexport default function ChangePassword() {\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n    const [successMessage, setSuccessMessage] = useState(null)\r\n\r\n    const handleFormSubmit = e => {\r\n        e.preventDefault()\r\n        let password = document.querySelector('#password').value\r\n        let newPassword = document.querySelector('#new_password').value\r\n        let newPasswordc = document.querySelector('#new_passwordc').value\r\n        for (let input of document.querySelectorAll('form > input')) {\r\n            if (!input.value) {\r\n                alert('Todos os campos devem ser preenchidos!')\r\n                return\r\n            }\r\n        }\r\n        if (newPassword !== newPasswordc) {\r\n            setErrorMessage('Os campos \"Nova senha\" e \"Confirmar nova senha\" devem ter o mesmo valor!')\r\n            return\r\n        }\r\n        fetch(`${SERVER_URL}/change-password`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({\r\n                password: password,\r\n                new_password: newPassword,\r\n                new_passwordc: newPasswordc,\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data === 'success') {\r\n                    setSuccessMessage('Senha alterada com successo!')\r\n                    password = newPassword = newPasswordc = ''\r\n                } else {\r\n                    setErrorMessage(data)\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"settings-description-container\">\r\n            {errorMessage &&\r\n                <div class=\"alert alert-danger alert\" role=\"alert\">\r\n                    {errorMessage}\r\n                </div>\r\n            }\r\n            {successMessage &&\r\n                <div class=\"alert alert-success alert\" role=\"alert\">\r\n                    {successMessage}\r\n                </div>\r\n            }\r\n            <div className=\"change-password-title-container\">\r\n                <h3>Alterar senha</h3>\r\n            </div>\r\n            <hr />\r\n            <form className=\"change-password-form\">\r\n                <input id=\"password\" type=\"password\" placeholder=\"Senha atual\" autoFocus />\r\n                <br />\r\n                <a href=\"#\">Esqueceu sua senha?</a>\r\n                <hr />\r\n                <br />\r\n                <input id=\"new_password\" type=\"password\" placeholder=\"Nova senha\" />\r\n                <br />\r\n                <input id=\"new_passwordc\" type=\"password\" placeholder=\"Confirmar nova senha\" />\r\n                <br />\r\n                <button\r\n                    className=\"btn btn-primary\"\r\n                    type=\"submit\"\r\n                    onClick={handleFormSubmit}\r\n                >Confirmar</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\n\r\nimport { csrftoken } from '../../config/utils'\r\nimport { SERVER_URL } from '../../config/settings'\r\n\r\nexport default function DeleteAccount() {\r\n    const [displayErrorMessage, setDisplayErrorMessage] = useState(null)\r\n\r\n    const deleteAccount = () => {\r\n        if (window.confirm('Tem certeza que deseja deletar a sua conta ?\\nEsta ação é irreversível?')) {\r\n            const password = document.querySelector('#password').value\r\n            if (!password) {\r\n                window.alert('A senha não pode ficar em branco!')\r\n            } else {\r\n                fetch(`${SERVER_URL}/delete-account`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-type': 'application/json',\r\n                        'X-CSRFToken': csrftoken,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        password: password\r\n                    })\r\n                })\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        if (data === 'Wrong password') {\r\n                            setDisplayErrorMessage(true)\r\n                        } else {\r\n                            window.alert('Conta deletada com sucesso.')\r\n                            window.location.href = SERVER_URL\r\n                        }\r\n                    })\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"settings-description-container\">\r\n            {displayErrorMessage &&\r\n                <div className=\"alert\">\r\n                    <div className=\"alert alert-danger\" role=\"alert\">Senha incorreta!</div>\r\n                </div>\r\n            }\r\n            <div className=\"delete-account-title-container\">\r\n                <h3>Deletar conta</h3>\r\n            </div>\r\n            <hr />\r\n            <div className=\"delete-account-confirmation\">\r\n                <input id=\"password\" type=\"password\" placeholder=\"Senha\" autoFocus />\r\n                <hr />\r\n                <br />\r\n                Tem certeza que deseja apagar a sua conta ?\r\n                <br />\r\n                Esta ação é irreversível\r\n                <br />\r\n                <button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={deleteAccount}\r\n                >Deletar conta</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { handleLogout } from '../../config/utils'\r\nimport Header from '../../components/fixed/header'\r\nimport BlockedProfiles from './blockedProfiles'\r\nimport ChangePassword from './changePassword'\r\nimport DeleteAccount from './deleteAccount'\r\n\r\nexport default function Settings(props) {\r\n    if (!props.page) props.page = 'blocked-profiles'\r\n\r\n    document.title = 'Configurações / Napker'\r\n\r\n    useEffect(() => {\r\n        document.getElementById(props.page).classList.add('active')\r\n    }, [])\r\n\r\n    const pageChange = page => {\r\n        document.querySelectorAll('.active').forEach(el => {\r\n            el.classList.remove('active')\r\n        })\r\n        document.getElementById(page).classList.add('active')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Configurações\" />\r\n            <div className=\"content\">\r\n                <div className=\"settings-page-container\">\r\n                    <div className=\"settings-page-menu\">\r\n                        <div className=\"d-flex flex-column w-100\">\r\n                            <Link to=\"/configurações/perfis-bloqueados\" style={{ textDecoration: 'none', width: '100%' }}>\r\n                                <li id=\"blocked-profiles\" onClick={() => pageChange('blocked-profiles')}>\r\n                                    Perfis bloqueados\r\n                            <i className=\"fas fa-angle-right\"></i>\r\n                                </li>\r\n                            </Link>\r\n                            <Link to=\"/configurações/alterar-senha\" style={{ textDecoration: 'none', width: '100%' }}>\r\n                                <li id=\"change-password\" onClick={() => pageChange('change-password')}>\r\n                                    Alterar senha\r\n                            <i className=\"fas fa-angle-right\"></i>\r\n                                </li>\r\n                            </Link>\r\n                            <Link to=\"/configurações/deletar-conta\" style={{ textDecoration: 'none', width: '100%' }}>\r\n                                <li id=\"delete-account\" onClick={() => pageChange('delete-account')}>\r\n                                    Apagar conta\r\n                            <i className=\"fas fa-angle-right\"></i>\r\n                                </li>\r\n                            </Link>\r\n                        </div>\r\n                        <li className=\"logout-btn\" onClick={handleLogout}>\r\n                            Sair da conta\r\n                        </li>\r\n                    </div>\r\n                    {props.page === 'blocked-profiles' ?\r\n                        <BlockedProfiles />\r\n                        :\r\n                        <>\r\n                            {props.page === 'change-password' ?\r\n                                <ChangePassword />\r\n                                :\r\n                                <DeleteAccount />\r\n                            }\r\n                        </>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport { SERVER_URL } from '../../config/settings'\r\nimport LikesModal from '../../components/LikesModal'\r\nimport PostListItem from '../../components/PostListItem'\r\n\r\nexport default function Posts(props) {\r\n    const [myProfile, setMyProfile] = useState(null)\r\n    const [likesModal, setLikesModal] = useState({ isOpen: false, likes: null })\r\n    const profile = props.profile\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n    }, [])\r\n\r\n    const hideLikesModal = () => {\r\n        setLikesModal({\r\n            isOpen: false,\r\n            likes: null\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <LikesModal\r\n                isOpen={likesModal.isOpen}\r\n                likes={likesModal.likes}\r\n                hideModal={hideLikesModal}\r\n            />\r\n            <div className=\"post-list\">\r\n                {profile && myProfile ?\r\n                    <>\r\n                        {profile.posts.length ? profile.posts.map(post => {\r\n                            return (\r\n                                <PostListItem\r\n                                    post={post}\r\n                                    myProfile={myProfile}\r\n                                    renderParent={props.fetchProfile}\r\n                                    openLikesModal={likes => setLikesModal({ isOpen: true, likes: likes })}\r\n                                />\r\n                            )\r\n                        }) :\r\n                            <div className=\"no-posts-container\">\r\n                                {profile.id === myProfile.id ?\r\n                                    <h3 style={{ marginTop: '50px' }}>Você não tem posts</h3>\r\n                                    :\r\n                                    <h3 style={{ marginTop: '50px' }}>{profile.first_name} não tem posts</h3>\r\n                                }\r\n                            </div>\r\n                        }\r\n                    </>\r\n                    :\r\n                    <div className=\"posts-loader-container\" >\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Interests(props) {\r\n    const profile = props.profile\r\n\r\n    return (\r\n        <div className=\"interests-page-container\">\r\n            <h3>Interesses públicos de {profile.first_name}</h3>\r\n            <div className=\"interest-list-container\">\r\n                {profile && profile.interests.filter(i => i.public).map(interest => {\r\n                    return (\r\n                        <>\r\n                            {interest.title &&\r\n                                <>\r\n                                    <hr />\r\n                                    <li className=\"interest-item\">\r\n                                        {interest.title[0].toUpperCase() + interest.title.slice(1)}\r\n                                        <Link to={`/interesses/${interest.title}`}>\r\n                                            <button className=\"btn btn-secondary\" style={{ padding: '5px' }}>Pesquisar usuários</button>\r\n                                        </Link>\r\n                                    </li>\r\n                                </>\r\n                            }\r\n                        </>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Header from '../../components/fixed/header'\r\nimport Posts from '../profile-components/posts'\r\nimport Interests from '../profile-components/interests'\r\nimport { SERVER_URL } from '../../config/settings'\r\nimport { csrftoken } from '../../config/utils'\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myProfile: null,\r\n            profile: null,\r\n            alertMessage: null,\r\n            relationshipButtonLabel: '',\r\n            currentPageIsPosts: true,\r\n        }\r\n        this.slug = this.props.match.params.slug\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.fetchProfile()\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${SERVER_URL}/profile-api/relationship/${this.slug}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                let label\r\n                switch (data.relationship) {\r\n                    case 'friends':\r\n                        label = 'Amigos'\r\n                        break\r\n                    case 'invite-sent':\r\n                        label = 'Solicitado'\r\n                        break\r\n                    case 'invite-received':\r\n                        label = 'Aceitar'\r\n                        break\r\n                    case 'none':\r\n                        label = 'Solicitar'\r\n                }\r\n                this.setState({\r\n                    relationshipButtonLabel: label\r\n                })\r\n            })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        let btn = document.querySelector('#profile-page-relationship-btn')\r\n        if (btn) {\r\n            switch (btn.innerHTML) {\r\n                case 'Amigos':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.onmouseenter = () => {\r\n                        if (btn.innerHTML === 'Amigos') btn.innerHTML = 'Remover'\r\n                    }\r\n                    btn.onmouseout = () => {\r\n                        if (btn.innerHTML === 'Remover') btn.innerHTML = 'Amigos'\r\n                    }\r\n                    btn.classList.add('friend-btn')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Solicitado':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Aceitar':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Solicitar':\r\n                    btn.classList.add('btn-secondary')\r\n                    btn.classList.remove('d-none')\r\n            }\r\n        }\r\n    }\r\n\r\n    fetchProfile = () => {\r\n        fetch(`${SERVER_URL}/profile-api/user/${this.slug}`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                profile: data\r\n            }))\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ myProfile: data }))\r\n    }\r\n\r\n    sendFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/send-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    cancelFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/cancel-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    removeFromFriends = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/remove-from-friends`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    acceptFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/reply-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({\r\n                'senderid': pk,\r\n                'reply': 'accept'\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                this.props.updateNotificationsNumber()\r\n            })\r\n    }\r\n\r\n    handleRelationshipUpdate = e => {\r\n        const btn = e.target\r\n        if (btn.innerHTML === 'Solicitar') {\r\n            this.sendFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitado'\r\n            btn.className = 'btn btn-primary'\r\n        } else if (btn.innerHTML === 'Solicitado') {\r\n            this.cancelFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitar'\r\n            btn.className = 'btn btn-secondary'\r\n        } else if (btn.innerHTML === 'Amigos' || btn.innerHTML === 'Remover') {\r\n            if (window.confirm(`Remover @${this.state.profile.user.username} dos amigos?`)) {\r\n                this.removeFromFriends(btn.dataset.pk)\r\n                btn.innerHTML = 'Solicitar'\r\n                btn.className = 'btn btn-secondary'\r\n            }\r\n        } else if (btn.innerHTML === 'Aceitar') {\r\n            this.acceptFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Amigos'\r\n            btn.className = 'btn btn-primary'\r\n        }\r\n    }\r\n\r\n    blockUnblockUser = () => {\r\n        if (this.state.myProfile.blocked_users.map(u => u.id).includes(this.state.profile.user.id)) {\r\n            if (window.confirm(`Tem certeza que deseja desbloquear ${this.state.profile.first_name} ?`)) {\r\n                fetch(`${SERVER_URL}/profile-api/unblock-user`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-type': 'application/json',\r\n                        'X-CSRFToken': csrftoken,\r\n                    },\r\n                    body: JSON.stringify(this.state.profile)\r\n                })\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        console.log(data)\r\n                        this.setState({ alertMessage: `Você desbloqueou @${this.state.profile.user.username}.` })\r\n                        this.fetchProfile()\r\n                    })\r\n            }\r\n        } else {\r\n            if (window.confirm(`Tem certeza que deseja bloquear ${this.state.profile.first_name} ?`)) {\r\n                fetch(`${SERVER_URL}/profile-api/block-user`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-type': 'application/json',\r\n                        'X-CSRFToken': csrftoken,\r\n                    },\r\n                    body: JSON.stringify(this.state.profile)\r\n                })\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        console.log(data)\r\n                        this.setState({\r\n                            alertMessage: `Você bloqueou @${this.state.profile.user.username}.\r\n                         ${this.state.profile.first_name} não conseguirá mais ver o seu perfil ou te enviar mensagens.`\r\n                        })\r\n                        this.fetchProfile()\r\n                    })\r\n            }\r\n        }\r\n        this.fetchProfile()\r\n        document.querySelector('#view-more-select').style.display = 'none'\r\n    }\r\n\r\n    openCloseExtraOptions = () => {\r\n        const el = document.querySelector('#view-more-select')\r\n        const style = el.style\r\n        if (!style.display) style.display = 'none'\r\n        if (style.display === 'none') {\r\n            document.querySelector('#view-more-icon').classList.add('view-more-icon-active')\r\n            style.display = 'flex'\r\n        } else {\r\n            document.querySelector('#view-more-icon').classList.remove('view-more-icon-active')\r\n            style.display = 'none'\r\n        }\r\n    }\r\n\r\n    switchPage = e => {\r\n        document.querySelectorAll('.profile-page-menu-item-active').forEach(el => {\r\n            el.classList.remove('profile-page-menu-item-active')\r\n        })\r\n        e.target.classList.add('profile-page-menu-item-active')\r\n        if (e.target.id === 'profile-posts-page-menu-item') {\r\n            this.setState({ currentPageIsPosts: true })\r\n        } else if (e.target.id === 'profile-interests-page-menu-item') {\r\n            this.setState({ currentPageIsPosts: false })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header page={this.state.profile ? `${this.state.profile.first_name} ${this.state.profile.last_name}` : 'Perfil'}\r\n                    backArrow={true}\r\n                />\r\n                {this.state.myProfile !== null && this.state.profile !== null ?\r\n                    <div className=\"content\">\r\n                        {this.state.profile.blocked_users.map(u => u.id).includes(this.state.myProfile.user.id) ?\r\n                            <div className=\"user-blocked-me-container\">\r\n                                <h3>O usuário te bloqueou</h3>\r\n                            </div>\r\n                            :\r\n                            <>\r\n                                {this.state.alertMessage &&\r\n                                    <div class=\"alert alert-success profile-page-alert-success\" role=\"alert\">\r\n                                        {this.state.alertMessage}\r\n                                    </div>\r\n                                }\r\n                                <div className=\"profile-data-container\">\r\n                                    <div className=\"d-flex flex-column align-items-start\" style={{ textAlign: 'start' }}>\r\n                                        <p>\r\n                                            <img src={`${SERVER_URL}${this.state.profile.photo}`}\r\n                                                className=\"profile-img-big\"\r\n                                                style={{ marginBottom: '25px' }}\r\n                                            />\r\n                                        </p>\r\n                                        <p style={{ marginBottom: 0 }}><strong>{this.state.profile.first_name} {this.state.profile.last_name}</strong></p>\r\n                                        <p className=\"text-secondary\" style={{ marginTop: 0 }}>@{this.state.profile.user.username}</p>\r\n                                        <p style={{ textAlign: 'start' }}>{this.state.profile.bio}</p>\r\n                                        <p className=\"text-secondary\">\r\n                                            <i className=\"far fa-calendar-alt\"></i> Entrou em {this.state.profile.created.split('-').reverse().join('/')}\r\n                                        </p>\r\n                                        <p>\r\n                                            <Link to={`/user/${this.state.profile.slug}/amigos`} style={{ color: '#000' }}>\r\n                                                <strong>{this.state.profile.friends.length}</strong> {this.state.profile.friends.length === 1 ? 'amigo' : 'amigos'}\r\n                                            </Link>\r\n                                        </p>\r\n                                    </div>\r\n                                    <div className=\"profile-btn-wrapper\">\r\n                                        <i\r\n                                            className=\"fas fa-ellipsis-h btn btn-secondary mr-2\"\r\n                                            id=\"view-more-icon\"\r\n                                            onClick={this.openCloseExtraOptions}\r\n                                        />\r\n                                        <div className=\"view-more-select profile-view-more-select\" id=\"view-more-select\">\r\n                                            <Link to={`/mensagens/${this.state.profile.slug}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                                                {!this.state.myProfile.blocked_users.map(u => u.id).includes(this.state.profile.user.id) &&\r\n                                                    <li>\r\n                                                        <i class=\"fas fa-envelope text-secondary\" />\r\n                                                        Enviar mensagem\r\n                                                    </li>\r\n                                                }\r\n                                            </Link>\r\n                                            <li onClick={this.blockUnblockUser}>\r\n                                                <i class=\"fas fa-user-lock text-secondary\" />\r\n                                                {this.state.myProfile.blocked_users.map(u => u.id).includes(this.state.profile.user.id) ?\r\n                                                    'Desbloquear'\r\n                                                    :\r\n                                                    'Bloquear'\r\n                                                }\r\n                                            </li>\r\n                                        </div>\r\n                                        {!this.state.myProfile.blocked_users.map(u => u.id).includes(this.state.profile.user.id) &&\r\n                                            <button className=\"btn d-none\"\r\n                                                id=\"profile-page-relationship-btn\"\r\n                                                data-pk={this.state.profile.id}\r\n                                                onClick={this.handleRelationshipUpdate}\r\n                                            >{this.state.relationshipButtonLabel}</button>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"profile-page-menu\">\r\n                                    <div\r\n                                        className=\"profile-page-menu-item profile-page-menu-item-active\"\r\n                                        id=\"profile-posts-page-menu-item\"\r\n                                        onClick={this.switchPage}\r\n                                    >\r\n                                        Posts ({this.state.profile.posts.length})\r\n                                    </div>\r\n                                    <div\r\n                                        className=\"profile-page-menu-item\"\r\n                                        id=\"profile-interests-page-menu-item\"\r\n                                        onClick={this.switchPage}\r\n                                    >\r\n                                        Interesses ({this.state.profile.interests.filter(i => i.public).length})\r\n                                    </div>\r\n                                </div>\r\n                                {this.state.currentPageIsPosts ?\r\n                                    <Posts profile={this.state.profile} fetchProfile={this.fetchProfile} /> :\r\n                                    <Interests profile={this.state.profile} />\r\n                                }\r\n                            </>\r\n                        }\r\n                    </div>\r\n                    :\r\n                    <div className=\"profile-page-loader-container\">\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile","import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../../config/settings'\r\nimport Header from '../../components/fixed/header'\r\nimport ProfileListItem from '../../components/ProfileListItem'\r\n\r\nexport default function Friends() {\r\n    const [friends, setFriends] = useState(null)\r\n    const [profile, setProfile] = useState(null)\r\n    const [myProfile, setMyProfile] = useState(null)\r\n    const { slug } = useParams()\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/user/${slug}`)\r\n            .then(response => response.json())\r\n            .then(data => setProfile(data))\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (profile) {\r\n            fetch(`${SERVER_URL}/profile-api/get-friends-profiles/${profile.slug}`)\r\n                .then(response => response.json())\r\n                .then(data => setFriends(data))\r\n        }\r\n    }, [profile])\r\n\r\n    return (\r\n        <>\r\n            <Header page={profile !== null ? `${profile.first_name} ${profile.last_name} / Amigos` : 'Perfil / Amigos'}\r\n                backArrow={true}\r\n            />\r\n            <div className=\"content\">\r\n                <div className=\"list-group profile-friends-container\">\r\n                    {friends !== null && myProfile !== null ?\r\n                        <>\r\n                            {friends.length ? friends.map(friend => {\r\n                                return (\r\n                                    <ProfileListItem\r\n                                        profile={friend}\r\n                                        myProfile={myProfile}\r\n                                        style={{ borderTop: 'none', borderLeft: 'none', borderRight: 'none' }}\r\n                                    />\r\n                                )\r\n                            }) :\r\n                                <h3 style={{ marginTop: '30px' }}>\r\n                                    {profile ? `${profile.first_name} ainda não possui amigos` : 'Você ainda não possui amigos'}\r\n                                </h3>\r\n                            }\r\n                        </>\r\n                        :\r\n                        <div className=\"profiles-loader-container\">\r\n                            <div className=\"loader\" />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../../config/settings'\r\nimport Header from '../../components/fixed/header'\r\nimport ProfileListItem from '../../components/ProfileListItem'\r\n\r\nexport default function InterestProfiles() {\r\n    const [myProfile, setMyProfile] = useState(null)\r\n    const [profiles, setProfiles] = useState(null)\r\n\r\n    const { interest } = useParams()\r\n\r\n    document.title = `${interest[0].toUpperCase() + interest.slice(1)} / Napker`\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n        fetch(`${SERVER_URL}/profile-api/interest-profile-list/${interest}`)\r\n            .then(response => response.json())\r\n            .then(data => setProfiles(data))\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Header\r\n                page={`Interesse / ${interest[0].toUpperCase() + interest.slice(1)}`}\r\n                backArrow={true}\r\n            />\r\n            <div className=\"content\">\r\n                <div className=\"interests-title-container\">\r\n                    <h3>Perfis interessados em \"{interest}\"</h3>\r\n                </div>\r\n                <div className=\"list-group interest-profile-list\">\r\n                    {myProfile !== null && profiles !== null ?\r\n                        profiles.map(profile => {\r\n                            return (\r\n                                <ProfileListItem\r\n                                    profile={profile}\r\n                                    myProfile={myProfile}\r\n                                    style={{ borderLeft: 'none', borderTop: 'none', borderRight: 'none' }}\r\n                                />\r\n                            )\r\n                        }) :\r\n                        <div className=\"profiles-loader-container\">\r\n                            <div className=\"loader\" />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport { SERVER_URL } from '../../../config/settings'\r\n\r\nexport default function PublicInterests(props) {\r\n\r\n    useEffect(() => {\r\n        if (document.querySelector('.public-interests-container')) {\r\n            const tagContainer = document.querySelector('.public-tag-container');\r\n            const input = document.querySelector('.public-tag-container input');\r\n\r\n            let tags = props.myProfile.interests.filter(i => i.public).map(i => i.title);\r\n            const interestsInput = document.querySelector('#public-interests')\r\n            addTags()\r\n\r\n            function createTag(label) {\r\n                const div = document.createElement('div');\r\n                div.classList.add('tag');\r\n                div.classList.add('public-tag');\r\n                const span = document.createElement('span');\r\n                span.innerHTML = label;\r\n                const closeIcon = document.createElement('i');\r\n                closeIcon.classList.add('public-close-icon')\r\n                closeIcon.innerHTML = '×';\r\n                closeIcon.classList.add('material-icons')\r\n                closeIcon.setAttribute('data-item', label);\r\n                div.appendChild(span);\r\n                div.appendChild(closeIcon);\r\n                if (!interestsInput.value.includes(label)) interestsInput.value += ` ${label}`;\r\n                return div;\r\n            }\r\n\r\n            function clearTags() {\r\n                document.querySelectorAll('.public-tag').forEach(tag => {\r\n                    tag.parentElement.removeChild(tag);\r\n                });\r\n            }\r\n\r\n            function addTags() {\r\n                clearTags();\r\n                tags.sort()\r\n                tags.slice().reverse().forEach(tag => {\r\n                    tagContainer.prepend(createTag(tag));\r\n                });\r\n                props.setInterests(tags)\r\n            }\r\n\r\n            input.addEventListener('keydown', (e) => {\r\n                if (e.key === 'Enter') {\r\n                    e.target.value.split(',').forEach(tag => {\r\n                        if (tag.length < 3) {\r\n                            window.alert('Os interesses devem ter no mínimo 3 caracteres!')\r\n                        } else {\r\n                            tags.push(tag)\r\n                        }\r\n                    });\r\n\r\n                    e.preventDefault()\r\n\r\n                    addTags();\r\n                    input.value = '';\r\n                    return false; //prevent the form to submit\r\n                }\r\n            });\r\n            document.addEventListener('click', (e) => {\r\n                if (e.target.classList.contains('public-close-icon')) {\r\n                    const tagLabel = e.target.getAttribute('data-item');\r\n                    const index = tags.indexOf(tagLabel);\r\n                    tags = [...tags.slice(0, index), ...tags.slice(index + 1)];\r\n                    addTags();\r\n                }\r\n            })\r\n\r\n            input.focus();\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"public-interests-container\">\r\n            <h3>Interesses públicos</h3>\r\n            <p>\r\n                Os interesses públicos são visíveis para os outros usuários.\r\n                Coloque aqui interesses que sem eles seu perfil ficaria incompleto.\r\n            </p>\r\n            <div class=\"tag-container public-tag-container\">\r\n                <input placeholder=\"Digite e pressione 'Enter'\" maxLength=\"50\" />\r\n                <input type=\"hidden\" name=\"public-interests\" id=\"public-interests\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport { SERVER_URL } from '../../../config/settings'\r\n\r\nexport default function PrivateInterests(props) {\r\n\r\n    useEffect(() => {\r\n        if (document.querySelector('.private-interests-container')) {\r\n            const tagContainer = document.querySelector('.private-tag-container');\r\n            const input = document.querySelector('.private-tag-container input');\r\n\r\n            let tags = props.myProfile.interests.filter(i => !i.public).map(i => i.title);\r\n            const interestsInput = document.querySelector('#private-interests')\r\n            addTags()\r\n\r\n            function createTag(label) {\r\n                const div = document.createElement('div');\r\n                div.classList.add('tag');\r\n                div.classList.add('private-tag');\r\n                const span = document.createElement('span');\r\n                span.innerHTML = label;\r\n                const closeIcon = document.createElement('i');\r\n                closeIcon.classList.add('private-close-icon')\r\n                closeIcon.classList.add('material-icons')\r\n                closeIcon.innerHTML = '×';\r\n                closeIcon.setAttribute('data-item', label);\r\n                div.appendChild(span);\r\n                div.appendChild(closeIcon);\r\n                if (!interestsInput.value.includes(label)) interestsInput.value += ` ${label}`;\r\n                return div;\r\n            }\r\n\r\n            function clearTags() {\r\n                document.querySelectorAll('.private-tag').forEach(tag => {\r\n                    tag.parentElement.removeChild(tag);\r\n                });\r\n            }\r\n\r\n            function addTags() {\r\n                clearTags();\r\n                tags.sort()\r\n                tags.slice().reverse().forEach(tag => {\r\n                    tagContainer.prepend(createTag(tag));\r\n                });\r\n                props.setInterests(tags)\r\n            }\r\n\r\n            input.addEventListener('keydown', (e) => {\r\n                if (e.key === 'Enter') {\r\n                    e.target.value.split(',').forEach(tag => {\r\n                        if (tag.length < 3) {\r\n                            window.alert('Os interesses devem ter no mínimo 3 caracteres!')\r\n                        } else {\r\n                            tags.push(tag)\r\n                        }\r\n                    });\r\n\r\n                    e.preventDefault()\r\n\r\n                    addTags();\r\n                    input.value = '';\r\n                    return false; //prevent the form to submit\r\n                }\r\n            });\r\n            document.addEventListener('click', (e) => {\r\n                if (e.target.classList.contains('private-close-icon')) {\r\n                    const tagLabel = e.target.getAttribute('data-item');\r\n                    const index = tags.indexOf(tagLabel);\r\n                    tags = [...tags.slice(0, index), ...tags.slice(index + 1)];\r\n                    addTags();\r\n                }\r\n            })\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"private-interests-container\">\r\n            <h3>Interesses privados</h3>\r\n            <p>\r\n                Os interesses privados não são visíveis para os outros usuários.\r\n                Eles servem para aumentar a precisão das recomendações de perfis que\r\n                possuem o máximo de afinidade possível com você.\r\n            </p>\r\n            <div class=\"tag-container private-tag-container\">\r\n                <input placeholder=\"Digite e pressione 'Enter'\" maxLength=\"50\" />\r\n                <input type=\"hidden\" name=\"private-interests\" id=\"private-interests\" />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport Header from '../../../components/fixed/header'\r\nimport PublicInterests from './publicInterests'\r\nimport PrivateInterests from './privateInterests'\r\nimport { SERVER_URL } from '../../../config/settings'\r\nimport { csrftoken } from '../../../config/utils'\r\n\r\nexport default function EditInterests() {\r\n    const [myProfile, setMyProfile] = useState(null)\r\n    let [publicInterests, setPublicInterests] = [null, value => publicInterests = value]\r\n    let [privateInterests, setPrivateInterests] = [null, value => privateInterests = value]\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n    }, [])\r\n\r\n    const submitInterests = () => {\r\n        fetch(`${SERVER_URL}/profile-api/set-myinterests`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({\r\n                public_interests: publicInterests.sort(),\r\n                private_interests: privateInterests.sort()\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                document.querySelector('#interests-updated-message').style.display = 'block'\r\n                document.documentElement.scrollTop = 0\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Meus interesses\" backArrow={true} />\r\n            <div className=\"content\">\r\n                <p\r\n                    className=\"edit-interests-success-message\"\r\n                    id=\"interests-updated-message\"\r\n                >\r\n                    Interesses atualizados com sucesso\r\n                </p>\r\n                {myProfile ?\r\n                    <div className=\"interests-page-container\">\r\n                        <button\r\n                            className=\"btn btn-primary\"\r\n                            onClick={submitInterests}\r\n                        >\r\n                            Salvar\r\n                        </button>\r\n                        <hr />\r\n                        <PublicInterests\r\n                            myProfile={myProfile}\r\n                            setInterests={setPublicInterests}\r\n                        />\r\n\r\n                        <br />\r\n                        <hr />\r\n                        <br />\r\n\r\n                        <PrivateInterests\r\n                            myProfile={myProfile}\r\n                            setInterests={setPrivateInterests}\r\n                        />\r\n                    </div> :\r\n                    <div className=\"edit-interests-loader-container\">\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Picker from 'emoji-picker-react'\r\n\r\nimport { csrftoken, openCloseEmojiList } from '../config/utils'\r\nimport { SERVER_URL } from '../config/settings'\r\n\r\nexport default function CommentModal(props) {\r\n    const [commentContent, setCommentContent] = useState('')\r\n\r\n    const post = props.post\r\n\r\n    const handleCommentChange = e => {\r\n        setCommentContent(e.target.value)\r\n        const el = document.querySelector('#comment-form-submit')\r\n        el.disabled = e.target.value === ''\r\n    }\r\n\r\n    const onEmojiSelect = (event, emojiObject) => {\r\n        setCommentContent(commentContent + emojiObject.emoji)\r\n        document.querySelector('#comment-form-submit').disabled = false\r\n    }\r\n\r\n    return (\r\n        <Modal show={props.isOpen}\r\n            onHide={props.hideModal}\r\n            size=\"lg\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title><strong>Comentar</strong></Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"post-container\">\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <div className=\"post-row\">\r\n                            <div className=\"post-col\">\r\n                                <img src={`${SERVER_URL}${post.author.photo}`}\r\n                                    className=\"profile-img-med\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"post-col\">\r\n                                <div>\r\n                                    <strong>{post.author.first_name} {post.author.last_name} </strong>\r\n                                    <p className=\"text-secondary d-inline-block\">\r\n                                        @{post.author.user.username} • {post.created.split('-').reverse().join('/')}\r\n                                    </p>\r\n                                </div>\r\n                                <div style={{ textAlign: 'start' }}>\r\n                                    {post.content}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <form action={`${SERVER_URL}/post-api/comment-post/${post.id}`} method=\"POST\" className=\"comment-form\">\r\n                    <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n                    <label\r\n                        className=\"far fa-smile\"\r\n                        id=\"emoji-button\"\r\n                        onClick={() => openCloseEmojiList(false)}\r\n                    />\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"comment-content\"\r\n                        value={commentContent}\r\n                        placeholder=\"Comente alguma coisa\"\r\n                        style={{ marginRight: '5px', height: '40px' }}\r\n                        onChange={handleCommentChange}\r\n                    />\r\n                    <div className=\"emoji-list-container chat-emoji-list\" id=\"emoji-list-container\">\r\n                        <Picker onEmojiClick={onEmojiSelect} />\r\n                    </div>\r\n                    <button\r\n                        className=\"btn btn-primary\"\r\n                        id=\"comment-form-submit\"\r\n                        type=\"submit\"\r\n                        disabled\r\n                    >\r\n                        Enviar\r\n                    </button>\r\n                </form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nimport CommentModal from '../../components/CommentModal'\r\nimport LikesModal from '../../components/LikesModal'\r\nimport Header from '../../components/fixed/Header'\r\nimport { SERVER_URL } from '../../config/settings'\r\nimport { csrftoken } from '../../config/utils'\r\n\r\nexport default function Post(props) {\r\n    const [post, setPost] = useState(null)\r\n    const [myprofile, setMyProfile] = useState(null)\r\n    const [commentModalIsOpen, setCommentModalIsOpen] = useState(props.commentModalIsOpen)\r\n    const [postLikesModal, setPostLikesModal] = useState({ isOpen: false, likes: null })\r\n    const [commentLikesModal, setCommentLikesModal] = useState({ isOpen: false, likes: null })\r\n\r\n    const { id } = useParams()\r\n\r\n    useEffect(() => {\r\n        fetchPost()\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n    }, [])\r\n\r\n    const fetchPost = () => {\r\n        fetch(`${SERVER_URL}/post-api/post/${id}`)\r\n            .then(response => response.json())\r\n            .then(data => setPost(data))\r\n    }\r\n\r\n    const likeUnlikePost = e => {\r\n        const likeBtn = e.target\r\n        if (likeBtn.classList.contains('fas')) {\r\n            likeBtn.classList.remove('fas') //border heart\r\n            likeBtn.classList.add('far')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/unlike-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPost()\r\n                })\r\n        } else {\r\n            likeBtn.classList.remove('far') //border heart\r\n            likeBtn.classList.add('fas')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/like-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPost()\r\n                })\r\n        }\r\n    }\r\n\r\n    const likeUnlikeComment = e => {\r\n        const likeBtn = e.target\r\n        if (likeBtn.classList.contains('fas')) {\r\n            likeBtn.classList.remove('fas') //border heart\r\n            likeBtn.classList.add('far')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/unlike-comment/${likeBtn.dataset.commentid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPost()\r\n                })\r\n        } else {\r\n            likeBtn.classList.remove('far') //border heart\r\n            likeBtn.classList.add('fas')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/like-comment/${likeBtn.dataset.commentid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPost()\r\n                })\r\n        }\r\n    }\r\n\r\n    const deleteComment = (e, commentId) => {\r\n        e.stopPropagation()\r\n        const el = document.querySelector(`#post-comment-${commentId}`)\r\n        if (window.confirm('Tem certeza que deseja apagar o comentário?\\nEssa ação é irreversível.')) {\r\n            el.style.animationPlayState = 'running'\r\n            console.log(el, el.style.animationPlayState)\r\n            el.addEventListener('animationend', () => {\r\n                fetchPost()\r\n            })\r\n            fetch(`${SERVER_URL}/post-api/delete-comment/${commentId}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                })\r\n        }\r\n    }\r\n\r\n    const deletePost = (e, postId) => {\r\n        e.stopPropagation()\r\n        const el = document.querySelector(`#profile-post-${postId}`)\r\n        if (window.confirm('Tem certeza que deseja apagar o post?\\nEssa ação é irreversível.')) {\r\n            fetch(`${SERVER_URL}/post-api/delete-post/${postId}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    window.location.href = '/'\r\n                })\r\n        }\r\n    }\r\n\r\n    const hideCommentModal = () => {\r\n        setCommentModalIsOpen(false)\r\n    }\r\n\r\n    const hidePostLikesModal = () => {\r\n        setPostLikesModal({\r\n            isOpen: false,\r\n            likes: null\r\n        })\r\n    }\r\n\r\n    const hideCommentLikesModal = () => {\r\n        setCommentLikesModal({\r\n            isOpen: false,\r\n            likes: null\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"post-page-container\">\r\n            {post &&\r\n                <CommentModal\r\n                    isOpen={commentModalIsOpen}\r\n                    hideModal={hideCommentModal}\r\n                    post={post}\r\n                />\r\n            }\r\n            <LikesModal\r\n                isOpen={postLikesModal.isOpen}\r\n                likes={postLikesModal.likes}\r\n                hideModal={hidePostLikesModal}\r\n            />\r\n            <LikesModal\r\n                isOpen={commentLikesModal.isOpen}\r\n                likes={commentLikesModal.likes}\r\n                hideModal={hideCommentLikesModal}\r\n            />\r\n            <Header page=\"Post\" backArrow={true} />\r\n            <div className=\"content\">\r\n                {post && myprofile ?\r\n                    <>\r\n                        <div className=\"post-container\">\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                <div className=\"post-row\">\r\n                                    <div className=\"post-col\">\r\n                                        <Link to={post.author.id === myprofile.id ?\r\n                                            '/perfil' : `/user/${post.author.slug}`}\r\n                                        >\r\n                                            <img src={`${SERVER_URL}${post.author.photo}`}\r\n                                                className=\"profile-img-med\"\r\n                                            />\r\n                                        </Link>\r\n                                    </div>\r\n                                    <div className=\"post-col\">\r\n                                        <Link to={post.author.id === myprofile.id ?\r\n                                            '/perfil' : `/user/${post.author.slug}`}\r\n                                            style={{ color: '#000' }}\r\n                                        >\r\n                                            <div style={{ textAlign: 'start' }}>\r\n                                                <strong>{post.author.first_name} {post.author.last_name} </strong>\r\n                                                <p className=\"text-secondary d-inline-block\">\r\n                                                    @{post.author.user.username} • {post.created.split('-').reverse().join('/')}\r\n                                                </p>\r\n                                            </div>\r\n                                        </Link>\r\n                                        <div style={{ textAlign: 'start', fontSize: 'larger' }}>\r\n                                            {post.content}\r\n                                        </div>\r\n                                        {post.image &&\r\n                                            <img src={`${SERVER_URL}${post.image}`} className=\"post-img\" />\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                {myprofile.id == post.author.id &&\r\n                                    <i\r\n                                        className=\"far fa-trash-alt trash-icon text-secondary\"\r\n                                        style={{ margin: '20px 20px 0 0' }}\r\n                                        onClick={e => deletePost(e, post.id)}\r\n                                    />\r\n                                }\r\n                            </div>\r\n                            <div className=\"post-actions\">\r\n                                <p className=\"text-secondary\" style={{ fontSize: 'large' }}>\r\n                                    <Link to={`/post/${id}/comentar`} className=\"text-secondary\">\r\n                                        <i\r\n                                            class=\"far fa-comment\"\r\n                                            onClick={() => setCommentModalIsOpen(true)}\r\n                                        />\r\n                                    </Link>{post.comments.length}\r\n                                    {post.likes.map(like => like.profile.id).includes(myprofile.id) ?\r\n                                        <i class=\"fas fa-heart\"\r\n                                            data-postid={post.id}\r\n                                            onClick={likeUnlikePost}\r\n                                        />\r\n                                        :\r\n                                        <i class=\"far fa-heart\"\r\n                                            data-postid={post.id}\r\n                                            onClick={likeUnlikePost}\r\n                                        />\r\n                                    }\r\n                                    <p className=\"post-likes-number\"\r\n                                        onClick={() => setPostLikesModal({ isOpen: true, likes: post.likes })}\r\n                                    >\r\n                                        {post.likes.length}\r\n                                    </p>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"comment-list\">\r\n                            {post.comments.map(comment => {\r\n                                return (\r\n                                    <li\r\n                                        className=\"post-container\"\r\n                                        id={`post-comment-${comment.id}`}\r\n                                        key={comment.id}\r\n                                    >\r\n                                        <div className=\"d-flex justify-content-between\">\r\n                                            <div className=\"post-row\">\r\n                                                <div className=\"post-col\">\r\n                                                    <Link to={comment.author.id === myprofile.id ?\r\n                                                        '/perfil' : `/user/${comment.author.slug}`}\r\n                                                    >\r\n                                                        <img src={`${SERVER_URL}${comment.author.photo}`}\r\n                                                            className=\"profile-img-sm\"\r\n                                                        />\r\n                                                    </Link>\r\n                                                </div>\r\n                                                <div className=\"post-col\">\r\n                                                    <Link to={comment.author.id === myprofile.id ?\r\n                                                        '/perfil' : `/user/${comment.author.slug}`}\r\n                                                        style={{ color: '#000' }}\r\n                                                    >\r\n                                                        <div style={{ textAlign: 'start' }}>\r\n                                                            <strong style={{ marginRight: '5px' }}>\r\n                                                                {comment.author.first_name} {comment.author.last_name}\r\n                                                            </strong>\r\n                                                            <p className=\"text-secondary d-inline-block\">\r\n                                                                @{comment.author.user.username} • {comment.created.split('-').reverse().join('/')}\r\n                                                            </p>\r\n                                                        </div>\r\n                                                    </Link>\r\n                                                    <div style={{ textAlign: 'start' }}>\r\n                                                        {comment.content}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            {comment.author.id == myprofile.id &&\r\n                                                <i\r\n                                                    className=\"far fa-trash-alt trash-icon text-secondary\"\r\n                                                    style={{ margin: '20px 20px 0 0' }}\r\n                                                    onClick={e => deleteComment(e, comment.id)}\r\n                                                />\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"post-actions\" style={{ padding: '0 0 2px 63px' }}>\r\n                                            <p className=\"text-secondary\">\r\n                                                {comment.likes.map(like => like.profile.id).includes(myprofile.id) ?\r\n                                                    <i class=\"fas fa-heart\"\r\n                                                        data-commentid={comment.id}\r\n                                                        onClick={likeUnlikeComment}\r\n                                                    />\r\n                                                    :\r\n                                                    <i class=\"far fa-heart\"\r\n                                                        data-commentid={comment.id}\r\n                                                        onClick={likeUnlikeComment}\r\n                                                    />\r\n                                                }\r\n                                                <p\r\n                                                    className=\"post-likes-number\"\r\n                                                    onClick={() => setPostLikesModal({ isOpen: true, likes: comment.likes })}\r\n                                                >\r\n                                                    {comment.likes.length}\r\n                                                </p>\r\n                                            </p>\r\n                                        </div>\r\n                                    </li>\r\n                                )\r\n                            })\r\n                            }\r\n                        </div>\r\n                    </> :\r\n                    <div className=\"posts-loader-container\" >\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Header from '../components/fixed/header'\r\nimport { SERVER_URL } from '../config/settings'\r\nimport { csrftoken } from '../config/utils'\r\n\r\nexport default class Posts extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            profile: null,\r\n            postContent: '',\r\n            postFormImagePreview: null\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ profile: data }))\r\n    }\r\n\r\n\r\n    handlePostContentChange = e => {\r\n        this.setState({ postContent: e.target.value })\r\n        const el = document.querySelector('#post-form-submit-btn')\r\n        el.disabled = e.target.value.trim() === '' && !this.state.postFormImagePreview\r\n    }\r\n\r\n    handlePostImageChange = e => {\r\n        const reader = new FileReader()\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                this.setState({ postFormImagePreview: reader.result })\r\n                document.querySelector('#post-img-container').style.display = 'initial'\r\n                document.querySelector('#post-form-submit-btn').disabled = false\r\n            }\r\n        }\r\n        try {\r\n            reader.readAsDataURL(e.target.files[0])\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n    handleCloseImage = () => {\r\n        document.querySelector('#post-img-container').style.display = 'none'\r\n        document.querySelector('#post-image').value = ''\r\n        if (this.state.postContent.trim() === '') document.querySelector('#post-form-submit-btn').disabled = true\r\n        this.setState({ postFormImagePreview: null })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content\">\r\n                <Header page=\"Novo post\" backArrow={true} />\r\n                <div className=\"post-form-page-container\">\r\n                    {this.state.profile ?\r\n                        <form\r\n                            action={`${SERVER_URL}/post-api/create-post`}\r\n                            method=\"POST\"\r\n                            className=\"create-post-form-mobile\"\r\n                            encType=\"multipart/form-data\"\r\n                        >\r\n                            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n                            <div className=\"d-flex\">\r\n                                <Link to=\"/perfil\">\r\n                                    <img\r\n                                        src={`${SERVER_URL}${this.state.profile.photo}`}\r\n                                        className=\"profile-img-med\"\r\n                                    />\r\n                                </Link>\r\n                                <textarea\r\n                                    className=\"post-content-textarea\"\r\n                                    name=\"post-content\"\r\n                                    value={this.state.postContent}\r\n                                    placeholder=\"No que você está pensando?\"\r\n                                    maxLength={300}\r\n                                    autoFocus\r\n                                    onChange={this.handlePostContentChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"w-100 d-flex justify-content-center\">\r\n                                <div\r\n                                    className=\"post-img-container\"\r\n                                    id=\"post-img-container\">\r\n                                    <div\r\n                                        className=\"post-img-options\"\r\n                                    >\r\n                                        <i\r\n                                            className=\"far fa-times-circle\"\r\n                                            onClick={this.handleCloseImage}\r\n                                        />\r\n                                    </div>\r\n                                    <img\r\n                                        src={this.state.postFormImagePreview}\r\n                                        className=\"post-img post-form-img-preview\"\r\n                                        id=\"post-form-img-preview\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"d-flex justify-content-between\" style={{ margin: '0px 70px 0 70px' }}>\r\n                                <div className=\"post-extra-options\">\r\n                                    <label htmlFor=\"post-image\" class=\"far fa-image\" />\r\n                                    <input\r\n                                        type=\"file\"\r\n                                        accept=\"image/png, image/jpg, image/jpeg\"\r\n                                        name=\"post-image\"\r\n                                        id=\"post-image\"\r\n                                        style={{ display: 'none' }}\r\n                                        onChange={this.handlePostImageChange}\r\n                                    />\r\n                                </div>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\"\r\n                                    id=\"post-form-submit-btn\"\r\n                                    style={{ height: '40px' }}\r\n                                    disabled\r\n                                >\r\n                                    Postar\r\n                            </button>\r\n                            </div>\r\n                        </form>\r\n                        :\r\n                        <div className=\"posts-loader-container\" >\r\n                            <div className=\"loader\" />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\nimport Sidebar from './components/fixed/Sidebar'\r\nimport BottomMenu from './components/fixed/BottomMenu'\r\nimport Home from './pages/Home'\r\nimport Notifications from './pages/Notifications'\r\nimport Messages from './pages/messages_page/Messages'\r\nimport MyProfile from './pages/MyProfile'\r\nimport Settings from './pages/settings_page/SettingsMenu'\r\nimport Profile from './pages/home-components/Profile'\r\nimport ProfileFriends from './pages/profile-components/Friends'\r\nimport InterestProfiles from './pages/profile-components/InterestProfiles'\r\nimport EditInterests from './pages/profile-components/edit-interests/EditInterests'\r\nimport Post from './pages/home-components/Post'\r\n\r\nimport PostFormPage from './pages/PostFormPage'\r\n\r\nimport { SERVER_URL } from './config/settings'\r\n\r\nexport default function App() {\r\n    const [invitesReceivedNumber, setInvitesReceived] = useState(0)\r\n    const [unvisualizedLikesNumber, setUnvisulaizedLikes] = useState(0)\r\n    const [unvisualizedCommentsNumber, setUnvisulaizedComments] = useState(0)\r\n    let notificationsNumber = invitesReceivedNumber + unvisualizedLikesNumber + unvisualizedCommentsNumber\r\n    const [unreadMessagesNumber, setUnreadMessagesNumber] = useState(0)\r\n\r\n    useEffect(() => {\r\n        updateNotificationsNumber()\r\n        updateUnreadMessagesNumber()\r\n        window.setInterval(() => {\r\n            updateNotificationsNumber()\r\n            updateUnreadMessagesNumber()\r\n        }, 6000)\r\n    }, [])\r\n\r\n    const updateNotificationsNumber = () => {\r\n        fetch(`${SERVER_URL}/profile-api/myinvites`)\r\n            .then(response => response.json())\r\n            .then(data => setInvitesReceived(data.length))\r\n        fetch(`${SERVER_URL}/post-api/unvisualized-post-likes`)\r\n            .then(response => response.json())\r\n            .then(data => setUnvisulaizedLikes(data.length))\r\n        fetch(`${SERVER_URL}/post-api/unvisualized-post-comments`)\r\n            .then(response => response.json())\r\n            .then(data => setUnvisulaizedComments(data.length))\r\n    }\r\n\r\n    const updateUnreadMessagesNumber = () => {\r\n        fetch(`${SERVER_URL}/chat-api/all-unread-messages-number`)\r\n            .then(response => response.json())\r\n            .then(data => setUnreadMessagesNumber(data['unread_messages_number']))\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <Sidebar notificationsNumber={notificationsNumber} unreadMessagesNumber={unreadMessagesNumber} />\r\n            <div className=\"main-content\">\r\n                <Switch>\r\n                    <Route path=\"/home\" component={Home} />\r\n                    <Route path=\"/notificações\" render={props => (\r\n                        <Notifications {...props} updateNotificationsNumber={updateNotificationsNumber} />\r\n                    )} />\r\n                    <Route path=\"/mensagens\" exact component={Messages} />\r\n                    <Route path=\"/mensagens/:slug\" render={props => (\r\n                        <Messages {...props} updateUnreadMessagesNumber={updateUnreadMessagesNumber} />\r\n                    )} />\r\n                    <Route path=\"/perfil\" exact component={MyProfile} />\r\n                    <Route path=\"/perfil/meus-interesses\" component={EditInterests} />\r\n                    <Route path=\"/configurações\" exact component={Settings} />\r\n                    <Route path=\"/configurações/perfis-bloqueados\" exact render={props => (\r\n                        <Settings {...props} page={'blocked-profiles'} />\r\n                    )} />\r\n                    <Route path=\"/configurações/alterar-senha\" exact render={props => (\r\n                        <Settings {...props} page={'change-password'} />\r\n                    )} />\r\n                    <Route path=\"/configurações/deletar-conta\" exact render={props => (\r\n                        <Settings {...props} page={'delete-account'} />\r\n                    )} />\r\n                    <Route path=\"/user/:slug\" exact render={props => (\r\n                        <Profile {...props} updateNotificationsNumber={updateNotificationsNumber} />\r\n                    )} />\r\n                    <Route path=\"/user/:slug/amigos\" component={ProfileFriends} />\r\n                    <Route path=\"/post/:id\" exact component={Post} />\r\n                    <Route path=\"/post/:id/comentar\" render={props => (\r\n                        <Post {...props} commentModalIsOpen={true} />\r\n                    )} />\r\n                    <Route path=\"/interesses/:interest\" component={InterestProfiles} />\r\n\r\n                    <Route path=\"/postar\" component={PostFormPage} />\r\n                </Switch>\r\n                <BottomMenu notificationsNumber={notificationsNumber} unreadMessagesNumber={unreadMessagesNumber} />\r\n            </div>\r\n        </Router>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './assets/bottomMenu.css'\r\nimport './assets/chat.css'\r\nimport './assets/commentModal.css'\r\nimport './assets/notifications.css'\r\nimport './assets/posts.css'\r\nimport './assets/profile.css'\r\nimport './assets/profiles.css'\r\nimport './assets/settings.css'\r\nimport './assets/sidebar.css'\r\nimport './assets/style.css'\r\nimport './assets/responsivity.css'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'))\r\n"],"sourceRoot":""}