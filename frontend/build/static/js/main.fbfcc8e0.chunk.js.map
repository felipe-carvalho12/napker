{"version":3,"sources":["settings.js","components/fixed/Sidebar.js","components/fixed/BottomMenu.js","components/likesmodal.js","utils.js","pages/home-components/Posts.js","pages/home-components/Profiles.js","components/fixed/Header.js","pages/Home.js","pages/Notifications.js","components/fixed/header.js","pages/messages_page/Websocket.js","pages/messages_page/chat.js","pages/messages_page/Messages.js","components/LikesModal.js","pages/profile-components/Posts.js","pages/profile-components/Interests.js","pages/MyProfile.js","pages/settings_page/blockedProfiles.js","pages/settings_page/changePassword.js","pages/settings_page/deleteAccount.js","pages/settings_page/SettingsMenu.js","pages/profile-components/posts.js","pages/profile-components/interests.js","pages/home-components/Profile.js","pages/profile-components/Friends.js","pages/profile-components/InterestProfiles.js","pages/profile-components/edit-interests/publicInterests.js","pages/profile-components/edit-interests/privateInterests.js","pages/profile-components/edit-interests/EditInterests.js","components/CommentModal.js","pages/home-components/Post.js","pages/PostFormPage.js","App.js","index.js"],"names":["SERVER_URL","Sidebar","props","useEffect","document","querySelectorAll","forEach","el","classList","remove","currentUrl","window","location","href","split","includes","querySelector","add","switchPage","e","isHome","target","className","to","style","textDecoration","onClick","src","id","notificationsNumber","unreadMessagesNumber","LikesModal","Modal","show","isOpen","onHide","hideModal","size","Header","closeButton","Title","Body","height","overflow","overflowY","likes","map","like","profile","slug","color","key","photo","marginRight","first_name","last_name","user","username","bio","csrftoken","name","cookieValue","cookie","cookies","i","length","trim","substring","decodeURIComponent","getCookie","handleLogout","confirm","replace","openCloseEmojiList","closing","display","Posts","fetchPosts","fetch","then","response","json","data","setState","posts","likeUnlikePost","stopPropagation","likeBtn","contains","dataset","postid","console","log","hideLikesModal","likesModal","deletePost","postId","animationPlayState","addEventListener","method","headers","handlePostContentChange","postContent","value","disabled","state","postFormImagePreview","handlePostImageChange","reader","FileReader","onload","readyState","result","readAsDataURL","files","handleCloseImage","onEmojiSelect","event","emojiObject","emoji","this","action","encType","type","placeholder","maxLength","autoFocus","onChange","margin","htmlFor","class","accept","onEmojiClick","post","author","created","reverse","join","textAlign","content","image","comments","data-postid","React","Component","Profiles","useState","myProfile","setMyProfile","profiles","setProfiles","filteredProfiles","setFilteredProfiles","search","setSearch","handleRelationshipUpdate","pk","btn","innerHTML","body","JSON","stringify","cancelFriendRequest","data-pk","backArrow","history","back","page","Home","setPage","pages","title","borderRadius","Notifications","notificationsFetchInterval","invites","setInvites","unvisualizedPostLikes","setUnvisualizedPostLikes","visualizedPostLikes","setVisualizedPostLikes","unvisualizedComments","setUnvisualizedComments","visualizedComments","setVisualizedComments","fetchNotifications","setInterval","clearInterval","updateNotificationsNumber","replyRequest","requestBody","senderid","reply","getElementById","sender","justifyContent","data-senderid","data-reply","comment","WebSocketService","callbacks","socketRef","instance","chatUrl","path","WebSocket","onopen","socketNewMessage","command","onmessage","onerror","message","onclose","close","parsedData","parse","Object","keys","messages","chatId","sendMessage","from","messagesCallback","newMessageCallback","send","err","WebSocketInstance","getInstance","Chat","handleComponentChange","scrollToBottom","otherUsername","otherProfile","readMessages","chat_id","messageChangeHandler","sendMessageHandler","preventDefault","messageObject","blocked_users","u","alert","newChatMessage","updateMessagesComponent","renderTimestamp","timestamp","ts","Date","day","getDate","month","getMonth","hour","getHours","minute","getMinutes","getFullYear","renderMessages","currentUser","read","chatLog","scrollTop","scrollHeight","initialiseChat","waitForSocketConnection","addCallbacks","getMessages","bind","addMessage","getUpdatedMessages","fetchMessages","connect","focus","disconnect","newProps","updateUnreadMessagesNumber","callback","component","setTimeout","onSubmit","fontSize","openModal","Messages","handleReceiveProps","participants","other_username","match","params","fetchActiveChatProfiles","activeChats","chats","activeChatsProfiles","addingNewChat","setModalSearch","query","modalProfiles","setContactSearch","filter","p","resetUnreadMessagesCounter","unreadMessagesCounter","incrementUnreadMessagesCounter","setLastChatMessage","lastChatMessage","rerenderingInterval","padding","whiteSpace","maxHeight","indexOf","contact","marginLeft","slice","myprofile","setLikesModal","fetchProfile","marginTop","Interests","interests","public","interest","toUpperCase","MyProfile","setProfile","profileImagePreview","setProfileImagePreview","isEditing","setIsEditing","editingBioContent","setEditingBioContent","currentPageIsPosts","setCurrentPageIsPosts","marginBottom","email","bool","width","defaultValue","birth_date","Footer","submit","friends","BlockUser","blockedProfiles","setBlockedProfiles","ChangePassword","errorMessage","setErrorMessage","successMessage","setSuccessMessage","role","password","newPassword","newPasswordc","new_password","new_passwordc","DeleteAccount","displayErrorMessage","setDisplayErrorMessage","Settings","pageChange","Profile","sendFriendRequest","removeFromFriends","acceptFriendRequest","blockUnblockUser","alertMessage","openCloseExtraOptions","relationshipButtonLabel","label","relationship","onmouseenter","onmouseout","Friends","setFriends","useParams","friend","InterestProfiles","PublicInterests","addTags","tag","parentElement","removeChild","tags","sort","tagContainer","prepend","div","createElement","span","closeIcon","setAttribute","appendChild","interestsInput","createTag","setInterests","input","push","tagLabel","getAttribute","index","PrivateInterests","EditInterests","publicInterests","setPublicInterests","privateInterests","setPrivateInterests","public_interests","private_interests","documentElement","CommentModal","commentContent","setCommentContent","Post","setPost","commentModalIsOpen","setCommentModalIsOpen","postLikesModal","setPostLikesModal","commentLikesModal","setCommentLikesModal","fetchPost","likeUnlikeComment","commentid","commentId","deleteComment","data-commentid","App","invitesReceivedNumber","setInvitesReceived","unvisualizedLikesNumber","setUnvisulaizedLikes","unvisualizedCommentsNumber","setUnvisulaizedComments","setUnreadMessagesNumber","render","exact","ProfileFriends","PostFormPage","ReactDOM"],"mappings":"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","file":"static/js/main.fbfcc8e0.chunk.js","sourcesContent":["const SERVER_URL = 'https://napker.herokuapp.com'\r\nconst SOCKET_URL = 'wss://napker.herokuapp.com'\r\n//const SERVER_URL = 'http://127.0.0.1:8000'\r\n//const SOCKET_URL = 'ws://127.0.0.1:8000'\r\n\r\nconst LOGO_URL = '/static/media/napker.png'\r\n\r\nexport { SERVER_URL, SOCKET_URL, LOGO_URL }\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { SERVER_URL, LOGO_URL } from '../../settings'\r\n\r\nexport default function Sidebar(props) {\r\n    useEffect(() => {\r\n        document.querySelectorAll('.sidebar-menu-item-active').forEach(el => {\r\n            el.classList.remove('sidebar-menu-item-active')\r\n        })\r\n        const currentUrl = window.location.href.split('/')\r\n        if (currentUrl.includes('home')) {\r\n            document.querySelector('#home-menu').classList.add('sidebar-menu-item-active')\r\n        }\r\n        else if (currentUrl.includes('notifica%C3%A7%C3%B5es')) {\r\n            document.querySelector('#notifications-menu').classList.add('sidebar-menu-item-active')\r\n        }\r\n        else if (currentUrl.includes('mensagens')) {\r\n            document.querySelector('#messages-menu').classList.add('sidebar-menu-item-active')\r\n        }\r\n        else if (currentUrl.includes('perfil')) {\r\n            document.querySelector('#profile-menu').classList.add('sidebar-menu-item-active')\r\n        }\r\n        else if (currentUrl.includes('configura%C3%A7%C3%B5es')) {\r\n            document.querySelector('#settings-menu').classList.add('sidebar-menu-item-active')\r\n        }\r\n    }, [])\r\n\r\n    const switchPage = (e, isHome = false) => {\r\n        if (!isHome) {\r\n            document.querySelectorAll('.sidebar-menu-item-active').forEach(el => {\r\n                el.classList.remove('sidebar-menu-item-active')\r\n            })\r\n            e.target.classList.add('sidebar-menu-item-active')\r\n        } else {\r\n            document.querySelectorAll('.sidebar-menu-item-active').forEach(el => {\r\n                el.classList.remove('sidebar-menu-item-active')\r\n            })\r\n            document.querySelector('#home-menu').classList.add('sidebar-menu-item-active')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"logo-container\">\r\n                <Link to=\"/home\" style={{ textDecoration: 'none' }} onClick={e => switchPage(e, true)}>\r\n                    <img src={`${SERVER_URL}${LOGO_URL}`} />\r\n                </Link>\r\n            </div>\r\n            <ul>\r\n                <Link to=\"/home\" style={{ textDecoration: 'none' }}>\r\n                    <li className=\"sidebar-menu-item\" id=\"home-menu\" onClick={switchPage}>\r\n                        <i className=\"fas fa-home sidebar-menu-icon\" />\r\n                        Home\r\n                    </li>\r\n                </Link>\r\n                <Link to=\"/notificações\" style={{ textDecoration: 'none' }}>\r\n                    <li className=\"sidebar-menu-item\" id=\"notifications-menu\" onClick={switchPage}>\r\n                        <i className=\"fas fa-bell sidebar-menu-icon\" />\r\n                        Notificações\r\n                        {!props.notificationsNumber ? '' :\r\n                            <div className=\"notification-text-container\">\r\n                                <div className=\"notification-text\">\r\n                                    {props.notificationsNumber}\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </li>\r\n                </Link>\r\n                <Link to=\"/mensagens\" style={{ textDecoration: 'none' }}>\r\n                    <li className=\"sidebar-menu-item\" id=\"messages-menu\" onClick={switchPage}>\r\n                        <i className=\"fas fa-envelope sidebar-menu-icon\" />\r\n                        Mensagens\r\n                        {!props.unreadMessagesNumber ? '' :\r\n                            <div className=\"notification-text-container\">\r\n                                <div className=\"notification-text\">\r\n                                    {props.unreadMessagesNumber}\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </li>\r\n                </Link>\r\n                <Link to=\"/perfil\" style={{ textDecoration: 'none' }}>\r\n                    <li className=\"sidebar-menu-item\" id=\"profile-menu\" onClick={switchPage}>\r\n                        <i className=\"fas fa-user sidebar-menu-icon\" />\r\n                        Perfil\r\n                    </li>\r\n                </Link>\r\n                <Link to=\"/configurações\" style={{ textDecoration: 'none' }}>\r\n                    <li className=\"sidebar-menu-item\" id=\"settings-menu\" onClick={switchPage}>\r\n                        <i className=\"fas fa-cog sidebar-menu-icon\" />\r\n                        Configurações\r\n                    </li>\r\n                </Link>\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { SERVER_URL, LOGO_URL } from '../../settings'\r\n\r\nexport default function Sidebar(props) {\r\n    useEffect(() => {\r\n        document.querySelectorAll('.sidebar-menu-item-active').forEach(el => {\r\n            el.classList.remove('sidebar-menu-item-active')\r\n        })\r\n        const currentUrl = window.location.href.split('/')\r\n        if (currentUrl.includes('home')) {\r\n            document.querySelector('#home-menu').classList.add('sidebar-menu-item-active')\r\n        }\r\n        else if (currentUrl.includes('notifica%C3%A7%C3%B5es')) {\r\n            document.querySelector('#notifications-menu').classList.add('sidebar-menu-item-active')\r\n        }\r\n        else if (currentUrl.includes('mensagens')) {\r\n            document.querySelector('#messages-menu').classList.add('sidebar-menu-item-active')\r\n        }\r\n        else if (currentUrl.includes('perfil')) {\r\n            document.querySelector('#profile-menu').classList.add('sidebar-menu-item-active')\r\n        }\r\n        else if (currentUrl.includes('configura%C3%A7%C3%B5es')) {\r\n            document.querySelector('#settings-menu').classList.add('sidebar-menu-item-active')\r\n        }\r\n    }, [])\r\n\r\n    const switchPage = (e, isHome = false) => {\r\n        if (!isHome) {\r\n            document.querySelectorAll('.sidebar-menu-item-active').forEach(el => {\r\n                el.classList.remove('sidebar-menu-item-active')\r\n            })\r\n            e.target.classList.add('sidebar-menu-item-active')\r\n        } else {\r\n            document.querySelectorAll('.sidebar-menu-item-active').forEach(el => {\r\n                el.classList.remove('sidebar-menu-item-active')\r\n            })\r\n            document.querySelector('#home-menu').classList.add('sidebar-menu-item-active')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"bottom-menu-action-icon fixed-bottom\">\r\n                <Link to=\"/postar\">\r\n                    <i className=\"fas fa-pencil-alt\" />\r\n                </Link>\r\n            </div>\r\n            <div className=\"bottom-menu fixed-bottom\">\r\n                <ul>\r\n                    <Link to=\"/home\" style={{ textDecoration: 'none' }}>\r\n                        <li className=\"sidebar-menu-item\" id=\"home-menu\" onClick={switchPage}>\r\n                            <i className=\"fas fa-home sidebar-menu-icon\" />\r\n                        </li>\r\n                    </Link>\r\n                    <Link to=\"/notificações\" style={{ textDecoration: 'none' }}>\r\n                        <li className=\"sidebar-menu-item\" id=\"notifications-menu\" onClick={switchPage}>\r\n                            <i className=\"fas fa-bell sidebar-menu-icon\" />\r\n                            {!props.notificationsNumber ? '' :\r\n                                <div className=\"notification-text-container\">\r\n                                    <div className=\"notification-text\">\r\n                                        {props.notificationsNumber}\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </li>\r\n                    </Link>\r\n                    <Link to=\"/mensagens\" style={{ textDecoration: 'none' }}>\r\n                        <li className=\"sidebar-menu-item\" id=\"messages-menu\" onClick={switchPage}>\r\n                            <i className=\"fas fa-envelope sidebar-menu-icon\" />\r\n                            {!props.unreadMessagesNumber ? '' :\r\n                                <div className=\"notification-text-container\">\r\n                                    <div className=\"notification-text\">\r\n                                        {props.unreadMessagesNumber}\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </li>\r\n                    </Link>\r\n                    <Link to=\"/perfil\" style={{ textDecoration: 'none' }}>\r\n                        <li className=\"sidebar-menu-item\" id=\"profile-menu\" onClick={switchPage}>\r\n                            <i className=\"fas fa-user sidebar-menu-icon\" />\r\n                        </li>\r\n                    </Link>\r\n                    <Link to=\"/configurações\" style={{ textDecoration: 'none' }}>\r\n                        <li className=\"sidebar-menu-item\" id=\"settings-menu\" onClick={switchPage}>\r\n                            <i className=\"fas fa-cog sidebar-menu-icon\" />\r\n                        </li>\r\n                    </Link>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../settings'\r\n\r\nexport default function LikesModal(props) {\r\n    return (\r\n        <Modal show={props.isOpen}\r\n            onHide={props.hideModal}\r\n            size=\"lg\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title><strong>Curtidas</strong></Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"list-group\" style={{ height: '400px', overflow: 'hidden', overflowY: 'scroll' }}>\r\n                    {props.likes &&\r\n                        props.likes.map(like => like.profile).map(profile => {\r\n                            return (\r\n                                <Link to={`/user/${profile.slug}`}\r\n                                    style={{ color: '#000', textDecoration: 'none' }}\r\n                                    onClick={props.hideModal}\r\n                                >\r\n                                    <li className=\"list-group-item profile-row modal-profile-li\" key={profile.id}>\r\n                                        <div className=\"d-flex justify-content-between\">\r\n                                            <div className=\"profile-col\">\r\n                                                <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                    className=\"profile-img-med\"\r\n                                                    style={{ marginRight: '10px' }}\r\n                                                />\r\n                                                <div className=\"main-profile-data\">\r\n                                                    <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                                    <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"profile-col\">\r\n                                                {profile.bio}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                </Link>\r\n                            )\r\n                        })}\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}","import { SERVER_URL } from './settings'\r\n\r\nconst csrftoken = getCookie('csrftoken')\r\n\r\nfunction getCookie(name) {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nfunction handleLogout() {\r\n  const bool = window.confirm('Sair do Napker?\\nVocê poderá entrar novamente quando quiser.')\r\n  if (bool) {\r\n    window.location.replace(`${SERVER_URL}/logout`)\r\n  }\r\n}\r\n\r\nfunction openCloseEmojiList(closing = false) {\r\n  const el = document.querySelector('#emoji-list-container')\r\n  const style = el.style\r\n  if (closing) {\r\n    style.display = 'none'\r\n    document.querySelector('#emoji-button').classList.remove('emoji-button-active')\r\n  } else {\r\n    if (!style.display || style.display === 'none') {\r\n      style.display = 'initial'\r\n      document.querySelector('#emoji-button').classList.add('emoji-button-active')\r\n    } else {\r\n      style.display = 'none'\r\n      document.querySelector('#emoji-button').classList.remove('emoji-button-active')\r\n    }\r\n  }\r\n}\r\n\r\nexport { csrftoken, handleLogout, openCloseEmojiList };","import React from 'react'\r\nimport Picker from 'emoji-picker-react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport LikesModal from '../../components/likesmodal'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken, openCloseEmojiList } from '../../utils'\r\n\r\nexport default class Posts extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            profile: null,\r\n            posts: null,\r\n            likesModal: {\r\n                isOpen: false,\r\n                likes: null\r\n            },\r\n            postContent: '',\r\n            postFormImagePreview: null\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ profile: data }))\r\n        this.fetchPosts()\r\n    }\r\n\r\n    fetchPosts = () => {\r\n        fetch(`${SERVER_URL}/post-api/post-list`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ posts: data }))\r\n    }\r\n\r\n    likeUnlikePost = e => {\r\n        e.stopPropagation()\r\n        const likeBtn = e.target\r\n        if (likeBtn.classList.contains('fas')) {\r\n            likeBtn.classList.remove('fas') //border heart\r\n            likeBtn.classList.add('far')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/unlike-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    this.fetchPosts()\r\n                })\r\n        } else {\r\n            likeBtn.classList.remove('far') //border heart\r\n            likeBtn.classList.add('fas')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/like-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    this.fetchPosts()\r\n                })\r\n        }\r\n    }\r\n\r\n    hideLikesModal = () => {\r\n        this.setState({\r\n            likesModal: {\r\n                isOpen: false,\r\n                likes: null\r\n            }\r\n        })\r\n    }\r\n\r\n    deletePost = (e, postId) => {\r\n        e.stopPropagation()\r\n        const el = document.querySelector(`#profile-post-${postId}`)\r\n        if (window.confirm('Tem certeza que deseja apagar o post?\\nEssa ação é irreversível.')) {\r\n            el.style.animationPlayState = 'running'\r\n            el.addEventListener('animationend', () => {\r\n                this.fetchPosts()\r\n            })\r\n            fetch(`${SERVER_URL}/post-api/delete-post/${postId}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                })\r\n        }\r\n    }\r\n\r\n    handlePostContentChange = e => {\r\n        this.setState({ postContent: e.target.value })\r\n        const el = document.querySelector('#post-form-submit-btn')\r\n        el.disabled = e.target.value.trim() === '' && !this.state.postFormImagePreview\r\n    }\r\n\r\n    handlePostImageChange = e => {\r\n        const reader = new FileReader()\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                this.setState({ postFormImagePreview: reader.result })\r\n                document.querySelector('#post-img-container').style.display = 'initial'\r\n                document.querySelector('#post-form-submit-btn').disabled = false\r\n            }\r\n        }\r\n        try {\r\n            reader.readAsDataURL(e.target.files[0])\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n    handleCloseImage = () => {\r\n        document.querySelector('#post-img-container').style.display = 'none'\r\n        document.querySelector('#post-image').value = ''\r\n        if (this.state.postContent.trim() === '') document.querySelector('#post-form-submit-btn').disabled = true\r\n        this.setState({ postFormImagePreview: null })\r\n    }\r\n\r\n    onEmojiSelect = (event, emojiObject) => {\r\n        this.setState({ postContent: this.state.postContent + emojiObject.emoji })\r\n        document.querySelector('#post-form-submit-btn').disabled = false\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <LikesModal\r\n                    isOpen={this.state.likesModal.isOpen}\r\n                    likes={this.state.likesModal.likes}\r\n                    hideModal={this.hideLikesModal}\r\n                />\r\n                {this.state.profile &&\r\n                    <form\r\n                        action={`${SERVER_URL}/post-api/create-post`}\r\n                        method=\"POST\"\r\n                        className=\"create-post-form\"\r\n                        encType=\"multipart/form-data\"\r\n                    >\r\n                        <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n                        <div className=\"d-flex\">\r\n                            <Link to=\"/perfil\">\r\n                                <img\r\n                                    src={`${SERVER_URL}${this.state.profile.photo}`}\r\n                                    className=\"profile-img-med\"\r\n                                />\r\n                            </Link>\r\n                            <textarea\r\n                                className=\"post-content-textarea\"\r\n                                name=\"post-content\"\r\n                                value={this.state.postContent}\r\n                                placeholder=\"No que você está pensando?\"\r\n                                maxLength={300}\r\n                                autoFocus\r\n                                onChange={this.handlePostContentChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"w-100 d-flex justify-content-center\">\r\n                            <div\r\n                                className=\"post-img-container\"\r\n                                id=\"post-img-container\">\r\n                                <div\r\n                                    className=\"post-img-options\"\r\n                                >\r\n                                    <i\r\n                                        className=\"far fa-times-circle\"\r\n                                        onClick={this.handleCloseImage}\r\n                                    />\r\n                                </div>\r\n                                <img\r\n                                    src={this.state.postFormImagePreview}\r\n                                    className=\"post-img post-form-img-preview\"\r\n                                    id=\"post-form-img-preview\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"d-flex justify-content-between\" style={{ margin: '0px 70px 0 70px' }}>\r\n                            <div className=\"post-extra-options\">\r\n                                <label htmlFor=\"post-image\" class=\"far fa-image\" />\r\n                                <input\r\n                                    type=\"file\"\r\n                                    accept=\"image/png, image/jpg, image/jpeg\"\r\n                                    name=\"post-image\"\r\n                                    id=\"post-image\"\r\n                                    style={{ display: 'none' }}\r\n                                    onChange={this.handlePostImageChange}\r\n                                />\r\n                                <label\r\n                                    className=\"far fa-smile\"\r\n                                    id=\"emoji-button\"\r\n                                    onClick={() => openCloseEmojiList(false)}\r\n                                />\r\n                                <div className=\"emoji-list-container\" id=\"emoji-list-container\">\r\n                                    <Picker onEmojiClick={this.onEmojiSelect} />\r\n                                </div>\r\n                            </div>\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"btn btn-primary\"\r\n                                id=\"post-form-submit-btn\"\r\n                                style={{ height: '40px' }}\r\n                                disabled\r\n                            >\r\n                                Postar\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                }\r\n                <div className=\"post-list\">\r\n                    {this.state.posts && this.state.profile ?\r\n                        this.state.posts.map(post => {\r\n                            return (\r\n                                <li\r\n                                    className=\"post-container post-list-item\"\r\n                                    id={`profile-post-${post.id}`}\r\n                                    key={post.id}\r\n                                    onClick={() => window.location.href = `/post/${post.id}`}\r\n                                >\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <div className=\"post-row\">\r\n                                            <div className=\"post-col\">\r\n                                                <Link\r\n                                                    to={post.author.id === this.state.profile.id ?\r\n                                                        '/perfil' : `/user/${post.author.slug}`}\r\n                                                    onClick={e => e.stopPropagation()}\r\n                                                >\r\n                                                    <img src={`${SERVER_URL}${post.author.photo}`}\r\n                                                        className=\"profile-img-med\"\r\n                                                    />\r\n                                                </Link>\r\n                                            </div>\r\n                                            <div className=\"post-col\">\r\n                                                <Link\r\n                                                    to={post.author.id === this.state.profile.id ?\r\n                                                        '/perfil' : `/user/${post.author.slug}`}\r\n                                                    style={{ color: '#000' }}\r\n                                                    onClick={e => e.stopPropagation()}\r\n                                                >\r\n                                                    <div className=\"post-author-data-wrapper\">\r\n                                                        <strong>{post.author.first_name} {post.author.last_name} </strong>\r\n                                                        <p className=\"text-secondary d-inline-block\">\r\n                                                            @{post.author.user.username} • {post.created.split('-').reverse().join('/')}\r\n                                                        </p>\r\n                                                    </div>\r\n                                                </Link>\r\n                                                <div style={{ textAlign: 'start' }}>\r\n                                                    {post.content}\r\n                                                </div>\r\n                                                {post.image &&\r\n                                                    <img src={`${SERVER_URL}${post.image}`} className=\"post-img\" />\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                        {post.author.id === this.state.profile.id &&\r\n                                            <i\r\n                                                className=\"far fa-trash-alt trash-icon text-secondary\"\r\n                                                style={{ margin: '20px 20px 0 0' }}\r\n                                                onClick={e => this.deletePost(e, post.id)}\r\n                                            />}\r\n                                    </div>\r\n                                    <div className=\"post-actions\">\r\n                                        <p className=\"text-secondary\">\r\n                                            <Link\r\n                                                to={`/post/${post.id}/comentar`}\r\n                                                className=\"text-secondary\"\r\n                                                onClick={e => e.stopPropagation()}\r\n                                            >\r\n                                                <i\r\n                                                    class=\"far fa-comment\"\r\n                                                />{post.comments.length}\r\n                                            </Link>\r\n                                            {post.likes.map(like => like.profile.id).includes(this.state.profile.id) ?\r\n                                                <i class=\"fas fa-heart\"\r\n                                                    data-postid={post.id}\r\n                                                    onClick={this.likeUnlikePost}\r\n                                                />\r\n                                                :\r\n                                                <i class=\"far fa-heart\"\r\n                                                    data-postid={post.id}\r\n                                                    onClick={this.likeUnlikePost}\r\n                                                />}\r\n                                            <p className=\"post-likes-number\"\r\n                                                onClick={e => {\r\n                                                    e.stopPropagation()\r\n                                                    this.setState({ likesModal: { isOpen: true, likes: post.likes } })\r\n                                                }}\r\n                                            >\r\n                                                {post.likes.length}\r\n                                            </p>\r\n                                        </p>\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        }) :\r\n                        <div className=\"posts-loader-container\" >\r\n                            <div className=\"loader\" />\r\n                        </div>}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nexport default function Profiles() {\r\n    const [myProfile, setMyProfile] = useState(null)\r\n    const [profiles, setProfiles] = useState(null)\r\n    const [filteredProfiles, setFilteredProfiles] = useState(null)\r\n    const [search, setSearch] = useState('')\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n        fetch(`${SERVER_URL}/profile-api/profile-list`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setFilteredProfiles(null)\r\n                setProfiles(data)\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (search === '') {\r\n            setFilteredProfiles(null)\r\n            return\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/users/${search}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setFilteredProfiles(data)\r\n            })\r\n    }, [search])\r\n\r\n    const sendFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/send-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    const cancelFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/cancel-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    const handleRelationshipUpdate = e => {\r\n        e.stopPropagation()\r\n        const btn = e.target\r\n        if (btn.innerHTML === 'Solicitar') {\r\n            sendFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitado'\r\n            btn.className = 'btn btn-primary'\r\n        } else {\r\n            cancelFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitar'\r\n            btn.className = 'btn btn-secondary'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"profiles-filter-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"profiles-filter-input\"\r\n                    placeholder=\"Pesquisar\"\r\n                    value={search}\r\n                    autoFocus\r\n                    onChange={e => setSearch(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"list-group\">\r\n                {myProfile && (profiles || filteredProfiles) ?\r\n                    <div className=\"profile-list-container\">\r\n                        {filteredProfiles ? filteredProfiles.map(profile => {\r\n                            return (\r\n                                <Link to={`/user/${profile.slug}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                                    <li className=\"list-group-item profile-row filtered-profile\" key={profile.id}>\r\n                                        <div className=\"d-flex\">\r\n                                            <div className=\"profile-img-container\">\r\n                                                <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                    className=\"profile-img-med\"\r\n                                                    style={{ marginRight: '10px' }}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"d-flex flex-column w-100\">\r\n                                                <div className=\"profile-row-top\">\r\n                                                    <div className=\"main-profile-data\">\r\n                                                        <strong style={{ textAlign: 'start' }}>\r\n                                                            {profile.first_name} {profile.last_name}\r\n                                                        </strong>\r\n                                                        <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"profile-row-bottom\">\r\n                                                    {profile.bio}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                </Link>\r\n                            )\r\n                        }\r\n                        ) : profiles && profiles.map(profile => {\r\n                            return (\r\n                                <li\r\n                                    className=\"list-group-item profile-row\"\r\n                                    key={profile.id}\r\n                                    onClick={() => window.location.href = `/user/${profile.slug}`}\r\n                                >\r\n                                    <div className=\"d-flex\">\r\n                                        <div className=\"profile-img-container\">\r\n                                            <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                className=\"profile-img-med\"\r\n                                                style={{ marginRight: '10px' }}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"d-flex flex-column w-100\">\r\n                                            <div className=\"profile-row-top\">\r\n                                                <div className=\"main-profile-data\">\r\n                                                    <strong style={{ textAlign: 'start' }}>\r\n                                                        {profile.first_name} {profile.last_name}\r\n                                                    </strong>\r\n                                                    <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                                </div>\r\n                                                <button className=\"btn btn-secondary\" data-pk={profile.id} onClick={handleRelationshipUpdate}>\r\n                                                    Solicitar\r\n                                                </button>\r\n                                            </div>\r\n                                            <div className=\"profile-row-bottom\">\r\n                                                {profile.bio}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })\r\n                        }\r\n                    </div> :\r\n                    <div className=\"profiles-loader-container\">\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { handleLogout } from '../../utils'\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <div className=\"header fixed-top\">\r\n            {!props.backArrow ? '' :\r\n            <i class=\"fas fa-arrow-left left-arrow-icon\" onClick={() => window.history.back()}/>}\r\n            <strong>{props.page}</strong>\r\n            <a className=\"logout\" onClick={handleLogout}>Sair</a>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport Posts from './home-components/Posts'\r\nimport Profiles from './home-components/Profiles'\r\nimport Header from '../components/fixed/Header'\r\n\r\nexport default function Home(props) {\r\n    const [page, setPage] = useState('Posts')\r\n    const pages = {\r\n        'Perfis': <Profiles />,\r\n        'Posts': <Posts />\r\n    }\r\n\r\n    document.title = 'Home / Napker'\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Home\" />\r\n            <div className=\"content\">\r\n                <div className=\"home-page-subheader\">\r\n                    {page === 'Perfis' ?\r\n                        'Veja o que os seus amigos andam fazendo: ' :\r\n                        'Veja usuários com os mesmos interesses que você: '\r\n                    }\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        style={{ margin: '10px', borderRadius: '20px' }}\r\n                        onClick={() => setPage(page === 'Perfis' ? 'Posts' : 'Perfis')}\r\n                    >\r\n                        {page === 'Perfis' ?\r\n                            'Ver posts' :\r\n                            'Ver perfis'\r\n                        }\r\n                    </button>\r\n                </div>\r\n                {pages[page]}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Header from '../components/fixed/Header'\r\nimport { SERVER_URL } from '../settings'\r\nimport { csrftoken } from '../utils'\r\n\r\nexport default function Notifications(props) {\r\n    const [invites, setInvites] = useState(null)\r\n    const [unvisualizedPostLikes, setUnvisualizedPostLikes] = useState(null)\r\n    const [visualizedPostLikes, setVisualizedPostLikes] = useState(null)\r\n    const [unvisualizedComments, setUnvisualizedComments] = useState(null)\r\n    const [visualizedComments, setVisualizedComments] = useState(null)\r\n\r\n    let notificationsFetchInterval\r\n\r\n    document.title = 'Notificações / Napker'\r\n\r\n    const fetchNotifications = () => {\r\n        fetch(`${SERVER_URL}/profile-api/myinvites`)\r\n            .then(response => response.json())\r\n            .then(data => setInvites(data))\r\n        fetch(`${SERVER_URL}/post-api/unvisualized-post-likes`)\r\n            .then(response => response.json())\r\n            .then(data => setUnvisualizedPostLikes(data))\r\n        fetch(`${SERVER_URL}/post-api/unvisualized-post-comments`)\r\n            .then(response => response.json())\r\n            .then(data => setUnvisualizedComments(data))\r\n        fetch(`${SERVER_URL}/post-api/post-likes-visualized-last-2-days`)\r\n            .then(response => response.json())\r\n            .then(data => setVisualizedPostLikes(data))\r\n        fetch(`${SERVER_URL}/post-api/post-comments-visualized-last-2-days`)\r\n            .then(response => response.json())\r\n            .then(data => setVisualizedComments(data))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchNotifications()\r\n        notificationsFetchInterval = window.setInterval(fetchNotifications, 3000)\r\n        return () => window.clearInterval(notificationsFetchInterval)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (unvisualizedPostLikes && unvisualizedPostLikes.length) {\r\n            fetch(`${SERVER_URL}/post-api/visualize-likes`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.updateNotificationsNumber()\r\n                })\r\n        }\r\n    }, [unvisualizedPostLikes])\r\n\r\n    useEffect(() => {\r\n        if (unvisualizedComments && unvisualizedComments.length) {\r\n            fetch(`${SERVER_URL}/post-api/visualize-comments`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.updateNotificationsNumber()\r\n                })\r\n        }\r\n    }, [unvisualizedComments])\r\n\r\n    const replyRequest = e => {\r\n        e.stopPropagation()\r\n        const btn = e.target\r\n        const requestBody = {\r\n            'senderid': btn.dataset.senderid,\r\n            'reply': btn.dataset.reply\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/reply-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(requestBody)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                props.updateNotificationsNumber()\r\n            })\r\n        document.getElementById(`fr-${btn.dataset.senderid}`).remove()\r\n        fetchNotifications()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header page=\"Notificações\" />\r\n            <div className=\"content\">\r\n                <div>\r\n                    {invites !== null && unvisualizedPostLikes && visualizedPostLikes !== null && unvisualizedComments !== null && visualizedComments !== null ?\r\n                        <div>\r\n                            {invites.length || unvisualizedPostLikes.length || visualizedPostLikes.length || unvisualizedComments.length || !!visualizedComments.length ?\r\n                                <div className=\"notifications-container\">\r\n                                    {!!invites.length &&\r\n                                        <div>\r\n                                            {invites.map(i => {\r\n                                                return (\r\n                                                    <li\r\n                                                        className=\"friend-request-row\"\r\n                                                        id={`fr-${i.sender.id}`}\r\n                                                        key={i.sender.id}\r\n                                                        onClick={() => window.location.href = `/user/${i.sender.slug}`}\r\n                                                    >\r\n                                                        <div className=\"friend-request-col\">\r\n                                                            <img src={`${SERVER_URL}${i.sender.photo}`}\r\n                                                                className=\"profile-img-med\"\r\n                                                                style={{ marginRight: '10px' }}\r\n                                                            />\r\n                                                            <div className=\"d-flex flex-column align-items-start\">\r\n                                                                <strong>{i.sender.first_name} {i.sender.last_name}</strong>\r\n                                                                <p className=\"text-secondary\">@{i.sender.user.username}</p>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"friend-request-col\">\r\n                                                            {i.sender.bio}\r\n                                                        </div>\r\n                                                        <div className=\"friend-request-col\" style={{ justifyContent: 'space-between' }}>\r\n                                                            <button className=\"btn btn-primary btn-reply-fr mr-1\" data-senderid={i.sender.id} data-reply='accept' onClick={replyRequest}>Confirmar</button>\r\n                                                            <button className=\"btn btn-grey btn-reply-fr\" data-senderid={i.sender.id} data-reply='decline' onClick={replyRequest}>Excluir</button>\r\n                                                        </div>\r\n                                                    </li>\r\n                                                )\r\n                                            })}\r\n                                        </div>\r\n                                    }\r\n\r\n                                    {(!!unvisualizedPostLikes.length || !!unvisualizedComments.length) &&\r\n                                        <>\r\n                                            {!!unvisualizedPostLikes.length &&\r\n                                                <>\r\n                                                    {unvisualizedPostLikes.map(like => {\r\n                                                        return (\r\n                                                            <li className=\"notification-row\" key={like.profile.id}>\r\n                                                                <div className=\"d-flex align-items-center\">\r\n                                                                    <i class=\"fas fa-heart notification-like\" />\r\n                                                                    <Link to={`/user/${like.profile.slug}`}>\r\n                                                                        <img src={`${SERVER_URL}${like.profile.photo}`}\r\n                                                                            className=\"profile-img-sm\"\r\n                                                                            style={{ marginRight: '10px' }}\r\n                                                                        />\r\n                                                                    </Link>\r\n                                                                    <p className=\"text-secondary d-inline-block\">\r\n                                                                        {like.created.split('-').reverse().join('/')}\r\n                                                                    </p>\r\n                                                                    <div className=\"notification-text-container\">\r\n                                                                        <div className=\"notification-text\">\r\n                                                                            novo\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"notification-message\">\r\n                                                                    <p>\r\n                                                                        <Link to={`/user/${like.profile.slug}`} style={{ color: \"#000\" }}>\r\n                                                                            @{like.profile.user.username}\r\n                                                                        </Link> curtiu seu post.\r\n                                                                    </p>\r\n                                                                </div>\r\n                                                                <div className=\"notification-post-content\">\r\n                                                                    {like.post.content}\r\n                                                                </div>\r\n                                                            </li>\r\n                                                        )\r\n                                                    })}\r\n                                                </>\r\n                                            }\r\n\r\n                                            {!!unvisualizedComments.length &&\r\n                                                <>\r\n                                                    {unvisualizedComments.map(comment => {\r\n                                                        return (\r\n                                                            <li className=\"notification-row\" key={comment.author.id}>\r\n                                                                <div className=\"d-flex align-items-center\">\r\n                                                                    <i class=\"fas fa-comment notification-comment\" />\r\n                                                                    <Link to={`/user/${comment.author.slug}`}>\r\n                                                                        <img src={`${SERVER_URL}${comment.author.photo}`}\r\n                                                                            className=\"profile-img-sm\"\r\n                                                                            style={{ marginRight: '10px' }}\r\n                                                                        />\r\n                                                                    </Link>\r\n                                                                    <p className=\"text-secondary d-inline-block\">\r\n                                                                        {comment.created.split('-').reverse().join('/')}\r\n                                                                    </p>\r\n                                                                    <div className=\"notification-text-container\">\r\n                                                                        <div className=\"notification-text\">\r\n                                                                            novo\r\n                                                                    </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"notification-message\">\r\n                                                                    <p>\r\n                                                                        <Link to={`/user/${comment.author.slug}`} style={{ color: \"#000\" }}>\r\n                                                                            @{comment.author.user.username}\r\n                                                                        </Link> comentou seu post.\r\n                                                                </p>\r\n                                                                </div>\r\n                                                                <div className=\"notification-comment-container\">\r\n                                                                    <div className=\"notification-comment-content\">\r\n                                                                        {comment.content}\r\n                                                                    </div>\r\n                                                                    <Link to={`/post/${comment.post.id}`}>\r\n                                                                        <button className=\"btn btn-primary\">\r\n                                                                            Ver Post\r\n                                                                        </button>\r\n                                                                    </Link>\r\n                                                                </div>\r\n                                                            </li>\r\n                                                        )\r\n                                                    })}\r\n                                                </>\r\n                                            }\r\n                                        </>\r\n                                    }\r\n\r\n                                    {(!!visualizedPostLikes.length || !!visualizedComments.length) &&\r\n                                        <>\r\n                                            {!!visualizedPostLikes.length &&\r\n                                                <>\r\n                                                    {visualizedPostLikes.map(like => {\r\n                                                        return (\r\n                                                            <li className=\"notification-row\" key={like.profile.id}>\r\n                                                                <div className=\"d-flex align-items-center\">\r\n                                                                    <i class=\"fas fa-heart notification-like\" />\r\n                                                                    <Link to={`/user/${like.profile.slug}`}>\r\n                                                                        <img src={`${SERVER_URL}${like.profile.photo}`}\r\n                                                                            className=\"profile-img-sm\"\r\n                                                                            style={{ marginRight: '10px' }}\r\n                                                                        />\r\n                                                                    </Link>\r\n                                                                    <p className=\"text-secondary d-inline-block\">\r\n                                                                        {like.created.split('-').reverse().join('/')}\r\n                                                                    </p>\r\n                                                                </div>\r\n                                                                <div className=\"notification-message\">\r\n                                                                    <p>\r\n                                                                        <Link to={`/user/${like.profile.slug}`} style={{ color: \"#000\" }}>\r\n                                                                            @{like.profile.user.username}\r\n                                                                        </Link> curtiu seu post.\r\n                                                                    </p>\r\n                                                                </div>\r\n                                                                <div className=\"notification-post-content\">\r\n                                                                    {like.post.content}\r\n                                                                </div>\r\n                                                            </li>\r\n                                                        )\r\n                                                    })}\r\n                                                </>\r\n                                            }\r\n\r\n                                            {!!visualizedComments.length &&\r\n                                                <>\r\n                                                    {visualizedComments.map(comment => {\r\n                                                        return (\r\n                                                            <li className=\"notification-row\" key={comment.author.id}>\r\n                                                                <div className=\"d-flex align-items-center\">\r\n                                                                    <i class=\"fas fa-comment notification-comment\" />\r\n                                                                    <Link to={`/user/${comment.author.slug}`}>\r\n                                                                        <img src={`${SERVER_URL}${comment.author.photo}`}\r\n                                                                            className=\"profile-img-sm\"\r\n                                                                            style={{ marginRight: '10px' }}\r\n                                                                        />\r\n                                                                    </Link>\r\n                                                                    <p className=\"text-secondary d-inline-block\">\r\n                                                                        {comment.created.split('-').reverse().join('/')}\r\n                                                                    </p>\r\n                                                                </div>\r\n                                                                <div className=\"notification-message\">\r\n                                                                    <p>\r\n                                                                        <Link to={`/user/${comment.author.slug}`} style={{ color: \"#000\" }}>\r\n                                                                            @{comment.author.user.username}\r\n                                                                        </Link> comentou seu post.\r\n                                                                    </p>\r\n                                                                </div>\r\n                                                                <div className=\"notification-comment-container\">\r\n                                                                    <div className=\"notification-comment-content\">\r\n                                                                        {comment.content}\r\n                                                                    </div>\r\n                                                                    <Link to={`/post/${comment.post.id}`}>\r\n                                                                        <button className=\"btn btn-primary\">\r\n                                                                            Ver Post\r\n                                                                        </button>\r\n                                                                    </Link>\r\n                                                                </div>\r\n                                                            </li>\r\n                                                        )\r\n                                                    })}\r\n                                                </>\r\n                                            }\r\n                                        </>\r\n                                    }\r\n\r\n                                </div> :\r\n                                <div className=\"no-notifications-container\">\r\n                                    <h3>Você não tem nenhuma notificação</h3>\r\n                                </div>\r\n                            }\r\n\r\n\r\n                        </div> :\r\n                        <div className=\"notifications-loader-container\">\r\n                            <div className=\"loader\" />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { handleLogout } from '../../utils'\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <div className=\"header fixed-top\">\r\n            {!props.backArrow ? '' :\r\n            <i class=\"fas fa-arrow-left left-arrow-icon\" onClick={() => window.history.back()}/>}\r\n            <strong>{props.page}</strong>\r\n            <a className=\"logout\" onClick={handleLogout}>Sair</a>\r\n        </div>\r\n    )\r\n}","import { SOCKET_URL } from '../../settings'\r\n\r\nclass WebSocketService {\r\n  static instance = null;\r\n  callbacks = {};\r\n\r\n  static getInstance() {\r\n    if (!WebSocketService.instance) {\r\n      WebSocketService.instance = new WebSocketService();\r\n    }\r\n    return WebSocketService.instance;\r\n  }\r\n\r\n  constructor() {\r\n    this.socketRef = null;\r\n  }\r\n\r\n  connect(chatUrl) {\r\n    const path = `${SOCKET_URL}/ws/chat/${chatUrl}/`;\r\n    this.socketRef = new WebSocket(path);\r\n    this.socketRef.onopen = () => {\r\n      console.log(\"WebSocket open\");\r\n    };\r\n    this.socketNewMessage(JSON.stringify({\r\n      command: 'fetch-messages'\r\n    }))\r\n    this.socketRef.onmessage = e => {\r\n      this.socketNewMessage(e.data);\r\n    };\r\n    this.socketRef.onerror = e => {\r\n      console.log(e.message);\r\n    };\r\n    this.socketRef.onclose = () => {\r\n      console.log(\"WebSocket closed\");\r\n    };\r\n  }\r\n\r\n  disconnect() {\r\n    if (this.socketRef) this.socketRef.close();\r\n  }\r\n\r\n  socketNewMessage(data) {\r\n    const parsedData = JSON.parse(data);\r\n    const command = parsedData.command;\r\n    if (Object.keys(this.callbacks).length === 0) {\r\n      return;\r\n    }\r\n    if (command === \"messages\") {\r\n      this.callbacks[command](parsedData.messages);\r\n    }\r\n    if (command === \"new_message\") {\r\n      this.callbacks[command](parsedData.message);\r\n    }\r\n  }\r\n\r\n  fetchMessages(username, chatId) {\r\n    this.sendMessage({\r\n      command: \"fetch_messages\",\r\n      username: username,\r\n      chatId: chatId\r\n    });\r\n  }\r\n\r\n  newChatMessage(message) {\r\n    this.sendMessage({\r\n      command: \"new_message\",\r\n      from: message.from,\r\n      content: message.content,\r\n      chatId: message.chatId\r\n    });\r\n  }\r\n\r\n  readMessages(chatId) {\r\n    this.sendMessage({\r\n      command: \"read_messages\",\r\n      chatId: chatId\r\n    });\r\n  }\r\n\r\n  addCallbacks(messagesCallback, newMessageCallback) {\r\n    this.callbacks[\"messages\"] = messagesCallback\r\n    this.callbacks[\"new_message\"] = newMessageCallback\r\n    this.callbacks[\"updated_messages\"] = newMessageCallback\r\n  }\r\n\r\n  sendMessage(data) {\r\n    try {\r\n      this.socketRef.send(JSON.stringify({ ...data }));\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  }\r\n\r\n  state() {\r\n    return this.socketRef ? this.socketRef.readyState : 0\r\n  }\r\n}\r\n\r\nconst WebSocketInstance = WebSocketService.getInstance();\r\n\r\nexport default WebSocketInstance;","import React from 'react'\r\nimport Picker from 'emoji-picker-react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { csrftoken, openCloseEmojiList } from '../../utils'\r\nimport { SERVER_URL } from '../../settings'\r\nimport WebSocketInstance from './Websocket'\r\n\r\nclass Chat extends React.Component {\r\n    initialiseChat() {\r\n        this.waitForSocketConnection(() => {\r\n            WebSocketInstance.addCallbacks(\r\n                this.getMessages.bind(this),\r\n                this.addMessage.bind(this),\r\n                this.getUpdatedMessages.bind(this)\r\n            )\r\n            WebSocketInstance.fetchMessages(\r\n                this.props.username,\r\n                this.props.chatId\r\n            );\r\n        });\r\n        if (this.props.chatId) WebSocketInstance.connect(this.props.chatId)\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            message: '',\r\n            messages: [],\r\n            myProfile: null,\r\n            otherUsername: this.props.otherUsername,\r\n            otherProfile: null\r\n        }\r\n        this.initialiseChat();\r\n    }\r\n\r\n    handleComponentChange = () => {\r\n        this.scrollToBottom();\r\n        if (this.state.otherUsername && (!this.state.otherProfile || this.state.otherProfile.user.username !== this.state.otherUsername)) {\r\n            fetch(`${SERVER_URL}/profile-api/user/${this.state.otherUsername}`)\r\n                .then(response => response.json())\r\n                .then(data => this.setState({\r\n                    otherProfile: data\r\n                }))\r\n        }\r\n        if (!this.state.myProfile) {\r\n            fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n                .then(response => response.json())\r\n                .then(data => this.setState({ myProfile: data }))\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n\r\n    componentDidUpdate() {\r\n        this.handleComponentChange()\r\n        document.querySelector('#chat-message-input') && document.querySelector('#chat-message-input').focus()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        WebSocketInstance.disconnect()\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (this.props.chatId !== newProps.chatId) {\r\n            WebSocketInstance.disconnect();\r\n            this.waitForSocketConnection(() => {\r\n                WebSocketInstance.fetchMessages(\r\n                    this.props.username,\r\n                    newProps.chatId\r\n                );\r\n            });\r\n            WebSocketInstance.connect(newProps.chatId);\r\n\r\n            this.props.updateMessagesComponent()\r\n            this.setState({\r\n                message: '',\r\n                otherUsername: newProps.otherUsername\r\n            })\r\n        }\r\n        if (newProps.chatId) {\r\n            this.readMessages(newProps)\r\n        }\r\n        if (this.props.updateUnreadMessagesNumber) {\r\n            this.props.updateUnreadMessagesNumber()\r\n        }\r\n    }\r\n\r\n    readMessages = props => {\r\n        fetch(`${SERVER_URL}/chat-api/read-messages`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({ chat_id: props.chatId })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                WebSocketInstance.readMessages(this.props.chatId)\r\n            })\r\n    }\r\n\r\n    waitForSocketConnection(callback) {\r\n        const component = this;\r\n        setTimeout(function () {\r\n            if (WebSocketInstance.state() === 1) {\r\n                console.log(\"Connection is made\");\r\n                callback();\r\n                return;\r\n            } else {\r\n                console.log(\"wait for connection...\");\r\n                component.waitForSocketConnection(callback);\r\n            }\r\n        }, 100);\r\n    }\r\n\r\n    getMessages(messages) {\r\n        this.setState({ messages: messages.reverse() })\r\n    }\r\n\r\n    addMessage(message) {\r\n        this.setState({ messages: [...this.state.messages, message] })\r\n        this.readMessages(this.props)\r\n    }\r\n\r\n    getUpdatedMessages(messages) {\r\n        this.setState({ messages: messages.reverse() })\r\n    }\r\n\r\n    messageChangeHandler = e => {\r\n        this.setState({ message: e.target.value })\r\n        const el = document.querySelector('#chat-message-submit')\r\n        el.disabled = e.target.value.trim() === ''\r\n    };\r\n\r\n    sendMessageHandler = e => {\r\n        e.preventDefault()\r\n        const messageObject = {\r\n            from: this.props.username,\r\n            content: this.state.message,\r\n            chatId: this.props.chatId\r\n        };\r\n        this.setState({ message: '' })\r\n        if (this.state.otherProfile.blocked_users.map(u => u.id).includes(this.state.myProfile.user.id)) {\r\n            window.alert(`Você não pode enviar mensagens para @${this.state.otherUsername}.\r\n            ${this.state.otherProfile.first_name} te bloqueou.`)\r\n            return\r\n        }\r\n        if (this.state.myProfile.blocked_users.map(u => u.id).includes(this.state.otherProfile.user.id)) {\r\n            window.alert(`Você não pode enviar mensagens para @${this.state.otherUsername}.\r\n            Você bloqueou ${this.state.otherProfile.first_name}.`)\r\n            return\r\n        }\r\n        WebSocketInstance.newChatMessage(messageObject)\r\n        document.querySelector('#chat-message-submit').disabled = true\r\n        openCloseEmojiList(true)\r\n        this.props.updateMessagesComponent()\r\n    };\r\n\r\n    renderTimestamp = timestamp => {\r\n        const ts = new Date(timestamp)\r\n        const day = ts.getDate() >= 10 ? ts.getDate() : `0${ts.getDate()}`\r\n        const month = ts.getMonth() >= 10 ? ts.getMonth() : `0${ts.getMonth()}`\r\n        const hour = ts.getHours() >= 10 ? ts.getHours() : `0${ts.getHours()}`\r\n        const minute = ts.getMinutes() >= 10 ? ts.getMinutes() : `0${ts.getMinutes()}`\r\n        return `${day}/${month}/${ts.getFullYear()} - ${hour}:${minute}`\r\n    };\r\n\r\n    renderMessages = messages => {\r\n        const currentUser = this.props.username;\r\n        return messages.map(message => (\r\n            <li\r\n                key={message.id}\r\n                className={message.author === currentUser ? \"sent\" : \"received\"}\r\n            >\r\n                <p>\r\n                    {message.content}\r\n                    <br />\r\n                    <small>\r\n                        {this.renderTimestamp(message.timestamp)} {message.author === currentUser ?\r\n                            message.read ?\r\n                                <i class=\"fas fa-check-double\" />\r\n                                :\r\n                                <i class=\"fas fa-check\" />\r\n                            :\r\n                            ''\r\n                        }\r\n                    </small>\r\n                </p>\r\n            </li>\r\n        ));\r\n    };\r\n\r\n    scrollToBottom = () => {\r\n        if (document.querySelector('#chat-log')) {\r\n            const chatLog = document.querySelector('#chat-log')\r\n            chatLog.scrollTop = chatLog.scrollHeight\r\n        }\r\n    };\r\n\r\n    onEmojiSelect = (event, emojiObject) => {\r\n        this.setState({ message: this.state.message + emojiObject.emoji })\r\n        document.querySelector('#chat-message-submit').disabled = false\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.otherProfile !== null || !this.props.otherUsername ?\r\n                    <>\r\n                        {this.state.otherProfile ?\r\n                            <div className=\"d-flex flex-column justify-content-between align-items-center current-chat\">\r\n                                <div className=\"current-chat-header\">\r\n                                    <Link to={`/user/${this.state.otherProfile.slug}`}>\r\n                                        <img src={`${SERVER_URL}${this.state.otherProfile.photo}`}\r\n                                            className=\"profile-img-sm\"\r\n                                            style={{ marginRight: '5px' }}\r\n                                        />\r\n                                    </Link>\r\n                                    <div className=\"d-flex flex-column align-items-start\" style={{ height: '52px' }}>\r\n                                        <strong>{this.state.otherProfile.first_name} {this.state.otherProfile.last_name}</strong>\r\n                                        <p className=\"text-secondary\">@{this.state.otherProfile.user.username}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div id=\"chat-log\">\r\n                                    {this.state.messages ? this.renderMessages(this.state.messages) : ''}\r\n                                </div>\r\n                                <div className=\"emoji-list-container chat-emoji-list\" id=\"emoji-list-container\">\r\n                                    <Picker onEmojiClick={this.onEmojiSelect} />\r\n                                </div>\r\n                                <form className=\"send-message-container\" onSubmit={this.sendMessageHandler}>\r\n                                    <label\r\n                                        className=\"far fa-smile\"\r\n                                        id=\"emoji-button\"\r\n                                        onClick={() => openCloseEmojiList(false)}\r\n                                    />\r\n                                    <input\r\n                                        placeholder=\"Mensagem\"\r\n                                        className=\"message-input\"\r\n                                        id=\"chat-message-input\"\r\n                                        value={this.state.message}\r\n                                        autoFocus={document.querySelector('#contact-filter-input').value === ''}\r\n                                        onChange={this.messageChangeHandler}\r\n                                    />\r\n                                    <button\r\n                                        className=\"btn btn-primary chat-message-submit\"\r\n                                        id=\"chat-message-submit\"\r\n                                        disabled\r\n                                    >\r\n                                        <i class=\"fas fa-chevron-right\" />\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n                            :\r\n                            <div className=\"d-flex flex-column justify-content-center align-items-center current-chat\">\r\n                                <div>\r\n                                    <strong style={{ fontSize: 'larger' }}>Você não tem uma conversa selecionada</strong>\r\n                                    <p className=\"text-secondary\">Selecione uma existente ou comece uma nova</p>\r\n                                    <button className=\"btn btn-primary\" onClick={() => this.props.openModal()}>Nova conversa</button>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </>\r\n                    :\r\n                    <div className=\"chat-loader-container\">\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chat\r\n","import React from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Header from '../../components/fixed/header'\r\nimport Chat from './chat'\r\nimport { SERVER_URL } from '../../settings'\r\n\r\nclass Messages extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myProfile: null,\r\n            username: null,\r\n            chatId: null,\r\n            activeChats: null,\r\n            activeChatsProfiles: null,\r\n            addingNewChat: false,\r\n            modalProfiles: [],\r\n        }\r\n        this.rerenderingInterval = null\r\n    }\r\n\r\n    handleReceiveProps = props => {\r\n        const participants = { username: this.state.username, other_username: props.match.params.slug }\r\n        fetch(`${SERVER_URL}/chat-api/chat-id/${JSON.stringify(participants)}`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                chatId: data['chat_id']\r\n            }))\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps === this.props) return\r\n        this.handleReceiveProps(newProps)\r\n    }\r\n\r\n    handleComponentChange() {\r\n        if (!this.state.username) {\r\n            fetch(`${SERVER_URL}/profile-api/logged-user`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    this.setState({\r\n                        username: data.username\r\n                    })\r\n                    if (this.props.match.params.slug) {\r\n                        this.handleReceiveProps(this.props)\r\n                    }\r\n                })\r\n        }\r\n        if (!this.state.activeChatsProfiles && this.state.activeChatsProfiles !== []) {\r\n            this.fetchActiveChatProfiles()\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.title = 'Mensagens / Napker'\r\n        this.handleComponentChange()\r\n        this.rerenderingInterval = window.setInterval(this.fetchActiveChatProfiles, 3000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.clearInterval(this.rerenderingInterval)\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    fetchActiveChatProfiles = () => {\r\n        console.log('fetching profiles...')\r\n        fetch(`${SERVER_URL}/chat-api/active-chats-profiles`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (!this.state.username) return\r\n                this.setState({\r\n                    activeChats: data.chats.reverse(),\r\n                    activeChatsProfiles: data.profiles.reverse()\r\n                })\r\n            })\r\n    }\r\n\r\n    openModal = () => {\r\n        this.setState({\r\n            addingNewChat: true\r\n        })\r\n    }\r\n\r\n    setModalSearch = query => {\r\n        if (query === '') {\r\n            this.setState({\r\n                modalProfiles: []\r\n            })\r\n            return\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/users/${query}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    modalProfiles: data\r\n                })\r\n            })\r\n    }\r\n\r\n    setContactSearch = query => {\r\n        if (query === '') {\r\n            this.fetchActiveChatProfiles()\r\n            return\r\n        }\r\n        if (this.state.activeChatsProfiles) {\r\n            const filteredProfiles = this.state.activeChatsProfiles.filter(p => p.user.username.includes(query))\r\n            this.setState({\r\n                activeChatsProfiles: filteredProfiles\r\n            })\r\n        }\r\n    }\r\n\r\n    resetUnreadMessagesCounter = () => {\r\n        this.unreadMessagesCounter = 0\r\n    }\r\n\r\n    incrementUnreadMessagesCounter = () => {\r\n        this.unreadMessagesCounter++\r\n    }\r\n\r\n    setLastChatMessage = message => {\r\n        this.lastChatMessage = message\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header page=\"Mensagens\" />\r\n                <div className=\"content d-flex messages-wrapper\">\r\n                    <Modal show={this.state.addingNewChat}\r\n                        onHide={() => this.setState({ addingNewChat: false })}\r\n                        size=\"lg\">\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title><strong>Nova conversa</strong></Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body style={{ padding: '0' }}>\r\n                            <input className=\"modal-search-input\"\r\n                                placeholder=\"Pesquisar pessoas\"\r\n                                onChange={e => this.setModalSearch(e.target.value)}\r\n                            />\r\n                            <div className=\"list-group\" style={{ height: '400px', overflow: 'hidden', overflowY: 'scroll' }}>\r\n                                {this.state.modalProfiles && this.state.modalProfiles.map(profile => {\r\n                                    return (\r\n                                        <Link to={`/mensagens/${profile.slug}`}\r\n                                            style={{ color: '#000', textDecoration: 'none' }}\r\n                                            onClick={() => this.setState({\r\n                                                addingNewChat: false\r\n                                            })}\r\n                                        >\r\n                                            <li className=\"list-group-item profile-row modal-profile-li\" key={profile.id}>\r\n                                                <div className=\"d-flex justify-content-between\">\r\n                                                    <div className=\"profile-col\">\r\n                                                        <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                            className=\"profile-img-med\"\r\n                                                            style={{ marginRight: '10px' }}\r\n                                                        />\r\n                                                        <div className=\"main-profile-data\">\r\n                                                            <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                                            <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"profile-col\">\r\n                                                        {profile.bio}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </li>\r\n                                        </Link>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                    <div className=\"d-flex flex-column chats-list\">\r\n                        <div className=\"search-input-container\">\r\n                            <input className=\"search-input\" id=\"contact-filter-input\" placeholder=\"Pesquisar pessoas\" onChange={e => this.setContactSearch(e.target.value)} />\r\n                            <i className=\"fas fa-plus add-icon\" onClick={this.openModal}></i>\r\n                        </div>\r\n                        <div className=\"list-group chats-container\">\r\n                            {this.state.activeChatsProfiles !== null ?\r\n                                this.state.activeChatsProfiles.map(profile => {\r\n                                    return (\r\n                                        <Link to={`/mensagens/${profile.slug}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                                            {this.resetUnreadMessagesCounter()}\r\n                                            <li className=\"list-item profile-chat-item\" style={{ whiteSpace: 'nowrap' }}>\r\n                                                <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                    className=\"profile-img-med\"\r\n                                                    style={{ marginRight: '10px' }}\r\n                                                />\r\n                                                <div className=\"d-flex flex-column align-items-start\">\r\n                                                    <div className=\"d-flex\" style={{ maxHeight: '30px' }}>\r\n                                                        <strong style={{ height: 'fit-content' }}>{profile.first_name} {profile.last_name}</strong>\r\n                                                        {this.state.activeChats[this.state.activeChatsProfiles.indexOf(profile)].messages.map(message => {\r\n                                                            const messages = this.state.activeChats[this.state.activeChatsProfiles.indexOf(profile)].messages\r\n                                                            if (messages[messages.length - 1] === message) this.setLastChatMessage(message.content)\r\n                                                            if (message.read || message.contact.user.username !== profile.user.username) return\r\n                                                            this.incrementUnreadMessagesCounter()\r\n                                                        })}\r\n                                                        {this.unreadMessagesCounter ?\r\n                                                            <div className=\"notification-text-container\">\r\n                                                                <div className=\"notification-text\">\r\n                                                                    {this.unreadMessagesCounter}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            : ''\r\n                                                        }\r\n                                                        <p className=\"text-secondary\" style={{ marginLeft: '5px' }}>@{profile.user.username}</p>\r\n                                                    </div>\r\n                                                    <p className=\"text-secondary\">{this.lastChatMessage.slice(0, 40)}</p>\r\n                                                </div>\r\n                                            </li>\r\n                                        </Link>\r\n                                    )\r\n                                }) :\r\n                                <div className=\"messages-loader-container\">\r\n                                    <div className=\"loader\" />\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <Chat username={this.state.username}\r\n                        otherUsername={this.props.match.params.slug}\r\n                        chatId={this.state.chatId}\r\n                        openModal={this.openModal}\r\n                        updateUnreadMessagesNumber={this.props.updateUnreadMessagesNumber}\r\n                        updateMessagesComponent={this.fetchActiveChatProfiles}\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Messages","import React from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../settings'\r\n\r\nexport default function LikesModal(props) {\r\n    return (\r\n        <Modal show={props.isOpen}\r\n            onHide={props.hideModal}\r\n            size=\"lg\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title><strong>Curtidas</strong></Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"list-group\" style={{ height: '400px', overflow: 'hidden', overflowY: 'scroll' }}>\r\n                    {props.likes &&\r\n                        props.likes.map(like => like.profile).map(profile => {\r\n                            return (\r\n                                <Link to={`/user/${profile.slug}`}\r\n                                    style={{ color: '#000', textDecoration: 'none' }}\r\n                                    onClick={props.hideModal}\r\n                                >\r\n                                    <li className=\"list-group-item profile-row modal-profile-li\" key={profile.id}>\r\n                                        <div className=\"d-flex justify-content-between\">\r\n                                            <div className=\"profile-col\">\r\n                                                <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                    className=\"profile-img-med\"\r\n                                                    style={{ marginRight: '10px' }}\r\n                                                />\r\n                                                <div className=\"main-profile-data\">\r\n                                                    <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                                    <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"profile-col\">\r\n                                                {profile.bio}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                </Link>\r\n                            )\r\n                        })}\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport LikesModal from '../../components/LikesModal'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nexport default function Posts(props) {\r\n    const [myprofile, setMyProfile] = useState(null)\r\n    const [likesModal, setLikesModal] = useState({ isOpen: false, likes: null })\r\n    const profile = props.profile\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n    }, [])\r\n\r\n    const likeUnlikePost = e => {\r\n        e.stopPropagation()\r\n        const likeBtn = e.target\r\n        if (likeBtn.classList.contains('fas')) {\r\n            likeBtn.classList.remove('fas') //border heart\r\n            likeBtn.classList.add('far')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/unlike-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.fetchProfile()\r\n                })\r\n        } else {\r\n            likeBtn.classList.remove('far') //border heart\r\n            likeBtn.classList.add('fas')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/like-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.fetchProfile()\r\n                })\r\n        }\r\n    }\r\n\r\n    const hideLikesModal = () => {\r\n        setLikesModal({\r\n            isOpen: false,\r\n            likes: null\r\n        })\r\n    }\r\n\r\n    const deletePost = (e, postId) => {\r\n        e.stopPropagation()\r\n        const el = document.querySelector(`#profile-post-${postId}`)\r\n        if (window.confirm('Tem certeza que deseja apagar o post?\\nEssa ação é irreversível.')) {\r\n            el.style.animationPlayState = 'running'\r\n            el.addEventListener('animationend', () => {\r\n                props.fetchProfile()\r\n            })\r\n            fetch(`${SERVER_URL}/post-api/delete-post/${postId}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <LikesModal\r\n                isOpen={likesModal.isOpen}\r\n                likes={likesModal.likes}\r\n                hideModal={hideLikesModal}\r\n            />\r\n            <div className=\"post-list\">\r\n                {profile && myprofile ?\r\n                    <>\r\n                        {profile.posts.length ? profile.posts.map(post => {\r\n                            return (\r\n                                <li\r\n                                    className=\"post-container post-list-item\"\r\n                                    key={post.id}\r\n                                    id={`profile-post-${post.id}`}\r\n                                    onClick={() => window.location.href = `/post/${post.id}`}\r\n                                >\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <div className=\"post-row\">\r\n                                            <div className=\"post-col\">\r\n                                                <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                    className=\"profile-img-med\"\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"post-col\">\r\n                                                <div style={{ height: '30px' }}>\r\n                                                    <strong>{profile.first_name} {profile.last_name} </strong>\r\n                                                    <p className=\"text-secondary d-inline-block\">\r\n                                                        @{profile.user.username} • {post.created.split('-').reverse().join('/')}\r\n                                                    </p>\r\n                                                </div>\r\n                                                <div style={{ textAlign: 'start' }}>\r\n                                                    {post.content}\r\n                                                </div>\r\n                                                {post.image &&\r\n                                                    <img src={`${SERVER_URL}${post.image}`} className=\"post-img\" />\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                        {profile.id == myprofile.id &&\r\n                                            <i\r\n                                                className=\"far fa-trash-alt trash-icon text-secondary\"\r\n                                                style={{ margin: '20px 20px 0 0' }}\r\n                                                onClick={e => deletePost(e, post.id)}\r\n                                            />}\r\n                                    </div>\r\n                                    <div className=\"post-actions\">\r\n                                        <p className=\"text-secondary\">\r\n                                            <Link\r\n                                                to={`/post/${post.id}/comment`}\r\n                                                className=\"text-secondary\"\r\n                                                onClick={e => e.stopPropagation()}\r\n                                            >\r\n                                                <i class=\"far fa-comment\" />\r\n                                            </Link>{post.comments.length}\r\n                                            {post.likes.map(like => like.profile.id).includes(myprofile.id) ?\r\n                                                <i class=\"fas fa-heart\"\r\n                                                    data-postid={post.id}\r\n                                                    onClick={likeUnlikePost}\r\n                                                />\r\n                                                :\r\n                                                <i class=\"far fa-heart\"\r\n                                                    data-postid={post.id}\r\n                                                    onClick={likeUnlikePost}\r\n                                                />}\r\n                                            <p className=\"post-likes-number\"\r\n                                                onClick={e => {\r\n                                                    e.stopPropagation()\r\n                                                    setLikesModal({ isOpen: true, likes: post.likes })\r\n                                                }\r\n                                                }\r\n                                            >\r\n                                                {post.likes.length}\r\n                                            </p>\r\n                                        </p>\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        }) :\r\n                            <div className=\"no-posts-container\">\r\n                                {profile.id === myprofile.id ?\r\n                                    <h3 style={{ marginTop: '50px' }}>Você não tem posts</h3>\r\n                                    :\r\n                                    <h3 style={{ marginTop: '50px' }}>{profile.first_name} não tem posts</h3>\r\n                                }\r\n                            </div>\r\n                        }\r\n                    </>\r\n                    :\r\n                    <div className=\"posts-loader-container\" >\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Interests(props) {\r\n    const profile = props.profile\r\n\r\n    return (\r\n        <div className=\"interests-page-container\">\r\n            <h3>Interesses públicos de {profile.first_name}</h3>\r\n            <div>\r\n                {profile && profile.interests.filter(i => i.public).map(interest => {\r\n                    return (\r\n                        <>\r\n                            {interest.title &&\r\n                                <>\r\n                                    <hr />\r\n                                    <li className=\"interest-item\">\r\n                                        {interest.title[0].toUpperCase() + interest.title.slice(1)}\r\n                                        <Link to={`/interesses/${interest.title}`}>\r\n                                            <button className=\"btn-secondary\" style={{ padding: '5px' }}>Pesquisar usuários</button>\r\n                                        </Link>\r\n                                    </li>\r\n                                </>\r\n                            }\r\n                        </>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Picker from 'emoji-picker-react'\r\n\r\nimport Header from '../components/fixed/Header'\r\nimport Posts from './profile-components/Posts'\r\nimport Interests from './profile-components/Interests'\r\nimport { SERVER_URL } from '../settings'\r\nimport { csrftoken, openCloseEmojiList } from '../utils'\r\n\r\nexport default function MyProfile() {\r\n    const [profile, setProfile] = useState(null)\r\n    const [profileImagePreview, setProfileImagePreview] = useState(null)\r\n    const [isEditing, setIsEditing] = useState(false)\r\n    const [editingBioContent, setEditingBioContent] = useState('')\r\n    const [currentPageIsPosts, setCurrentPageIsPosts] = useState(true)\r\n\r\n    document.title = 'Perfil / Napker'\r\n\r\n    useEffect(() => {\r\n        fetchProfile()\r\n    }, [])\r\n\r\n    const fetchProfile = () => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setProfile(data)\r\n                setProfileImagePreview(`${SERVER_URL}${data.photo}`)\r\n            })\r\n    }\r\n\r\n    const switchPage = e => {\r\n        document.querySelectorAll('.profile-page-menu-item-active').forEach(el => {\r\n            el.classList.remove('profile-page-menu-item-active')\r\n        })\r\n        e.target.classList.add('profile-page-menu-item-active')\r\n        if (e.target.id === 'profile-posts-page-menu-item') {\r\n            setCurrentPageIsPosts(true)\r\n        } else if (e.target.id === 'profile-interests-page-menu-item') {\r\n            setCurrentPageIsPosts(false)\r\n        }\r\n    }\r\n\r\n    const handleProfileImageChange = e => {\r\n        const reader = new FileReader()\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                setProfileImagePreview(reader.result)\r\n            }\r\n        }\r\n        try {\r\n            reader.readAsDataURL(e.target.files[0])\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n\r\n    const handleUsernameChange = e => {\r\n        if (e.target.value.trim() !== '') {\r\n            fetch(`${SERVER_URL}/profile-api/user/${e.target.value}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if (data.bool !== 'false' && data.id !== profile.id) {\r\n                        document.querySelector('#username-taken').style.display = 'initial'\r\n                    } else {\r\n                        document.querySelector('#username-taken').style.display = 'none'\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    const onEmojiSelect = (event, emojiObject) => {\r\n        setEditingBioContent(editingBioContent + emojiObject.emoji)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Perfil\" />\r\n            <div className=\"content\">\r\n                {profile ?\r\n                    <>\r\n                        <Modal show={isEditing}\r\n                            onHide={() => setIsEditing(false)}\r\n                            size=\"lg\">\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title>Editar perfil</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                <form\r\n                                    action={`${SERVER_URL}/update-profile`}\r\n                                    className=\"d-flex flex-column justify-content-center\"\r\n                                    id=\"update-profile-form\"\r\n                                    method=\"POST\"\r\n                                    encType=\"multipart/form-data\"\r\n                                >\r\n                                    <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n                                    <div className=\"d-flex flex-column justify-content-center align-items-center mb-2\">\r\n                                        <img src={profileImagePreview}\r\n                                            className=\"profile-img-big\"\r\n                                            style={{ marginBottom: '25px' }}\r\n                                        />\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            accept=\"image/png, image/jpg, image/jpeg\"\r\n                                            name=\"profile-photo\"\r\n                                            onChange={handleProfileImageChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-center\">\r\n                                        Email: {profile.email}\r\n                                    </div>\r\n                                    <hr />\r\n                                    <div className=\"d-flex align-items-center\">\r\n                                        <label htmlFor=\"first-name\" className=\"profile-field-label\">Nome:</label>\r\n                                        <input className=\"profile-field-input\" type=\"text\" name=\"first-name\" id=\"first-name\" placeholder={profile.first_name} />\r\n                                    </div>\r\n                                    <div className=\"d-flex align-items-center\">\r\n                                        <label htmlFor=\"last-name\" className=\"profile-field-label\">Sobrenome:</label>\r\n                                        <input className=\"profile-field-input\" type=\"text\" name=\"last-name\" id=\"last-name\" placeholder={profile.last_name} />\r\n                                    </div>\r\n                                    <div className=\"d-flex align-items-center\">\r\n                                        <label htmlFor=\"username\" className=\"profile-field-label\">Nome de usuário:</label>\r\n                                        <input\r\n                                            className=\"profile-field-input\"\r\n                                            type=\"text\"\r\n                                            name=\"username\"\r\n                                            id=\"username\"\r\n                                            placeholder={profile.user.username}\r\n                                            onChange={handleUsernameChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div\r\n                                        id=\"username-taken\"\r\n                                        style={{ display: 'none', width: '100%', textAlign: 'center', padding: '3px' }}\r\n                                    >\r\n                                        <span>Nome de usuário já existe</span>\r\n                                    </div>\r\n                                    <div className=\"d-flex align-items-center\">\r\n                                        <label htmlFor=\"birth-date\" className=\"profile-field-label\">Data de nascimento:</label>\r\n                                        <input className=\"profile-field-input\" type=\"date\" name=\"birth-date\" id=\"birth-date\" defaultValue={profile.birth_date} />\r\n                                    </div>\r\n                                    <div className=\"emoji-list-container bio-emoji-list\" id=\"emoji-list-container\">\r\n                                        <Picker onEmojiClick={onEmojiSelect} />\r\n                                    </div>\r\n                                    <div className=\"d-flex align-items-center\">\r\n                                        <label htmlFor=\"bio\" className=\"profile-field-label\">Bio:</label>\r\n                                        <div className=\"email-input-container\">\r\n                                            <input\r\n                                                className=\"profile-field-input-email\"\r\n                                                type=\"email\"\r\n                                                name=\"bio\"\r\n                                                id=\"bio\"\r\n                                                value={editingBioContent}\r\n                                                placeholder={profile.bio}\r\n                                                onChange={e => setEditingBioContent(e.target.value)}\r\n                                            />\r\n                                            <label\r\n                                                className=\"far fa-smile\"\r\n                                                id=\"emoji-button\"\r\n                                                onClick={() => openCloseEmojiList(false)}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <button className=\"btn btn-grey\" onClick={() => setIsEditing(false)}>Fechar</button>\r\n                                <button className=\"btn btn-primary\" onClick={() => document.querySelector('form#update-profile-form').submit()}>Salvar</button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n                        <div className=\"profile-data-container\">\r\n                            <div className=\"d-flex flex-column align-items-start\">\r\n                                <p style={{ padding: '15px' }}>\r\n                                    <img src={`${SERVER_URL}${profile.photo}`}\r\n                                        className=\"profile-img-big\"\r\n                                        style={{ marginBottom: '25px' }}\r\n                                    />\r\n                                </p>\r\n                                <p style={{ marginBottom: 0 }}><strong>{profile.first_name} {profile.last_name}</strong></p>\r\n                                <p className=\"text-secondary\" style={{ marginTop: 0 }}>@{profile.user.username}</p>\r\n                                <p>{profile.bio}</p>\r\n                                <p className=\"text-secondary\">\r\n                                    <i className=\"far fa-calendar-alt\"></i> Entrou em {profile.created.split('-').reverse().join('/')}\r\n                                </p>\r\n                                <p>\r\n                                    <Link to={`/user/${profile.slug}/amigos`} style={{ color: '#000' }}>\r\n                                        <strong>{profile.friends.length}</strong> {profile.friends.length === 1 ? 'amigo' : 'amigos'}\r\n                                    </Link>\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"d-flex flex-column\">\r\n                                <button\r\n                                    className=\"btn btn-secondary\"\r\n                                    type=\"button\"\r\n                                    onClick={() => setIsEditing(true)}\r\n                                    style={{ marginBottom: '10px' }}\r\n                                >\r\n                                    Editar perfil\r\n                        </button>\r\n                                <Link to='/perfil/meus-interesses'>\r\n                                    <button className=\"btn btn-secondary\">Editar interesses</button>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"profile-page-menu\">\r\n                            <div\r\n                                className=\"profile-page-menu-item profile-page-menu-item-active\"\r\n                                id=\"profile-posts-page-menu-item\"\r\n                                onClick={switchPage}\r\n                            >\r\n                                Posts ({profile.posts.length})\r\n                            </div>\r\n                            <div\r\n                                className=\"profile-page-menu-item\"\r\n                                id=\"profile-interests-page-menu-item\"\r\n                                onClick={switchPage}\r\n                            >\r\n                                Interesses ({profile.interests.filter(i => i.public).length})\r\n                            </div>\r\n                        </div>\r\n                        {currentPageIsPosts ?\r\n                            <Posts profile={profile} fetchProfile={fetchProfile} /> :\r\n                            <Interests profile={profile} />\r\n                        }\r\n                    </> :\r\n                    <div className=\"profile-page-loader-container\">\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../../settings'\r\n\r\nexport default function BlockUser() {\r\n    const [blockedProfiles, setBlockedProfiles] = useState(null)\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/get-blocked-profiles`)\r\n            .then(response => response.json())\r\n            .then(data => setBlockedProfiles(data))\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"settings-description-container\">\r\n            {blockedProfiles !== null ?\r\n                <>\r\n                    {!!blockedProfiles.length ?\r\n                        <div className=\"blocked-profiles-list\">\r\n                            <div className=\"blocked-profiles-title\">\r\n                                <h4>\r\n                                    Você possui {blockedProfiles.length} {blockedProfiles.length === 1 ? 'perfil bloqueado' : 'perfis bloqueados'}\r\n                                </h4>\r\n                            </div>\r\n                            {blockedProfiles.map(profile => {\r\n                                return (\r\n                                    <Link to={`/user/${profile.slug}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                                        <li className=\"list-group-item profile-row filtered-profile blocked-profile\" key={profile.id}>\r\n                                            <div className=\"d-flex justify-content-between\">\r\n                                                <div className=\"profile-col\">\r\n                                                    <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                        className=\"profile-img-med\"\r\n                                                        style={{ marginRight: '10px' }}\r\n                                                    />\r\n                                                    <div className=\"main-profile-data\">\r\n                                                        <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                                        <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"profile-col\">\r\n                                                    {profile.bio}\r\n                                                </div>\r\n                                                <div className=\"profile-col\">\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                    </Link>\r\n                                )\r\n                            })\r\n                            }\r\n                        </div>\r\n                        :\r\n                        <div className=\"no-blocked-profiles\">\r\n                            <h3>Você não possui perfis bloqueados</h3>\r\n                        </div>\r\n                    }\r\n                </>\r\n                :\r\n                <div className=\"settings-loader-container\">\r\n                    <div className=\"loader\" />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\n\r\nimport { csrftoken } from '../../utils'\r\nimport { SERVER_URL } from '../../settings'\r\n\r\nexport default function ChangePassword() {\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n    const [successMessage, setSuccessMessage] = useState(null)\r\n\r\n    const handleFormSubmit = e => {\r\n        e.preventDefault()\r\n        let password = document.querySelector('#password').value\r\n        let newPassword = document.querySelector('#new_password').value\r\n        let newPasswordc = document.querySelector('#new_passwordc').value\r\n        for (let input of document.querySelectorAll('form > input')) {\r\n            if (!input.value) {\r\n                alert('Todos os campos devem ser preenchidos!')\r\n                return\r\n            }\r\n        }\r\n        if (newPassword !== newPasswordc) {\r\n            setErrorMessage('Os campos \"Nova senha\" e \"Confirmar nova senha\" devem ter o mesmo valor!')\r\n            return\r\n        }\r\n        fetch(`${SERVER_URL}/change-password`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({\r\n                password: password,\r\n                new_password: newPassword,\r\n                new_passwordc: newPasswordc,\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data === 'success') {\r\n                    setSuccessMessage('Senha alterada com successo!')\r\n                    password = newPassword = newPasswordc = ''\r\n                } else {\r\n                    setErrorMessage(data)\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"settings-description-container\">\r\n            {errorMessage &&\r\n                <div class=\"alert alert-danger alert\" role=\"alert\">\r\n                    {errorMessage}\r\n                </div>\r\n            }\r\n            {successMessage &&\r\n                <div class=\"alert alert-success alert\" role=\"alert\">\r\n                    {successMessage}\r\n                </div>\r\n            }\r\n            <div className=\"change-password-title-container\">\r\n                <h3>Alterar senha</h3>\r\n            </div>\r\n            <hr />\r\n            <form className=\"change-password-form\">\r\n                <input id=\"password\" type=\"password\" placeholder=\"Senha atual\" autoFocus />\r\n                <br />\r\n                <a href=\"#\">Esqueceu sua senha?</a>\r\n                <hr />\r\n                <br />\r\n                <input id=\"new_password\" type=\"password\" placeholder=\"Nova senha\" />\r\n                <br />\r\n                <input id=\"new_passwordc\" type=\"password\" placeholder=\"Confirmar nova senha\" />\r\n                <br />\r\n                <button\r\n                    className=\"btn btn-primary\"\r\n                    type=\"submit\"\r\n                    onClick={handleFormSubmit}\r\n                >Confirmar</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\n\r\nimport { csrftoken } from '../../utils'\r\nimport { SERVER_URL } from '../../settings'\r\n\r\nexport default function DeleteAccount() {\r\n    const [displayErrorMessage, setDisplayErrorMessage] = useState(null)\r\n\r\n    const deleteAccount = () => {\r\n        if (window.confirm('Tem certeza que deseja deletar a sua conta ?\\nEsta ação é irreversível?')) {\r\n            const password = document.querySelector('#password').value\r\n            if (!password) {\r\n                window.alert('A senha não pode ficar em branco!')\r\n            } else {\r\n                fetch(`${SERVER_URL}/delete-account`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-type': 'application/json',\r\n                        'X-CSRFToken': csrftoken,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        password: password\r\n                    })\r\n                })\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        if (data === 'Wrong password') {\r\n                            setDisplayErrorMessage(true)\r\n                        } else {\r\n                            window.alert('Conta deletada com sucesso.')\r\n                            window.location.href = SERVER_URL\r\n                        }\r\n                    })\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"settings-description-container\">\r\n            {displayErrorMessage &&\r\n                <div className=\"alert\">\r\n                    <div className=\"alert alert-danger\" role=\"alert\">Senha incorreta!</div>\r\n                </div>\r\n            }\r\n            <div className=\"delete-account-title-container\">\r\n                <h3>Deletar conta</h3>\r\n            </div>\r\n            <hr />\r\n            <div className=\"delete-account-confirmation\">\r\n                <input id=\"password\" type=\"password\" placeholder=\"Senha\" autoFocus />\r\n                <hr />\r\n                <br />\r\n                Tem certeza que deseja apagar a sua conta ?\r\n                <br />\r\n                Esta ação é irreversível\r\n                <br />\r\n                <button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={deleteAccount}\r\n                >Deletar conta</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Header from '../../components/fixed/header'\r\nimport BlockedProfiles from './blockedProfiles'\r\nimport ChangePassword from './changePassword'\r\nimport DeleteAccount from './deleteAccount'\r\n\r\nexport default function Settings(props) {\r\n    if (!props.page) props.page = 'blocked-profiles'\r\n\r\n    document.title = 'Configurações / Napker'\r\n\r\n    useEffect(() => {\r\n        document.getElementById(props.page).classList.add('active')\r\n    }, [])\r\n\r\n    const pageChange = page => {\r\n        document.querySelectorAll('.active').forEach(el => {\r\n            el.classList.remove('active')\r\n        })\r\n        document.getElementById(page).classList.add('active')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Configurações\" />\r\n            <div className=\"content\">\r\n                <div className=\"settings-page-container\">\r\n                    <div className=\"settings-page-menu\">\r\n                        <Link to=\"/configurações/perfis-bloqueados\" style={{ textDecoration: 'none', width: '100%' }}>\r\n                            <li id=\"blocked-profiles\" onClick={() => pageChange('blocked-profiles')}>\r\n                                Perfis bloqueados\r\n                            <i className=\"fas fa-angle-right\"></i>\r\n                            </li>\r\n                        </Link>\r\n                        <Link to=\"/configurações/alterar-senha\" style={{ textDecoration: 'none', width: '100%' }}>\r\n                            <li id=\"change-password\" onClick={() => pageChange('change-password')}>\r\n                                Alterar senha\r\n                            <i className=\"fas fa-angle-right\"></i>\r\n                            </li>\r\n                        </Link>\r\n                        <Link to=\"/configurações/deletar-conta\" style={{ textDecoration: 'none', width: '100%' }}>\r\n                            <li id=\"delete-account\" onClick={() => pageChange('delete-account')}>\r\n                                Apagar conta\r\n                            <i className=\"fas fa-angle-right\"></i>\r\n                            </li>\r\n                        </Link>\r\n                    </div>\r\n                    {props.page === 'blocked-profiles' ?\r\n                        <BlockedProfiles />\r\n                        :\r\n                        <>\r\n                            {props.page === 'change-password' ?\r\n                                <ChangePassword />\r\n                                :\r\n                                <DeleteAccount />\r\n                            }\r\n                        </>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport LikesModal from '../../components/LikesModal'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nexport default function Posts(props) {\r\n    const [myprofile, setMyProfile] = useState(null)\r\n    const [likesModal, setLikesModal] = useState({ isOpen: false, likes: null })\r\n    const profile = props.profile\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n    }, [])\r\n\r\n    const likeUnlikePost = e => {\r\n        e.stopPropagation()\r\n        const likeBtn = e.target\r\n        if (likeBtn.classList.contains('fas')) {\r\n            likeBtn.classList.remove('fas') //border heart\r\n            likeBtn.classList.add('far')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/unlike-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.fetchProfile()\r\n                })\r\n        } else {\r\n            likeBtn.classList.remove('far') //border heart\r\n            likeBtn.classList.add('fas')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/like-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.fetchProfile()\r\n                })\r\n        }\r\n    }\r\n\r\n    const hideLikesModal = () => {\r\n        setLikesModal({\r\n            isOpen: false,\r\n            likes: null\r\n        })\r\n    }\r\n\r\n    const deletePost = (e, postId) => {\r\n        e.stopPropagation()\r\n        const el = document.querySelector(`#profile-post-${postId}`)\r\n        if (window.confirm('Tem certeza que deseja apagar o post?\\nEssa ação é irreversível.')) {\r\n            el.style.animationPlayState = 'running'\r\n            el.addEventListener('animationend', () => {\r\n                props.fetchProfile()\r\n            })\r\n            fetch(`${SERVER_URL}/post-api/delete-post/${postId}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <LikesModal\r\n                isOpen={likesModal.isOpen}\r\n                likes={likesModal.likes}\r\n                hideModal={hideLikesModal}\r\n            />\r\n            <div className=\"post-list\">\r\n                {profile && myprofile ?\r\n                    <>\r\n                        {profile.posts.length ? profile.posts.map(post => {\r\n                            return (\r\n                                <li\r\n                                    className=\"post-container post-list-item\"\r\n                                    key={post.id}\r\n                                    id={`profile-post-${post.id}`}\r\n                                    onClick={() => window.location.href = `/post/${post.id}`}\r\n                                >\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <div className=\"post-row\">\r\n                                            <div className=\"post-col\">\r\n                                                <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                    className=\"profile-img-med\"\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"post-col\">\r\n                                                <div style={{ height: '30px' }}>\r\n                                                    <strong>{profile.first_name} {profile.last_name} </strong>\r\n                                                    <p className=\"text-secondary d-inline-block\">\r\n                                                        @{profile.user.username} • {post.created.split('-').reverse().join('/')}\r\n                                                    </p>\r\n                                                </div>\r\n                                                <div style={{ textAlign: 'start' }}>\r\n                                                    {post.content}\r\n                                                </div>\r\n                                                {post.image &&\r\n                                                    <img src={`${SERVER_URL}${post.image}`} className=\"post-img\" />\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                        {profile.id == myprofile.id &&\r\n                                            <i\r\n                                                className=\"far fa-trash-alt trash-icon text-secondary\"\r\n                                                style={{ margin: '20px 20px 0 0' }}\r\n                                                onClick={e => deletePost(e, post.id)}\r\n                                            />}\r\n                                    </div>\r\n                                    <div className=\"post-actions\">\r\n                                        <p className=\"text-secondary\">\r\n                                            <Link\r\n                                                to={`/post/${post.id}/comment`}\r\n                                                className=\"text-secondary\"\r\n                                                onClick={e => e.stopPropagation()}\r\n                                            >\r\n                                                <i class=\"far fa-comment\" />\r\n                                            </Link>{post.comments.length}\r\n                                            {post.likes.map(like => like.profile.id).includes(myprofile.id) ?\r\n                                                <i class=\"fas fa-heart\"\r\n                                                    data-postid={post.id}\r\n                                                    onClick={likeUnlikePost}\r\n                                                />\r\n                                                :\r\n                                                <i class=\"far fa-heart\"\r\n                                                    data-postid={post.id}\r\n                                                    onClick={likeUnlikePost}\r\n                                                />}\r\n                                            <p className=\"post-likes-number\"\r\n                                                onClick={e => {\r\n                                                    e.stopPropagation()\r\n                                                    setLikesModal({ isOpen: true, likes: post.likes })\r\n                                                }\r\n                                                }\r\n                                            >\r\n                                                {post.likes.length}\r\n                                            </p>\r\n                                        </p>\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        }) :\r\n                            <div className=\"no-posts-container\">\r\n                                {profile.id === myprofile.id ?\r\n                                    <h3 style={{ marginTop: '50px' }}>Você não tem posts</h3>\r\n                                    :\r\n                                    <h3 style={{ marginTop: '50px' }}>{profile.first_name} não tem posts</h3>\r\n                                }\r\n                            </div>\r\n                        }\r\n                    </>\r\n                    :\r\n                    <div className=\"posts-loader-container\" >\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Interests(props) {\r\n    const profile = props.profile\r\n\r\n    return (\r\n        <div className=\"interests-page-container\">\r\n            <h3>Interesses públicos de {profile.first_name}</h3>\r\n            <div>\r\n                {profile && profile.interests.filter(i => i.public).map(interest => {\r\n                    return (\r\n                        <>\r\n                            {interest.title &&\r\n                                <>\r\n                                    <hr />\r\n                                    <li className=\"interest-item\">\r\n                                        {interest.title[0].toUpperCase() + interest.title.slice(1)}\r\n                                        <Link to={`/interesses/${interest.title}`}>\r\n                                            <button className=\"btn-secondary\" style={{ padding: '5px' }}>Pesquisar usuários</button>\r\n                                        </Link>\r\n                                    </li>\r\n                                </>\r\n                            }\r\n                        </>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Header from '../../components/fixed/header'\r\nimport Posts from '../profile-components/posts'\r\nimport Interests from '../profile-components/interests'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myProfile: null,\r\n            profile: null,\r\n            alertMessage: null,\r\n            relationshipButtonLabel: '',\r\n            currentPageIsPosts: true,\r\n        }\r\n        this.slug = this.props.match.params.slug\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.fetchProfile()\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${SERVER_URL}/profile-api/relationship/${this.slug}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                let label\r\n                switch (data.relationship) {\r\n                    case 'friends':\r\n                        label = 'Amigos'\r\n                        break\r\n                    case 'invite-sent':\r\n                        label = 'Solicitado'\r\n                        break\r\n                    case 'invite-received':\r\n                        label = 'Aceitar'\r\n                        break\r\n                    case 'none':\r\n                        label = 'Solicitar'\r\n                }\r\n                this.setState({\r\n                    relationshipButtonLabel: label\r\n                })\r\n            })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        let btn = document.querySelector('#profile-page-relationship-btn')\r\n        if (btn) {\r\n            switch (btn.innerHTML) {\r\n                case 'Amigos':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.onmouseenter = () => {\r\n                        if (btn.innerHTML === 'Amigos') btn.innerHTML = 'Remover'\r\n                    }\r\n                    btn.onmouseout = () => {\r\n                        if (btn.innerHTML === 'Remover') btn.innerHTML = 'Amigos'\r\n                    }\r\n                    btn.classList.add('friend-btn')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Solicitado':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Aceitar':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Solicitar':\r\n                    btn.classList.add('btn-secondary')\r\n                    btn.classList.remove('d-none')\r\n            }\r\n        }\r\n    }\r\n\r\n    fetchProfile = () => {\r\n        fetch(`${SERVER_URL}/profile-api/user/${this.slug}`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                profile: data\r\n            }))\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ myProfile: data }))\r\n    }\r\n\r\n    sendFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/send-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    cancelFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/cancel-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    removeFromFriends = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/remove-from-friends`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    acceptFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/reply-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({\r\n                'senderid': pk,\r\n                'reply': 'accept'\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                this.props.updateNotificationsNumber()\r\n            })\r\n    }\r\n\r\n    handleRelationshipUpdate = e => {\r\n        const btn = e.target\r\n        if (btn.innerHTML === 'Solicitar') {\r\n            this.sendFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitado'\r\n            btn.className = 'btn btn-primary'\r\n        } else if (btn.innerHTML === 'Solicitado') {\r\n            this.cancelFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitar'\r\n            btn.className = 'btn btn-secondary'\r\n        } else if (btn.innerHTML === 'Amigos' || btn.innerHTML === 'Remover') {\r\n            if (window.confirm(`Remover @${this.state.profile.user.username} dos amigos?`)) {\r\n                this.removeFromFriends(btn.dataset.pk)\r\n                btn.innerHTML = 'Solicitar'\r\n                btn.className = 'btn btn-secondary'\r\n            }\r\n        } else if (btn.innerHTML === 'Aceitar') {\r\n            this.acceptFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Amigos'\r\n            btn.className = 'btn btn-primary'\r\n        }\r\n    }\r\n\r\n    blockUnblockUser = () => {\r\n        if (this.state.myProfile.blocked_users.map(u => u.id).includes(this.state.profile.user.id)) {\r\n            if (window.confirm(`Tem certeza que deseja desbloquear ${this.state.profile.first_name} ?`)) {\r\n                fetch(`${SERVER_URL}/profile-api/unblock-user`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-type': 'application/json',\r\n                        'X-CSRFToken': csrftoken,\r\n                    },\r\n                    body: JSON.stringify(this.state.profile)\r\n                })\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        console.log(data)\r\n                        this.setState({ alertMessage: `Você desbloqueou @${this.state.profile.user.username}.` })\r\n                        this.fetchProfile()\r\n                    })\r\n            }\r\n        } else {\r\n            if (window.confirm(`Tem certeza que deseja bloquear ${this.state.profile.first_name} ?`)) {\r\n                fetch(`${SERVER_URL}/profile-api/block-user`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-type': 'application/json',\r\n                        'X-CSRFToken': csrftoken,\r\n                    },\r\n                    body: JSON.stringify(this.state.profile)\r\n                })\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        console.log(data)\r\n                        this.setState({\r\n                            alertMessage: `Você bloqueou @${this.state.profile.user.username}.\r\n                         ${this.state.profile.first_name} não conseguirá mais ver o seu perfil ou te enviar mensagens.`\r\n                        })\r\n                        this.fetchProfile()\r\n                    })\r\n            }\r\n        }\r\n        this.fetchProfile()\r\n        document.querySelector('#view-more-select').style.display = 'none'\r\n    }\r\n\r\n    openCloseExtraOptions = () => {\r\n        const el = document.querySelector('#view-more-select')\r\n        const style = el.style\r\n        if (!style.display) style.display = 'none'\r\n        if (style.display === 'none') {\r\n            document.querySelector('#view-more-icon').classList.add('view-more-icon-active')\r\n            style.display = 'flex'\r\n        } else {\r\n            document.querySelector('#view-more-icon').classList.remove('view-more-icon-active')\r\n            style.display = 'none'\r\n        }\r\n    }\r\n\r\n    switchPage = e => {\r\n        document.querySelectorAll('.profile-page-menu-item-active').forEach(el => {\r\n            el.classList.remove('profile-page-menu-item-active')\r\n        })\r\n        e.target.classList.add('profile-page-menu-item-active')\r\n        if (e.target.id === 'profile-posts-page-menu-item') {\r\n            this.setState({ currentPageIsPosts: true })\r\n        } else if (e.target.id === 'profile-interests-page-menu-item') {\r\n            this.setState({ currentPageIsPosts: false })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header page={this.state.profile ? `${this.state.profile.first_name} ${this.state.profile.last_name}` : 'Perfil'}\r\n                    backArrow={true}\r\n                />\r\n                {this.state.myProfile && this.state.profile ?\r\n                    <div className=\"content\">\r\n                        {this.state.profile.blocked_users.map(u => u.id).includes(this.state.myProfile.user.id) ?\r\n                            <div className=\"user-blocked-me-container\">\r\n                                <h3>O usuário te bloqueou</h3>\r\n                            </div>\r\n                            :\r\n                            <>\r\n                                {this.state.alertMessage &&\r\n                                    <div class=\"alert alert-success profile-page-alert-success\" role=\"alert\">\r\n                                        {this.state.alertMessage}\r\n                                    </div>\r\n                                }\r\n                                <div className=\"d-flex justify-content-between align-items-center profile-data-container\">\r\n                                    <div className=\"d-flex flex-column align-items-start\">\r\n                                        <p style={{ padding: '15px' }}>\r\n                                            <img src={`${SERVER_URL}${this.state.profile.photo}`}\r\n                                                className=\"profile-img-big\"\r\n                                                style={{ marginBottom: '25px' }}\r\n                                            />\r\n                                        </p>\r\n                                        <p style={{ marginBottom: 0 }}><strong>{this.state.profile.first_name} {this.state.profile.last_name}</strong></p>\r\n                                        <p className=\"text-secondary\" style={{ marginTop: 0 }}>@{this.state.profile.user.username}</p>\r\n                                        <p>{this.state.profile.bio}</p>\r\n                                        <p className=\"text-secondary\">\r\n                                            <i className=\"far fa-calendar-alt\"></i> Entrou em {this.state.profile.created.split('-').reverse().join('/')}\r\n                                        </p>\r\n                                        <p>\r\n                                            <Link to={`/user/${this.state.profile.slug}/amigos`} style={{ color: '#000' }}>\r\n                                                <strong>{this.state.profile.friends.length}</strong> {this.state.profile.friends.length === 1 ? 'amigo' : 'amigos'}\r\n                                            </Link>\r\n                                        </p>\r\n                                    </div>\r\n                                    <div>\r\n                                        <i\r\n                                            className=\"fas fa-ellipsis-h btn btn-secondary mr-2\"\r\n                                            id=\"view-more-icon\"\r\n                                            onClick={this.openCloseExtraOptions}\r\n                                        />\r\n                                        <div className=\"view-more-select profile-view-more-select\" id=\"view-more-select\">\r\n                                            <Link to={`/mensagens/${this.state.profile.slug}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                                                {!this.state.myProfile.blocked_users.map(u => u.id).includes(this.state.profile.user.id) &&\r\n                                                    <li>\r\n                                                        <i class=\"fas fa-envelope text-secondary\" />\r\n                                                        Enviar mensagem\r\n                                                    </li>\r\n                                                }\r\n                                            </Link>\r\n                                            <li onClick={this.blockUnblockUser}>\r\n                                                <i class=\"fas fa-user-lock text-secondary\" />\r\n                                                {this.state.myProfile.blocked_users.map(u => u.id).includes(this.state.profile.user.id) ?\r\n                                                    'Desbloquear'\r\n                                                    :\r\n                                                    'Bloquear'\r\n                                                }\r\n                                            </li>\r\n                                        </div>\r\n                                        {!this.state.myProfile.blocked_users.map(u => u.id).includes(this.state.profile.user.id) &&\r\n                                            <button className=\"btn d-none\"\r\n                                                id=\"profile-page-relationship-btn\"\r\n                                                data-pk={this.state.profile.id}\r\n                                                onClick={this.handleRelationshipUpdate}\r\n                                            >{this.state.relationshipButtonLabel}</button>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"profile-page-menu\">\r\n                                    <div\r\n                                        className=\"profile-page-menu-item profile-page-menu-item-active\"\r\n                                        id=\"profile-posts-page-menu-item\"\r\n                                        onClick={this.switchPage}\r\n                                    >\r\n                                        Posts ({this.state.profile.posts.length})\r\n                                    </div>\r\n                                    <div\r\n                                        className=\"profile-page-menu-item\"\r\n                                        id=\"profile-interests-page-menu-item\"\r\n                                        onClick={this.switchPage}\r\n                                    >\r\n                                        Interesses ({this.state.profile.interests.filter(i => i.public).length})\r\n                                    </div>\r\n                                </div>\r\n                                {this.state.currentPageIsPosts ?\r\n                                    <Posts profile={this.state.profile} fetchProfile={this.fetchProfile} /> :\r\n                                    <Interests profile={this.state.profile} />\r\n                                }\r\n                            </>\r\n                        }\r\n                    </div>\r\n                    :\r\n                    <div className=\"profile-page-loader-container\">\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile","import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nimport Header from '../../components/fixed/header'\r\nimport { SERVER_URL } from '../../settings'\r\n\r\nexport default function Friends() {\r\n    const [friends, setFriends] = useState(null)\r\n    const [profile, setProfile] = useState(null)\r\n    const { slug } = useParams()\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/user/${slug}`)\r\n            .then(response => response.json())\r\n            .then(data => setProfile(data))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (profile) {\r\n            fetch(`${SERVER_URL}/profile-api/get-friends-profiles/${profile.slug}`)\r\n                .then(response => response.json())\r\n                .then(data => setFriends(data))\r\n        }\r\n    }, [profile])\r\n\r\n    return (\r\n        <>\r\n            <Header page={profile ? `${profile.first_name} ${profile.last_name} / Amigos` : 'Perfil / Amigos'}\r\n                backArrow={true}\r\n            />\r\n            <div className=\"content\">\r\n                <div className=\"list-group profile-friends-container\">\r\n                    {friends !== null ?\r\n                        <>\r\n                            {friends.length ? friends.map(friend => {\r\n                                return (\r\n                                    <Link to={`/user/${friend.slug}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                                        <li className=\"list-group-item profile-row filtered-profile profile-friend-list-item\" key={friend.id}>\r\n                                            <div className=\"d-flex justify-content-between\">\r\n                                                <div className=\"profile-col\">\r\n                                                    <img src={`${SERVER_URL}${friend.photo}`}\r\n                                                        className=\"profile-img-med\"\r\n                                                        style={{ marginRight: '10px' }}\r\n                                                    />\r\n                                                    <div className=\"main-profile-data\">\r\n                                                        <strong>{friend.first_name} {friend.last_name}</strong>\r\n                                                        <p className=\"text-secondary\">@{friend.user.username}</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"profile-col\">\r\n                                                    {friend.bio}\r\n                                                </div>\r\n                                                <div className=\"profile-col\">\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                    </Link>\r\n                                )\r\n                            }) :\r\n                                <h3 style={{ marginTop: '30px' }}>\r\n                                    {profile ? `${profile.first_name} ainda não possui amigos` : 'Você ainda não possui amigos'}\r\n                                </h3>\r\n                            }\r\n                        </>\r\n                        :\r\n                        <div className=\"profiles-loader-container\">\r\n                            <div className=\"loader\" />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport Header from '../../components/fixed/header'\r\nimport { SERVER_URL } from '../../settings'\r\n\r\nexport default function InterestProfiles() {\r\n    const [profiles, setProfiles] = useState(null)\r\n    const { interest } = useParams()\r\n\r\n    document.title = `${interest[0].toUpperCase() + interest.slice(1)} / Napker`\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/interest-profile-list/${interest}`)\r\n            .then(response => response.json())\r\n            .then(data => setProfiles(data))\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Header\r\n                page={`Interesse / ${interest[0].toUpperCase() + interest.slice(1)}`}\r\n                backArrow={true}\r\n            />\r\n            <div className=\"content\">\r\n                <div className=\"interests-title-container\">\r\n                    <h3>Perfis interessados em \"{interest}\"</h3>\r\n                </div>\r\n                <div className=\"list-group interest-profile-list\">\r\n                    {profiles !== null ? profiles.map(profile => {\r\n                        return (\r\n                            <li\r\n                                className=\"list-group-item profile-row filtered-profile interest-profile-row\"\r\n                                key={profile.id}\r\n                                onClick={() => window.location.href = `/user/${profile.slug}`}\r\n                            >\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                    <div className=\"profile-col\">\r\n                                        <img src={`${SERVER_URL}${profile.photo}`}\r\n                                            className=\"profile-img-med\"\r\n                                            style={{ marginRight: '10px' }}\r\n                                        />\r\n                                        <div className=\"main-profile-data\">\r\n                                            <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                            <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"profile-col\">\r\n                                        {profile.bio}\r\n                                    </div>\r\n                                    <div className=\"profile-col\"></div>\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    }) :\r\n                        <div className=\"profiles-loader-container\">\r\n                            <div className=\"loader\" />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport { SERVER_URL } from '../../../settings'\r\n\r\nexport default function PublicInterests(props) {\r\n\r\n    useEffect(() => {\r\n        if (document.querySelector('.public-interests-container')) {\r\n            const tagContainer = document.querySelector('.public-tag-container');\r\n            const input = document.querySelector('.public-tag-container input');\r\n\r\n            let tags = props.myProfile.interests.filter(i => i.public).map(i => i.title);\r\n            const interestsInput = document.querySelector('#public-interests')\r\n            addTags()\r\n\r\n            function createTag(label) {\r\n                const div = document.createElement('div');\r\n                div.classList.add('tag');\r\n                div.classList.add('public-tag');\r\n                const span = document.createElement('span');\r\n                span.innerHTML = label;\r\n                const closeIcon = document.createElement('i');\r\n                closeIcon.classList.add('public-close-icon')\r\n                closeIcon.innerHTML = '×';\r\n                closeIcon.classList.add('material-icons')\r\n                closeIcon.setAttribute('data-item', label);\r\n                div.appendChild(span);\r\n                div.appendChild(closeIcon);\r\n                if (!interestsInput.value.includes(label)) interestsInput.value += ` ${label}`;\r\n                return div;\r\n            }\r\n\r\n            function clearTags() {\r\n                document.querySelectorAll('.public-tag').forEach(tag => {\r\n                    tag.parentElement.removeChild(tag);\r\n                });\r\n            }\r\n\r\n            function addTags() {\r\n                clearTags();\r\n                tags.sort()\r\n                tags.slice().reverse().forEach(tag => {\r\n                    tagContainer.prepend(createTag(tag));\r\n                });\r\n                props.setInterests(tags)\r\n            }\r\n\r\n            input.addEventListener('keydown', (e) => {\r\n                if (e.key === 'Enter') {\r\n                    e.target.value.split(',').forEach(tag => {\r\n                        if (tag.length < 3) {\r\n                            window.alert('Os interesses devem ter no mínimo 3 caracteres!')\r\n                        } else {\r\n                            tags.push(tag)\r\n                        }\r\n                    });\r\n\r\n                    e.preventDefault()\r\n\r\n                    addTags();\r\n                    input.value = '';\r\n                    return false; //prevent the form to submit\r\n                }\r\n            });\r\n            document.addEventListener('click', (e) => {\r\n                if (e.target.classList.contains('public-close-icon')) {\r\n                    const tagLabel = e.target.getAttribute('data-item');\r\n                    const index = tags.indexOf(tagLabel);\r\n                    tags = [...tags.slice(0, index), ...tags.slice(index + 1)];\r\n                    addTags();\r\n                }\r\n            })\r\n\r\n            input.focus();\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"public-interests-container\">\r\n            <h3>Interesses públicos</h3>\r\n            <p>\r\n                Os interesses públicos são visíveis para os outros usuários.\r\n                Coloque aqui interesses que sem eles seu perfil ficaria incompleto.\r\n            </p>\r\n            <div class=\"tag-container public-tag-container\">\r\n                <input placeholder=\"Digite e pressione 'Enter'\" maxLength=\"50\" />\r\n                <input type=\"hidden\" name=\"public-interests\" id=\"public-interests\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport { SERVER_URL } from '../../../settings'\r\n\r\nexport default function PrivateInterests(props) {\r\n\r\n    useEffect(() => {\r\n        if (document.querySelector('.private-interests-container')) {\r\n            const tagContainer = document.querySelector('.private-tag-container');\r\n            const input = document.querySelector('.private-tag-container input');\r\n\r\n            let tags = props.myProfile.interests.filter(i => !i.public).map(i => i.title);\r\n            const interestsInput = document.querySelector('#private-interests')\r\n            addTags()\r\n\r\n            function createTag(label) {\r\n                const div = document.createElement('div');\r\n                div.classList.add('tag');\r\n                div.classList.add('private-tag');\r\n                const span = document.createElement('span');\r\n                span.innerHTML = label;\r\n                const closeIcon = document.createElement('i');\r\n                closeIcon.classList.add('private-close-icon')\r\n                closeIcon.classList.add('material-icons')\r\n                closeIcon.innerHTML = '×';\r\n                closeIcon.setAttribute('data-item', label);\r\n                div.appendChild(span);\r\n                div.appendChild(closeIcon);\r\n                if (!interestsInput.value.includes(label)) interestsInput.value += ` ${label}`;\r\n                return div;\r\n            }\r\n\r\n            function clearTags() {\r\n                document.querySelectorAll('.private-tag').forEach(tag => {\r\n                    tag.parentElement.removeChild(tag);\r\n                });\r\n            }\r\n\r\n            function addTags() {\r\n                clearTags();\r\n                tags.sort()\r\n                tags.slice().reverse().forEach(tag => {\r\n                    tagContainer.prepend(createTag(tag));\r\n                });\r\n                props.setInterests(tags)\r\n            }\r\n\r\n            input.addEventListener('keydown', (e) => {\r\n                if (e.key === 'Enter') {\r\n                    e.target.value.split(',').forEach(tag => {\r\n                        if (tag.length < 3) {\r\n                            window.alert('Os interesses devem ter no mínimo 3 caracteres!')\r\n                        } else {\r\n                            tags.push(tag)\r\n                        }\r\n                    });\r\n\r\n                    e.preventDefault()\r\n\r\n                    addTags();\r\n                    input.value = '';\r\n                    return false; //prevent the form to submit\r\n                }\r\n            });\r\n            document.addEventListener('click', (e) => {\r\n                if (e.target.classList.contains('private-close-icon')) {\r\n                    const tagLabel = e.target.getAttribute('data-item');\r\n                    const index = tags.indexOf(tagLabel);\r\n                    tags = [...tags.slice(0, index), ...tags.slice(index + 1)];\r\n                    addTags();\r\n                }\r\n            })\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"private-interests-container\">\r\n            <h3>Interesses privados</h3>\r\n            <p>\r\n                Os interesses privados não são visíveis para os outros usuários.\r\n                Eles servem para aumentar a precisão das recomendações de perfis que\r\n                possuem o máximo de afinidade possível com você.\r\n            </p>\r\n            <div class=\"tag-container private-tag-container\">\r\n                <input placeholder=\"Digite e pressione 'Enter'\" maxLength=\"50\" />\r\n                <input type=\"hidden\" name=\"private-interests\" id=\"private-interests\" />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport Header from '../../../components/fixed/header'\r\nimport PublicInterests from './publicInterests'\r\nimport PrivateInterests from './privateInterests'\r\nimport { SERVER_URL } from '../../../settings'\r\nimport { csrftoken } from '../../../utils'\r\n\r\nexport default function EditInterests() {\r\n    const [myProfile, setMyProfile] = useState(null)\r\n    let [publicInterests, setPublicInterests] = [null, value => publicInterests = value]\r\n    let [privateInterests, setPrivateInterests] = [null, value => privateInterests = value]\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n    }, [])\r\n\r\n    const submitInterests = () => {\r\n        fetch(`${SERVER_URL}/profile-api/set-myinterests`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({\r\n                public_interests: publicInterests.sort(),\r\n                private_interests: privateInterests.sort()\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                document.querySelector('#interests-updated-message').style.display = 'block'\r\n                document.documentElement.scrollTop = 0\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Meus interesses\" backArrow={true} />\r\n            <div className=\"content\">\r\n                <p\r\n                    className=\"edit-interests-success-message\"\r\n                    id=\"interests-updated-message\"\r\n                >\r\n                    Interesses atualizados com sucesso\r\n                </p>\r\n                {myProfile ?\r\n                    <div className=\"interests-page-container\">\r\n                        <PublicInterests\r\n                            myProfile={myProfile}\r\n                            setInterests={setPublicInterests}\r\n                        />\r\n\r\n                        <br />\r\n                        <hr />\r\n                        <br />\r\n\r\n                        <PrivateInterests\r\n                            myProfile={myProfile}\r\n                            setInterests={setPrivateInterests}\r\n                        />\r\n\r\n                        <hr />\r\n                        <button\r\n                            className=\"btn btn-primary\"\r\n                            onClick={submitInterests}\r\n                        >\r\n                            Salvar\r\n                        </button>\r\n                    </div> :\r\n                    <div className=\"edit-interests-loader-container\">\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Picker from 'emoji-picker-react'\r\n\r\nimport { csrftoken, openCloseEmojiList } from '../utils'\r\nimport { SERVER_URL } from '../settings'\r\n\r\nexport default function CommentModal(props) {\r\n    const [commentContent, setCommentContent] = useState('')\r\n\r\n    const post = props.post\r\n\r\n    const handleCommentChange = e => {\r\n        setCommentContent(e.target.value)\r\n        const el = document.querySelector('#comment-form-submit')\r\n        el.disabled = e.target.value === ''\r\n    }\r\n\r\n    const onEmojiSelect = (event, emojiObject) => {\r\n        setCommentContent(commentContent + emojiObject.emoji)\r\n        document.querySelector('#comment-form-submit').disabled = false\r\n    }\r\n\r\n    return (\r\n        <Modal show={props.isOpen}\r\n            onHide={props.hideModal}\r\n            size=\"lg\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title><strong>Comentar</strong></Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"post-container\">\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <div className=\"post-row\">\r\n                            <div className=\"post-col\">\r\n                                <img src={`${SERVER_URL}${post.author.photo}`}\r\n                                    className=\"profile-img-med\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"post-col\">\r\n                                <div style={{ height: '30px' }}>\r\n                                    <strong>{post.author.first_name} {post.author.last_name} </strong>\r\n                                    <p className=\"text-secondary d-inline-block\">\r\n                                        @{post.author.user.username} • {post.created.split('-').reverse().join('/')}\r\n                                    </p>\r\n                                </div>\r\n                                <div style={{ textAlign: 'start' }}>\r\n                                    {post.content}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <form action={`${SERVER_URL}/post-api/comment-post/${post.id}`} method=\"POST\" className=\"comment-form\">\r\n                    <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n                    <label\r\n                        className=\"far fa-smile\"\r\n                        id=\"emoji-button\"\r\n                        onClick={() => openCloseEmojiList(false)}\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"comment-content\"\r\n                        value={commentContent}\r\n                        placeholder=\"Comente alguma coisa\"\r\n                        style={{ marginRight: '5px' }}\r\n                        onChange={handleCommentChange}\r\n                    />\r\n                    <div className=\"emoji-list-container chat-emoji-list\" id=\"emoji-list-container\">\r\n                        <Picker onEmojiClick={onEmojiSelect} />\r\n                    </div>\r\n                    <button\r\n                        className=\"btn btn-primary\"\r\n                        id=\"comment-form-submit\"\r\n                        type=\"submit\"\r\n                        disabled\r\n                    >\r\n                        Enviar\r\n                    </button>\r\n                </form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nimport CommentModal from '../../components/CommentModal'\r\nimport LikesModal from '../../components/LikesModal'\r\nimport Header from '../../components/fixed/Header'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nexport default function Post(props) {\r\n    const [post, setPost] = useState(null)\r\n    const [profile, setProfile] = useState(null)\r\n    const [commentModalIsOpen, setCommentModalIsOpen] = useState(props.commentModalIsOpen)\r\n    const [postLikesModal, setPostLikesModal] = useState({ isOpen: false, likes: null })\r\n    const [commentLikesModal, setCommentLikesModal] = useState({ isOpen: false, likes: null })\r\n\r\n    const { id } = useParams()\r\n\r\n    useEffect(() => {\r\n        fetchPost()\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setProfile(data))\r\n    }, [])\r\n\r\n    const fetchPost = () => {\r\n        fetch(`${SERVER_URL}/post-api/post/${id}`)\r\n            .then(response => response.json())\r\n            .then(data => setPost(data))\r\n    }\r\n\r\n    const likeUnlikePost = e => {\r\n        const likeBtn = e.target\r\n        if (likeBtn.classList.contains('fas')) {\r\n            likeBtn.classList.remove('fas') //border heart\r\n            likeBtn.classList.add('far')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/unlike-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPost()\r\n                })\r\n        } else {\r\n            likeBtn.classList.remove('far') //border heart\r\n            likeBtn.classList.add('fas')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/like-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPost()\r\n                })\r\n        }\r\n    }\r\n\r\n    const likeUnlikeComment = e => {\r\n        const likeBtn = e.target\r\n        if (likeBtn.classList.contains('fas')) {\r\n            likeBtn.classList.remove('fas') //border heart\r\n            likeBtn.classList.add('far')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/unlike-comment/${likeBtn.dataset.commentid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPost()\r\n                })\r\n        } else {\r\n            likeBtn.classList.remove('far') //border heart\r\n            likeBtn.classList.add('fas')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/like-comment/${likeBtn.dataset.commentid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPost()\r\n                })\r\n        }\r\n    }\r\n\r\n    const deleteComment = (e, commentId) => {\r\n        e.stopPropagation()\r\n        const el = document.querySelector(`#post-comment-${commentId}`)\r\n        if (window.confirm('Tem certeza que deseja apagar o comentário?\\nEssa ação é irreversível.')) {\r\n            el.style.animationPlayState = 'running'\r\n            console.log(el, el.style.animationPlayState)\r\n            el.addEventListener('animationend', () => {\r\n                fetchPost()\r\n            })\r\n            fetch(`${SERVER_URL}/post-api/delete-comment/${commentId}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                })\r\n        }\r\n    }\r\n\r\n    const deletePost = (e, postId) => {\r\n        e.stopPropagation()\r\n        const el = document.querySelector(`#profile-post-${postId}`)\r\n        if (window.confirm('Tem certeza que deseja apagar o post?\\nEssa ação é irreversível.')) {\r\n            fetch(`${SERVER_URL}/post-api/delete-post/${postId}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    window.location.href = '/'\r\n                })\r\n        }\r\n    }\r\n\r\n    const hideCommentModal = () => {\r\n        setCommentModalIsOpen(false)\r\n    }\r\n\r\n    const hidePostLikesModal = () => {\r\n        setPostLikesModal({\r\n            isOpen: false,\r\n            likes: null\r\n        })\r\n    }\r\n\r\n    const hideCommentLikesModal = () => {\r\n        setCommentLikesModal({\r\n            isOpen: false,\r\n            likes: null\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"post-page-container\">\r\n            {post &&\r\n                <CommentModal\r\n                    isOpen={commentModalIsOpen}\r\n                    hideModal={hideCommentModal}\r\n                    post={post}\r\n                />\r\n            }\r\n            <LikesModal\r\n                isOpen={postLikesModal.isOpen}\r\n                likes={postLikesModal.likes}\r\n                hideModal={hidePostLikesModal}\r\n            />\r\n            <LikesModal\r\n                isOpen={commentLikesModal.isOpen}\r\n                likes={commentLikesModal.likes}\r\n                hideModal={hideCommentLikesModal}\r\n            />\r\n            <Header page=\"Post\" backArrow={true} />\r\n            <div className=\"content\">\r\n                {post && profile ?\r\n                    <>\r\n                        <div className=\"post-container\">\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                <div className=\"post-row\">\r\n                                    <div className=\"post-col\">\r\n                                        <Link to={`/user/${post.author.slug}`}>\r\n                                            <img src={`${SERVER_URL}${post.author.photo}`}\r\n                                                className=\"profile-img-med\"\r\n                                            />\r\n                                        </Link>\r\n                                    </div>\r\n                                    <div className=\"post-col\">\r\n                                        <Link to={`/user/${post.author.slug}`} style={{ color: '#000' }}>\r\n                                            <div style={{ height: '30px' }}>\r\n                                                <strong>{post.author.first_name} {post.author.last_name} </strong>\r\n                                                <p className=\"text-secondary d-inline-block\">\r\n                                                    @{post.author.user.username} • {post.created.split('-').reverse().join('/')}\r\n                                                </p>\r\n                                            </div>\r\n                                        </Link>\r\n                                        <div style={{ textAlign: 'start', fontSize: 'larger' }}>\r\n                                            {post.content}\r\n                                        </div>\r\n                                        {post.image &&\r\n                                            <img src={`${SERVER_URL}${post.image}`} className=\"post-img\" />\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                {profile.id == post.author.id &&\r\n                                    <i\r\n                                        className=\"far fa-trash-alt trash-icon text-secondary\"\r\n                                        style={{ margin: '20px 20px 0 0' }}\r\n                                        onClick={e => deletePost(e, post.id)}\r\n                                    />\r\n                                }\r\n                            </div>\r\n                            <div className=\"post-actions\">\r\n                                <p className=\"text-secondary\" style={{ fontSize: 'large' }}>\r\n                                    <Link to={`/post/${id}/comentar`} className=\"text-secondary\">\r\n                                        <i\r\n                                            class=\"far fa-comment\"\r\n                                            onClick={() => setCommentModalIsOpen(true)}\r\n                                        />\r\n                                    </Link>{post.comments.length}\r\n                                    {post.likes.map(like => like.profile.id).includes(profile.id) ?\r\n                                        <i class=\"fas fa-heart\"\r\n                                            data-postid={post.id}\r\n                                            onClick={likeUnlikePost}\r\n                                        />\r\n                                        :\r\n                                        <i class=\"far fa-heart\"\r\n                                            data-postid={post.id}\r\n                                            onClick={likeUnlikePost}\r\n                                        />\r\n                                    }\r\n                                    <p className=\"post-likes-number\"\r\n                                        onClick={() => setPostLikesModal({ isOpen: true, likes: post.likes })}\r\n                                    >\r\n                                        {post.likes.length}\r\n                                    </p>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"comment-list\">\r\n                            {post.comments.map(comment => {\r\n                                return (\r\n                                    <li\r\n                                        className=\"post-container\"\r\n                                        id={`post-comment-${comment.id}`}\r\n                                        key={comment.id}\r\n                                    >\r\n                                        <div className=\"d-flex justify-content-between\">\r\n                                            <div className=\"post-row\">\r\n                                                <div className=\"post-col\">\r\n                                                    <Link to={`/user/${comment.author.slug}`}>\r\n                                                        <img src={`${SERVER_URL}${comment.author.photo}`}\r\n                                                            className=\"profile-img-sm\"\r\n                                                        />\r\n                                                    </Link>\r\n                                                </div>\r\n                                                <div className=\"post-col\">\r\n                                                    <Link to={`/user/${comment.author.slug}`} style={{ color: '#000' }}>\r\n                                                        <div style={{ height: '30px' }}>\r\n                                                            <strong>{comment.author.first_name} {comment.author.last_name} </strong>\r\n                                                            <p className=\"text-secondary d-inline-block\">\r\n                                                                @{comment.author.user.username} • {comment.created.split('-').reverse().join('/')}\r\n                                                            </p>\r\n                                                        </div>\r\n                                                    </Link>\r\n                                                    <div style={{ textAlign: 'start' }}>\r\n                                                        {comment.content}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            {comment.author.id == profile.id &&\r\n                                                <i\r\n                                                    className=\"far fa-trash-alt trash-icon text-secondary\"\r\n                                                    style={{ margin: '20px 20px 0 0' }}\r\n                                                    onClick={e => deleteComment(e, comment.id)}\r\n                                                />\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"post-actions\">\r\n                                            <p className=\"text-secondary\">\r\n                                                {comment.likes.map(like => like.profile.id).includes(profile.id) ?\r\n                                                    <i class=\"fas fa-heart\"\r\n                                                        data-commentid={comment.id}\r\n                                                        onClick={likeUnlikeComment}\r\n                                                    />\r\n                                                    :\r\n                                                    <i class=\"far fa-heart\"\r\n                                                        data-commentid={comment.id}\r\n                                                        onClick={likeUnlikeComment}\r\n                                                    />\r\n                                                }\r\n                                                <p\r\n                                                    className=\"post-likes-number\"\r\n                                                    onClick={() => setPostLikesModal({ isOpen: true, likes: comment.likes })}\r\n                                                >\r\n                                                    {comment.likes.length}\r\n                                                </p>\r\n                                            </p>\r\n                                        </div>\r\n                                    </li>\r\n                                )\r\n                            })\r\n                            }\r\n                        </div>\r\n                    </> :\r\n                    <div className=\"posts-loader-container\" >\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Header from '../components/fixed/header'\r\nimport { SERVER_URL } from '../settings'\r\nimport { csrftoken } from '../utils'\r\n\r\nexport default class Posts extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            profile: null,\r\n            postContent: '',\r\n            postFormImagePreview: null\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ profile: data }))\r\n    }\r\n\r\n\r\n    handlePostContentChange = e => {\r\n        this.setState({ postContent: e.target.value })\r\n        const el = document.querySelector('#post-form-submit-btn')\r\n        el.disabled = e.target.value.trim() === '' && !this.state.postFormImagePreview\r\n    }\r\n\r\n    handlePostImageChange = e => {\r\n        const reader = new FileReader()\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                this.setState({ postFormImagePreview: reader.result })\r\n                document.querySelector('#post-img-container').style.display = 'initial'\r\n                document.querySelector('#post-form-submit-btn').disabled = false\r\n            }\r\n        }\r\n        try {\r\n            reader.readAsDataURL(e.target.files[0])\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n    handleCloseImage = () => {\r\n        document.querySelector('#post-img-container').style.display = 'none'\r\n        document.querySelector('#post-image').value = ''\r\n        if (this.state.postContent.trim() === '') document.querySelector('#post-form-submit-btn').disabled = true\r\n        this.setState({ postFormImagePreview: null })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content\">\r\n                <Header page=\"Novo post\" backArrow={true} />\r\n                <div className=\"post-form-page-container\">\r\n                    {this.state.profile ?\r\n                        <form\r\n                            action={`${SERVER_URL}/post-api/create-post`}\r\n                            method=\"POST\"\r\n                            className=\"create-post-form-mobile\"\r\n                            encType=\"multipart/form-data\"\r\n                        >\r\n                            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n                            <div className=\"d-flex\">\r\n                                <Link to=\"/perfil\">\r\n                                    <img\r\n                                        src={`${SERVER_URL}${this.state.profile.photo}`}\r\n                                        className=\"profile-img-med\"\r\n                                    />\r\n                                </Link>\r\n                                <textarea\r\n                                    className=\"post-content-textarea\"\r\n                                    name=\"post-content\"\r\n                                    value={this.state.postContent}\r\n                                    placeholder=\"No que você está pensando?\"\r\n                                    maxLength={300}\r\n                                    autoFocus\r\n                                    onChange={this.handlePostContentChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"w-100 d-flex justify-content-center\">\r\n                                <div\r\n                                    className=\"post-img-container\"\r\n                                    id=\"post-img-container\">\r\n                                    <div\r\n                                        className=\"post-img-options\"\r\n                                    >\r\n                                        <i\r\n                                            className=\"far fa-times-circle\"\r\n                                            onClick={this.handleCloseImage}\r\n                                        />\r\n                                    </div>\r\n                                    <img\r\n                                        src={this.state.postFormImagePreview}\r\n                                        className=\"post-img post-form-img-preview\"\r\n                                        id=\"post-form-img-preview\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"d-flex justify-content-between\" style={{ margin: '0px 70px 0 70px' }}>\r\n                                <div className=\"post-extra-options\">\r\n                                    <label htmlFor=\"post-image\" class=\"far fa-image\" />\r\n                                    <input\r\n                                        type=\"file\"\r\n                                        accept=\"image/png, image/jpg, image/jpeg\"\r\n                                        name=\"post-image\"\r\n                                        id=\"post-image\"\r\n                                        style={{ display: 'none' }}\r\n                                        onChange={this.handlePostImageChange}\r\n                                    />\r\n                                </div>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\"\r\n                                    id=\"post-form-submit-btn\"\r\n                                    style={{ height: '40px' }}\r\n                                    disabled\r\n                                >\r\n                                    Postar\r\n                            </button>\r\n                            </div>\r\n                        </form>\r\n                        :\r\n                        <div className=\"posts-loader-container\" >\r\n                            <div className=\"loader\" />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\nimport Sidebar from './components/fixed/Sidebar'\r\nimport BottomMenu from './components/fixed/BottomMenu'\r\nimport Home from './pages/Home'\r\nimport Notifications from './pages/Notifications'\r\nimport Messages from './pages/messages_page/Messages'\r\nimport MyProfile from './pages/MyProfile'\r\nimport Settings from './pages/settings_page/SettingsMenu'\r\nimport Profile from './pages/home-components/Profile'\r\nimport ProfileFriends from './pages/profile-components/Friends'\r\nimport InterestProfiles from './pages/profile-components/InterestProfiles'\r\nimport EditInterests from './pages/profile-components/edit-interests/EditInterests'\r\nimport Post from './pages/home-components/Post'\r\n\r\nimport PostFormPage from './pages/PostFormPage'\r\n\r\nimport { SERVER_URL } from './settings'\r\n\r\nexport default function App() {\r\n    const [invitesReceivedNumber, setInvitesReceived] = useState(0)\r\n    const [unvisualizedLikesNumber, setUnvisulaizedLikes] = useState(0)\r\n    const [unvisualizedCommentsNumber, setUnvisulaizedComments] = useState(0)\r\n    let notificationsNumber = invitesReceivedNumber + unvisualizedLikesNumber + unvisualizedCommentsNumber\r\n    const [unreadMessagesNumber, setUnreadMessagesNumber] = useState(0)\r\n\r\n    useEffect(() => {\r\n        updateNotificationsNumber()\r\n        updateUnreadMessagesNumber()\r\n        window.setInterval(() => {\r\n            updateNotificationsNumber()\r\n            updateUnreadMessagesNumber()\r\n        }, 6000)\r\n    }, [])\r\n\r\n    const updateNotificationsNumber = () => {\r\n        fetch(`${SERVER_URL}/profile-api/myinvites`)\r\n            .then(response => response.json())\r\n            .then(data => setInvitesReceived(data.length))\r\n        fetch(`${SERVER_URL}/post-api/unvisualized-post-likes`)\r\n            .then(response => response.json())\r\n            .then(data => setUnvisulaizedLikes(data.length))\r\n        fetch(`${SERVER_URL}/post-api/unvisualized-post-comments`)\r\n            .then(response => response.json())\r\n            .then(data => setUnvisulaizedComments(data.length))\r\n    }\r\n\r\n    const updateUnreadMessagesNumber = () => {\r\n        fetch(`${SERVER_URL}/chat-api/all-unread-messages-number`)\r\n            .then(response => response.json())\r\n            .then(data => setUnreadMessagesNumber(data['unread_messages_number']))\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <Sidebar notificationsNumber={notificationsNumber} unreadMessagesNumber={unreadMessagesNumber} />\r\n            <div className=\"main-content\">\r\n                <Switch>\r\n                    <Route path=\"/home\" component={Home} />\r\n                    <Route path=\"/notificações\" render={props => (\r\n                        <Notifications {...props} updateNotificationsNumber={updateNotificationsNumber} />\r\n                    )} />\r\n                    <Route path=\"/mensagens\" exact component={Messages} />\r\n                    <Route path=\"/mensagens/:slug\" render={props => (\r\n                        <Messages {...props} updateUnreadMessagesNumber={updateUnreadMessagesNumber} />\r\n                    )} />\r\n                    <Route path=\"/perfil\" exact component={MyProfile} />\r\n                    <Route path=\"/perfil/meus-interesses\" component={EditInterests} />\r\n                    <Route path=\"/configurações\" exact component={Settings} />\r\n                    <Route path=\"/configurações/perfis-bloqueados\" exact render={props => (\r\n                        <Settings {...props} page={'blocked-profiles'} />\r\n                    )} />\r\n                    <Route path=\"/configurações/alterar-senha\" exact render={props => (\r\n                        <Settings {...props} page={'change-password'} />\r\n                    )} />\r\n                    <Route path=\"/configurações/deletar-conta\" exact render={props => (\r\n                        <Settings {...props} page={'delete-account'} />\r\n                    )} />\r\n                    <Route path=\"/user/:slug\" exact render={props => (\r\n                        <Profile {...props} updateNotificationsNumber={updateNotificationsNumber} />\r\n                    )} />\r\n                    <Route path=\"/user/:slug/amigos\" component={ProfileFriends} />\r\n                    <Route path=\"/post/:id\" exact component={Post} />\r\n                    <Route path=\"/post/:id/comentar\" render={props => (\r\n                        <Post {...props} commentModalIsOpen={true} />\r\n                    )} />\r\n                    <Route path=\"/interesses/:interest\" component={InterestProfiles} />\r\n\r\n                    <Route path=\"/postar\" component={PostFormPage} />\r\n                </Switch>\r\n                <BottomMenu notificationsNumber={notificationsNumber} unreadMessagesNumber={unreadMessagesNumber} />\r\n            </div>\r\n        </Router>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './assets/bottomMenu.css'\r\nimport './assets/chat.css'\r\nimport './assets/commentModal.css'\r\nimport './assets/notifications.css'\r\nimport './assets/posts.css'\r\nimport './assets/profile.css'\r\nimport './assets/profiles.css'\r\nimport './assets/settings.css'\r\nimport './assets/sidebar.css'\r\nimport './assets/style.css'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'))\r\n"],"sourceRoot":""}