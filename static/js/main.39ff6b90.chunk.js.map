{"version":3,"sources":["components/sidebar.js","settings.js","utils.js","pages/home-components/posts.js","pages/home-components/profiles.js","components/header.js","pages/home.js","pages/notifications.js","pages/messages/websocket.js","pages/messages/chat.js","pages/messages/messages.js","pages/profile-components/posts.js","pages/profile-components/interests.js","pages/myprofile.js","pages/settings.js","pages/home-components/profile.js","pages/profile-components/friends.js","App.js","index.js"],"names":["Sidebar","props","className","to","style","textDecoration","notificationsNumber","unreadMessagesNumber","SERVER_URL","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","handleLogout","window","confirm","location","replace","Posts","useState","posts","setPosts","postContent","setPostContent","useEffect","fetch","then","response","json","data","type","placeholder","marginRight","width","value","onChange","e","target","marginBottom","borderRadius","onClick","method","headers","body","JSON","stringify","content","console","log","map","post","key","id","author","slug","src","photo","color","height","first_name","last_name","user","username","created","reverse","join","textAlign","image","class","comments","likes","Profiles","profiles","setProfiles","filteredProfiles","setFilteredProfiles","search","setSearch","handleRelationshipUpdate","pk","btn","innerHTML","dataset","cancelFriendRequest","profile","bio","data-pk","Header","backArrow","history","back","page","Home","setPage","pages","title","Notifications","invites","setInvites","replyRequest","requestBody","senderid","reply","updateNotificationsNumber","getElementById","removeChild","sender","justifyContent","data-senderid","data-reply","marginTop","WebSocketService","callbacks","this","socketRef","instance","chatUrl","path","WebSocket","onopen","socketNewMessage","command","onmessage","onerror","message","onclose","connect","close","parsedData","parse","Object","keys","messages","chatId","sendMessage","from","messagesCallback","newMessageCallback","send","err","readyState","WebSocketInstance","getInstance","Chat","messageChangeHandler","event","setState","sendMessageHandler","preventDefault","messageObject","state","newChatMessage","updateMessagesComponent","renderTimestamp","timestamp","ts","Date","getDate","getMonth","getFullYear","getHours","getMinutes","renderMessages","currentUser","read","scrollToBottom","querySelector","chatLog","scrollTop","scrollHeight","handleComponentChange","otherUsername","otherProfile","initialiseChat","waitForSocketConnection","addCallbacks","setMessages","bind","addMessage","fetchMessages","callback","component","setTimeout","newProps","disconnect","chat_id","updateUnreadMessagesNumber","onSubmit","position","right","fontSize","openModal","React","Component","Messages","fetchActiveChatProfiles","activeChats","chats","activeChatsProfiles","addingNewChat","setModalSearch","query","modalProfiles","setContactSearch","filter","p","includes","resetUnreadMessagesCounter","unreadMessagesCounter","incrementUnreadMessagesCounter","setLastChatMessage","lastChatMessage","participants","other_username","match","params","Modal","show","onHide","size","closeButton","Title","Body","padding","overflow","overflowY","whiteSpace","maxHeight","indexOf","contact","marginLeft","slice","Interests","interests","interest","toUpperCase","MyProfile","setProfile","isEditing","setIsEditing","currentPageIsPosts","setCurrentPageIsPosts","switchPage","querySelectorAll","forEach","el","classList","remove","add","action","accept","files","htmlFor","email","gender","defaultValue","birth_date","Footer","submit","friends","Settings","Profile","sendFriendRequest","removeFromFriends","acceptFriendRequest","relationshipButtonLabel","label","relationship","onmouseenter","onmouseout","Friends","setFriends","useParams","friend","borderRight","App","setNotificationsNumber","setUnreadMessagesNumber","render","exact","ProfileFriends","ReactDOM"],"mappings":"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","file":"static/js/main.39ff6b90.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Sidebar(props) {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n                <h2>Napker</h2>\r\n            </Link>\r\n            <ul>\r\n                <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-home\"/>Home</li>\r\n                </Link>\r\n                <Link to=\"/notificações\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-bell\"/>Notificações{!props.notificationsNumber ? '' : <p className=\"notifications-number\">{props.notificationsNumber}</p>}</li>\r\n                </Link>\r\n                <Link to=\"/mensagens\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-envelope\"/>Mensagens{!props.unreadMessagesNumber ? '' : <p className=\"notifications-number\">{props.unreadMessagesNumber}</p>}</li>\r\n                </Link>\r\n                <Link to=\"/perfil\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-user\"/>Perfil</li>\r\n                </Link>\r\n                <Link to=\"/configurações\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-cog\"/>Configurações</li>\r\n                </Link>\r\n            </ul>\r\n        </div>\r\n    )\r\n}","const SERVER_URL = 'http://127.0.0.1:8000'\r\nconst SOCKET_URL = 'ws://127.0.0.1:8000'\r\n\r\nexport {SERVER_URL, SOCKET_URL}","import { SERVER_URL } from './settings'\r\n\r\nconst csrftoken = getCookie('csrftoken')\r\n\r\nfunction getCookie(name) {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nfunction handleLogout() {\r\n  const bool = window.confirm('Sair do Napker?\\nVocê poderá entrar novamente quando quiser.')\r\n  if (bool) {\r\n    window.location.replace(`${SERVER_URL}/logout`)\r\n  }\r\n}\r\n\r\nexport { csrftoken, handleLogout };","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nexport default function Posts() {\r\n    const [posts, setPosts] = useState(null)\r\n    const [postContent, setPostContent] = useState('')\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/post-api/post-list`)\r\n            .then(response => response.json())\r\n            .then(data => setPosts(data))\r\n    }, [])\r\n\r\n    const createPost = () => {\r\n        fetch(`${SERVER_URL}/post-api/create-post`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({ content: postContent })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                setPostContent('')\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"form-row d-inline-block\">\r\n                <div className=\"col d-flex\">\r\n                    <input type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"O que está acontecendo?\"\r\n                        style={{ marginRight: '5px', width: '400px' }}\r\n                        value={postContent}\r\n                        onChange={e => setPostContent(e.target.value)}\r\n                    />\r\n                    <button className=\"btn btn-primary\" style={{ marginBottom: '20px', borderRadius: '5px' }} onClick={createPost}>Postar</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"post-list\">\r\n                {posts && posts.map(post => {\r\n                    return (\r\n                        <li className=\"post-container\" key={post.id}>\r\n                            <div className=\"post-row\">\r\n                                <div className=\"post-col\">\r\n                                    <Link to={`/user/${post.author.slug}`}>\r\n                                        <img src={`${SERVER_URL}${post.author.photo}`}\r\n                                            className=\"profile-img-med\"\r\n                                        />\r\n                                    </Link>\r\n                                </div>\r\n                                <div className=\"post-col\">\r\n                                    <Link to={`/user/${post.author.slug}`} style={{ color: '#000' }}>\r\n                                        <div style={{ height: '30px' }}>\r\n                                            <strong>{post.author.first_name} {post.author.last_name} </strong>\r\n                                            <p className=\"text-secondary d-inline-block\">\r\n                                                @{post.author.user.username} • {post.created.split('-').reverse().join('/')}\r\n                                            </p>\r\n                                        </div>\r\n                                    </Link>\r\n                                    <div style={{ textAlign: 'start' }}>\r\n                                        {post.content}\r\n                                    </div>\r\n                                    {post.image &&\r\n                                        <img src={`${SERVER_URL}${post.image}`} className=\"post-img\" />\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"post-actions\">\r\n                                <p className=\"text-secondary\">\r\n                                    <i class=\"far fa-comment\" />{post.comments.length}\r\n                                    <i class=\"fas fa-retweet\" />0\r\n                                    <i class=\"far fa-heart\" />{post.likes.length}\r\n                                </p>\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nexport default function Profiles(props) {\r\n    const [profiles, setProfiles] = useState([])\r\n    const [filteredProfiles, setFilteredProfiles] = useState(null)\r\n    const [search, setSearch] = useState('')\r\n\r\n    useEffect(() => {\r\n        console.log('fetching profiles...')\r\n        fetch(`${SERVER_URL}/profile-api/profile-list`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setFilteredProfiles(null)\r\n                setProfiles(data)\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (search === '') {\r\n            setFilteredProfiles(null)\r\n            return\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/users/${search}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setFilteredProfiles(data)\r\n            })\r\n    }, [search])\r\n\r\n    const sendFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/send-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    const cancelFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/cancel-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    const handleRelationshipUpdate = e => {\r\n        const btn = e.target\r\n        if (btn.innerHTML === 'Solicitar') {\r\n            sendFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitado'\r\n            btn.className = 'btn btn-primary'\r\n        } else {\r\n            cancelFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitar'\r\n            btn.className = 'btn btn-secondary'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"form-row d-inline-block\">\r\n                <div className=\"col\">\r\n                    <input type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Pesquisar\"\r\n                        style={{ width: '400px' }}\r\n                        value={search}\r\n                        onChange={e => setSearch(e.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"list-group\">\r\n                {filteredProfiles ? filteredProfiles.map(profile => {\r\n                    return (\r\n                        <Link to={`/user/${profile.slug}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                            <li className=\"list-group-item profile-row filtered-profile\" key={profile.id}>\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                    <div className=\"profile-col\">\r\n                                        <img src={`${SERVER_URL}${profile.photo}`}\r\n                                            className=\"profile-img-med\"\r\n                                            style={{ marginRight: '10px' }}\r\n                                        />\r\n                                        <div className=\"main-profile-data\">\r\n                                            <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                            <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"profile-col\">\r\n                                        {profile.bio}\r\n                                    </div>\r\n                                    <div className=\"profile-col\">\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        </Link>\r\n                    )\r\n                }) : profiles && profiles.map(profile => {\r\n                    return (\r\n                        <li className=\"list-group-item profile-row\" key={profile.id}>\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                <div className=\"profile-col\">\r\n                                    <Link to={`/user/${profile.slug}`}>\r\n                                        <img src={`${SERVER_URL}${profile.photo}`}\r\n                                            className=\"profile-img-med\"\r\n                                            style={{ marginRight: '10px' }}\r\n                                        />\r\n                                    </Link>\r\n                                    <div className=\"main-profile-data\">\r\n                                        <Link to={`/user/${profile.slug}`} style={{ color: '#000' }}>\r\n                                            <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                        </Link>\r\n                                        <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"profile-col\">\r\n                                    {profile.bio}\r\n                                </div>\r\n                                <div className=\"profile-col\">\r\n                                    <button className=\"btn btn-secondary\" data-pk={profile.user.id} onClick={handleRelationshipUpdate}>\r\n                                        Solicitar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { handleLogout } from '../utils'\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <div className=\"header fixed-top\">\r\n            {!props.backArrow ? '' : <i class=\"fas fa-arrow-left left-arrow-icon\" onClick={() => window.history.back()}/>}\r\n            <strong>{props.page}</strong>\r\n            <a className=\"logout\" onClick={handleLogout}>Sair</a>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport Posts from './home-components/posts'\r\nimport Profiles from './home-components/profiles'\r\nimport Header from '../components/header'\r\n\r\nexport default function Home(props) {\r\n    const [page, setPage] = useState('Perfis')\r\n    const pages = {\r\n        'Perfis': <Profiles />,\r\n        'Posts': <Posts />\r\n    }\r\n\r\n    document.title = 'Home / Napker'\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Home\" />\r\n            <div className=\"content\">\r\n                <button type=\"button\" className=\"btn btn-primary\" style={{ marginRight: '50px', borderRadius: '20px' }} onClick={() => setPage(page === 'Perfis' ? 'Posts' : 'Perfis')}>\r\n                    {page === 'Perfis' ? 'Ver posts' : 'Ver perfis'}\r\n                </button>\r\n                {pages[page]}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Header from '../components/header'\r\nimport { SERVER_URL } from '../settings'\r\nimport { csrftoken } from '../utils'\r\n\r\nexport default function Notifications(props) {\r\n    const [invites, setInvites] = useState([])\r\n\r\n    document.title = 'Notificações / Napker'\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myinvites`)\r\n            .then(response => response.json())\r\n            .then(data => setInvites(data))\r\n    }, [])\r\n\r\n    const replyRequest = e => {\r\n        const btn = e.target\r\n        const requestBody = {\r\n            'senderid': btn.dataset.senderid,\r\n            'reply': btn.dataset.reply\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/reply-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(requestBody)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                props.updateNotificationsNumber()\r\n            })\r\n        document.getElementById('friend-request-list').removeChild(document.getElementById(btn.dataset.senderid))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Notificações\" />\r\n            <div className=\"content\">\r\n                <div className=\"list-group\" id='friend-request-list'>\r\n                    {invites.length ? invites.map(i => {\r\n                        return (\r\n                            <li className=\"list-group-item profile-row\" id={i.sender.id} key={i.sender.id}>\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                    <div className=\"profile-col\">\r\n                                        <Link to={`/user/${i.sender.slug}`}>\r\n                                            <img src={`${SERVER_URL}${i.sender.photo}`}\r\n                                                className=\"profile-img-med\"\r\n                                                style={{ marginRight: '10px' }}\r\n                                            />\r\n                                        </Link>\r\n                                        <div className=\"main-profile-data\">\r\n                                            <Link to={`/user/${i.sender.slug}`} style={{ color: '#000' }}>\r\n                                                <strong>{i.sender.first_name} {i.sender.last_name}</strong>\r\n                                            </Link>\r\n                                            <p className=\"text-secondary\">@{i.sender.user.username}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"profile-col\">\r\n                                        {i.sender.bio}\r\n                                    </div>\r\n                                    <div className=\"profile-col\" style={{ justifyContent: 'space-between' }}>\r\n                                        <button className=\"btn btn-primary btn-reply-fr\" data-senderid={i.sender.id} data-reply='accept' onClick={replyRequest}>Confirmar</button>\r\n                                        <button className=\"btn btn-grey btn-reply-fr\" data-senderid={i.sender.id} data-reply='decline' onClick={replyRequest}>Excluir</button>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    }) : <h3 style={{ marginTop: '100px' }}>Você não tem nenhuma notificação</h3>}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import { SOCKET_URL } from '../../settings'\r\n\r\nclass WebSocketService {\r\n    static instance = null;\r\n    callbacks = {};\r\n  \r\n    static getInstance() {\r\n      if (!WebSocketService.instance) {\r\n        WebSocketService.instance = new WebSocketService();\r\n      }\r\n      return WebSocketService.instance;\r\n    }\r\n  \r\n    constructor() {\r\n      this.socketRef = null;\r\n    }\r\n  \r\n    connect(chatUrl) {\r\n      const path = `${SOCKET_URL}/ws/chat/${chatUrl}/`;\r\n      this.socketRef = new WebSocket(path);\r\n      this.socketRef.onopen = () => {\r\n        console.log(\"WebSocket open\");\r\n      };\r\n      this.socketNewMessage(JSON.stringify({\r\n        command: 'fetch-messages'\r\n      }))\r\n      this.socketRef.onmessage = e => {\r\n        this.socketNewMessage(e.data);\r\n      };\r\n      this.socketRef.onerror = e => {\r\n        console.log(e.message);\r\n      };\r\n      this.socketRef.onclose = () => {\r\n        console.log(\"WebSocket closed let's reopen\");\r\n        this.connect(chatUrl);\r\n      };\r\n    }\r\n  \r\n    disconnect() {\r\n      if (this.socketRef) this.socketRef.close();\r\n    }\r\n  \r\n    socketNewMessage(data) {\r\n      const parsedData = JSON.parse(data);\r\n      const command = parsedData.command;\r\n      if (Object.keys(this.callbacks).length === 0) {\r\n        return;\r\n      }\r\n      if (command === \"messages\") {\r\n        this.callbacks[command](parsedData.messages);\r\n      }\r\n      if (command === \"new_message\") {\r\n        this.callbacks[command](parsedData.message);\r\n      }\r\n    }\r\n  \r\n    fetchMessages(username, chatId) {\r\n      this.sendMessage({\r\n        command: \"fetch_messages\",\r\n        username: username,\r\n        chatId: chatId\r\n      });\r\n    }\r\n  \r\n    newChatMessage(message) {\r\n      this.sendMessage({\r\n        command: \"new_message\",\r\n        from: message.from,\r\n        content: message.content,\r\n        chatId: message.chatId\r\n      });\r\n    }\r\n  \r\n    addCallbacks(messagesCallback, newMessageCallback) {\r\n      this.callbacks[\"messages\"] = messagesCallback;\r\n      this.callbacks[\"new_message\"] = newMessageCallback;\r\n    }\r\n  \r\n    sendMessage(data) {\r\n      try {\r\n        this.socketRef.send(JSON.stringify({ ...data }));\r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n    }\r\n  \r\n    state() {\r\n      return this.socketRef ? this.socketRef.readyState : 0\r\n    }\r\n  }\r\n  \r\n  const WebSocketInstance = WebSocketService.getInstance();\r\n  \r\n  export default WebSocketInstance;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { csrftoken } from '../../utils'\r\nimport { SERVER_URL } from '../../settings'\r\nimport WebSocketInstance from './websocket'\r\n\r\nclass Chat extends React.Component {\r\n    initialiseChat() {\r\n        this.waitForSocketConnection(() => {\r\n            WebSocketInstance.addCallbacks(\r\n                this.setMessages.bind(this),\r\n                this.addMessage.bind(this)\r\n            )\r\n            WebSocketInstance.fetchMessages(\r\n                this.props.username,\r\n                this.props.chatId\r\n            );\r\n        });\r\n        if (this.props.chatId) WebSocketInstance.connect(this.props.chatId)\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            message: '',\r\n            messages: [],\r\n            otherUsername: this.props.otherUsername,\r\n            otherProfile: null\r\n        }\r\n        this.initialiseChat();\r\n    }\r\n\r\n    waitForSocketConnection(callback) {\r\n        const component = this;\r\n        setTimeout(function () {\r\n            if (WebSocketInstance.state() === 1) {\r\n                console.log(\"Connection is made\");\r\n                callback();\r\n                return;\r\n            } else {\r\n                console.log(\"wait for connection...\");\r\n                component.waitForSocketConnection(callback);\r\n            }\r\n        }, 100);\r\n    }\r\n\r\n    setMessages(messages) {\r\n        this.setState({ messages: messages.reverse() })\r\n    }\r\n\r\n    addMessage(message) {\r\n        this.setState({ messages: [...this.state.messages, message] })\r\n    }\r\n\r\n    messageChangeHandler = event => {\r\n        this.setState({ message: event.target.value });\r\n    };\r\n\r\n    sendMessageHandler = e => {\r\n        e.preventDefault();\r\n        const messageObject = {\r\n            from: this.props.username,\r\n            content: this.state.message,\r\n            chatId: this.props.chatId\r\n        };\r\n        WebSocketInstance.newChatMessage(messageObject);\r\n        this.setState({ message: \"\" });\r\n        this.props.updateMessagesComponent()\r\n\r\n    };\r\n\r\n    renderTimestamp = timestamp => {\r\n        const ts = new Date(timestamp)\r\n        return `${ts.getDate()}/${ts.getMonth()}/${ts.getFullYear()} - ${ts.getHours()}:${ts.getMinutes()}`\r\n    };\r\n\r\n    renderMessages = messages => {\r\n        const currentUser = this.props.username;\r\n        return messages.map(message => (\r\n            <li\r\n                key={message.id}\r\n                className={message.author === currentUser ? \"sent\" : \"received\"}\r\n            >\r\n                <p>\r\n                    {message.content}\r\n                    <br />\r\n                    <small>\r\n                        {this.renderTimestamp(message.timestamp)} {message.author === currentUser ? message.read ? '✓✓' : '✓' : ''}\r\n                    </small>\r\n                </p>\r\n            </li>\r\n        ));\r\n    };\r\n\r\n    scrollToBottom = () => {\r\n        if (document.querySelector('#chat-log')) {\r\n            const chatLog = document.querySelector('#chat-log')\r\n            chatLog.scrollTop = chatLog.scrollHeight\r\n        }\r\n    };\r\n\r\n    handleComponentChange = () => {\r\n        this.scrollToBottom();\r\n        if (this.state.otherUsername && (!this.state.otherProfile || this.state.otherProfile.user.username !== this.state.otherUsername)) {\r\n            fetch(`${SERVER_URL}/profile-api/user/${this.state.otherUsername}`)\r\n                .then(response => response.json())\r\n                .then(data => this.setState({\r\n                    otherProfile: data\r\n                }))\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (this.props.chatId !== newProps.chatId) {\r\n            WebSocketInstance.disconnect();\r\n            this.waitForSocketConnection(() => {\r\n                WebSocketInstance.fetchMessages(\r\n                    this.props.username,\r\n                    newProps.chatId\r\n                );\r\n            });\r\n            WebSocketInstance.connect(newProps.chatId);\r\n\r\n            this.props.updateMessagesComponent()\r\n        }\r\n        if (this.state.otherUsername != newProps.otherUsername) {\r\n            this.setState({\r\n                otherUsername: newProps.otherUsername\r\n            })\r\n        }\r\n        if (newProps.chatId) {\r\n            fetch(`${SERVER_URL}/chat-api/read-messages`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                },\r\n                body: JSON.stringify({ chat_id: newProps.chatId })\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => console.log(data))\r\n        }\r\n        if (this.props.updateUnreadMessagesNumber) {\r\n            this.props.updateUnreadMessagesNumber()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.otherProfile ?\r\n                    <div className=\"d-flex flex-column justify-content-between align-items-center current-chat\">\r\n                        <div className=\"current-chat-header\">\r\n                            <Link to={`/user/${this.state.otherProfile.slug}`}>\r\n                                <img src={`${SERVER_URL}${this.state.otherProfile.photo}`}\r\n                                    className=\"profile-img-sm\"\r\n                                    style={{ marginRight: '5px' }}\r\n                                />\r\n                            </Link>\r\n                            <div className=\"d-flex flex-column align-items-start\" style={{ height: '52px' }}>\r\n                                <strong>{this.state.otherProfile.first_name} {this.state.otherProfile.last_name}</strong>\r\n                                <p className=\"text-secondary\">@{this.state.otherProfile.user.username}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div id=\"chat-log\">\r\n                            {this.state.messages ? this.renderMessages(this.state.messages) : ''}\r\n                        </div>\r\n                        <form className=\"send-message-container\" onSubmit={this.sendMessageHandler}>\r\n                            <input placeholder=\"Mensagem\" className=\"message-input\" id=\"chat-message-input\" value={this.state.message} onChange={this.messageChangeHandler} />\r\n                            <button className=\"btn btn-primary\" id=\"chat-message-submit\">\r\n                                <i class=\"fas fa-paper-plane\" style={{ position: 'relative', right: '10%' }} />\r\n                            </button>\r\n                        </form>\r\n                    </div> :\r\n                    <div className=\"d-flex flex-column justify-content-center align-items-center current-chat\">\r\n                        <div>\r\n                            <strong style={{ fontSize: 'larger' }}>Você não tem uma conversa selecionada</strong>\r\n                            <p className=\"text-secondary\">Selecione uma existente ou comece uma nova</p>\r\n                            <button className=\"btn btn-primary\" onClick={() => this.props.openModal()}>Nova conversa</button>\r\n                        </div>\r\n                    </div>}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chat","import React from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Header from '../../components/header'\r\nimport Chat from './chat'\r\nimport { SERVER_URL } from '../../settings'\r\n\r\nclass Messages extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: null,\r\n            chatId: null,\r\n            activeChats: null,\r\n            activeChatsProfiles: null,\r\n            addingNewChat: false,\r\n            modalProfiles: [],\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps === this.props) return\r\n        const participants = { username: this.state.username, other_username: newProps.match.params.slug }\r\n        fetch(`${SERVER_URL}/chat-api/chat-id/${JSON.stringify(participants)}`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                chatId: data['chat_id']\r\n            }))\r\n    }\r\n\r\n    handleComponentChange() {\r\n        if (!this.state.username) {\r\n            fetch(`${SERVER_URL}/profile-api/logged-user`)\r\n                .then(response => response.json())\r\n                .then(data => this.setState({\r\n                    username: data.username\r\n                }))\r\n        }\r\n        if (!this.state.activeChatsProfiles && this.state.activeChatsProfiles !== []) {\r\n            this.fetchActiveChatProfiles()\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.title = 'Mensagens / Napker'\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    fetchActiveChatProfiles = () => {\r\n        fetch(`${SERVER_URL}/chat-api/active-chats-profiles`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (!this.state.username) return\r\n                this.setState({\r\n                    activeChats: data.chats.reverse(),\r\n                    activeChatsProfiles: data.profiles.reverse()\r\n                })\r\n            })\r\n    }\r\n\r\n    openModal = () => {\r\n        this.setState({\r\n            addingNewChat: true\r\n        })\r\n    }\r\n\r\n    setModalSearch = query => {\r\n        if (query === '') {\r\n            this.setState({\r\n                modalProfiles: []\r\n            })\r\n            return\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/users/${query}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    modalProfiles: data\r\n                })\r\n            })\r\n    }\r\n\r\n    setContactSearch = query => {\r\n        if (query === '') {\r\n            this.fetchActiveChatProfiles()\r\n            return\r\n        }\r\n        if (this.state.activeChatsProfiles) {\r\n            const filteredProfiles = this.state.activeChatsProfiles.filter(p => p.user.username.includes(query))\r\n            this.setState({\r\n                activeChatsProfiles: filteredProfiles\r\n            })\r\n        }\r\n    }\r\n\r\n    resetUnreadMessagesCounter = () => {\r\n        this.unreadMessagesCounter = 0\r\n    }\r\n\r\n    incrementUnreadMessagesCounter = () => {\r\n        this.unreadMessagesCounter++\r\n    }\r\n\r\n    setLastChatMessage = message => {\r\n        this.lastChatMessage = message\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header page=\"Mensagens\" />\r\n                <div className=\"content d-flex messages-wrapper\">\r\n                    <Modal show={this.state.addingNewChat}\r\n                        onHide={() => this.setState({ addingNewChat: false })}\r\n                        size=\"lg\">\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title><strong>Nova conversa</strong></Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body style={{ padding: '0' }}>\r\n                            <input className=\"modal-search-input\"\r\n                                placeholder=\"Pesquisar pessoas\"\r\n                                onChange={e => this.setModalSearch(e.target.value)}\r\n                            />\r\n                            <div className=\"list-group\" style={{ height: '400px', overflow: 'hidden', overflowY: 'scroll' }}>\r\n                                {this.state.modalProfiles && this.state.modalProfiles.map(profile => {\r\n                                    return (\r\n                                        <Link to={`/mensagens/${profile.slug}`}\r\n                                            style={{ color: '#000', textDecoration: 'none' }}\r\n                                            onClick={() => this.setState({\r\n                                                addingNewChat: false\r\n                                            })}\r\n                                        >\r\n                                            <li className=\"list-group-item profile-row modal-profile-li\" key={profile.id}>\r\n                                                <div className=\"d-flex justify-content-between\">\r\n                                                    <div className=\"profile-col\">\r\n                                                        <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                            className=\"profile-img-med\"\r\n                                                            style={{ marginRight: '10px' }}\r\n                                                        />\r\n                                                        <div className=\"main-profile-data\">\r\n                                                            <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                                            <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"profile-col\">\r\n                                                        {profile.bio}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </li>\r\n                                        </Link>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                    <div className=\"d-flex flex-column chats-list\">\r\n                        <div className=\"search-input-container\">\r\n                            <input placeholder=\"Pesquisar pessoas\" className=\"search-input\" onChange={e => this.setContactSearch(e.target.value)} />\r\n                            <i className=\"fas fa-plus add-icon\" onClick={this.openModal}></i>\r\n                        </div>\r\n                        <div className=\"list-group chats-container\">\r\n                            {this.state.activeChatsProfiles && this.state.activeChatsProfiles.map(profile => {\r\n                                return (\r\n                                    <Link to={`/mensagens/${profile.user.username}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                                        {this.resetUnreadMessagesCounter()}\r\n                                        <li className=\"list-item profile-chat-item\" style={{ whiteSpace: 'nowrap' }}>\r\n                                            <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                className=\"profile-img-med\"\r\n                                                style={{ marginRight: '10px' }}\r\n                                            />\r\n                                            <div className=\"d-flex flex-column align-items-start\">\r\n                                                <div className=\"d-flex\" style={{ maxHeight: '30px' }}>\r\n                                                    <strong style={{ height: 'fit-content' }}>{profile.first_name} {profile.last_name}</strong>\r\n                                                    {this.state.activeChats[this.state.activeChatsProfiles.indexOf(profile)].messages.map(message => {\r\n                                                        const messages = this.state.activeChats[this.state.activeChatsProfiles.indexOf(profile)].messages\r\n                                                        if (messages[messages.length - 1] === message) this.setLastChatMessage(message.content)\r\n                                                        if (message.read || message.contact.user.username !== profile.user.username) return\r\n                                                        this.incrementUnreadMessagesCounter()\r\n                                                    })}\r\n                                                    {this.unreadMessagesCounter ? <p className=\"notifications-number\">{this.unreadMessagesCounter}</p> : ''}\r\n                                                    <p className=\"text-secondary\" style={{ marginLeft: '5px' }}>@{profile.user.username}</p>\r\n                                                </div>\r\n                                                <p className=\"text-secondary\">{this.lastChatMessage.slice(0, 40)}</p>\r\n                                            </div>\r\n                                        </li>\r\n                                    </Link>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <Chat username={this.state.username}\r\n                        otherUsername={this.props.match.params.slug}\r\n                        chatId={this.state.chatId}\r\n                        openModal={this.openModal}\r\n                        updateUnreadMessagesNumber={this.props.updateUnreadMessagesNumber}\r\n                        updateMessagesComponent={this.fetchActiveChatProfiles}\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Messages","import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nimport Header from '../../components/header'\r\nimport { SERVER_URL } from '../../settings'\r\n\r\nexport default function Posts(props) {\r\n    const profile = props.profile\r\n    return (\r\n        <>\r\n            <div className=\"post-list\">\r\n                {profile && profile.posts.length ? profile.posts.map(post => {\r\n                    return (\r\n                        <li className=\"post-container\" key={post.id}>\r\n                            <div className=\"post-row\">\r\n                                <div className=\"post-col\">\r\n                                    <img src={`${SERVER_URL}${profile.photo}`}\r\n                                        className=\"profile-img-med\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"post-col\">\r\n                                    <div style={{ height: '30px' }}>\r\n                                        <strong>{profile.first_name} {profile.last_name} </strong>\r\n                                        <p className=\"text-secondary d-inline-block\">\r\n                                            @{profile.user.username} • {post.created.split('-').reverse().join('/')}\r\n                                        </p>\r\n                                    </div>\r\n                                    <div style={{ textAlign: 'start' }}>\r\n                                        {post.content}\r\n                                    </div>\r\n                                    {post.image &&\r\n                                        <img src={`${SERVER_URL}${post.image}`} className=\"post-img\" />\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"post-actions\">\r\n                                <p className=\"text-secondary\">\r\n                                    <i class=\"far fa-comment\" />{post.comments.length}\r\n                                    <i class=\"fas fa-retweet\" />0\r\n                                    <i class=\"far fa-heart\" />{post.likes.length}\r\n                                </p>\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                }) : <h3 style={{ marginTop: '50px' }}>{profile.first_name} não tem posts</h3>}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Interests(props) {\r\n    const profile = props.profile\r\n\r\n    return (\r\n        <div className=\"interests-page-container\">\r\n            <h3>Interesses públicos de {profile.first_name}</h3>\r\n            <div>\r\n                {profile && profile.interests.map(interest => {\r\n                    return (\r\n                        <>\r\n                            {interest.title &&\r\n                                <>\r\n                                    <hr />\r\n                                    <li className=\"interest-item\">\r\n                                        {interest.title[0].toUpperCase() + interest.title.slice(1)}\r\n                                        <button className=\"btn-secondary\" style={{ padding: '5px' }}>Pesquisar usuários</button>\r\n                                    </li>\r\n                                </>\r\n                            }\r\n                        </>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nimport Header from '../components/header'\r\nimport Posts from './profile-components/posts'\r\nimport Interests from './profile-components/interests'\r\nimport { SERVER_URL } from '../settings'\r\nimport { csrftoken } from '../utils'\r\n\r\nexport default function MyProfile() {\r\n    const [profile, setProfile] = useState(null)\r\n    const [isEditing, setIsEditing] = useState(false)\r\n    const [currentPageIsPosts, setCurrentPageIsPosts] = useState(true)\r\n\r\n    document.title = 'Perfil / Napker'\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setProfile(data))\r\n    }, [])\r\n\r\n    const switchPage = e => {\r\n        document.querySelectorAll('.profile-page-menu-item-active').forEach(el => {\r\n            el.classList.remove('profile-page-menu-item-active')\r\n        })\r\n        e.target.classList.add('profile-page-menu-item-active')\r\n        setCurrentPageIsPosts(!currentPageIsPosts)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Perfil\" />\r\n            {profile ? <div className=\"content\">\r\n                <Modal show={isEditing}\r\n                    onHide={() => setIsEditing(false)}\r\n                    size=\"lg\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Editar perfil</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <form action={`${SERVER_URL}/update-profile`} id=\"update-profile-form\" method=\"POST\">\r\n                            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n                            <div className=\"d-flex flex-column justify-content-center align-items-center\" style={{ padding: '25px' }}>\r\n                                <img src={`${SERVER_URL}${profile.photo}`}\r\n                                    className=\"profile-img-big\"\r\n                                    style={{ marginBottom: '25px' }}\r\n                                />\r\n                                <input type=\"file\" accept=\"image/png, image/jpg\" name=\"profile-photo\" onChange={e => console.log(e.target.files)} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"first-name\" className=\"profile-label\">Nome:</label>\r\n                                <input className=\"form-control\" type=\"text\" name=\"first-name\" id=\"first-name\" placeholder={profile.first_name} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"last-name\" className=\"profile-label\">Sobrenome:</label>\r\n                                <input className=\"form-control\" type=\"text\" name=\"last-name\" id=\"last-name\" placeholder={profile.last_name} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"username\" className=\"profile-label\">Nome de usuário:</label>\r\n                                <input className=\"form-control\" type=\"text\" name=\"username\" id=\"username\" placeholder={profile.user.username} />\r\n                                <span id=\"username-taken\">Nome de usuário já existe</span>\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"email\" className=\"profile-label\">Email:</label>\r\n                                <input className=\"form-control\" type=\"email\" name=\"email\" id=\"email\" placeholder={profile.email} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"gender\" className=\"profile-label\">Gênero:</label>\r\n                                <select className=\"form-control\" name=\"gender\" id=\"gender\" placeholder={profile.gender}>\r\n                                    <option value=\"male\">Masculino</option>\r\n                                    <option value=\"female\">Feminino</option>\r\n                                    <option value=\"other\">Outro</option>\r\n                                </select>\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"birth-date\" className=\"profile-label\">Data de nascimento:</label>\r\n                                <input className=\"form-control\" type=\"date\" name=\"birth-date\" id=\"birth-date\" defaultValue={profile.birth_date} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"bio\" className=\"profile-label\">Bio:</label>\r\n                                <input className=\"form-control\" type=\"email\" name=\"bio\" id=\"bio\" placeholder={profile.bio} />\r\n                            </div>\r\n                        </form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <button className=\"btn btn-grey\" onClick={() => setIsEditing(false)}>Fechar</button>\r\n                        <button className=\"btn btn-primary\" onClick={() => document.querySelector('form#update-profile-form').submit()}>Salvar</button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <div className=\"profile-data-container\">\r\n                    <div className=\"d-flex flex-column align-items-start\">\r\n                        <p style={{ padding: '15px' }}>\r\n                            <img src={`${SERVER_URL}${profile.photo}`}\r\n                                className=\"profile-img-big\"\r\n                                style={{ marginBottom: '25px' }}\r\n                            />\r\n                        </p>\r\n                        <p style={{ marginBottom: 0 }}><strong>{profile.first_name} {profile.last_name}</strong></p>\r\n                        <p className=\"text-secondary\" style={{ marginTop: 0 }}>@{profile.user.username}</p>\r\n                        <p>{profile.bio}</p>\r\n                        <p className=\"text-secondary\">\r\n                            <i className=\"far fa-calendar-alt\"></i> Entrou em {profile.created.split('-').reverse().join('/')}\r\n                        </p>\r\n                        <p>\r\n                            <Link to={`/user/${profile.slug}/amigos`} style={{ color: '#000' }}>\r\n                                <strong>{profile.friends.length}</strong> {profile.friends.length === 1 ? 'amigo' : 'amigos'}\r\n                            </Link>\r\n                        </p>\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"btn btn-secondary\" type=\"button\" onClick={() => setIsEditing(true)}>Editar perfil</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"profile-page-menu\">\r\n                    <div className=\"profile-page-menu-item profile-page-menu-item-active\" onClick={switchPage}>\r\n                        Posts ({profile.posts.length})\r\n                    </div>\r\n                    <div className=\"profile-page-menu-item\" onClick={switchPage}>\r\n                        Interesses ({profile.interests.length})\r\n                    </div>\r\n                </div>\r\n                {currentPageIsPosts ?\r\n                    <Posts profile={profile} /> :\r\n                    <Interests profile={profile} />\r\n                }\r\n            </div > : ''}\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport Header from '../components/header'\r\n\r\nexport default function Settings() {\r\n\r\n    document.title = 'Configurações / Napker'\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Configurações\" />\r\n            <div className=\"content\">\r\n                Configurações\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Header from '../../components/header'\r\nimport Posts from '../profile-components/posts'\r\nimport Interests from '../profile-components/interests'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            profile: null,\r\n            relationshipButtonLabel: '',\r\n            currentPageIsPosts: true,\r\n        }\r\n        this.slug = this.props.match.params.slug\r\n    }\r\n\r\n    componentWillMount() {\r\n        fetch(`${SERVER_URL}/profile-api/user/${this.slug}`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                profile: data\r\n            }))\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${SERVER_URL}/profile-api/relationship/${this.slug}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                let label\r\n                switch (data.relationship) {\r\n                    case 'friends':\r\n                        label = 'Amigos'\r\n                        break\r\n                    case 'invite-sent':\r\n                        label = 'Solicitado'\r\n                        break\r\n                    case 'invite-received':\r\n                        label = 'Aceitar'\r\n                        break\r\n                    case 'none':\r\n                        label = 'Solicitar'\r\n                }\r\n                this.setState({\r\n                    relationshipButtonLabel: label\r\n                })\r\n            })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        let btn = document.querySelector('#profile-page-relationship-btn')\r\n        if (btn) {\r\n            switch (btn.innerHTML) {\r\n                case 'Amigos':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.onmouseenter = () => {\r\n                        btn.innerHTML = 'Remover'\r\n                    }\r\n                    btn.onmouseout = () => {\r\n                        btn.innerHTML = 'Amigos'\r\n                    }\r\n                    btn.classList.add('friend-btn')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Solicitado':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Aceitar':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Solicitar':\r\n                    btn.classList.add('btn-secondary')\r\n                    btn.classList.remove('d-none')\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    sendFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/send-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    cancelFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/cancel-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    removeFromFriends = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/remove-from-friends`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    acceptFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/reply-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({\r\n                'senderid': pk,\r\n                'reply': 'accept'\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                this.props.updateNotificationsNumber()\r\n            })\r\n    }\r\n\r\n    handleRelationshipUpdate = e => {\r\n        const btn = e.target\r\n        if (btn.innerHTML === 'Solicitar') {\r\n            this.sendFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitado'\r\n            btn.className = 'btn btn-primary'\r\n        } else if (btn.innerHTML === 'Solicitado') {\r\n            this.cancelFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitar'\r\n            btn.className = 'btn btn-secondary'\r\n        } else if (btn.innerHTML === 'Amigos' || btn.innerHTML === 'Remover') {\r\n            if (window.confirm(`Remover @${this.state.profile.user.username} dos amigos?`)) {\r\n                this.removeFromFriends(btn.dataset.pk)\r\n                btn.innerHTML = 'Solicitar'\r\n                btn.className = 'btn btn-secondary'\r\n            }\r\n        } else if (btn.innerHTML === 'Aceitar') {\r\n            this.acceptFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Amigos'\r\n            btn.className = 'btn btn-primary'\r\n        }\r\n    }\r\n\r\n    switchPage = e => {\r\n        document.querySelectorAll('.profile-page-menu-item-active').forEach(el => {\r\n            el.classList.remove('profile-page-menu-item-active')\r\n        })\r\n        e.target.classList.add('profile-page-menu-item-active')\r\n        this.setState({\r\n            currentPageIsPosts: !this.state.currentPageIsPosts\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header page={this.state.profile ? `${this.state.profile.first_name} ${this.state.profile.last_name}` : 'Perfil'}\r\n                    backArrow={true}\r\n                />\r\n                {!this.state.profile ? <></> :\r\n                    <div className=\"content\">\r\n                        <div className=\"d-flex justify-content-between align-items-center profile-data-container\">\r\n                            <div className=\"d-flex flex-column align-items-start\">\r\n                                <p style={{ padding: '15px' }}>\r\n                                    <img src={`${SERVER_URL}${this.state.profile.photo}`}\r\n                                        className=\"profile-img-big\"\r\n                                        style={{ marginBottom: '25px' }}\r\n                                    />\r\n                                </p>\r\n                                <p style={{ marginBottom: 0 }}><strong>{this.state.profile.first_name} {this.state.profile.last_name}</strong></p>\r\n                                <p className=\"text-secondary\" style={{ marginTop: 0 }}>@{this.state.profile.user.username}</p>\r\n                                <p>{this.state.profile.bio}</p>\r\n                                <p className=\"text-secondary\">\r\n                                    <i className=\"far fa-calendar-alt\"></i> Entrou em {this.state.profile.created.split('-').reverse().join('/')}\r\n                                </p>\r\n                                <p>\r\n                                    <Link to={`/user/${this.state.profile.slug}/amigos`} style={{ color: '#000' }}>\r\n                                        <strong>{this.state.profile.friends.length}</strong> {this.state.profile.friends.length === 1 ? 'amigo' : 'amigos'}\r\n                                    </Link>\r\n                                </p>\r\n                            </div>\r\n                            <div>\r\n                                <button className=\"btn d-none\"\r\n                                    id=\"profile-page-relationship-btn\"\r\n                                    data-pk={this.state.profile.user.id}\r\n                                    onClick={this.handleRelationshipUpdate}\r\n                                >{this.state.relationshipButtonLabel}</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"profile-page-menu\">\r\n                            <div className=\"profile-page-menu-item profile-page-menu-item-active\" onClick={this.switchPage}>\r\n                                Posts ({this.state.profile.posts.length})\r\n                            </div>\r\n                            <div className=\"profile-page-menu-item\" onClick={this.switchPage}>\r\n                                Interesses ({this.state.profile.interests.length})\r\n                            </div>\r\n                        </div>\r\n                        {this.state.currentPageIsPosts ?\r\n                            <Posts profile={this.state.profile} /> :\r\n                            <Interests profile={this.state.profile} />\r\n                        }\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile","import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nimport Header from '../../components/header'\r\nimport { SERVER_URL } from '../../settings'\r\n\r\nexport default function Friends() {\r\n    const [friends, setFriends] = useState([])\r\n    const [profile, setProfile] = useState(null)\r\n    const { slug } = useParams()\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/user/${slug}`)\r\n            .then(response => response.json())\r\n            .then(data => setProfile(data))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (profile) {\r\n            fetch(`${SERVER_URL}/profile-api/get-friends-profiles/${profile.slug}`)\r\n                .then(response => response.json())\r\n                .then(data => setFriends(data))\r\n        }\r\n    }, [profile])\r\n\r\n    return (\r\n        <>\r\n            <Header page={profile ? `${profile.first_name} ${profile.last_name} / Amigos` : 'Perfil / Amigos'}\r\n                backArrow={true}\r\n            />\r\n            <div className=\"content\">\r\n                <div className=\"lidt-group\">\r\n                    {friends && friends.map(friend => {\r\n                        return (\r\n                            <Link to={`/user/${friend.slug}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                                <li className=\"list-group-item profile-row filtered-profile\" key={friend.id}>\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <div className=\"profile-col\">\r\n                                            <img src={`${SERVER_URL}${friend.photo}`}\r\n                                                className=\"profile-img-med\"\r\n                                                style={{ borderRight: '10px' }}\r\n                                            />\r\n                                            <div className=\"main-profile-data\">\r\n                                                <strong>{friend.first_name} {friend.last_name}</strong>\r\n                                                <p className=\"text-secondary\">@{friend.user.username}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"profile-col\">\r\n                                            {friend.bio}\r\n                                        </div>\r\n                                        <div className=\"profile-col\">\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            </Link>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\nimport Sidebar from './components/sidebar'\r\nimport Home from './pages/home'\r\nimport Notifications from './pages/notifications'\r\nimport Messages from './pages/messages/messages'\r\nimport MyProfile from './pages/myprofile'\r\nimport Settings from './pages/settings'\r\nimport Profile from './pages/home-components/profile'\r\nimport ProfileFriends from './pages/profile-components/friends'\r\n\r\nimport { SERVER_URL } from './settings'\r\n\r\nexport default function App() {\r\n    const [notificationsNumber, setNotificationsNumber] = useState(0)\r\n    const [unreadMessagesNumber, setUnreadMessagesNumber] = useState(0)\r\n\r\n    useEffect(() => {\r\n        updateNotificationsNumber()\r\n        updateUnreadMessagesNumber()\r\n    }, [])\r\n\r\n    const updateNotificationsNumber = () => {\r\n        fetch(`${SERVER_URL}/profile-api/myinvites`)\r\n            .then(response => response.json())\r\n            .then(data => setNotificationsNumber(data.length))\r\n    }\r\n\r\n    const updateUnreadMessagesNumber = () => {\r\n        fetch(`${SERVER_URL}/chat-api/all-unread-messages-number`)\r\n            .then(response => response.json())\r\n            .then(data => setUnreadMessagesNumber(data['unread_messages_number']))\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <Sidebar notificationsNumber={notificationsNumber} unreadMessagesNumber={unreadMessagesNumber} />\r\n            <div className=\"main-content\">\r\n                <Switch>\r\n                    <Route path=\"/notificações\" render={props => (\r\n                        <Notifications {...props} updateNotificationsNumber={updateNotificationsNumber} />\r\n                    )} />\r\n                    <Route path=\"/mensagens\" exact component={Messages} />\r\n                    <Route path=\"/mensagens/:slug\" render={props => (\r\n                        <Messages {...props} updateUnreadMessagesNumber={updateUnreadMessagesNumber} />\r\n                    )} />\r\n                    <Route path=\"/perfil\" component={MyProfile} />\r\n                    <Route path=\"/configurações\" component={Settings} />\r\n                    <Route path=\"/user/:slug\" exact render={props => (\r\n                        <Profile {...props} updateNotificationsNumber={updateNotificationsNumber} />\r\n                    )} />\r\n                    <Route path=\"/user/:slug/amigos\" component={ProfileFriends} />\r\n                    <Route path=\"/\" component={Home} />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/style.css'\nimport './assets/profile.css'\nimport './assets/chat.css'\n\nimport App from './App'\n\nReactDOM.render(<App />, document.querySelector('#root'))\n"],"sourceRoot":""}