{"version":3,"sources":["components/sidebar.js","settings.js","utils.js","pages/home-components/posts.js","pages/home-components/profiles.js","components/header.js","pages/home.js","pages/notifications.js","pages/messages/websocket.js","pages/messages/chat.js","pages/messages/messages.js","pages/profile-components/posts.js","pages/profile-components/interests.js","pages/myprofile.js","pages/settings.js","pages/home-components/profile.js","pages/profile-components/friends.js","pages/home-components/post.js","App.js","index.js"],"names":["Sidebar","props","className","to","style","textDecoration","notificationsNumber","unreadMessagesNumber","SERVER_URL","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","handleLogout","window","confirm","location","replace","Posts","fetchPosts","fetch","then","response","json","data","setState","posts","createPost","method","headers","body","JSON","stringify","content","state","postContent","console","log","likeUnlikePost","e","likeBtn","target","classList","contains","remove","add","dataset","postid","profile","likesModal","isOpen","likes","this","Modal","show","onHide","size","Header","closeButton","Title","Body","height","overflow","overflowY","map","like","slug","color","onClick","key","id","src","photo","marginRight","first_name","last_name","user","username","bio","type","placeholder","width","value","onChange","marginBottom","borderRadius","post","author","created","reverse","join","textAlign","image","class","comments","includes","data-postid","React","Component","Profiles","useState","profiles","setProfiles","filteredProfiles","setFilteredProfiles","search","setSearch","useEffect","handleRelationshipUpdate","pk","btn","innerHTML","cancelFriendRequest","data-pk","backArrow","history","back","page","Home","setPage","pages","title","Notifications","invites","setInvites","setLikes","updateNotificationsNumber","replyRequest","requestBody","senderid","reply","getElementById","removeChild","sender","justifyContent","data-senderid","data-reply","fontSize","marginTop","WebSocketService","callbacks","socketRef","instance","chatUrl","path","WebSocket","onopen","socketNewMessage","command","onmessage","onerror","message","onclose","connect","close","parsedData","parse","Object","keys","messages","chatId","sendMessage","from","messagesCallback","newMessageCallback","send","err","readyState","WebSocketInstance","getInstance","Chat","messageChangeHandler","event","sendMessageHandler","preventDefault","messageObject","newChatMessage","updateMessagesComponent","renderTimestamp","timestamp","ts","Date","getDate","getMonth","getFullYear","getHours","getMinutes","renderMessages","currentUser","read","scrollToBottom","querySelector","chatLog","scrollTop","scrollHeight","handleComponentChange","otherUsername","otherProfile","initialiseChat","waitForSocketConnection","addCallbacks","setMessages","bind","addMessage","fetchMessages","callback","component","setTimeout","newProps","disconnect","chat_id","updateUnreadMessagesNumber","onSubmit","position","right","openModal","Messages","fetchActiveChatProfiles","activeChats","chats","activeChatsProfiles","addingNewChat","setModalSearch","query","modalProfiles","setContactSearch","filter","p","resetUnreadMessagesCounter","unreadMessagesCounter","incrementUnreadMessagesCounter","setLastChatMessage","lastChatMessage","participants","other_username","match","params","padding","whiteSpace","maxHeight","indexOf","contact","marginLeft","slice","fetchProfile","Interests","interests","interest","toUpperCase","MyProfile","setProfile","isEditing","setIsEditing","currentPageIsPosts","setCurrentPageIsPosts","switchPage","querySelectorAll","forEach","el","action","accept","files","htmlFor","email","gender","defaultValue","birth_date","Footer","submit","friends","Settings","Profile","sendFriendRequest","removeFromFriends","acceptFriendRequest","relationshipButtonLabel","label","relationship","onmouseenter","onmouseout","Friends","setFriends","useParams","friend","Post","setPost","fetchPost","likeUnlikeComment","commentid","comment","data-commentid","App","invitesReceivedNumber","setInvitesReceived","unvisualizedLikes","setUnvisulaizedLikes","setUnreadMessagesNumber","render","exact","ProfileFriends","ReactDOM"],"mappings":"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","file":"static/js/main.baa252ba.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Sidebar(props) {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n                <h2>Napker</h2>\r\n            </Link>\r\n            <ul>\r\n                <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-home\"/>Home</li>\r\n                </Link>\r\n                <Link to=\"/notificações\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-bell\"/>Notificações{!props.notificationsNumber ? '' : <p className=\"notifications-number\">{props.notificationsNumber}</p>}</li>\r\n                </Link>\r\n                <Link to=\"/mensagens\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-envelope\"/>Mensagens{!props.unreadMessagesNumber ? '' : <p className=\"notifications-number\">{props.unreadMessagesNumber}</p>}</li>\r\n                </Link>\r\n                <Link to=\"/perfil\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-user\"/>Perfil</li>\r\n                </Link>\r\n                <Link to=\"/configurações\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-cog\"/>Configurações</li>\r\n                </Link>\r\n            </ul>\r\n        </div>\r\n    )\r\n}","const SERVER_URL = 'http://127.0.0.1:8000'\r\nconst SOCKET_URL = 'ws://127.0.0.1:8000'\r\n\r\nexport {SERVER_URL, SOCKET_URL}","import { SERVER_URL } from './settings'\r\n\r\nconst csrftoken = getCookie('csrftoken')\r\n\r\nfunction getCookie(name) {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nfunction handleLogout() {\r\n  const bool = window.confirm('Sair do Napker?\\nVocê poderá entrar novamente quando quiser.')\r\n  if (bool) {\r\n    window.location.replace(`${SERVER_URL}/logout`)\r\n  }\r\n}\r\n\r\nexport { csrftoken, handleLogout };","import React from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nexport default class Posts extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            profile: null,\r\n            posts: null,\r\n            postContent: '',\r\n            likesModal: {\r\n                isOpen: false,\r\n                likes: null\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ profile: data }))\r\n        this.fetchPosts()\r\n    }\r\n\r\n    fetchPosts = () => {\r\n        fetch(`${SERVER_URL}/post-api/post-list`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ posts: data }))\r\n    }\r\n\r\n    createPost = () => {\r\n        fetch(`${SERVER_URL}/post-api/create-post`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({ content: this.state.postContent })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                this.setState({ postContent: '' })\r\n            })\r\n    }\r\n\r\n    likeUnlikePost = e => {\r\n        const likeBtn = e.target\r\n        if (likeBtn.classList.contains('fas')) {\r\n            likeBtn.classList.remove('fas') //border heart\r\n            likeBtn.classList.add('far')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/unlike-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    this.fetchPosts()\r\n                })\r\n        } else {\r\n            likeBtn.classList.remove('far') //border heart\r\n            likeBtn.classList.add('fas')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/like-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    this.fetchPosts()\r\n                })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Modal show={this.state.likesModal.isOpen}\r\n                    onHide={() => this.setState({ likesModal: { isOpen: false, likes: null } })}\r\n                    size=\"lg\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title><strong>Likes</strong></Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"list-group\" style={{ height: '400px', overflow: 'hidden', overflowY: 'scroll' }}>\r\n                            {this.state.likesModal.likes &&\r\n                                this.state.likesModal.likes.map(like => like.profile).map(profile => {\r\n                                    return (\r\n                                        <Link to={`/user/${profile.slug}`}\r\n                                            style={{ color: '#000', textDecoration: 'none' }}\r\n                                            onClick={() => this.setState({ likesModal: { isOpen: false, likes: null } })}\r\n                                        >\r\n                                            <li className=\"list-group-item profile-row modal-profile-li\" key={profile.id}>\r\n                                                <div className=\"d-flex justify-content-between\">\r\n                                                    <div className=\"profile-col\">\r\n                                                        <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                            className=\"profile-img-med\"\r\n                                                            style={{ marginRight: '10px' }}\r\n                                                        />\r\n                                                        <div className=\"main-profile-data\">\r\n                                                            <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                                            <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"profile-col\">\r\n                                                        {profile.bio}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </li>\r\n                                        </Link>\r\n                                    )\r\n                                })}\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n                <div className=\"form-row d-inline-block\">\r\n                    <div className=\"col d-flex\">\r\n                        <input type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"O que está acontecendo?\"\r\n                            style={{ marginRight: '5px', width: '400px' }}\r\n                            value={this.state.postContent}\r\n                            onChange={e => this.setState({ postContent: e.target.value })}\r\n                        />\r\n                        <button className=\"btn btn-primary\" style={{ marginBottom: '20px', borderRadius: '5px' }} onClick={this.createPost}>Postar</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"post-list\">\r\n                    {this.state.posts && this.state.profile && this.state.posts.map(post => {\r\n                        return (\r\n                            <li className=\"post-container\" key={post.id}>\r\n                                <div className=\"post-row\">\r\n                                    <div className=\"post-col\">\r\n                                        <Link to={`/user/${post.author.slug}`}>\r\n                                            <img src={`${SERVER_URL}${post.author.photo}`}\r\n                                                className=\"profile-img-med\"\r\n                                            />\r\n                                        </Link>\r\n                                    </div>\r\n                                    <div className=\"post-col\">\r\n                                        <Link to={`/user/${post.author.slug}`} style={{ color: '#000' }}>\r\n                                            <div style={{ height: '30px' }}>\r\n                                                <strong>{post.author.first_name} {post.author.last_name} </strong>\r\n                                                <p className=\"text-secondary d-inline-block\">\r\n                                                    @{post.author.user.username} • {post.created.split('-').reverse().join('/')}\r\n                                                </p>\r\n                                            </div>\r\n                                        </Link>\r\n                                        <Link to={`/post/${post.id}`} style={{ color:'#000' }}>\r\n                                            <div style={{ textAlign: 'start' }}>\r\n                                                {post.content}\r\n                                            </div>\r\n                                            {post.image &&\r\n                                                <img src={`${SERVER_URL}${post.image}`} className=\"post-img\" />\r\n                                            }\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"post-actions\">\r\n                                    <p className=\"text-secondary\">\r\n                                        <i class=\"far fa-comment\" />{post.comments.length}\r\n                                        {post.likes.map(like => like.profile.id).includes(this.state.profile.id) ?\r\n                                            <i class=\"fas fa-heart\"\r\n                                                data-postid={post.id}\r\n                                                onClick={this.likeUnlikePost}\r\n                                            />\r\n                                            :\r\n                                            <i class=\"far fa-heart\"\r\n                                                data-postid={post.id}\r\n                                                onClick={this.likeUnlikePost}\r\n                                            />}\r\n                                        <p className=\"post-likes-number\"\r\n                                            onClick={() => this.setState({ likesModal: { isOpen: true, likes: post.likes } })}\r\n                                        >\r\n                                            {post.likes.length}\r\n                                        </p>\r\n                                    </p>\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nexport default function Profiles(props) {\r\n    const [profiles, setProfiles] = useState([])\r\n    const [filteredProfiles, setFilteredProfiles] = useState(null)\r\n    const [search, setSearch] = useState('')\r\n\r\n    useEffect(() => {\r\n        console.log('fetching profiles...')\r\n        fetch(`${SERVER_URL}/profile-api/profile-list`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setFilteredProfiles(null)\r\n                setProfiles(data)\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (search === '') {\r\n            setFilteredProfiles(null)\r\n            return\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/users/${search}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setFilteredProfiles(data)\r\n            })\r\n    }, [search])\r\n\r\n    const sendFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/send-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    const cancelFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/cancel-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    const handleRelationshipUpdate = e => {\r\n        const btn = e.target\r\n        if (btn.innerHTML === 'Solicitar') {\r\n            sendFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitado'\r\n            btn.className = 'btn btn-primary'\r\n        } else {\r\n            cancelFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitar'\r\n            btn.className = 'btn btn-secondary'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"form-row d-inline-block\">\r\n                <div className=\"col\">\r\n                    <input type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Pesquisar\"\r\n                        style={{ width: '400px' }}\r\n                        value={search}\r\n                        onChange={e => setSearch(e.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"list-group\">\r\n                {filteredProfiles ? filteredProfiles.map(profile => {\r\n                    return (\r\n                        <Link to={`/user/${profile.slug}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                            <li className=\"list-group-item profile-row filtered-profile\" key={profile.id}>\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                    <div className=\"profile-col\">\r\n                                        <img src={`${SERVER_URL}${profile.photo}`}\r\n                                            className=\"profile-img-med\"\r\n                                            style={{ marginRight: '10px' }}\r\n                                        />\r\n                                        <div className=\"main-profile-data\">\r\n                                            <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                            <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"profile-col\">\r\n                                        {profile.bio}\r\n                                    </div>\r\n                                    <div className=\"profile-col\">\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        </Link>\r\n                    )\r\n                }) : profiles && profiles.map(profile => {\r\n                    return (\r\n                        <li className=\"list-group-item profile-row\" key={profile.id}>\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                <div className=\"profile-col\">\r\n                                    <Link to={`/user/${profile.slug}`}>\r\n                                        <img src={`${SERVER_URL}${profile.photo}`}\r\n                                            className=\"profile-img-med\"\r\n                                            style={{ marginRight: '10px' }}\r\n                                        />\r\n                                    </Link>\r\n                                    <div className=\"main-profile-data\">\r\n                                        <Link to={`/user/${profile.slug}`} style={{ color: '#000' }}>\r\n                                            <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                        </Link>\r\n                                        <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"profile-col\">\r\n                                    {profile.bio}\r\n                                </div>\r\n                                <div className=\"profile-col\">\r\n                                    <button className=\"btn btn-secondary\" data-pk={profile.user.id} onClick={handleRelationshipUpdate}>\r\n                                        Solicitar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { handleLogout } from '../utils'\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <div className=\"header fixed-top\">\r\n            {!props.backArrow ? '' : <i class=\"fas fa-arrow-left left-arrow-icon\" onClick={() => window.history.back()}/>}\r\n            <strong>{props.page}</strong>\r\n            <a className=\"logout\" onClick={handleLogout}>Sair</a>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport Posts from './home-components/posts'\r\nimport Profiles from './home-components/profiles'\r\nimport Header from '../components/header'\r\n\r\nexport default function Home(props) {\r\n    const [page, setPage] = useState('Posts')\r\n    const pages = {\r\n        'Perfis': <Profiles />,\r\n        'Posts': <Posts />\r\n    }\r\n\r\n    document.title = 'Home / Napker'\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Home\" />\r\n            <div className=\"content\">\r\n                <button type=\"button\" className=\"btn btn-primary\" style={{ marginRight: '50px', borderRadius: '20px' }} onClick={() => setPage(page === 'Perfis' ? 'Posts' : 'Perfis')}>\r\n                    {page === 'Perfis' ? 'Ver posts' : 'Ver perfis'}\r\n                </button>\r\n                {pages[page]}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Header from '../components/header'\r\nimport { SERVER_URL } from '../settings'\r\nimport { csrftoken } from '../utils'\r\n\r\nexport default function Notifications(props) {\r\n    const [invites, setInvites] = useState([])\r\n    const [likes, setLikes] = useState([])\r\n    let notificationsNumber = invites.length + likes.length\r\n\r\n    document.title = 'Notificações / Napker'\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myinvites`)\r\n            .then(response => response.json())\r\n            .then(data => setInvites(data))\r\n        fetch(`${SERVER_URL}/post-api/unvisualized-likes`)\r\n            .then(response => response.json())\r\n            .then(data => setLikes(data))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (likes.length) {\r\n            fetch(`${SERVER_URL}/post-api/visualize-likes`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.updateNotificationsNumber()\r\n                })\r\n        }\r\n    }, [likes])\r\n\r\n    const replyRequest = e => {\r\n        const btn = e.target\r\n        const requestBody = {\r\n            'senderid': btn.dataset.senderid,\r\n            'reply': btn.dataset.reply\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/reply-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(requestBody)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                props.updateNotificationsNumber()\r\n            })\r\n        document.getElementById('friend-request-list').removeChild(document.getElementById(btn.dataset.senderid))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Notificações\" />\r\n            <div className=\"content\">\r\n                <div className=\"list-group\" id='friend-request-list'>\r\n                    {!!invites.length &&\r\n                        <>\r\n                            <h4>Solicitações de amizade</h4>\r\n                            {invites.map(i => {\r\n                                return (\r\n                                    <li className=\"list-group-item profile-row\" id={i.sender.id} key={i.sender.id}>\r\n                                        <div className=\"d-flex justify-content-between\">\r\n                                            <div className=\"profile-col\">\r\n                                                <Link to={`/user/${i.sender.slug}`}>\r\n                                                    <img src={`${SERVER_URL}${i.sender.photo}`}\r\n                                                        className=\"profile-img-med\"\r\n                                                        style={{ marginRight: '10px' }}\r\n                                                    />\r\n                                                </Link>\r\n                                                <div className=\"main-profile-data\">\r\n                                                    <Link to={`/user/${i.sender.slug}`} style={{ color: '#000' }}>\r\n                                                        <strong>{i.sender.first_name} {i.sender.last_name}</strong>\r\n                                                    </Link>\r\n                                                    <p className=\"text-secondary\">@{i.sender.user.username}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"profile-col\">\r\n                                                {i.sender.bio}\r\n                                            </div>\r\n                                            <div className=\"profile-col\" style={{ justifyContent: 'space-between' }}>\r\n                                                <button className=\"btn btn-primary btn-reply-fr\" data-senderid={i.sender.id} data-reply='accept' onClick={replyRequest}>Confirmar</button>\r\n                                                <button className=\"btn btn-grey btn-reply-fr\" data-senderid={i.sender.id} data-reply='decline' onClick={replyRequest}>Excluir</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                        </>\r\n                    }\r\n\r\n                    <br />\r\n\r\n                    {!!likes.length &&\r\n                        <>\r\n                            <h4>Curtidas</h4>\r\n                            {likes.map(like => {\r\n                                return (\r\n                                    <li className=\"list-group-item profile-row\" key={like.profile.id}>\r\n                                        <div className=\"d-flex justify-content-between\">\r\n                                            <div className=\"profile-col\">\r\n                                                <Link to={`/user/${like.profile.slug}`}>\r\n                                                    <img src={`${SERVER_URL}${like.profile.photo}`}\r\n                                                        className=\"profile-img-med\"\r\n                                                        style={{ marginRight: '10px' }}\r\n                                                    />\r\n                                                </Link>\r\n                                            </div>\r\n                                            <div className=\"profile-col\" style={{ fontSize: 'larger' }}>\r\n                                                <p>\r\n                                                    <Link to={`/user/${like.profile.slug}`} style={{ color: \"#000\" }}>\r\n                                                        @{like.profile.user.username}\r\n                                                    </Link> curtiu o seu post.\r\n                                                </p>\r\n                                            </div>\r\n                                            <div className=\"profile-col\" style={{ justifyContent: 'center' }}>\r\n                                                <Link to={`/post/${like.post.id}`}>\r\n                                                    <button className=\"btn btn-primary\">Ver post</button>\r\n                                                </Link>\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                        </>\r\n                    }\r\n\r\n                    <br />\r\n\r\n                </div>\r\n                {!notificationsNumber &&\r\n                    <h3 style={{ marginTop: '100px' }}>Você não tem nenhuma notificação</h3>}\r\n            </div>\r\n        </>\r\n    )\r\n}","import { SOCKET_URL } from '../../settings'\r\n\r\nclass WebSocketService {\r\n    static instance = null;\r\n    callbacks = {};\r\n  \r\n    static getInstance() {\r\n      if (!WebSocketService.instance) {\r\n        WebSocketService.instance = new WebSocketService();\r\n      }\r\n      return WebSocketService.instance;\r\n    }\r\n  \r\n    constructor() {\r\n      this.socketRef = null;\r\n    }\r\n  \r\n    connect(chatUrl) {\r\n      const path = `${SOCKET_URL}/ws/chat/${chatUrl}/`;\r\n      this.socketRef = new WebSocket(path);\r\n      this.socketRef.onopen = () => {\r\n        console.log(\"WebSocket open\");\r\n      };\r\n      this.socketNewMessage(JSON.stringify({\r\n        command: 'fetch-messages'\r\n      }))\r\n      this.socketRef.onmessage = e => {\r\n        this.socketNewMessage(e.data);\r\n      };\r\n      this.socketRef.onerror = e => {\r\n        console.log(e.message);\r\n      };\r\n      this.socketRef.onclose = () => {\r\n        console.log(\"WebSocket closed let's reopen\");\r\n        this.connect(chatUrl);\r\n      };\r\n    }\r\n  \r\n    disconnect() {\r\n      if (this.socketRef) this.socketRef.close();\r\n    }\r\n  \r\n    socketNewMessage(data) {\r\n      const parsedData = JSON.parse(data);\r\n      const command = parsedData.command;\r\n      if (Object.keys(this.callbacks).length === 0) {\r\n        return;\r\n      }\r\n      if (command === \"messages\") {\r\n        this.callbacks[command](parsedData.messages);\r\n      }\r\n      if (command === \"new_message\") {\r\n        this.callbacks[command](parsedData.message);\r\n      }\r\n    }\r\n  \r\n    fetchMessages(username, chatId) {\r\n      this.sendMessage({\r\n        command: \"fetch_messages\",\r\n        username: username,\r\n        chatId: chatId\r\n      });\r\n    }\r\n  \r\n    newChatMessage(message) {\r\n      this.sendMessage({\r\n        command: \"new_message\",\r\n        from: message.from,\r\n        content: message.content,\r\n        chatId: message.chatId\r\n      });\r\n    }\r\n  \r\n    addCallbacks(messagesCallback, newMessageCallback) {\r\n      this.callbacks[\"messages\"] = messagesCallback;\r\n      this.callbacks[\"new_message\"] = newMessageCallback;\r\n    }\r\n  \r\n    sendMessage(data) {\r\n      try {\r\n        this.socketRef.send(JSON.stringify({ ...data }));\r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n    }\r\n  \r\n    state() {\r\n      return this.socketRef ? this.socketRef.readyState : 0\r\n    }\r\n  }\r\n  \r\n  const WebSocketInstance = WebSocketService.getInstance();\r\n  \r\n  export default WebSocketInstance;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { csrftoken } from '../../utils'\r\nimport { SERVER_URL } from '../../settings'\r\nimport WebSocketInstance from './websocket'\r\n\r\nclass Chat extends React.Component {\r\n    initialiseChat() {\r\n        this.waitForSocketConnection(() => {\r\n            WebSocketInstance.addCallbacks(\r\n                this.setMessages.bind(this),\r\n                this.addMessage.bind(this)\r\n            )\r\n            WebSocketInstance.fetchMessages(\r\n                this.props.username,\r\n                this.props.chatId\r\n            );\r\n        });\r\n        if (this.props.chatId) WebSocketInstance.connect(this.props.chatId)\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            message: '',\r\n            messages: [],\r\n            otherUsername: this.props.otherUsername,\r\n            otherProfile: null\r\n        }\r\n        this.initialiseChat();\r\n    }\r\n\r\n    waitForSocketConnection(callback) {\r\n        const component = this;\r\n        setTimeout(function () {\r\n            if (WebSocketInstance.state() === 1) {\r\n                console.log(\"Connection is made\");\r\n                callback();\r\n                return;\r\n            } else {\r\n                console.log(\"wait for connection...\");\r\n                component.waitForSocketConnection(callback);\r\n            }\r\n        }, 100);\r\n    }\r\n\r\n    setMessages(messages) {\r\n        this.setState({ messages: messages.reverse() })\r\n    }\r\n\r\n    addMessage(message) {\r\n        this.setState({ messages: [...this.state.messages, message] })\r\n    }\r\n\r\n    messageChangeHandler = event => {\r\n        this.setState({ message: event.target.value });\r\n    };\r\n\r\n    sendMessageHandler = e => {\r\n        e.preventDefault();\r\n        const messageObject = {\r\n            from: this.props.username,\r\n            content: this.state.message,\r\n            chatId: this.props.chatId\r\n        };\r\n        WebSocketInstance.newChatMessage(messageObject);\r\n        this.setState({ message: \"\" });\r\n        this.props.updateMessagesComponent()\r\n\r\n    };\r\n\r\n    renderTimestamp = timestamp => {\r\n        const ts = new Date(timestamp)\r\n        return `${ts.getDate()}/${ts.getMonth()}/${ts.getFullYear()} - ${ts.getHours()}:${ts.getMinutes()}`\r\n    };\r\n\r\n    renderMessages = messages => {\r\n        const currentUser = this.props.username;\r\n        return messages.map(message => (\r\n            <li\r\n                key={message.id}\r\n                className={message.author === currentUser ? \"sent\" : \"received\"}\r\n            >\r\n                <p>\r\n                    {message.content}\r\n                    <br />\r\n                    <small>\r\n                        {this.renderTimestamp(message.timestamp)} {message.author === currentUser ? message.read ? '✓✓' : '✓' : ''}\r\n                    </small>\r\n                </p>\r\n            </li>\r\n        ));\r\n    };\r\n\r\n    scrollToBottom = () => {\r\n        if (document.querySelector('#chat-log')) {\r\n            const chatLog = document.querySelector('#chat-log')\r\n            chatLog.scrollTop = chatLog.scrollHeight\r\n        }\r\n    };\r\n\r\n    handleComponentChange = () => {\r\n        this.scrollToBottom();\r\n        if (this.state.otherUsername && (!this.state.otherProfile || this.state.otherProfile.user.username !== this.state.otherUsername)) {\r\n            fetch(`${SERVER_URL}/profile-api/user/${this.state.otherUsername}`)\r\n                .then(response => response.json())\r\n                .then(data => this.setState({\r\n                    otherProfile: data\r\n                }))\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (this.props.chatId !== newProps.chatId) {\r\n            WebSocketInstance.disconnect();\r\n            this.waitForSocketConnection(() => {\r\n                WebSocketInstance.fetchMessages(\r\n                    this.props.username,\r\n                    newProps.chatId\r\n                );\r\n            });\r\n            WebSocketInstance.connect(newProps.chatId);\r\n\r\n            this.props.updateMessagesComponent()\r\n        }\r\n        if (this.state.otherUsername != newProps.otherUsername) {\r\n            this.setState({\r\n                otherUsername: newProps.otherUsername\r\n            })\r\n        }\r\n        if (newProps.chatId) {\r\n            fetch(`${SERVER_URL}/chat-api/read-messages`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                },\r\n                body: JSON.stringify({ chat_id: newProps.chatId })\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => console.log(data))\r\n        }\r\n        if (this.props.updateUnreadMessagesNumber) {\r\n            this.props.updateUnreadMessagesNumber()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.otherProfile ?\r\n                    <div className=\"d-flex flex-column justify-content-between align-items-center current-chat\">\r\n                        <div className=\"current-chat-header\">\r\n                            <Link to={`/user/${this.state.otherProfile.slug}`}>\r\n                                <img src={`${SERVER_URL}${this.state.otherProfile.photo}`}\r\n                                    className=\"profile-img-sm\"\r\n                                    style={{ marginRight: '5px' }}\r\n                                />\r\n                            </Link>\r\n                            <div className=\"d-flex flex-column align-items-start\" style={{ height: '52px' }}>\r\n                                <strong>{this.state.otherProfile.first_name} {this.state.otherProfile.last_name}</strong>\r\n                                <p className=\"text-secondary\">@{this.state.otherProfile.user.username}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div id=\"chat-log\">\r\n                            {this.state.messages ? this.renderMessages(this.state.messages) : ''}\r\n                        </div>\r\n                        <form className=\"send-message-container\" onSubmit={this.sendMessageHandler}>\r\n                            <input placeholder=\"Mensagem\" className=\"message-input\" id=\"chat-message-input\" value={this.state.message} onChange={this.messageChangeHandler} />\r\n                            <button className=\"btn btn-primary\" id=\"chat-message-submit\">\r\n                                <i class=\"fas fa-paper-plane\" style={{ position: 'relative', right: '10%' }} />\r\n                            </button>\r\n                        </form>\r\n                    </div> :\r\n                    <div className=\"d-flex flex-column justify-content-center align-items-center current-chat\">\r\n                        <div>\r\n                            <strong style={{ fontSize: 'larger' }}>Você não tem uma conversa selecionada</strong>\r\n                            <p className=\"text-secondary\">Selecione uma existente ou comece uma nova</p>\r\n                            <button className=\"btn btn-primary\" onClick={() => this.props.openModal()}>Nova conversa</button>\r\n                        </div>\r\n                    </div>}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chat","import React from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Header from '../../components/header'\r\nimport Chat from './chat'\r\nimport { SERVER_URL } from '../../settings'\r\n\r\nclass Messages extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: null,\r\n            chatId: null,\r\n            activeChats: null,\r\n            activeChatsProfiles: null,\r\n            addingNewChat: false,\r\n            modalProfiles: [],\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps === this.props) return\r\n        const participants = { username: this.state.username, other_username: newProps.match.params.slug }\r\n        fetch(`${SERVER_URL}/chat-api/chat-id/${JSON.stringify(participants)}`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                chatId: data['chat_id']\r\n            }))\r\n    }\r\n\r\n    handleComponentChange() {\r\n        if (!this.state.username) {\r\n            fetch(`${SERVER_URL}/profile-api/logged-user`)\r\n                .then(response => response.json())\r\n                .then(data => this.setState({\r\n                    username: data.username\r\n                }))\r\n        }\r\n        if (!this.state.activeChatsProfiles && this.state.activeChatsProfiles !== []) {\r\n            this.fetchActiveChatProfiles()\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.title = 'Mensagens / Napker'\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    fetchActiveChatProfiles = () => {\r\n        fetch(`${SERVER_URL}/chat-api/active-chats-profiles`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (!this.state.username) return\r\n                this.setState({\r\n                    activeChats: data.chats.reverse(),\r\n                    activeChatsProfiles: data.profiles.reverse()\r\n                })\r\n            })\r\n    }\r\n\r\n    openModal = () => {\r\n        this.setState({\r\n            addingNewChat: true\r\n        })\r\n    }\r\n\r\n    setModalSearch = query => {\r\n        if (query === '') {\r\n            this.setState({\r\n                modalProfiles: []\r\n            })\r\n            return\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/users/${query}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    modalProfiles: data\r\n                })\r\n            })\r\n    }\r\n\r\n    setContactSearch = query => {\r\n        if (query === '') {\r\n            this.fetchActiveChatProfiles()\r\n            return\r\n        }\r\n        if (this.state.activeChatsProfiles) {\r\n            const filteredProfiles = this.state.activeChatsProfiles.filter(p => p.user.username.includes(query))\r\n            this.setState({\r\n                activeChatsProfiles: filteredProfiles\r\n            })\r\n        }\r\n    }\r\n\r\n    resetUnreadMessagesCounter = () => {\r\n        this.unreadMessagesCounter = 0\r\n    }\r\n\r\n    incrementUnreadMessagesCounter = () => {\r\n        this.unreadMessagesCounter++\r\n    }\r\n\r\n    setLastChatMessage = message => {\r\n        this.lastChatMessage = message\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header page=\"Mensagens\" />\r\n                <div className=\"content d-flex messages-wrapper\">\r\n                    <Modal show={this.state.addingNewChat}\r\n                        onHide={() => this.setState({ addingNewChat: false })}\r\n                        size=\"lg\">\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title><strong>Nova conversa</strong></Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body style={{ padding: '0' }}>\r\n                            <input className=\"modal-search-input\"\r\n                                placeholder=\"Pesquisar pessoas\"\r\n                                onChange={e => this.setModalSearch(e.target.value)}\r\n                            />\r\n                            <div className=\"list-group\" style={{ height: '400px', overflow: 'hidden', overflowY: 'scroll' }}>\r\n                                {this.state.modalProfiles && this.state.modalProfiles.map(profile => {\r\n                                    return (\r\n                                        <Link to={`/mensagens/${profile.slug}`}\r\n                                            style={{ color: '#000', textDecoration: 'none' }}\r\n                                            onClick={() => this.setState({\r\n                                                addingNewChat: false\r\n                                            })}\r\n                                        >\r\n                                            <li className=\"list-group-item profile-row modal-profile-li\" key={profile.id}>\r\n                                                <div className=\"d-flex justify-content-between\">\r\n                                                    <div className=\"profile-col\">\r\n                                                        <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                            className=\"profile-img-med\"\r\n                                                            style={{ marginRight: '10px' }}\r\n                                                        />\r\n                                                        <div className=\"main-profile-data\">\r\n                                                            <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                                            <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"profile-col\">\r\n                                                        {profile.bio}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </li>\r\n                                        </Link>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                    <div className=\"d-flex flex-column chats-list\">\r\n                        <div className=\"search-input-container\">\r\n                            <input placeholder=\"Pesquisar pessoas\" className=\"search-input\" onChange={e => this.setContactSearch(e.target.value)} />\r\n                            <i className=\"fas fa-plus add-icon\" onClick={this.openModal}></i>\r\n                        </div>\r\n                        <div className=\"list-group chats-container\">\r\n                            {this.state.activeChatsProfiles && this.state.activeChatsProfiles.map(profile => {\r\n                                return (\r\n                                    <Link to={`/mensagens/${profile.slug}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                                        {this.resetUnreadMessagesCounter()}\r\n                                        <li className=\"list-item profile-chat-item\" style={{ whiteSpace: 'nowrap' }}>\r\n                                            <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                className=\"profile-img-med\"\r\n                                                style={{ marginRight: '10px' }}\r\n                                            />\r\n                                            <div className=\"d-flex flex-column align-items-start\">\r\n                                                <div className=\"d-flex\" style={{ maxHeight: '30px' }}>\r\n                                                    <strong style={{ height: 'fit-content' }}>{profile.first_name} {profile.last_name}</strong>\r\n                                                    {this.state.activeChats[this.state.activeChatsProfiles.indexOf(profile)].messages.map(message => {\r\n                                                        const messages = this.state.activeChats[this.state.activeChatsProfiles.indexOf(profile)].messages\r\n                                                        if (messages[messages.length - 1] === message) this.setLastChatMessage(message.content)\r\n                                                        if (message.read || message.contact.user.username !== profile.user.username) return\r\n                                                        this.incrementUnreadMessagesCounter()\r\n                                                    })}\r\n                                                    {this.unreadMessagesCounter ? <p className=\"notifications-number\">{this.unreadMessagesCounter}</p> : ''}\r\n                                                    <p className=\"text-secondary\" style={{ marginLeft: '5px' }}>@{profile.user.username}</p>\r\n                                                </div>\r\n                                                <p className=\"text-secondary\">{this.lastChatMessage.slice(0, 40)}</p>\r\n                                            </div>\r\n                                        </li>\r\n                                    </Link>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <Chat username={this.state.username}\r\n                        otherUsername={this.props.match.params.slug}\r\n                        chatId={this.state.chatId}\r\n                        openModal={this.openModal}\r\n                        updateUnreadMessagesNumber={this.props.updateUnreadMessagesNumber}\r\n                        updateMessagesComponent={this.fetchActiveChatProfiles}\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Messages","import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nimport Header from '../../components/header'\r\nimport { SERVER_URL } from '../../settings'\r\n\r\nexport default function Posts(props) {\r\n    const profile = props.profile\r\n\r\n    const likeUnlikePost = e => {\r\n        const likeBtn = e.target\r\n        if (likeBtn.classList.contains('fas')) {\r\n            likeBtn.classList.remove('fas') //border heart\r\n            likeBtn.classList.add('far')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/unlike-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.fetchProfile()\r\n                })\r\n        } else {\r\n            likeBtn.classList.remove('far') //border heart\r\n            likeBtn.classList.add('fas')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/like-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.fetchProfile()\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"post-list\">\r\n                {profile && profile.posts.length ? profile.posts.map(post => {\r\n                    return (\r\n                        <li className=\"post-container\" key={post.id}>\r\n                            <div className=\"post-row\">\r\n                                <div className=\"post-col\">\r\n                                    <img src={`${SERVER_URL}${profile.photo}`}\r\n                                        className=\"profile-img-med\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"post-col\">\r\n                                    <div style={{ height: '30px' }}>\r\n                                        <strong>{profile.first_name} {profile.last_name} </strong>\r\n                                        <p className=\"text-secondary d-inline-block\">\r\n                                            @{profile.user.username} • {post.created.split('-').reverse().join('/')}\r\n                                        </p>\r\n                                    </div>\r\n                                    <div style={{ textAlign: 'start' }}>\r\n                                        {post.content}\r\n                                    </div>\r\n                                    {post.image &&\r\n                                        <img src={`${SERVER_URL}${post.image}`} className=\"post-img\" />\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"post-actions\">\r\n                                <p className=\"text-secondary\">\r\n                                    <i class=\"far fa-comment\" />{post.comments.length}\r\n                                    {post.likes.map(like => like.profile.id).includes(profile.id) ?\r\n                                        <i class=\"fas fa-heart\"\r\n                                            data-postid={post.id}\r\n                                            onClick={likeUnlikePost}\r\n                                        />\r\n                                        :\r\n                                        <i class=\"far fa-heart\"\r\n                                            data-postid={post.id}\r\n                                            onClick={likeUnlikePost}\r\n                                        />}{post.likes.length}\r\n                                </p>\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                }) : <h3 style={{ marginTop: '50px' }}>{profile.first_name} não tem posts</h3>}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Interests(props) {\r\n    const profile = props.profile\r\n\r\n    return (\r\n        <div className=\"interests-page-container\">\r\n            <h3>Interesses públicos de {profile.first_name}</h3>\r\n            <div>\r\n                {profile && profile.interests.map(interest => {\r\n                    return (\r\n                        <>\r\n                            {interest.title &&\r\n                                <>\r\n                                    <hr />\r\n                                    <li className=\"interest-item\">\r\n                                        {interest.title[0].toUpperCase() + interest.title.slice(1)}\r\n                                        <button className=\"btn-secondary\" style={{ padding: '5px' }}>Pesquisar usuários</button>\r\n                                    </li>\r\n                                </>\r\n                            }\r\n                        </>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nimport Header from '../components/header'\r\nimport Posts from './profile-components/posts'\r\nimport Interests from './profile-components/interests'\r\nimport { SERVER_URL } from '../settings'\r\nimport { csrftoken } from '../utils'\r\n\r\nexport default function MyProfile() {\r\n    const [profile, setProfile] = useState(null)\r\n    const [isEditing, setIsEditing] = useState(false)\r\n    const [currentPageIsPosts, setCurrentPageIsPosts] = useState(true)\r\n\r\n    document.title = 'Perfil / Napker'\r\n\r\n    useEffect(() => {\r\n        fetchProfile()\r\n    }, [])\r\n\r\n    const fetchProfile = () => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setProfile(data))\r\n    }\r\n\r\n    const switchPage = e => {\r\n        document.querySelectorAll('.profile-page-menu-item-active').forEach(el => {\r\n            el.classList.remove('profile-page-menu-item-active')\r\n        })\r\n        e.target.classList.add('profile-page-menu-item-active')\r\n        setCurrentPageIsPosts(!currentPageIsPosts)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Perfil\" />\r\n            {profile ? <div className=\"content\">\r\n                <Modal show={isEditing}\r\n                    onHide={() => setIsEditing(false)}\r\n                    size=\"lg\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Editar perfil</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <form action={`${SERVER_URL}/update-profile`} id=\"update-profile-form\" method=\"POST\">\r\n                            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n                            <div className=\"d-flex flex-column justify-content-center align-items-center\" style={{ padding: '25px' }}>\r\n                                <img src={`${SERVER_URL}${profile.photo}`}\r\n                                    className=\"profile-img-big\"\r\n                                    style={{ marginBottom: '25px' }}\r\n                                />\r\n                                <input type=\"file\" accept=\"image/png, image/jpg\" name=\"profile-photo\" onChange={e => console.log(e.target.files)} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"first-name\" className=\"profile-label\">Nome:</label>\r\n                                <input className=\"form-control\" type=\"text\" name=\"first-name\" id=\"first-name\" placeholder={profile.first_name} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"last-name\" className=\"profile-label\">Sobrenome:</label>\r\n                                <input className=\"form-control\" type=\"text\" name=\"last-name\" id=\"last-name\" placeholder={profile.last_name} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"username\" className=\"profile-label\">Nome de usuário:</label>\r\n                                <input className=\"form-control\" type=\"text\" name=\"username\" id=\"username\" placeholder={profile.user.username} />\r\n                                <span id=\"username-taken\">Nome de usuário já existe</span>\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"email\" className=\"profile-label\">Email:</label>\r\n                                <input className=\"form-control\" type=\"email\" name=\"email\" id=\"email\" placeholder={profile.email} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"gender\" className=\"profile-label\">Gênero:</label>\r\n                                <select className=\"form-control\" name=\"gender\" id=\"gender\" placeholder={profile.gender}>\r\n                                    <option value=\"male\">Masculino</option>\r\n                                    <option value=\"female\">Feminino</option>\r\n                                    <option value=\"other\">Outro</option>\r\n                                </select>\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"birth-date\" className=\"profile-label\">Data de nascimento:</label>\r\n                                <input className=\"form-control\" type=\"date\" name=\"birth-date\" id=\"birth-date\" defaultValue={profile.birth_date} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"bio\" className=\"profile-label\">Bio:</label>\r\n                                <input className=\"form-control\" type=\"email\" name=\"bio\" id=\"bio\" placeholder={profile.bio} />\r\n                            </div>\r\n                        </form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <button className=\"btn btn-grey\" onClick={() => setIsEditing(false)}>Fechar</button>\r\n                        <button className=\"btn btn-primary\" onClick={() => document.querySelector('form#update-profile-form').submit()}>Salvar</button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <div className=\"profile-data-container\">\r\n                    <div className=\"d-flex flex-column align-items-start\">\r\n                        <p style={{ padding: '15px' }}>\r\n                            <img src={`${SERVER_URL}${profile.photo}`}\r\n                                className=\"profile-img-big\"\r\n                                style={{ marginBottom: '25px' }}\r\n                            />\r\n                        </p>\r\n                        <p style={{ marginBottom: 0 }}><strong>{profile.first_name} {profile.last_name}</strong></p>\r\n                        <p className=\"text-secondary\" style={{ marginTop: 0 }}>@{profile.user.username}</p>\r\n                        <p>{profile.bio}</p>\r\n                        <p className=\"text-secondary\">\r\n                            <i className=\"far fa-calendar-alt\"></i> Entrou em {profile.created.split('-').reverse().join('/')}\r\n                        </p>\r\n                        <p>\r\n                            <Link to={`/user/${profile.slug}/amigos`} style={{ color: '#000' }}>\r\n                                <strong>{profile.friends.length}</strong> {profile.friends.length === 1 ? 'amigo' : 'amigos'}\r\n                            </Link>\r\n                        </p>\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"btn btn-secondary\" type=\"button\" onClick={() => setIsEditing(true)}>Editar perfil</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"profile-page-menu\">\r\n                    <div className=\"profile-page-menu-item profile-page-menu-item-active\" onClick={switchPage}>\r\n                        Posts ({profile.posts.length})\r\n                    </div>\r\n                    <div className=\"profile-page-menu-item\" onClick={switchPage}>\r\n                        Interesses ({profile.interests.length})\r\n                    </div>\r\n                </div>\r\n                {currentPageIsPosts ?\r\n                    <Posts profile={profile} fetchProfile={fetchProfile}/> :\r\n                    <Interests profile={profile} />\r\n                }\r\n            </div > : ''}\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport Header from '../components/header'\r\n\r\nexport default function Settings() {\r\n\r\n    document.title = 'Configurações / Napker'\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Configurações\" />\r\n            <div className=\"content\">\r\n                Em desenvolvimento...\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Header from '../../components/header'\r\nimport Posts from '../profile-components/posts'\r\nimport Interests from '../profile-components/interests'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            profile: null,\r\n            relationshipButtonLabel: '',\r\n            currentPageIsPosts: true,\r\n        }\r\n        this.slug = this.props.match.params.slug\r\n    }\r\n\r\n    componentWillMount() {\r\n        fetch(`${SERVER_URL}/profile-api/user/${this.slug}`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                profile: data\r\n            }))\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${SERVER_URL}/profile-api/relationship/${this.slug}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                let label\r\n                switch (data.relationship) {\r\n                    case 'friends':\r\n                        label = 'Amigos'\r\n                        break\r\n                    case 'invite-sent':\r\n                        label = 'Solicitado'\r\n                        break\r\n                    case 'invite-received':\r\n                        label = 'Aceitar'\r\n                        break\r\n                    case 'none':\r\n                        label = 'Solicitar'\r\n                }\r\n                this.setState({\r\n                    relationshipButtonLabel: label\r\n                })\r\n            })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        let btn = document.querySelector('#profile-page-relationship-btn')\r\n        if (btn) {\r\n            switch (btn.innerHTML) {\r\n                case 'Amigos':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.onmouseenter = () => {\r\n                        if (btn.innerHTML === 'Amigos') btn.innerHTML = 'Remover'\r\n                    }\r\n                    btn.onmouseout = () => {\r\n                        if (btn.innerHTML === 'Remover') btn.innerHTML = 'Amigos'\r\n                    }\r\n                    btn.classList.add('friend-btn')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Solicitado':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Aceitar':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Solicitar':\r\n                    btn.classList.add('btn-secondary')\r\n                    btn.classList.remove('d-none')\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    sendFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/send-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    cancelFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/cancel-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    removeFromFriends = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/remove-from-friends`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    acceptFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/reply-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({\r\n                'senderid': pk,\r\n                'reply': 'accept'\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                this.props.updateNotificationsNumber()\r\n            })\r\n    }\r\n\r\n    handleRelationshipUpdate = e => {\r\n        const btn = e.target\r\n        if (btn.innerHTML === 'Solicitar') {\r\n            this.sendFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitado'\r\n            btn.className = 'btn btn-primary'\r\n        } else if (btn.innerHTML === 'Solicitado') {\r\n            this.cancelFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitar'\r\n            btn.className = 'btn btn-secondary'\r\n        } else if (btn.innerHTML === 'Amigos' || btn.innerHTML === 'Remover') {\r\n            if (window.confirm(`Remover @${this.state.profile.user.username} dos amigos?`)) {\r\n                this.removeFromFriends(btn.dataset.pk)\r\n                btn.innerHTML = 'Solicitar'\r\n                btn.className = 'btn btn-secondary'\r\n            }\r\n        } else if (btn.innerHTML === 'Aceitar') {\r\n            this.acceptFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Amigos'\r\n            btn.className = 'btn btn-primary'\r\n        }\r\n    }\r\n\r\n    switchPage = e => {\r\n        document.querySelectorAll('.profile-page-menu-item-active').forEach(el => {\r\n            el.classList.remove('profile-page-menu-item-active')\r\n        })\r\n        e.target.classList.add('profile-page-menu-item-active')\r\n        this.setState({\r\n            currentPageIsPosts: !this.state.currentPageIsPosts\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header page={this.state.profile ? `${this.state.profile.first_name} ${this.state.profile.last_name}` : 'Perfil'}\r\n                    backArrow={true}\r\n                />\r\n                {!this.state.profile ? <></> :\r\n                    <div className=\"content\">\r\n                        <div className=\"d-flex justify-content-between align-items-center profile-data-container\">\r\n                            <div className=\"d-flex flex-column align-items-start\">\r\n                                <p style={{ padding: '15px' }}>\r\n                                    <img src={`${SERVER_URL}${this.state.profile.photo}`}\r\n                                        className=\"profile-img-big\"\r\n                                        style={{ marginBottom: '25px' }}\r\n                                    />\r\n                                </p>\r\n                                <p style={{ marginBottom: 0 }}><strong>{this.state.profile.first_name} {this.state.profile.last_name}</strong></p>\r\n                                <p className=\"text-secondary\" style={{ marginTop: 0 }}>@{this.state.profile.user.username}</p>\r\n                                <p>{this.state.profile.bio}</p>\r\n                                <p className=\"text-secondary\">\r\n                                    <i className=\"far fa-calendar-alt\"></i> Entrou em {this.state.profile.created.split('-').reverse().join('/')}\r\n                                </p>\r\n                                <p>\r\n                                    <Link to={`/user/${this.state.profile.slug}/amigos`} style={{ color: '#000' }}>\r\n                                        <strong>{this.state.profile.friends.length}</strong> {this.state.profile.friends.length === 1 ? 'amigo' : 'amigos'}\r\n                                    </Link>\r\n                                </p>\r\n                            </div>\r\n                            <div>\r\n                                <button className=\"btn d-none\"\r\n                                    id=\"profile-page-relationship-btn\"\r\n                                    data-pk={this.state.profile.id}\r\n                                    onClick={this.handleRelationshipUpdate}\r\n                                >{this.state.relationshipButtonLabel}</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"profile-page-menu\">\r\n                            <div className=\"profile-page-menu-item profile-page-menu-item-active\" onClick={this.switchPage}>\r\n                                Posts ({this.state.profile.posts.length})\r\n                            </div>\r\n                            <div className=\"profile-page-menu-item\" onClick={this.switchPage}>\r\n                                Interesses ({this.state.profile.interests.length})\r\n                            </div>\r\n                        </div>\r\n                        {this.state.currentPageIsPosts ?\r\n                            <Posts profile={this.state.profile} /> :\r\n                            <Interests profile={this.state.profile} />\r\n                        }\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile","import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nimport Header from '../../components/header'\r\nimport { SERVER_URL } from '../../settings'\r\n\r\nexport default function Friends() {\r\n    const [friends, setFriends] = useState([])\r\n    const [profile, setProfile] = useState(null)\r\n    const { slug } = useParams()\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/user/${slug}`)\r\n            .then(response => response.json())\r\n            .then(data => setProfile(data))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (profile) {\r\n            fetch(`${SERVER_URL}/profile-api/get-friends-profiles/${profile.slug}`)\r\n                .then(response => response.json())\r\n                .then(data => setFriends(data))\r\n        }\r\n    }, [profile])\r\n\r\n    return (\r\n        <>\r\n            <Header page={profile ? `${profile.first_name} ${profile.last_name} / Amigos` : 'Perfil / Amigos'}\r\n                backArrow={true}\r\n            />\r\n            <div className=\"content\">\r\n                <div className=\"lidt-group\">\r\n                    {friends && friends.map(friend => {\r\n                        return (\r\n                            <Link to={`/user/${friend.slug}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                                <li className=\"list-group-item profile-row filtered-profile\" key={friend.id}>\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <div className=\"profile-col\">\r\n                                            <img src={`${SERVER_URL}${friend.photo}`}\r\n                                                className=\"profile-img-med\"\r\n                                                style={{ marginRight: '10px' }}\r\n                                            />\r\n                                            <div className=\"main-profile-data\">\r\n                                                <strong>{friend.first_name} {friend.last_name}</strong>\r\n                                                <p className=\"text-secondary\">@{friend.user.username}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"profile-col\">\r\n                                            {friend.bio}\r\n                                        </div>\r\n                                        <div className=\"profile-col\">\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            </Link>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport Header from '../../components/header'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nexport default function Post() {\r\n    const [post, setPost] = useState(null)\r\n    const [profile, setProfile] = useState(null)\r\n    const { id } = useParams()\r\n\r\n    useEffect(() => {\r\n        fetchPost()\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setProfile(data))\r\n    }, [])\r\n\r\n    const fetchPost = () => {\r\n        fetch(`${SERVER_URL}/post-api/post/${id}`)\r\n            .then(response => response.json())\r\n            .then(data => setPost(data))\r\n    }\r\n\r\n    const likeUnlikePost = e => {\r\n        const likeBtn = e.target\r\n        if (likeBtn.classList.contains('fas')) {\r\n            likeBtn.classList.remove('fas') //border heart\r\n            likeBtn.classList.add('far')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/unlike-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPost()\r\n                })\r\n        } else {\r\n            likeBtn.classList.remove('far') //border heart\r\n            likeBtn.classList.add('fas')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/like-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPost()\r\n                })\r\n        }\r\n    }\r\n\r\n    const likeUnlikeComment = e => {\r\n        const likeBtn = e.target\r\n        if (likeBtn.classList.contains('fas')) {\r\n            likeBtn.classList.remove('fas') //border heart\r\n            likeBtn.classList.add('far')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/unlike-comment/${likeBtn.dataset.commentid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPost()\r\n                })\r\n        } else {\r\n            likeBtn.classList.remove('far') //border heart\r\n            likeBtn.classList.add('fas')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/like-comment/${likeBtn.dataset.commentid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPost()\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Post\" backArrow={true} />\r\n            <div className=\"content\">\r\n                {post && profile &&\r\n                    <>\r\n                        <div className=\"post-container\">\r\n                            <div className=\"post-row\">\r\n                                <div className=\"post-col\">\r\n                                    <Link to={`/user/${post.author.slug}`}>\r\n                                        <img src={`${SERVER_URL}${post.author.photo}`}\r\n                                            className=\"profile-img-med\"\r\n                                        />\r\n                                    </Link>\r\n                                </div>\r\n                                <div className=\"post-col\">\r\n                                    <Link to={`/user/${post.author.slug}`} style={{ color: '#000' }}>\r\n                                        <div style={{ height: '30px' }}>\r\n                                            <strong>{post.author.first_name} {post.author.last_name} </strong>\r\n                                            <p className=\"text-secondary d-inline-block\">\r\n                                                @{post.author.user.username} • {post.created.split('-').reverse().join('/')}\r\n                                            </p>\r\n                                        </div>\r\n                                    </Link>\r\n                                    <div style={{ textAlign: 'start', fontSize: 'larger' }}>\r\n                                        {post.content}\r\n                                    </div>\r\n                                    {post.image &&\r\n                                        <img src={`${SERVER_URL}${post.image}`} className=\"post-img\" />\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"post-actions\">\r\n                                <p className=\"text-secondary\" style={{ fontSize: 'large' }}>\r\n                                    <i class=\"far fa-comment\" />{post.comments.length}\r\n                                    {post.likes.map(like => like.profile.id).includes(profile.id) ?\r\n                                        <i class=\"fas fa-heart\"\r\n                                            data-postid={post.id}\r\n                                            onClick={likeUnlikePost}\r\n                                        />\r\n                                        :\r\n                                        <i class=\"far fa-heart\"\r\n                                            data-postid={post.id}\r\n                                            onClick={likeUnlikePost}\r\n                                        />}\r\n                                    <p className=\"post-likes-number\"\r\n\r\n                                    >\r\n                                        {post.likes.length}\r\n                                    </p>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"comment-list\">\r\n                            {post.comments.map(comment => {\r\n                                return (\r\n                                    <li className=\"post-container\">\r\n                                        <div className=\"post-row\">\r\n                                            <div className=\"post-col\">\r\n                                                <Link to={`/user/${comment.author.slug}`}>\r\n                                                    <img src={`${SERVER_URL}${comment.author.photo}`}\r\n                                                        className=\"profile-img-med\"\r\n                                                    />\r\n                                                </Link>\r\n                                            </div>\r\n                                            <div className=\"post-col\">\r\n                                                <Link to={`/user/${comment.author.slug}`} style={{ color: '#000' }}>\r\n                                                    <div style={{ height: '30px' }}>\r\n                                                        <strong>{post.author.first_name} {post.author.last_name} </strong>\r\n                                                        <p className=\"text-secondary d-inline-block\">\r\n                                                            @{comment.author.user.username} • {comment.created.split('-').reverse().join('/')}\r\n                                                        </p>\r\n                                                    </div>\r\n                                                </Link>\r\n                                                <div style={{ textAlign: 'start' }}>\r\n                                                    {comment.content}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"post-actions\">\r\n                                            <p className=\"text-secondary\">\r\n                                                {comment.likes.map(like => like.profile.id).includes(profile.id) ?\r\n                                                    <i class=\"fas fa-heart\"\r\n                                                        data-commentid={comment.id}\r\n                                                        onClick={likeUnlikeComment}\r\n                                                    />\r\n                                                    :\r\n                                                    <i class=\"far fa-heart\"\r\n                                                        data-commentid={comment.id}\r\n                                                        onClick={likeUnlikeComment}\r\n                                                    />}\r\n                                                <p className=\"post-likes-number\"\r\n\r\n                                                >\r\n                                                    {comment.likes.length}\r\n                                                </p>\r\n                                            </p>\r\n                                        </div>\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\nimport Sidebar from './components/sidebar'\r\nimport Home from './pages/home'\r\nimport Notifications from './pages/notifications'\r\nimport Messages from './pages/messages/messages'\r\nimport MyProfile from './pages/myprofile'\r\nimport Settings from './pages/settings'\r\nimport Profile from './pages/home-components/profile'\r\nimport ProfileFriends from './pages/profile-components/friends'\r\nimport Post from './pages/home-components/post'\r\n\r\nimport { SERVER_URL } from './settings'\r\n\r\nexport default function App() {\r\n    const [invitesReceivedNumber, setInvitesReceived] = useState(0)\r\n    const [unvisualizedLikes, setUnvisulaizedLikes] = useState(0)\r\n    let notificationsNumber = invitesReceivedNumber + unvisualizedLikes\r\n    const [unreadMessagesNumber, setUnreadMessagesNumber] = useState(0)\r\n\r\n    useEffect(() => {\r\n        updateNotificationsNumber()\r\n        updateUnreadMessagesNumber()\r\n    }, [])\r\n\r\n    const updateNotificationsNumber = () => {\r\n        fetch(`${SERVER_URL}/profile-api/myinvites`)\r\n            .then(response => response.json())\r\n            .then(data => setInvitesReceived(data.length))\r\n        fetch(`${SERVER_URL}/post-api/unvisualized-likes`)\r\n            .then(response => response.json())\r\n            .then(data => setUnvisulaizedLikes(data.length))\r\n    }\r\n\r\n    const updateUnreadMessagesNumber = () => {\r\n        fetch(`${SERVER_URL}/chat-api/all-unread-messages-number`)\r\n            .then(response => response.json())\r\n            .then(data => setUnreadMessagesNumber(data['unread_messages_number']))\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <Sidebar notificationsNumber={notificationsNumber} unreadMessagesNumber={unreadMessagesNumber} />\r\n            <div className=\"main-content\">\r\n                <Switch>\r\n                    <Route path=\"/notificações\" render={props => (\r\n                        <Notifications {...props} updateNotificationsNumber={updateNotificationsNumber} />\r\n                    )} />\r\n                    <Route path=\"/mensagens\" exact component={Messages} />\r\n                    <Route path=\"/mensagens/:slug\" render={props => (\r\n                        <Messages {...props} updateUnreadMessagesNumber={updateUnreadMessagesNumber} />\r\n                    )} />\r\n                    <Route path=\"/perfil\" component={MyProfile} />\r\n                    <Route path=\"/configurações\" component={Settings} />\r\n                    <Route path=\"/user/:slug\" exact render={props => (\r\n                        <Profile {...props} updateNotificationsNumber={updateNotificationsNumber} />\r\n                    )} />\r\n                    <Route path=\"/user/:slug/amigos\" component={ProfileFriends} />\r\n                    <Route path=\"/post/:id\" component={Post}/>\r\n                    <Route path=\"/\" component={Home} />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/style.css'\nimport './assets/profile.css'\nimport './assets/chat.css'\n\nimport App from './App'\n\nReactDOM.render(<App />, document.querySelector('#root'))\n"],"sourceRoot":""}