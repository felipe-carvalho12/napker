{"version":3,"sources":["components/sidebar.js","settings.js","utils.js","pages/home-components/posts.js","pages/home-components/profiles.js","components/header.js","pages/home.js","pages/notifications.js","pages/messages/websocket.js","pages/messages/chat.js","pages/messages/messages.js","pages/profile-components/posts.js","pages/profile-components/interests.js","pages/myprofile.js","pages/settings.js","pages/home-components/profile.js","pages/profile-components/friends.js","App.js","index.js"],"names":["Sidebar","props","className","to","style","textDecoration","notificationsNumber","unreadMessagesNumber","SERVER_URL","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","handleLogout","window","confirm","location","replace","Posts","useState","profile","setProfile","posts","setPosts","postContent","setPostContent","useEffect","fetch","then","response","json","data","fetchPosts","likeUnlikePost","e","likeBtn","target","classList","contains","remove","add","dataset","postid","console","log","type","placeholder","marginRight","width","value","onChange","marginBottom","borderRadius","onClick","method","headers","body","JSON","stringify","content","map","post","key","id","author","slug","src","photo","color","height","first_name","last_name","user","username","created","reverse","join","textAlign","image","class","comments","likes","prof","includes","data-postid","Profiles","profiles","setProfiles","filteredProfiles","setFilteredProfiles","search","setSearch","handleRelationshipUpdate","pk","btn","innerHTML","cancelFriendRequest","bio","data-pk","Header","backArrow","history","back","page","Home","setPage","pages","title","Notifications","invites","setInvites","replyRequest","requestBody","senderid","reply","updateNotificationsNumber","getElementById","removeChild","sender","justifyContent","data-senderid","data-reply","marginTop","WebSocketService","callbacks","this","socketRef","instance","chatUrl","path","WebSocket","onopen","socketNewMessage","command","onmessage","onerror","message","onclose","connect","close","parsedData","parse","Object","keys","messages","chatId","sendMessage","from","messagesCallback","newMessageCallback","send","err","readyState","WebSocketInstance","getInstance","Chat","messageChangeHandler","event","setState","sendMessageHandler","preventDefault","messageObject","state","newChatMessage","updateMessagesComponent","renderTimestamp","timestamp","ts","Date","getDate","getMonth","getFullYear","getHours","getMinutes","renderMessages","currentUser","read","scrollToBottom","querySelector","chatLog","scrollTop","scrollHeight","handleComponentChange","otherUsername","otherProfile","initialiseChat","waitForSocketConnection","addCallbacks","setMessages","bind","addMessage","fetchMessages","callback","component","setTimeout","newProps","disconnect","chat_id","updateUnreadMessagesNumber","onSubmit","position","right","fontSize","openModal","React","Component","Messages","fetchActiveChatProfiles","activeChats","chats","activeChatsProfiles","addingNewChat","setModalSearch","query","modalProfiles","setContactSearch","filter","p","resetUnreadMessagesCounter","unreadMessagesCounter","incrementUnreadMessagesCounter","setLastChatMessage","lastChatMessage","participants","other_username","match","params","Modal","show","onHide","size","closeButton","Title","Body","padding","overflow","overflowY","whiteSpace","maxHeight","indexOf","contact","marginLeft","slice","fetchProfile","Interests","interests","interest","toUpperCase","MyProfile","isEditing","setIsEditing","currentPageIsPosts","setCurrentPageIsPosts","switchPage","querySelectorAll","forEach","el","action","accept","files","htmlFor","email","gender","defaultValue","birth_date","Footer","submit","friends","Settings","Profile","sendFriendRequest","removeFromFriends","acceptFriendRequest","relationshipButtonLabel","label","relationship","onmouseenter","onmouseout","Friends","setFriends","useParams","friend","App","setNotificationsNumber","setUnreadMessagesNumber","render","exact","ProfileFriends","ReactDOM"],"mappings":"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","file":"static/js/main.06d8ebdc.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Sidebar(props) {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n                <h2>Napker</h2>\r\n            </Link>\r\n            <ul>\r\n                <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-home\"/>Home</li>\r\n                </Link>\r\n                <Link to=\"/notificações\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-bell\"/>Notificações{!props.notificationsNumber ? '' : <p className=\"notifications-number\">{props.notificationsNumber}</p>}</li>\r\n                </Link>\r\n                <Link to=\"/mensagens\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-envelope\"/>Mensagens{!props.unreadMessagesNumber ? '' : <p className=\"notifications-number\">{props.unreadMessagesNumber}</p>}</li>\r\n                </Link>\r\n                <Link to=\"/perfil\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-user\"/>Perfil</li>\r\n                </Link>\r\n                <Link to=\"/configurações\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-cog\"/>Configurações</li>\r\n                </Link>\r\n            </ul>\r\n        </div>\r\n    )\r\n}","const SERVER_URL = 'http://127.0.0.1:8000'\r\nconst SOCKET_URL = 'ws://127.0.0.1:8000'\r\n\r\nexport {SERVER_URL, SOCKET_URL}","import { SERVER_URL } from './settings'\r\n\r\nconst csrftoken = getCookie('csrftoken')\r\n\r\nfunction getCookie(name) {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nfunction handleLogout() {\r\n  const bool = window.confirm('Sair do Napker?\\nVocê poderá entrar novamente quando quiser.')\r\n  if (bool) {\r\n    window.location.replace(`${SERVER_URL}/logout`)\r\n  }\r\n}\r\n\r\nexport { csrftoken, handleLogout };","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nexport default function Posts() {\r\n    const [profile, setProfile] = useState(null)\r\n    const [posts, setPosts] = useState(null)\r\n    const [postContent, setPostContent] = useState('')\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setProfile(data))\r\n        fetchPosts()\r\n    }, [])\r\n\r\n    const fetchPosts = () => {\r\n        fetch(`${SERVER_URL}/post-api/post-list`)\r\n            .then(response => response.json())\r\n            .then(data => setPosts(data))\r\n    }\r\n\r\n    const createPost = () => {\r\n        fetch(`${SERVER_URL}/post-api/create-post`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({ content: postContent })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                setPostContent('')\r\n            })\r\n    }\r\n\r\n    const likeUnlikePost = e => {\r\n        const likeBtn = e.target\r\n        if (likeBtn.classList.contains('fas')) {\r\n            likeBtn.classList.remove('fas') //border heart\r\n            likeBtn.classList.add('far')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/unlike-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPosts()\r\n                })\r\n        } else {\r\n            likeBtn.classList.remove('far') //border heart\r\n            likeBtn.classList.add('fas')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/like-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPosts()\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"form-row d-inline-block\">\r\n                <div className=\"col d-flex\">\r\n                    <input type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"O que está acontecendo?\"\r\n                        style={{ marginRight: '5px', width: '400px' }}\r\n                        value={postContent}\r\n                        onChange={e => setPostContent(e.target.value)}\r\n                    />\r\n                    <button className=\"btn btn-primary\" style={{ marginBottom: '20px', borderRadius: '5px' }} onClick={createPost}>Postar</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"post-list\">\r\n                {posts && profile && posts.map(post => {\r\n                    return (\r\n                        <li className=\"post-container\" key={post.id}>\r\n                            <div className=\"post-row\">\r\n                                <div className=\"post-col\">\r\n                                    <Link to={`/user/${post.author.slug}`}>\r\n                                        <img src={`${SERVER_URL}${post.author.photo}`}\r\n                                            className=\"profile-img-med\"\r\n                                        />\r\n                                    </Link>\r\n                                </div>\r\n                                <div className=\"post-col\">\r\n                                    <Link to={`/user/${post.author.slug}`} style={{ color: '#000' }}>\r\n                                        <div style={{ height: '30px' }}>\r\n                                            <strong>{post.author.first_name} {post.author.last_name} </strong>\r\n                                            <p className=\"text-secondary d-inline-block\">\r\n                                                @{post.author.user.username} • {post.created.split('-').reverse().join('/')}\r\n                                            </p>\r\n                                        </div>\r\n                                    </Link>\r\n                                    <div style={{ textAlign: 'start' }}>\r\n                                        {post.content}\r\n                                    </div>\r\n                                    {post.image &&\r\n                                        <img src={`${SERVER_URL}${post.image}`} className=\"post-img\" />\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"post-actions\">\r\n                                <p className=\"text-secondary\">\r\n                                    <i class=\"far fa-comment\" />{post.comments.length}\r\n                                    {post.likes.map(prof => prof.id).includes(profile.id) ?\r\n                                        <i class=\"fas fa-heart\"\r\n                                            data-postid={post.id}\r\n                                            onClick={likeUnlikePost}\r\n                                        />\r\n                                        :\r\n                                        <i class=\"far fa-heart\"\r\n                                            data-postid={post.id}\r\n                                            onClick={likeUnlikePost}\r\n                                        />}{post.likes.length}\r\n                                </p>\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nexport default function Profiles(props) {\r\n    const [profiles, setProfiles] = useState([])\r\n    const [filteredProfiles, setFilteredProfiles] = useState(null)\r\n    const [search, setSearch] = useState('')\r\n\r\n    useEffect(() => {\r\n        console.log('fetching profiles...')\r\n        fetch(`${SERVER_URL}/profile-api/profile-list`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setFilteredProfiles(null)\r\n                setProfiles(data)\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (search === '') {\r\n            setFilteredProfiles(null)\r\n            return\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/users/${search}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setFilteredProfiles(data)\r\n            })\r\n    }, [search])\r\n\r\n    const sendFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/send-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    const cancelFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/cancel-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    const handleRelationshipUpdate = e => {\r\n        const btn = e.target\r\n        if (btn.innerHTML === 'Solicitar') {\r\n            sendFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitado'\r\n            btn.className = 'btn btn-primary'\r\n        } else {\r\n            cancelFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitar'\r\n            btn.className = 'btn btn-secondary'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"form-row d-inline-block\">\r\n                <div className=\"col\">\r\n                    <input type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Pesquisar\"\r\n                        style={{ width: '400px' }}\r\n                        value={search}\r\n                        onChange={e => setSearch(e.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"list-group\">\r\n                {filteredProfiles ? filteredProfiles.map(profile => {\r\n                    return (\r\n                        <Link to={`/user/${profile.slug}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                            <li className=\"list-group-item profile-row filtered-profile\" key={profile.id}>\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                    <div className=\"profile-col\">\r\n                                        <img src={`${SERVER_URL}${profile.photo}`}\r\n                                            className=\"profile-img-med\"\r\n                                            style={{ marginRight: '10px' }}\r\n                                        />\r\n                                        <div className=\"main-profile-data\">\r\n                                            <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                            <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"profile-col\">\r\n                                        {profile.bio}\r\n                                    </div>\r\n                                    <div className=\"profile-col\">\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        </Link>\r\n                    )\r\n                }) : profiles && profiles.map(profile => {\r\n                    return (\r\n                        <li className=\"list-group-item profile-row\" key={profile.id}>\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                <div className=\"profile-col\">\r\n                                    <Link to={`/user/${profile.slug}`}>\r\n                                        <img src={`${SERVER_URL}${profile.photo}`}\r\n                                            className=\"profile-img-med\"\r\n                                            style={{ marginRight: '10px' }}\r\n                                        />\r\n                                    </Link>\r\n                                    <div className=\"main-profile-data\">\r\n                                        <Link to={`/user/${profile.slug}`} style={{ color: '#000' }}>\r\n                                            <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                        </Link>\r\n                                        <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"profile-col\">\r\n                                    {profile.bio}\r\n                                </div>\r\n                                <div className=\"profile-col\">\r\n                                    <button className=\"btn btn-secondary\" data-pk={profile.user.id} onClick={handleRelationshipUpdate}>\r\n                                        Solicitar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { handleLogout } from '../utils'\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <div className=\"header fixed-top\">\r\n            {!props.backArrow ? '' : <i class=\"fas fa-arrow-left left-arrow-icon\" onClick={() => window.history.back()}/>}\r\n            <strong>{props.page}</strong>\r\n            <a className=\"logout\" onClick={handleLogout}>Sair</a>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport Posts from './home-components/posts'\r\nimport Profiles from './home-components/profiles'\r\nimport Header from '../components/header'\r\n\r\nexport default function Home(props) {\r\n    const [page, setPage] = useState('Perfis')\r\n    const pages = {\r\n        'Perfis': <Profiles />,\r\n        'Posts': <Posts />\r\n    }\r\n\r\n    document.title = 'Home / Napker'\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Home\" />\r\n            <div className=\"content\">\r\n                <button type=\"button\" className=\"btn btn-primary\" style={{ marginRight: '50px', borderRadius: '20px' }} onClick={() => setPage(page === 'Perfis' ? 'Posts' : 'Perfis')}>\r\n                    {page === 'Perfis' ? 'Ver posts' : 'Ver perfis'}\r\n                </button>\r\n                {pages[page]}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Header from '../components/header'\r\nimport { SERVER_URL } from '../settings'\r\nimport { csrftoken } from '../utils'\r\n\r\nexport default function Notifications(props) {\r\n    const [invites, setInvites] = useState([])\r\n\r\n    document.title = 'Notificações / Napker'\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myinvites`)\r\n            .then(response => response.json())\r\n            .then(data => setInvites(data))\r\n    }, [])\r\n\r\n    const replyRequest = e => {\r\n        const btn = e.target\r\n        const requestBody = {\r\n            'senderid': btn.dataset.senderid,\r\n            'reply': btn.dataset.reply\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/reply-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(requestBody)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                props.updateNotificationsNumber()\r\n            })\r\n        document.getElementById('friend-request-list').removeChild(document.getElementById(btn.dataset.senderid))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Notificações\" />\r\n            <div className=\"content\">\r\n                <div className=\"list-group\" id='friend-request-list'>\r\n                    {invites.length ? invites.map(i => {\r\n                        return (\r\n                            <li className=\"list-group-item profile-row\" id={i.sender.id} key={i.sender.id}>\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                    <div className=\"profile-col\">\r\n                                        <Link to={`/user/${i.sender.slug}`}>\r\n                                            <img src={`${SERVER_URL}${i.sender.photo}`}\r\n                                                className=\"profile-img-med\"\r\n                                                style={{ marginRight: '10px' }}\r\n                                            />\r\n                                        </Link>\r\n                                        <div className=\"main-profile-data\">\r\n                                            <Link to={`/user/${i.sender.slug}`} style={{ color: '#000' }}>\r\n                                                <strong>{i.sender.first_name} {i.sender.last_name}</strong>\r\n                                            </Link>\r\n                                            <p className=\"text-secondary\">@{i.sender.user.username}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"profile-col\">\r\n                                        {i.sender.bio}\r\n                                    </div>\r\n                                    <div className=\"profile-col\" style={{ justifyContent: 'space-between' }}>\r\n                                        <button className=\"btn btn-primary btn-reply-fr\" data-senderid={i.sender.id} data-reply='accept' onClick={replyRequest}>Confirmar</button>\r\n                                        <button className=\"btn btn-grey btn-reply-fr\" data-senderid={i.sender.id} data-reply='decline' onClick={replyRequest}>Excluir</button>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    }) : <h3 style={{ marginTop: '100px' }}>Você não tem nenhuma notificação</h3>}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import { SOCKET_URL } from '../../settings'\r\n\r\nclass WebSocketService {\r\n    static instance = null;\r\n    callbacks = {};\r\n  \r\n    static getInstance() {\r\n      if (!WebSocketService.instance) {\r\n        WebSocketService.instance = new WebSocketService();\r\n      }\r\n      return WebSocketService.instance;\r\n    }\r\n  \r\n    constructor() {\r\n      this.socketRef = null;\r\n    }\r\n  \r\n    connect(chatUrl) {\r\n      const path = `${SOCKET_URL}/ws/chat/${chatUrl}/`;\r\n      this.socketRef = new WebSocket(path);\r\n      this.socketRef.onopen = () => {\r\n        console.log(\"WebSocket open\");\r\n      };\r\n      this.socketNewMessage(JSON.stringify({\r\n        command: 'fetch-messages'\r\n      }))\r\n      this.socketRef.onmessage = e => {\r\n        this.socketNewMessage(e.data);\r\n      };\r\n      this.socketRef.onerror = e => {\r\n        console.log(e.message);\r\n      };\r\n      this.socketRef.onclose = () => {\r\n        console.log(\"WebSocket closed let's reopen\");\r\n        this.connect(chatUrl);\r\n      };\r\n    }\r\n  \r\n    disconnect() {\r\n      if (this.socketRef) this.socketRef.close();\r\n    }\r\n  \r\n    socketNewMessage(data) {\r\n      const parsedData = JSON.parse(data);\r\n      const command = parsedData.command;\r\n      if (Object.keys(this.callbacks).length === 0) {\r\n        return;\r\n      }\r\n      if (command === \"messages\") {\r\n        this.callbacks[command](parsedData.messages);\r\n      }\r\n      if (command === \"new_message\") {\r\n        this.callbacks[command](parsedData.message);\r\n      }\r\n    }\r\n  \r\n    fetchMessages(username, chatId) {\r\n      this.sendMessage({\r\n        command: \"fetch_messages\",\r\n        username: username,\r\n        chatId: chatId\r\n      });\r\n    }\r\n  \r\n    newChatMessage(message) {\r\n      this.sendMessage({\r\n        command: \"new_message\",\r\n        from: message.from,\r\n        content: message.content,\r\n        chatId: message.chatId\r\n      });\r\n    }\r\n  \r\n    addCallbacks(messagesCallback, newMessageCallback) {\r\n      this.callbacks[\"messages\"] = messagesCallback;\r\n      this.callbacks[\"new_message\"] = newMessageCallback;\r\n    }\r\n  \r\n    sendMessage(data) {\r\n      try {\r\n        this.socketRef.send(JSON.stringify({ ...data }));\r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n    }\r\n  \r\n    state() {\r\n      return this.socketRef ? this.socketRef.readyState : 0\r\n    }\r\n  }\r\n  \r\n  const WebSocketInstance = WebSocketService.getInstance();\r\n  \r\n  export default WebSocketInstance;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { csrftoken } from '../../utils'\r\nimport { SERVER_URL } from '../../settings'\r\nimport WebSocketInstance from './websocket'\r\n\r\nclass Chat extends React.Component {\r\n    initialiseChat() {\r\n        this.waitForSocketConnection(() => {\r\n            WebSocketInstance.addCallbacks(\r\n                this.setMessages.bind(this),\r\n                this.addMessage.bind(this)\r\n            )\r\n            WebSocketInstance.fetchMessages(\r\n                this.props.username,\r\n                this.props.chatId\r\n            );\r\n        });\r\n        if (this.props.chatId) WebSocketInstance.connect(this.props.chatId)\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            message: '',\r\n            messages: [],\r\n            otherUsername: this.props.otherUsername,\r\n            otherProfile: null\r\n        }\r\n        this.initialiseChat();\r\n    }\r\n\r\n    waitForSocketConnection(callback) {\r\n        const component = this;\r\n        setTimeout(function () {\r\n            if (WebSocketInstance.state() === 1) {\r\n                console.log(\"Connection is made\");\r\n                callback();\r\n                return;\r\n            } else {\r\n                console.log(\"wait for connection...\");\r\n                component.waitForSocketConnection(callback);\r\n            }\r\n        }, 100);\r\n    }\r\n\r\n    setMessages(messages) {\r\n        this.setState({ messages: messages.reverse() })\r\n    }\r\n\r\n    addMessage(message) {\r\n        this.setState({ messages: [...this.state.messages, message] })\r\n    }\r\n\r\n    messageChangeHandler = event => {\r\n        this.setState({ message: event.target.value });\r\n    };\r\n\r\n    sendMessageHandler = e => {\r\n        e.preventDefault();\r\n        const messageObject = {\r\n            from: this.props.username,\r\n            content: this.state.message,\r\n            chatId: this.props.chatId\r\n        };\r\n        WebSocketInstance.newChatMessage(messageObject);\r\n        this.setState({ message: \"\" });\r\n        this.props.updateMessagesComponent()\r\n\r\n    };\r\n\r\n    renderTimestamp = timestamp => {\r\n        const ts = new Date(timestamp)\r\n        return `${ts.getDate()}/${ts.getMonth()}/${ts.getFullYear()} - ${ts.getHours()}:${ts.getMinutes()}`\r\n    };\r\n\r\n    renderMessages = messages => {\r\n        const currentUser = this.props.username;\r\n        return messages.map(message => (\r\n            <li\r\n                key={message.id}\r\n                className={message.author === currentUser ? \"sent\" : \"received\"}\r\n            >\r\n                <p>\r\n                    {message.content}\r\n                    <br />\r\n                    <small>\r\n                        {this.renderTimestamp(message.timestamp)} {message.author === currentUser ? message.read ? '✓✓' : '✓' : ''}\r\n                    </small>\r\n                </p>\r\n            </li>\r\n        ));\r\n    };\r\n\r\n    scrollToBottom = () => {\r\n        if (document.querySelector('#chat-log')) {\r\n            const chatLog = document.querySelector('#chat-log')\r\n            chatLog.scrollTop = chatLog.scrollHeight\r\n        }\r\n    };\r\n\r\n    handleComponentChange = () => {\r\n        this.scrollToBottom();\r\n        if (this.state.otherUsername && (!this.state.otherProfile || this.state.otherProfile.user.username !== this.state.otherUsername)) {\r\n            fetch(`${SERVER_URL}/profile-api/user/${this.state.otherUsername}`)\r\n                .then(response => response.json())\r\n                .then(data => this.setState({\r\n                    otherProfile: data\r\n                }))\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (this.props.chatId !== newProps.chatId) {\r\n            WebSocketInstance.disconnect();\r\n            this.waitForSocketConnection(() => {\r\n                WebSocketInstance.fetchMessages(\r\n                    this.props.username,\r\n                    newProps.chatId\r\n                );\r\n            });\r\n            WebSocketInstance.connect(newProps.chatId);\r\n\r\n            this.props.updateMessagesComponent()\r\n        }\r\n        if (this.state.otherUsername != newProps.otherUsername) {\r\n            this.setState({\r\n                otherUsername: newProps.otherUsername\r\n            })\r\n        }\r\n        if (newProps.chatId) {\r\n            fetch(`${SERVER_URL}/chat-api/read-messages`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                },\r\n                body: JSON.stringify({ chat_id: newProps.chatId })\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => console.log(data))\r\n        }\r\n        if (this.props.updateUnreadMessagesNumber) {\r\n            this.props.updateUnreadMessagesNumber()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.otherProfile ?\r\n                    <div className=\"d-flex flex-column justify-content-between align-items-center current-chat\">\r\n                        <div className=\"current-chat-header\">\r\n                            <Link to={`/user/${this.state.otherProfile.slug}`}>\r\n                                <img src={`${SERVER_URL}${this.state.otherProfile.photo}`}\r\n                                    className=\"profile-img-sm\"\r\n                                    style={{ marginRight: '5px' }}\r\n                                />\r\n                            </Link>\r\n                            <div className=\"d-flex flex-column align-items-start\" style={{ height: '52px' }}>\r\n                                <strong>{this.state.otherProfile.first_name} {this.state.otherProfile.last_name}</strong>\r\n                                <p className=\"text-secondary\">@{this.state.otherProfile.user.username}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div id=\"chat-log\">\r\n                            {this.state.messages ? this.renderMessages(this.state.messages) : ''}\r\n                        </div>\r\n                        <form className=\"send-message-container\" onSubmit={this.sendMessageHandler}>\r\n                            <input placeholder=\"Mensagem\" className=\"message-input\" id=\"chat-message-input\" value={this.state.message} onChange={this.messageChangeHandler} />\r\n                            <button className=\"btn btn-primary\" id=\"chat-message-submit\">\r\n                                <i class=\"fas fa-paper-plane\" style={{ position: 'relative', right: '10%' }} />\r\n                            </button>\r\n                        </form>\r\n                    </div> :\r\n                    <div className=\"d-flex flex-column justify-content-center align-items-center current-chat\">\r\n                        <div>\r\n                            <strong style={{ fontSize: 'larger' }}>Você não tem uma conversa selecionada</strong>\r\n                            <p className=\"text-secondary\">Selecione uma existente ou comece uma nova</p>\r\n                            <button className=\"btn btn-primary\" onClick={() => this.props.openModal()}>Nova conversa</button>\r\n                        </div>\r\n                    </div>}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chat","import React from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Header from '../../components/header'\r\nimport Chat from './chat'\r\nimport { SERVER_URL } from '../../settings'\r\n\r\nclass Messages extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: null,\r\n            chatId: null,\r\n            activeChats: null,\r\n            activeChatsProfiles: null,\r\n            addingNewChat: false,\r\n            modalProfiles: [],\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps === this.props) return\r\n        const participants = { username: this.state.username, other_username: newProps.match.params.slug }\r\n        fetch(`${SERVER_URL}/chat-api/chat-id/${JSON.stringify(participants)}`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                chatId: data['chat_id']\r\n            }))\r\n    }\r\n\r\n    handleComponentChange() {\r\n        if (!this.state.username) {\r\n            fetch(`${SERVER_URL}/profile-api/logged-user`)\r\n                .then(response => response.json())\r\n                .then(data => this.setState({\r\n                    username: data.username\r\n                }))\r\n        }\r\n        if (!this.state.activeChatsProfiles && this.state.activeChatsProfiles !== []) {\r\n            this.fetchActiveChatProfiles()\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.title = 'Mensagens / Napker'\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    fetchActiveChatProfiles = () => {\r\n        fetch(`${SERVER_URL}/chat-api/active-chats-profiles`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (!this.state.username) return\r\n                this.setState({\r\n                    activeChats: data.chats.reverse(),\r\n                    activeChatsProfiles: data.profiles.reverse()\r\n                })\r\n            })\r\n    }\r\n\r\n    openModal = () => {\r\n        this.setState({\r\n            addingNewChat: true\r\n        })\r\n    }\r\n\r\n    setModalSearch = query => {\r\n        if (query === '') {\r\n            this.setState({\r\n                modalProfiles: []\r\n            })\r\n            return\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/users/${query}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    modalProfiles: data\r\n                })\r\n            })\r\n    }\r\n\r\n    setContactSearch = query => {\r\n        if (query === '') {\r\n            this.fetchActiveChatProfiles()\r\n            return\r\n        }\r\n        if (this.state.activeChatsProfiles) {\r\n            const filteredProfiles = this.state.activeChatsProfiles.filter(p => p.user.username.includes(query))\r\n            this.setState({\r\n                activeChatsProfiles: filteredProfiles\r\n            })\r\n        }\r\n    }\r\n\r\n    resetUnreadMessagesCounter = () => {\r\n        this.unreadMessagesCounter = 0\r\n    }\r\n\r\n    incrementUnreadMessagesCounter = () => {\r\n        this.unreadMessagesCounter++\r\n    }\r\n\r\n    setLastChatMessage = message => {\r\n        this.lastChatMessage = message\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header page=\"Mensagens\" />\r\n                <div className=\"content d-flex messages-wrapper\">\r\n                    <Modal show={this.state.addingNewChat}\r\n                        onHide={() => this.setState({ addingNewChat: false })}\r\n                        size=\"lg\">\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title><strong>Nova conversa</strong></Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body style={{ padding: '0' }}>\r\n                            <input className=\"modal-search-input\"\r\n                                placeholder=\"Pesquisar pessoas\"\r\n                                onChange={e => this.setModalSearch(e.target.value)}\r\n                            />\r\n                            <div className=\"list-group\" style={{ height: '400px', overflow: 'hidden', overflowY: 'scroll' }}>\r\n                                {this.state.modalProfiles && this.state.modalProfiles.map(profile => {\r\n                                    return (\r\n                                        <Link to={`/mensagens/${profile.slug}`}\r\n                                            style={{ color: '#000', textDecoration: 'none' }}\r\n                                            onClick={() => this.setState({\r\n                                                addingNewChat: false\r\n                                            })}\r\n                                        >\r\n                                            <li className=\"list-group-item profile-row modal-profile-li\" key={profile.id}>\r\n                                                <div className=\"d-flex justify-content-between\">\r\n                                                    <div className=\"profile-col\">\r\n                                                        <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                            className=\"profile-img-med\"\r\n                                                            style={{ marginRight: '10px' }}\r\n                                                        />\r\n                                                        <div className=\"main-profile-data\">\r\n                                                            <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                                            <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"profile-col\">\r\n                                                        {profile.bio}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </li>\r\n                                        </Link>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                    <div className=\"d-flex flex-column chats-list\">\r\n                        <div className=\"search-input-container\">\r\n                            <input placeholder=\"Pesquisar pessoas\" className=\"search-input\" onChange={e => this.setContactSearch(e.target.value)} />\r\n                            <i className=\"fas fa-plus add-icon\" onClick={this.openModal}></i>\r\n                        </div>\r\n                        <div className=\"list-group chats-container\">\r\n                            {this.state.activeChatsProfiles && this.state.activeChatsProfiles.map(profile => {\r\n                                return (\r\n                                    <Link to={`/mensagens/${profile.user.username}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                                        {this.resetUnreadMessagesCounter()}\r\n                                        <li className=\"list-item profile-chat-item\" style={{ whiteSpace: 'nowrap' }}>\r\n                                            <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                className=\"profile-img-med\"\r\n                                                style={{ marginRight: '10px' }}\r\n                                            />\r\n                                            <div className=\"d-flex flex-column align-items-start\">\r\n                                                <div className=\"d-flex\" style={{ maxHeight: '30px' }}>\r\n                                                    <strong style={{ height: 'fit-content' }}>{profile.first_name} {profile.last_name}</strong>\r\n                                                    {this.state.activeChats[this.state.activeChatsProfiles.indexOf(profile)].messages.map(message => {\r\n                                                        const messages = this.state.activeChats[this.state.activeChatsProfiles.indexOf(profile)].messages\r\n                                                        if (messages[messages.length - 1] === message) this.setLastChatMessage(message.content)\r\n                                                        if (message.read || message.contact.user.username !== profile.user.username) return\r\n                                                        this.incrementUnreadMessagesCounter()\r\n                                                    })}\r\n                                                    {this.unreadMessagesCounter ? <p className=\"notifications-number\">{this.unreadMessagesCounter}</p> : ''}\r\n                                                    <p className=\"text-secondary\" style={{ marginLeft: '5px' }}>@{profile.user.username}</p>\r\n                                                </div>\r\n                                                <p className=\"text-secondary\">{this.lastChatMessage.slice(0, 40)}</p>\r\n                                            </div>\r\n                                        </li>\r\n                                    </Link>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <Chat username={this.state.username}\r\n                        otherUsername={this.props.match.params.slug}\r\n                        chatId={this.state.chatId}\r\n                        openModal={this.openModal}\r\n                        updateUnreadMessagesNumber={this.props.updateUnreadMessagesNumber}\r\n                        updateMessagesComponent={this.fetchActiveChatProfiles}\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Messages","import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nimport Header from '../../components/header'\r\nimport { SERVER_URL } from '../../settings'\r\n\r\nexport default function Posts(props) {\r\n    const profile = props.profile\r\n\r\n    const likeUnlikePost = e => {\r\n        const likeBtn = e.target\r\n        if (likeBtn.classList.contains('fas')) {\r\n            likeBtn.classList.remove('fas') //border heart\r\n            likeBtn.classList.add('far')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/unlike-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.fetchProfile()\r\n                })\r\n        } else {\r\n            likeBtn.classList.remove('far') //border heart\r\n            likeBtn.classList.add('fas')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/like-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.fetchProfile()\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"post-list\">\r\n                {profile && profile.posts.length ? profile.posts.map(post => {\r\n                    return (\r\n                        <li className=\"post-container\" key={post.id}>\r\n                            <div className=\"post-row\">\r\n                                <div className=\"post-col\">\r\n                                    <img src={`${SERVER_URL}${profile.photo}`}\r\n                                        className=\"profile-img-med\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"post-col\">\r\n                                    <div style={{ height: '30px' }}>\r\n                                        <strong>{profile.first_name} {profile.last_name} </strong>\r\n                                        <p className=\"text-secondary d-inline-block\">\r\n                                            @{profile.user.username} • {post.created.split('-').reverse().join('/')}\r\n                                        </p>\r\n                                    </div>\r\n                                    <div style={{ textAlign: 'start' }}>\r\n                                        {post.content}\r\n                                    </div>\r\n                                    {post.image &&\r\n                                        <img src={`${SERVER_URL}${post.image}`} className=\"post-img\" />\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"post-actions\">\r\n                                <p className=\"text-secondary\">\r\n                                    <i class=\"far fa-comment\" />{post.comments.length}\r\n                                    {post.likes.includes(profile.id) ?\r\n                                        <i class=\"fas fa-heart\"\r\n                                            data-postid={post.id}\r\n                                            onClick={likeUnlikePost}\r\n                                        />\r\n                                    :\r\n                                    <i class=\"far fa-heart\"\r\n                                        data-postid={post.id}\r\n                                        onClick={likeUnlikePost}\r\n                                    />}{post.likes.length}\r\n                                </p>\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                }) : <h3 style={{ marginTop: '50px' }}>{profile.first_name} não tem posts</h3>}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Interests(props) {\r\n    const profile = props.profile\r\n\r\n    return (\r\n        <div className=\"interests-page-container\">\r\n            <h3>Interesses públicos de {profile.first_name}</h3>\r\n            <div>\r\n                {profile && profile.interests.map(interest => {\r\n                    return (\r\n                        <>\r\n                            {interest.title &&\r\n                                <>\r\n                                    <hr />\r\n                                    <li className=\"interest-item\">\r\n                                        {interest.title[0].toUpperCase() + interest.title.slice(1)}\r\n                                        <button className=\"btn-secondary\" style={{ padding: '5px' }}>Pesquisar usuários</button>\r\n                                    </li>\r\n                                </>\r\n                            }\r\n                        </>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nimport Header from '../components/header'\r\nimport Posts from './profile-components/posts'\r\nimport Interests from './profile-components/interests'\r\nimport { SERVER_URL } from '../settings'\r\nimport { csrftoken } from '../utils'\r\n\r\nexport default function MyProfile() {\r\n    const [profile, setProfile] = useState(null)\r\n    const [isEditing, setIsEditing] = useState(false)\r\n    const [currentPageIsPosts, setCurrentPageIsPosts] = useState(true)\r\n\r\n    document.title = 'Perfil / Napker'\r\n\r\n    useEffect(() => {\r\n        fetchProfile()\r\n    }, [])\r\n\r\n    const fetchProfile = () => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setProfile(data))\r\n    }\r\n\r\n    const switchPage = e => {\r\n        document.querySelectorAll('.profile-page-menu-item-active').forEach(el => {\r\n            el.classList.remove('profile-page-menu-item-active')\r\n        })\r\n        e.target.classList.add('profile-page-menu-item-active')\r\n        setCurrentPageIsPosts(!currentPageIsPosts)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Perfil\" />\r\n            {profile ? <div className=\"content\">\r\n                <Modal show={isEditing}\r\n                    onHide={() => setIsEditing(false)}\r\n                    size=\"lg\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Editar perfil</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <form action={`${SERVER_URL}/update-profile`} id=\"update-profile-form\" method=\"POST\">\r\n                            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n                            <div className=\"d-flex flex-column justify-content-center align-items-center\" style={{ padding: '25px' }}>\r\n                                <img src={`${SERVER_URL}${profile.photo}`}\r\n                                    className=\"profile-img-big\"\r\n                                    style={{ marginBottom: '25px' }}\r\n                                />\r\n                                <input type=\"file\" accept=\"image/png, image/jpg\" name=\"profile-photo\" onChange={e => console.log(e.target.files)} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"first-name\" className=\"profile-label\">Nome:</label>\r\n                                <input className=\"form-control\" type=\"text\" name=\"first-name\" id=\"first-name\" placeholder={profile.first_name} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"last-name\" className=\"profile-label\">Sobrenome:</label>\r\n                                <input className=\"form-control\" type=\"text\" name=\"last-name\" id=\"last-name\" placeholder={profile.last_name} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"username\" className=\"profile-label\">Nome de usuário:</label>\r\n                                <input className=\"form-control\" type=\"text\" name=\"username\" id=\"username\" placeholder={profile.user.username} />\r\n                                <span id=\"username-taken\">Nome de usuário já existe</span>\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"email\" className=\"profile-label\">Email:</label>\r\n                                <input className=\"form-control\" type=\"email\" name=\"email\" id=\"email\" placeholder={profile.email} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"gender\" className=\"profile-label\">Gênero:</label>\r\n                                <select className=\"form-control\" name=\"gender\" id=\"gender\" placeholder={profile.gender}>\r\n                                    <option value=\"male\">Masculino</option>\r\n                                    <option value=\"female\">Feminino</option>\r\n                                    <option value=\"other\">Outro</option>\r\n                                </select>\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"birth-date\" className=\"profile-label\">Data de nascimento:</label>\r\n                                <input className=\"form-control\" type=\"date\" name=\"birth-date\" id=\"birth-date\" defaultValue={profile.birth_date} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"bio\" className=\"profile-label\">Bio:</label>\r\n                                <input className=\"form-control\" type=\"email\" name=\"bio\" id=\"bio\" placeholder={profile.bio} />\r\n                            </div>\r\n                        </form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <button className=\"btn btn-grey\" onClick={() => setIsEditing(false)}>Fechar</button>\r\n                        <button className=\"btn btn-primary\" onClick={() => document.querySelector('form#update-profile-form').submit()}>Salvar</button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <div className=\"profile-data-container\">\r\n                    <div className=\"d-flex flex-column align-items-start\">\r\n                        <p style={{ padding: '15px' }}>\r\n                            <img src={`${SERVER_URL}${profile.photo}`}\r\n                                className=\"profile-img-big\"\r\n                                style={{ marginBottom: '25px' }}\r\n                            />\r\n                        </p>\r\n                        <p style={{ marginBottom: 0 }}><strong>{profile.first_name} {profile.last_name}</strong></p>\r\n                        <p className=\"text-secondary\" style={{ marginTop: 0 }}>@{profile.user.username}</p>\r\n                        <p>{profile.bio}</p>\r\n                        <p className=\"text-secondary\">\r\n                            <i className=\"far fa-calendar-alt\"></i> Entrou em {profile.created.split('-').reverse().join('/')}\r\n                        </p>\r\n                        <p>\r\n                            <Link to={`/user/${profile.slug}/amigos`} style={{ color: '#000' }}>\r\n                                <strong>{profile.friends.length}</strong> {profile.friends.length === 1 ? 'amigo' : 'amigos'}\r\n                            </Link>\r\n                        </p>\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"btn btn-secondary\" type=\"button\" onClick={() => setIsEditing(true)}>Editar perfil</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"profile-page-menu\">\r\n                    <div className=\"profile-page-menu-item profile-page-menu-item-active\" onClick={switchPage}>\r\n                        Posts ({profile.posts.length})\r\n                    </div>\r\n                    <div className=\"profile-page-menu-item\" onClick={switchPage}>\r\n                        Interesses ({profile.interests.length})\r\n                    </div>\r\n                </div>\r\n                {currentPageIsPosts ?\r\n                    <Posts profile={profile} fetchProfile={fetchProfile}/> :\r\n                    <Interests profile={profile} />\r\n                }\r\n            </div > : ''}\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport Header from '../components/header'\r\n\r\nexport default function Settings() {\r\n\r\n    document.title = 'Configurações / Napker'\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Configurações\" />\r\n            <div className=\"content\">\r\n                Em desenvolvimento...\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Header from '../../components/header'\r\nimport Posts from '../profile-components/posts'\r\nimport Interests from '../profile-components/interests'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            profile: null,\r\n            relationshipButtonLabel: '',\r\n            currentPageIsPosts: true,\r\n        }\r\n        this.slug = this.props.match.params.slug\r\n    }\r\n\r\n    componentWillMount() {\r\n        fetch(`${SERVER_URL}/profile-api/user/${this.slug}`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                profile: data\r\n            }))\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${SERVER_URL}/profile-api/relationship/${this.slug}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                let label\r\n                switch (data.relationship) {\r\n                    case 'friends':\r\n                        label = 'Amigos'\r\n                        break\r\n                    case 'invite-sent':\r\n                        label = 'Solicitado'\r\n                        break\r\n                    case 'invite-received':\r\n                        label = 'Aceitar'\r\n                        break\r\n                    case 'none':\r\n                        label = 'Solicitar'\r\n                }\r\n                this.setState({\r\n                    relationshipButtonLabel: label\r\n                })\r\n            })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        let btn = document.querySelector('#profile-page-relationship-btn')\r\n        if (btn) {\r\n            switch (btn.innerHTML) {\r\n                case 'Amigos':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.onmouseenter = () => {\r\n                        if (btn.innerHTML === 'Amigos') btn.innerHTML = 'Remover'\r\n                    }\r\n                    btn.onmouseout = () => {\r\n                        if (btn.innerHTML === 'Remover') btn.innerHTML = 'Amigos'\r\n                    }\r\n                    btn.classList.add('friend-btn')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Solicitado':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Aceitar':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Solicitar':\r\n                    btn.classList.add('btn-secondary')\r\n                    btn.classList.remove('d-none')\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    sendFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/send-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    cancelFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/cancel-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    removeFromFriends = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/remove-from-friends`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    acceptFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/reply-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({\r\n                'senderid': pk,\r\n                'reply': 'accept'\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                this.props.updateNotificationsNumber()\r\n            })\r\n    }\r\n\r\n    handleRelationshipUpdate = e => {\r\n        const btn = e.target\r\n        if (btn.innerHTML === 'Solicitar') {\r\n            this.sendFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitado'\r\n            btn.className = 'btn btn-primary'\r\n        } else if (btn.innerHTML === 'Solicitado') {\r\n            this.cancelFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitar'\r\n            btn.className = 'btn btn-secondary'\r\n        } else if (btn.innerHTML === 'Amigos' || btn.innerHTML === 'Remover') {\r\n            if (window.confirm(`Remover @${this.state.profile.user.username} dos amigos?`)) {\r\n                this.removeFromFriends(btn.dataset.pk)\r\n                btn.innerHTML = 'Solicitar'\r\n                btn.className = 'btn btn-secondary'\r\n            }\r\n        } else if (btn.innerHTML === 'Aceitar') {\r\n            this.acceptFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Amigos'\r\n            btn.className = 'btn btn-primary'\r\n        }\r\n    }\r\n\r\n    switchPage = e => {\r\n        document.querySelectorAll('.profile-page-menu-item-active').forEach(el => {\r\n            el.classList.remove('profile-page-menu-item-active')\r\n        })\r\n        e.target.classList.add('profile-page-menu-item-active')\r\n        this.setState({\r\n            currentPageIsPosts: !this.state.currentPageIsPosts\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header page={this.state.profile ? `${this.state.profile.first_name} ${this.state.profile.last_name}` : 'Perfil'}\r\n                    backArrow={true}\r\n                />\r\n                {!this.state.profile ? <></> :\r\n                    <div className=\"content\">\r\n                        <div className=\"d-flex justify-content-between align-items-center profile-data-container\">\r\n                            <div className=\"d-flex flex-column align-items-start\">\r\n                                <p style={{ padding: '15px' }}>\r\n                                    <img src={`${SERVER_URL}${this.state.profile.photo}`}\r\n                                        className=\"profile-img-big\"\r\n                                        style={{ marginBottom: '25px' }}\r\n                                    />\r\n                                </p>\r\n                                <p style={{ marginBottom: 0 }}><strong>{this.state.profile.first_name} {this.state.profile.last_name}</strong></p>\r\n                                <p className=\"text-secondary\" style={{ marginTop: 0 }}>@{this.state.profile.user.username}</p>\r\n                                <p>{this.state.profile.bio}</p>\r\n                                <p className=\"text-secondary\">\r\n                                    <i className=\"far fa-calendar-alt\"></i> Entrou em {this.state.profile.created.split('-').reverse().join('/')}\r\n                                </p>\r\n                                <p>\r\n                                    <Link to={`/user/${this.state.profile.slug}/amigos`} style={{ color: '#000' }}>\r\n                                        <strong>{this.state.profile.friends.length}</strong> {this.state.profile.friends.length === 1 ? 'amigo' : 'amigos'}\r\n                                    </Link>\r\n                                </p>\r\n                            </div>\r\n                            <div>\r\n                                <button className=\"btn d-none\"\r\n                                    id=\"profile-page-relationship-btn\"\r\n                                    data-pk={this.state.profile.id}\r\n                                    onClick={this.handleRelationshipUpdate}\r\n                                >{this.state.relationshipButtonLabel}</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"profile-page-menu\">\r\n                            <div className=\"profile-page-menu-item profile-page-menu-item-active\" onClick={this.switchPage}>\r\n                                Posts ({this.state.profile.posts.length})\r\n                            </div>\r\n                            <div className=\"profile-page-menu-item\" onClick={this.switchPage}>\r\n                                Interesses ({this.state.profile.interests.length})\r\n                            </div>\r\n                        </div>\r\n                        {this.state.currentPageIsPosts ?\r\n                            <Posts profile={this.state.profile} /> :\r\n                            <Interests profile={this.state.profile} />\r\n                        }\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile","import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nimport Header from '../../components/header'\r\nimport { SERVER_URL } from '../../settings'\r\n\r\nexport default function Friends() {\r\n    const [friends, setFriends] = useState([])\r\n    const [profile, setProfile] = useState(null)\r\n    const { slug } = useParams()\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/user/${slug}`)\r\n            .then(response => response.json())\r\n            .then(data => setProfile(data))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (profile) {\r\n            fetch(`${SERVER_URL}/profile-api/get-friends-profiles/${profile.slug}`)\r\n                .then(response => response.json())\r\n                .then(data => setFriends(data))\r\n        }\r\n    }, [profile])\r\n\r\n    return (\r\n        <>\r\n            <Header page={profile ? `${profile.first_name} ${profile.last_name} / Amigos` : 'Perfil / Amigos'}\r\n                backArrow={true}\r\n            />\r\n            <div className=\"content\">\r\n                <div className=\"lidt-group\">\r\n                    {friends && friends.map(friend => {\r\n                        return (\r\n                            <Link to={`/user/${friend.slug}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                                <li className=\"list-group-item profile-row filtered-profile\" key={friend.id}>\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <div className=\"profile-col\">\r\n                                            <img src={`${SERVER_URL}${friend.photo}`}\r\n                                                className=\"profile-img-med\"\r\n                                                style={{ marginRight: '10px' }}\r\n                                            />\r\n                                            <div className=\"main-profile-data\">\r\n                                                <strong>{friend.first_name} {friend.last_name}</strong>\r\n                                                <p className=\"text-secondary\">@{friend.user.username}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"profile-col\">\r\n                                            {friend.bio}\r\n                                        </div>\r\n                                        <div className=\"profile-col\">\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            </Link>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\nimport Sidebar from './components/sidebar'\r\nimport Home from './pages/home'\r\nimport Notifications from './pages/notifications'\r\nimport Messages from './pages/messages/messages'\r\nimport MyProfile from './pages/myprofile'\r\nimport Settings from './pages/settings'\r\nimport Profile from './pages/home-components/profile'\r\nimport ProfileFriends from './pages/profile-components/friends'\r\n\r\nimport { SERVER_URL } from './settings'\r\n\r\nexport default function App() {\r\n    const [notificationsNumber, setNotificationsNumber] = useState(0)\r\n    const [unreadMessagesNumber, setUnreadMessagesNumber] = useState(0)\r\n\r\n    useEffect(() => {\r\n        updateNotificationsNumber()\r\n        updateUnreadMessagesNumber()\r\n    }, [])\r\n\r\n    const updateNotificationsNumber = () => {\r\n        fetch(`${SERVER_URL}/profile-api/myinvites`)\r\n            .then(response => response.json())\r\n            .then(data => setNotificationsNumber(data.length))\r\n    }\r\n\r\n    const updateUnreadMessagesNumber = () => {\r\n        fetch(`${SERVER_URL}/chat-api/all-unread-messages-number`)\r\n            .then(response => response.json())\r\n            .then(data => setUnreadMessagesNumber(data['unread_messages_number']))\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <Sidebar notificationsNumber={notificationsNumber} unreadMessagesNumber={unreadMessagesNumber} />\r\n            <div className=\"main-content\">\r\n                <Switch>\r\n                    <Route path=\"/notificações\" render={props => (\r\n                        <Notifications {...props} updateNotificationsNumber={updateNotificationsNumber} />\r\n                    )} />\r\n                    <Route path=\"/mensagens\" exact component={Messages} />\r\n                    <Route path=\"/mensagens/:slug\" render={props => (\r\n                        <Messages {...props} updateUnreadMessagesNumber={updateUnreadMessagesNumber} />\r\n                    )} />\r\n                    <Route path=\"/perfil\" component={MyProfile} />\r\n                    <Route path=\"/configurações\" component={Settings} />\r\n                    <Route path=\"/user/:slug\" exact render={props => (\r\n                        <Profile {...props} updateNotificationsNumber={updateNotificationsNumber} />\r\n                    )} />\r\n                    <Route path=\"/user/:slug/amigos\" component={ProfileFriends} />\r\n                    <Route path=\"/\" component={Home} />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/style.css'\nimport './assets/profile.css'\nimport './assets/chat.css'\n\nimport App from './App'\n\nReactDOM.render(<App />, document.querySelector('#root'))\n"],"sourceRoot":""}