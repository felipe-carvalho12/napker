{"version":3,"sources":["components/sidebar.js","settings.js","components/likesmodal.js","utils.js","pages/home-components/posts.js","pages/home-components/profiles.js","components/header.js","pages/home.js","pages/notifications.js","pages/messages/websocket.js","pages/messages/chat.js","pages/messages/messages.js","pages/profile-components/posts.js","pages/profile-components/interests.js","pages/myprofile.js","pages/settings.js","pages/home-components/profile.js","pages/profile-components/friends.js","pages/profile-components/interestprofiles.js","pages/profile-components/edit-interests/publicInterests.js","pages/profile-components/edit-interests/privateInterests.js","pages/profile-components/edit-interests/editinterests.js","components/commentmodal.js","pages/home-components/post.js","App.js","index.js"],"names":["Sidebar","props","className","to","style","textDecoration","notificationsNumber","unreadMessagesNumber","SERVER_URL","LikesModal","Modal","show","isOpen","onHide","hideModal","size","Header","closeButton","Title","Body","height","overflow","overflowY","likes","map","like","profile","slug","color","onClick","key","id","src","photo","marginRight","first_name","last_name","user","username","bio","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","handleLogout","window","confirm","location","replace","Posts","fetchPosts","fetch","then","response","json","data","setState","posts","likeUnlikePost","e","stopPropagation","likeBtn","target","classList","contains","remove","add","dataset","postid","console","log","hideLikesModal","likesModal","deletePost","postId","el","querySelector","animationPlayState","addEventListener","method","headers","handlePostContentChange","postContent","value","disabled","handlePostImageChange","reader","FileReader","onload","readyState","postFormImagePreview","result","display","readAsDataURL","files","handleCloseImage","openCloseEmojiList","onEmojiSelect","event","emojiObject","state","emoji","this","action","encType","type","placeholder","autoFocus","onChange","margin","htmlFor","class","accept","onEmojiClick","post","href","author","created","reverse","join","textAlign","content","image","comments","includes","data-postid","React","Component","Profiles","useState","profiles","setProfiles","filteredProfiles","setFilteredProfiles","search","setSearch","useEffect","handleRelationshipUpdate","pk","btn","innerHTML","body","JSON","stringify","cancelFriendRequest","data-pk","backArrow","history","back","page","Home","setPage","pages","title","marginBottom","borderRadius","Notifications","invites","setInvites","postLikes","setPostLikes","setComments","updateNotificationsNumber","replyRequest","requestBody","senderid","reply","getElementById","sender","justifyContent","data-senderid","data-reply","fontSize","comment","marginTop","WebSocketService","callbacks","socketRef","instance","chatUrl","path","WebSocket","onopen","socketNewMessage","command","onmessage","onerror","message","onclose","connect","close","parsedData","parse","Object","keys","messages","chatId","sendMessage","from","messagesCallback","newMessageCallback","send","err","WebSocketInstance","getInstance","Chat","handleComponentChange","scrollToBottom","otherUsername","otherProfile","messageChangeHandler","sendMessageHandler","preventDefault","messageObject","newChatMessage","updateMessagesComponent","renderTimestamp","timestamp","ts","Date","day","getDate","month","getMonth","hour","getHours","minute","getMinutes","getFullYear","renderMessages","currentUser","read","chatLog","scrollTop","scrollHeight","initialiseChat","waitForSocketConnection","addCallbacks","setMessages","bind","addMessage","fetchMessages","focus","newProps","disconnect","chat_id","updateUnreadMessagesNumber","callback","component","setTimeout","onSubmit","openModal","Messages","fetchActiveChatProfiles","activeChats","chats","activeChatsProfiles","addingNewChat","setModalSearch","query","modalProfiles","setContactSearch","filter","p","resetUnreadMessagesCounter","unreadMessagesCounter","incrementUnreadMessagesCounter","setLastChatMessage","lastChatMessage","participants","other_username","match","params","padding","whiteSpace","maxHeight","indexOf","contact","marginLeft","slice","myprofile","setMyProfile","setLikesModal","fetchProfile","Interests","interests","public","interest","toUpperCase","MyProfile","setProfile","profileImagePreview","setProfileImagePreview","isEditing","setIsEditing","currentPageIsPosts","setCurrentPageIsPosts","switchPage","querySelectorAll","forEach","bool","width","email","gender","defaultValue","birth_date","Footer","submit","friends","Settings","Profile","sendFriendRequest","removeFromFriends","acceptFriendRequest","relationshipButtonLabel","label","relationship","onmouseenter","onmouseout","Friends","setFriends","useParams","friend","InterestProfiles","PublicInterests","tagContainer","input","tags","myProfile","interestsInput","addTags","tag","parentElement","removeChild","sort","prepend","div","createElement","span","closeIcon","setAttribute","appendChild","createTag","setInterests","push","tagLabel","getAttribute","index","PrivateInterests","EditInterests","publicInterests","setPublicInterests","privateInterests","setPrivateInterests","background","fontWeight","public_interests","private_interests","documentElement","CommentModal","commentContent","setCommentContent","Post","setPost","commentModalIsOpen","setCommentModalIsOpen","postLikesModal","setPostLikesModal","commentLikesModal","setCommentLikesModal","fetchPost","likeUnlikeComment","commentid","commentId","deleteComment","data-commentid","App","invitesReceivedNumber","setInvitesReceived","unvisualizedLikesNumber","setUnvisulaizedLikes","unvisualizedCommentsNumber","setUnvisulaizedComments","setUnreadMessagesNumber","render","exact","ProfileFriends","ReactDOM"],"mappings":"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","file":"static/js/main.03ee8864.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Sidebar(props) {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n                <h2>Napker</h2>\r\n            </Link>\r\n            <ul>\r\n                <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-home\"/>Home</li>\r\n                </Link>\r\n                <Link to=\"/notificações\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-bell\"/>Notificações{!props.notificationsNumber ? '' : <p className=\"notifications-number\">{props.notificationsNumber}</p>}</li>\r\n                </Link>\r\n                <Link to=\"/mensagens\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-envelope\"/>Mensagens{!props.unreadMessagesNumber ? '' : <p className=\"notifications-number\">{props.unreadMessagesNumber}</p>}</li>\r\n                </Link>\r\n                <Link to=\"/perfil\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-user\"/>Perfil</li>\r\n                </Link>\r\n                <Link to=\"/configurações\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-cog\"/>Configurações</li>\r\n                </Link>\r\n            </ul>\r\n        </div>\r\n    )\r\n}","const SERVER_URL = 'http://127.0.0.1:8000'\r\nconst SOCKET_URL = 'ws://127.0.0.1:8000'\r\n\r\nexport {SERVER_URL, SOCKET_URL}","import React from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../settings'\r\n\r\nexport default function LikesModal(props) {\r\n    return (\r\n        <Modal show={props.isOpen}\r\n            onHide={props.hideModal}\r\n            size=\"lg\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title><strong>Curtidas</strong></Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"list-group\" style={{ height: '400px', overflow: 'hidden', overflowY: 'scroll' }}>\r\n                    {props.likes &&\r\n                        props.likes.map(like => like.profile).map(profile => {\r\n                            return (\r\n                                <Link to={`/user/${profile.slug}`}\r\n                                    style={{ color: '#000', textDecoration: 'none' }}\r\n                                    onClick={props.hideModal}\r\n                                >\r\n                                    <li className=\"list-group-item profile-row modal-profile-li\" key={profile.id}>\r\n                                        <div className=\"d-flex justify-content-between\">\r\n                                            <div className=\"profile-col\">\r\n                                                <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                    className=\"profile-img-med\"\r\n                                                    style={{ marginRight: '10px' }}\r\n                                                />\r\n                                                <div className=\"main-profile-data\">\r\n                                                    <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                                    <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"profile-col\">\r\n                                                {profile.bio}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                </Link>\r\n                            )\r\n                        })}\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}","import { SERVER_URL } from './settings'\r\n\r\nconst csrftoken = getCookie('csrftoken')\r\n\r\nfunction getCookie(name) {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nfunction handleLogout() {\r\n  const bool = window.confirm('Sair do Napker?\\nVocê poderá entrar novamente quando quiser.')\r\n  if (bool) {\r\n    window.location.replace(`${SERVER_URL}/logout`)\r\n  }\r\n}\r\n\r\nexport { csrftoken, handleLogout };","import React from 'react'\r\nimport Picker from 'emoji-picker-react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport LikesModal from '../../components/likesmodal'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nexport default class Posts extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            profile: null,\r\n            posts: null,\r\n            likesModal: {\r\n                isOpen: false,\r\n                likes: null\r\n            },\r\n            postContent: '',\r\n            postFormImagePreview: null\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ profile: data }))\r\n        this.fetchPosts()\r\n    }\r\n\r\n    fetchPosts = () => {\r\n        fetch(`${SERVER_URL}/post-api/post-list`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ posts: data }))\r\n    }\r\n\r\n    likeUnlikePost = e => {\r\n        e.stopPropagation()\r\n        const likeBtn = e.target\r\n        if (likeBtn.classList.contains('fas')) {\r\n            likeBtn.classList.remove('fas') //border heart\r\n            likeBtn.classList.add('far')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/unlike-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    this.fetchPosts()\r\n                })\r\n        } else {\r\n            likeBtn.classList.remove('far') //border heart\r\n            likeBtn.classList.add('fas')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/like-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    this.fetchPosts()\r\n                })\r\n        }\r\n    }\r\n\r\n    hideLikesModal = () => {\r\n        this.setState({\r\n            likesModal: {\r\n                isOpen: false,\r\n                likes: null\r\n            }\r\n        })\r\n    }\r\n\r\n    deletePost = (e, postId) => {\r\n        e.stopPropagation()\r\n        const el = document.querySelector(`#profile-post-${postId}`)\r\n        if (window.confirm('Tem certeza que deseja apagar o post?\\nEssa ação é irreversível.')) {\r\n            el.style.animationPlayState = 'running'\r\n            el.addEventListener('animationend', () => {\r\n                this.fetchPosts()\r\n            })\r\n            fetch(`${SERVER_URL}/post-api/delete-post/${postId}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                })\r\n        }\r\n    }\r\n\r\n    handlePostContentChange = e => {\r\n        this.setState({ postContent: e.target.value })\r\n        const el = document.querySelector('#post-form-submit-btn')\r\n        el.disabled = e.target.value === ''\r\n    }\r\n\r\n    handlePostImageChange = e => {\r\n        const reader = new FileReader()\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                this.setState({ postFormImagePreview: reader.result })\r\n                document.querySelector('#post-img-container').style.display = 'initial'\r\n            }\r\n        }\r\n        try {\r\n            reader.readAsDataURL(e.target.files[0])\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n    handleCloseImage = () => {\r\n        document.querySelector('#post-img-container').style.display = 'none'\r\n        document.querySelector('#post-image').value = ''\r\n        this.setState({ postFormImagePreview: null })\r\n    }\r\n\r\n    openCloseEmojiList = () => {\r\n        const el = document.querySelector('#emoji-list-container')\r\n        const style = el.style\r\n        if (!style.display) style.display = 'none'\r\n        style.display = style.display === 'none' ? 'initial' : 'none'\r\n    }\r\n\r\n    onEmojiSelect = (event, emojiObject) => {\r\n        this.setState({ postContent: this.state.postContent + emojiObject.emoji })\r\n        document.querySelector('#post-form-submit-btn').disabled = false\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <LikesModal\r\n                    isOpen={this.state.likesModal.isOpen}\r\n                    likes={this.state.likesModal.likes}\r\n                    hideModal={this.hideLikesModal}\r\n                />\r\n                {this.state.profile &&\r\n                    <form\r\n                        action={`${SERVER_URL}/post-api/create-post`}\r\n                        method=\"POST\"\r\n                        className=\"create-post-form\"\r\n                        encType=\"multipart/form-data\"\r\n                    >\r\n                        <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n                        <div className=\"d-flex\">\r\n                            <img\r\n                                src={`${SERVER_URL}${this.state.profile.photo}`}\r\n                                className=\"profile-img-med\"\r\n                            />\r\n                            <input type=\"text\"\r\n                                className=\"post-content-input\"\r\n                                name=\"post-content\"\r\n                                value={this.state.postContent}\r\n                                placeholder=\"No que você está pensando?\"\r\n                                autoFocus\r\n                                onChange={this.handlePostContentChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"w-100 d-flex justify-content-center\">\r\n                            <div\r\n                                className=\"post-img-container\"\r\n                                id=\"post-img-container\">\r\n                                <div\r\n                                    className=\"post-img-options\"\r\n                                >\r\n                                    <i\r\n                                        className=\"far fa-times-circle\"\r\n                                        onClick={this.handleCloseImage}\r\n                                    />\r\n                                </div>\r\n                                <img\r\n                                    src={this.state.postFormImagePreview}\r\n                                    className=\"post-img post-form-img-preview\"\r\n                                    id=\"post-form-img-preview\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"d-flex justify-content-between\" style={{ margin: '0px 70px 0 70px' }}>\r\n                            <div className=\"post-extra-options\">\r\n                                <label htmlFor=\"post-image\" class=\"far fa-image\" />\r\n                                <input\r\n                                    type=\"file\"\r\n                                    accept=\"image/png, image/jpg, image/jpeg\"\r\n                                    name=\"post-image\"\r\n                                    id=\"post-image\"\r\n                                    style={{ display: 'none' }}\r\n                                    onChange={this.handlePostImageChange}\r\n                                />\r\n                                <label\r\n                                    className=\"far fa-smile\"\r\n                                    onClick={this.openCloseEmojiList}\r\n                                />\r\n                            </div>\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"btn btn-primary\"\r\n                                id=\"post-form-submit-btn\"\r\n                                style={{ height: '40px' }}\r\n                                disabled\r\n                            >\r\n                                Postar\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"emoji-list-container\" id=\"emoji-list-container\">\r\n                            <Picker onEmojiClick={this.onEmojiSelect} />\r\n                        </div>\r\n                    </form>}\r\n                <div className=\"post-list\">\r\n                    {this.state.posts && this.state.profile ?\r\n                        this.state.posts.map(post => {\r\n                            return (\r\n                                <li\r\n                                    className=\"post-container\"\r\n                                    id={`profile-post-${post.id}`}\r\n                                    key={post.id}\r\n                                    onClick={() => window.location.href = `/post/${post.id}`}\r\n                                >\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <div className=\"post-row\">\r\n                                            <div className=\"post-col\">\r\n                                                <Link\r\n                                                    to={post.author.id === this.state.profile.id ?\r\n                                                        '/perfil' : `/user/${post.author.slug}`}\r\n                                                    onClick={e => e.stopPropagation()}\r\n                                                >\r\n                                                    <img src={`${SERVER_URL}${post.author.photo}`}\r\n                                                        className=\"profile-img-med\"\r\n                                                    />\r\n                                                </Link>\r\n                                            </div>\r\n                                            <div className=\"post-col\">\r\n                                                <Link\r\n                                                    to={post.author.id === this.state.profile.id ?\r\n                                                        '/perfil' : `/user/${post.author.slug}`}\r\n                                                    style={{ color: '#000' }}\r\n                                                    onClick={e => e.stopPropagation()}\r\n                                                >\r\n                                                    <div style={{ height: '30px' }}>\r\n                                                        <strong>{post.author.first_name} {post.author.last_name} </strong>\r\n                                                        <p className=\"text-secondary d-inline-block\">\r\n                                                            @{post.author.user.username} • {post.created.split('-').reverse().join('/')}\r\n                                                        </p>\r\n                                                    </div>\r\n                                                </Link>\r\n                                                <div style={{ textAlign: 'start' }}>\r\n                                                    {post.content}\r\n                                                </div>\r\n                                                {post.image &&\r\n                                                    <img src={`${SERVER_URL}${post.image}`} className=\"post-img\" />\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                        {post.author.id === this.state.profile.id &&\r\n                                            <i\r\n                                                className=\"far fa-trash-alt trash-icon text-secondary\"\r\n                                                style={{ margin: '20px 20px 0 0' }}\r\n                                                onClick={e => this.deletePost(e, post.id)}\r\n                                            />}\r\n                                    </div>\r\n                                    <div className=\"post-actions\">\r\n                                        <p className=\"text-secondary\">\r\n                                            <Link\r\n                                                to={`/post/${post.id}/comment`}\r\n                                                className=\"text-secondary\"\r\n                                                onClick={e => e.stopPropagation()}\r\n                                            >\r\n                                                <i\r\n                                                    class=\"far fa-comment\"\r\n                                                />{post.comments.length}\r\n                                            </Link>\r\n                                            {post.likes.map(like => like.profile.id).includes(this.state.profile.id) ?\r\n                                                <i class=\"fas fa-heart\"\r\n                                                    data-postid={post.id}\r\n                                                    onClick={this.likeUnlikePost}\r\n                                                />\r\n                                                :\r\n                                                <i class=\"far fa-heart\"\r\n                                                    data-postid={post.id}\r\n                                                    onClick={this.likeUnlikePost}\r\n                                                />}\r\n                                            <p className=\"post-likes-number\"\r\n                                                onClick={e => {\r\n                                                    e.stopPropagation()\r\n                                                    this.setState({ likesModal: { isOpen: true, likes: post.likes } })\r\n                                                }}\r\n                                            >\r\n                                                {post.likes.length}\r\n                                            </p>\r\n                                        </p>\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        }) :\r\n                        <div className=\"posts-loader-container\" >\r\n                            <div className=\"loader\" />\r\n                        </div>}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nexport default function Profiles(props) {\r\n    const [profiles, setProfiles] = useState(null)\r\n    const [filteredProfiles, setFilteredProfiles] = useState(null)\r\n    const [search, setSearch] = useState('')\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/profile-list`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setFilteredProfiles(null)\r\n                setProfiles(data)\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (search === '') {\r\n            setFilteredProfiles(null)\r\n            return\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/users/${search}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setFilteredProfiles(data)\r\n            })\r\n    }, [search])\r\n\r\n    const sendFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/send-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    const cancelFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/cancel-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    const handleRelationshipUpdate = e => {\r\n        e.stopPropagation()\r\n        const btn = e.target\r\n        if (btn.innerHTML === 'Solicitar') {\r\n            sendFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitado'\r\n            btn.className = 'btn btn-primary'\r\n        } else {\r\n            cancelFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitar'\r\n            btn.className = 'btn btn-secondary'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"profiles-filter-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"profiles-filter-input\"\r\n                    placeholder=\"Pesquisar\"\r\n                    value={search}\r\n                    onChange={e => setSearch(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"list-group\">\r\n                {profiles || filteredProfiles ?\r\n                    <div className=\"profile-list-container\">\r\n                        {filteredProfiles ? filteredProfiles.map(profile => {\r\n                            return (\r\n                                <Link to={`/user/${profile.slug}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                                    <li className=\"list-group-item profile-row filtered-profile\" key={profile.id}>\r\n                                        <div className=\"d-flex justify-content-between\">\r\n                                            <div className=\"profile-col\">\r\n                                                <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                    className=\"profile-img-med\"\r\n                                                    style={{ marginRight: '10px' }}\r\n                                                />\r\n                                                <div className=\"main-profile-data\">\r\n                                                    <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                                    <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"profile-col\">\r\n                                                {profile.bio}\r\n                                            </div>\r\n                                            <div className=\"profile-col\">\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                </Link>\r\n                            )\r\n                        }) : profiles && profiles.map(profile => {\r\n                            return (\r\n                                <li\r\n                                    className=\"list-group-item profile-row\"\r\n                                    key={profile.id}\r\n                                    onClick={() => window.location.href = `/user/${profile.slug}`}\r\n                                >\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <div className=\"profile-col\">\r\n                                            <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                className=\"profile-img-med\"\r\n                                                style={{ marginRight: '10px' }}\r\n                                            />\r\n                                            <div className=\"main-profile-data\">\r\n                                                <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                                <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"profile-col\">\r\n                                            {profile.bio}\r\n                                        </div>\r\n                                        <div className=\"profile-col\">\r\n                                            <button className=\"btn btn-secondary\" data-pk={profile.id} onClick={handleRelationshipUpdate}>\r\n                                                Solicitar\r\n                                    </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })\r\n                        }\r\n                    </div> :\r\n                    <div className=\"profiles-loader-container\">\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { handleLogout } from '../utils'\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <div className=\"header fixed-top\">\r\n            {!props.backArrow ? '' : <i class=\"fas fa-arrow-left left-arrow-icon\" onClick={() => window.history.back()}/>}\r\n            <strong>{props.page}</strong>\r\n            <a className=\"logout\" onClick={handleLogout}>Sair</a>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport Posts from './home-components/posts'\r\nimport Profiles from './home-components/profiles'\r\nimport Header from '../components/header'\r\n\r\nexport default function Home(props) {\r\n    const [page, setPage] = useState('Posts')\r\n    const pages = {\r\n        'Perfis': <Profiles />,\r\n        'Posts': <Posts />\r\n    }\r\n\r\n    document.title = 'Home / Napker'\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Home\" />\r\n            <div className=\"content\">\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ marginBottom: '10px', borderRadius: '20px' }}\r\n                    onClick={() => setPage(page === 'Perfis' ? 'Posts' : 'Perfis')}\r\n                >\r\n                    {page === 'Perfis' ? 'Ver posts' : 'Ver perfis'}\r\n                </button>\r\n                {pages[page]}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Header from '../components/header'\r\nimport { SERVER_URL } from '../settings'\r\nimport { csrftoken } from '../utils'\r\n\r\nexport default function Notifications(props) {\r\n    const [invites, setInvites] = useState(null)\r\n    const [postLikes, setPostLikes] = useState(null)\r\n    const [comments, setComments] = useState(null)\r\n\r\n    document.title = 'Notificações / Napker'\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myinvites`)\r\n            .then(response => response.json())\r\n            .then(data => setInvites(data))\r\n        fetch(`${SERVER_URL}/post-api/unvisualized-post-likes`)\r\n            .then(response => response.json())\r\n            .then(data => setPostLikes(data))\r\n        fetch(`${SERVER_URL}/post-api/unvisualized-post-comments`)\r\n            .then(response => response.json())\r\n            .then(data => setComments(data))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (postLikes && postLikes.length) {\r\n            fetch(`${SERVER_URL}/post-api/visualize-likes`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.updateNotificationsNumber()\r\n                })\r\n        }\r\n    }, [postLikes])\r\n\r\n    useEffect(() => {\r\n        if (comments && comments.length) {\r\n            fetch(`${SERVER_URL}/post-api/visualize-comments`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.updateNotificationsNumber()\r\n                })\r\n        }\r\n    }, [comments])\r\n\r\n    const replyRequest = e => {\r\n        e.stopPropagation()\r\n        const btn = e.target\r\n        const requestBody = {\r\n            'senderid': btn.dataset.senderid,\r\n            'reply': btn.dataset.reply\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/reply-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(requestBody)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                props.updateNotificationsNumber()\r\n            })\r\n        console.log(document.getElementById(btn.dataset.senderid))\r\n        document.getElementById(btn.dataset.senderid).remove()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Notificações\" />\r\n            <div className=\"content\">\r\n                <>\r\n                    {invites !== null && postLikes !== null && comments !== null ?\r\n                        <div className=\"list-group\">\r\n                            {!!invites.length || !!postLikes.length || !!comments.length ?\r\n                                <div id=\"notification-list\">\r\n                                    {!!invites.length &&\r\n                                        <div className=\"notifications-section\">\r\n                                            <h4>Solicitações de amizade</h4>\r\n                                            {invites.map(i => {\r\n                                                return (\r\n                                                    <li\r\n                                                        className=\"list-group-item profile-row\"\r\n                                                        id={i.sender.id}\r\n                                                        key={i.sender.id}\r\n                                                        onClick={() => window.location.href = `/user/${i.sender.slug}`}\r\n                                                    >\r\n                                                        <div className=\"d-flex justify-content-between\">\r\n                                                            <div className=\"profile-col\">\r\n                                                                <img src={`${SERVER_URL}${i.sender.photo}`}\r\n                                                                    className=\"profile-img-med\"\r\n                                                                    style={{ marginRight: '10px' }}\r\n                                                                />\r\n                                                                <div className=\"main-profile-data\">\r\n                                                                    <strong>{i.sender.first_name} {i.sender.last_name}</strong>\r\n                                                                    <p className=\"text-secondary\">@{i.sender.user.username}</p>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"profile-col\">\r\n                                                                {i.sender.bio}\r\n                                                            </div>\r\n                                                            <div className=\"profile-col\" style={{ justifyContent: 'space-between' }}>\r\n                                                                <button className=\"btn btn-primary btn-reply-fr\" data-senderid={i.sender.id} data-reply='accept' onClick={replyRequest}>Confirmar</button>\r\n                                                                <button className=\"btn btn-grey btn-reply-fr\" data-senderid={i.sender.id} data-reply='decline' onClick={replyRequest}>Excluir</button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </li>\r\n                                                )\r\n                                            })}\r\n                                        </div>\r\n                                    }\r\n\r\n                                    <br />\r\n\r\n                                    {!!postLikes.length &&\r\n                                        <div className=\"notifications-section\">\r\n                                            <h4>Curtidas</h4>\r\n                                            {postLikes.map(like => {\r\n                                                return (\r\n                                                    <li className=\"list-group-item profile-row\" key={like.profile.id}>\r\n                                                        <div className=\"d-flex justify-content-between\">\r\n                                                            <div className=\"profile-col\">\r\n                                                                <Link to={`/user/${like.profile.slug}`}>\r\n                                                                    <img src={`${SERVER_URL}${like.profile.photo}`}\r\n                                                                        className=\"profile-img-med\"\r\n                                                                        style={{ marginRight: '10px' }}\r\n                                                                    />\r\n                                                                </Link>\r\n                                                            </div>\r\n                                                            <div className=\"profile-col\" style={{ fontSize: 'larger' }}>\r\n                                                                <p>\r\n                                                                    <Link to={`/user/${like.profile.slug}`} style={{ color: \"#000\" }}>\r\n                                                                        @{like.profile.user.username}\r\n                                                                    </Link> curtiu o seu post.\r\n                                                                </p>\r\n                                                            </div>\r\n                                                            <div className=\"profile-col\" style={{ justifyContent: 'center' }}>\r\n                                                                <Link to={`/post/${like.post.id}`}>\r\n                                                                    <button className=\"btn btn-primary\">Ver post</button>\r\n                                                                </Link>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </li>\r\n                                                )\r\n                                            })}\r\n                                        </div>\r\n                                    }\r\n\r\n                                    <br />\r\n\r\n                                    {!!comments.length &&\r\n                                        <div className=\"notifications-section\">\r\n                                            <h4>Comentários</h4>\r\n                                            {comments.map(comment => {\r\n                                                return (\r\n                                                    <li className=\"list-group-item profile-row\" key={comment.author.id}>\r\n                                                        <div className=\"d-flex justify-content-between\">\r\n                                                            <div className=\"profile-col\">\r\n                                                                <Link to={`/user/${comment.author.slug}`}>\r\n                                                                    <img src={`${SERVER_URL}${comment.author.photo}`}\r\n                                                                        className=\"profile-img-med\"\r\n                                                                        style={{ marginRight: '10px' }}\r\n                                                                    />\r\n                                                                </Link>\r\n                                                            </div>\r\n                                                            <div className=\"profile-col\" style={{ fontSize: 'larger' }}>\r\n                                                                <p>\r\n                                                                    <Link to={`/user/${comment.author.slug}`} style={{ color: \"#000\" }}>\r\n                                                                        @{comment.author.user.username}\r\n                                                                    </Link> comentou seu post.\r\n                                                </p>\r\n                                                            </div>\r\n                                                            <div className=\"profile-col\" style={{ justifyContent: 'center' }}>\r\n                                                                <Link to={`/post/${comment.post.id}`}>\r\n                                                                    <button className=\"btn btn-primary\">Ver post</button>\r\n                                                                </Link>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </li>\r\n                                                )\r\n                                            })}\r\n                                        </div>\r\n                                    }\r\n                                </div> :\r\n                                <h3 style={{ marginTop: '100px' }}>Você não tem nenhuma notificação</h3>\r\n                            }\r\n                        </div> :\r\n                        <div className=\"posts-loader-container\">\r\n                            <div className=\"loader\" />\r\n                        </div>\r\n                    }\r\n                </>\r\n            </div>\r\n        </>\r\n    )\r\n}","import { SOCKET_URL } from '../../settings'\r\n\r\nclass WebSocketService {\r\n    static instance = null;\r\n    callbacks = {};\r\n  \r\n    static getInstance() {\r\n      if (!WebSocketService.instance) {\r\n        WebSocketService.instance = new WebSocketService();\r\n      }\r\n      return WebSocketService.instance;\r\n    }\r\n  \r\n    constructor() {\r\n      this.socketRef = null;\r\n    }\r\n  \r\n    connect(chatUrl) {\r\n      const path = `${SOCKET_URL}/ws/chat/${chatUrl}/`;\r\n      this.socketRef = new WebSocket(path);\r\n      this.socketRef.onopen = () => {\r\n        console.log(\"WebSocket open\");\r\n      };\r\n      this.socketNewMessage(JSON.stringify({\r\n        command: 'fetch-messages'\r\n      }))\r\n      this.socketRef.onmessage = e => {\r\n        this.socketNewMessage(e.data);\r\n      };\r\n      this.socketRef.onerror = e => {\r\n        console.log(e.message);\r\n      };\r\n      this.socketRef.onclose = () => {\r\n        console.log(\"WebSocket closed let's reopen\");\r\n        this.connect(chatUrl);\r\n      };\r\n    }\r\n  \r\n    disconnect() {\r\n      if (this.socketRef) this.socketRef.close();\r\n    }\r\n  \r\n    socketNewMessage(data) {\r\n      const parsedData = JSON.parse(data);\r\n      const command = parsedData.command;\r\n      if (Object.keys(this.callbacks).length === 0) {\r\n        return;\r\n      }\r\n      if (command === \"messages\") {\r\n        this.callbacks[command](parsedData.messages);\r\n      }\r\n      if (command === \"new_message\") {\r\n        this.callbacks[command](parsedData.message);\r\n      }\r\n    }\r\n  \r\n    fetchMessages(username, chatId) {\r\n      this.sendMessage({\r\n        command: \"fetch_messages\",\r\n        username: username,\r\n        chatId: chatId\r\n      });\r\n    }\r\n  \r\n    newChatMessage(message) {\r\n      this.sendMessage({\r\n        command: \"new_message\",\r\n        from: message.from,\r\n        content: message.content,\r\n        chatId: message.chatId\r\n      });\r\n    }\r\n  \r\n    addCallbacks(messagesCallback, newMessageCallback) {\r\n      this.callbacks[\"messages\"] = messagesCallback;\r\n      this.callbacks[\"new_message\"] = newMessageCallback;\r\n    }\r\n  \r\n    sendMessage(data) {\r\n      try {\r\n        this.socketRef.send(JSON.stringify({ ...data }));\r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n    }\r\n  \r\n    state() {\r\n      return this.socketRef ? this.socketRef.readyState : 0\r\n    }\r\n  }\r\n  \r\n  const WebSocketInstance = WebSocketService.getInstance();\r\n  \r\n  export default WebSocketInstance;","import React from 'react'\r\nimport Picker from 'emoji-picker-react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { csrftoken } from '../../utils'\r\nimport { SERVER_URL } from '../../settings'\r\nimport WebSocketInstance from './websocket'\r\n\r\nclass Chat extends React.Component {\r\n    initialiseChat() {\r\n        this.waitForSocketConnection(() => {\r\n            WebSocketInstance.addCallbacks(\r\n                this.setMessages.bind(this),\r\n                this.addMessage.bind(this)\r\n            )\r\n            WebSocketInstance.fetchMessages(\r\n                this.props.username,\r\n                this.props.chatId\r\n            );\r\n        });\r\n        if (this.props.chatId) WebSocketInstance.connect(this.props.chatId)\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            message: '',\r\n            messages: [],\r\n            otherUsername: this.props.otherUsername,\r\n            otherProfile: null\r\n        }\r\n        this.initialiseChat();\r\n    }\r\n\r\n    handleComponentChange = () => {\r\n        this.scrollToBottom();\r\n        if (this.state.otherUsername && (!this.state.otherProfile || this.state.otherProfile.user.username !== this.state.otherUsername)) {\r\n            fetch(`${SERVER_URL}/profile-api/user/${this.state.otherUsername}`)\r\n                .then(response => response.json())\r\n                .then(data => this.setState({\r\n                    otherProfile: data\r\n                }))\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n\r\n    componentDidUpdate() {\r\n        this.handleComponentChange()\r\n        document.querySelector('#chat-message-input') && document.querySelector('#chat-message-input').focus()\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (this.props.chatId !== newProps.chatId) {\r\n            WebSocketInstance.disconnect();\r\n            this.waitForSocketConnection(() => {\r\n                WebSocketInstance.fetchMessages(\r\n                    this.props.username,\r\n                    newProps.chatId\r\n                );\r\n            });\r\n            WebSocketInstance.connect(newProps.chatId);\r\n\r\n            this.props.updateMessagesComponent()\r\n            this.setState({\r\n                message: '',\r\n                otherUsername: newProps.otherUsername\r\n            })\r\n        }\r\n        if (newProps.chatId) {\r\n            fetch(`${SERVER_URL}/chat-api/read-messages`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                },\r\n                body: JSON.stringify({ chat_id: newProps.chatId })\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => console.log(data))\r\n        }\r\n        if (this.props.updateUnreadMessagesNumber) {\r\n            this.props.updateUnreadMessagesNumber()\r\n        }\r\n    }\r\n\r\n    waitForSocketConnection(callback) {\r\n        const component = this;\r\n        setTimeout(function () {\r\n            if (WebSocketInstance.state() === 1) {\r\n                console.log(\"Connection is made\");\r\n                callback();\r\n                return;\r\n            } else {\r\n                console.log(\"wait for connection...\");\r\n                component.waitForSocketConnection(callback);\r\n            }\r\n        }, 100);\r\n    }\r\n\r\n    setMessages(messages) {\r\n        this.setState({ messages: messages.reverse() })\r\n    }\r\n\r\n    addMessage(message) {\r\n        this.setState({ messages: [...this.state.messages, message] })\r\n    }\r\n\r\n    messageChangeHandler = e => {\r\n        this.setState({ message: e.target.value })\r\n        const el = document.querySelector('#chat-message-submit')\r\n        el.disabled = e.target.value === ''\r\n    };\r\n\r\n    sendMessageHandler = e => {\r\n        e.preventDefault()\r\n        const messageObject = {\r\n            from: this.props.username,\r\n            content: this.state.message,\r\n            chatId: this.props.chatId\r\n        };\r\n        WebSocketInstance.newChatMessage(messageObject)\r\n        this.setState({ message: '' })\r\n        document.querySelector('#chat-message-submit').disabled = true\r\n        this.props.updateMessagesComponent()\r\n\r\n    };\r\n\r\n    renderTimestamp = timestamp => {\r\n        const ts = new Date(timestamp)\r\n        const day = ts.getDate() >= 10 ? ts.getDate() : `0${ts.getDate()}`\r\n        const month = ts.getMonth() >= 10 ? ts.getMonth() : `0${ts.getMonth()}`\r\n        const hour = ts.getHours() >= 10 ? ts.getHours() : `0${ts.getHours()}`\r\n        const minute = ts.getMinutes() >= 10 ? ts.getMinutes() : `0${ts.getMinutes()}`\r\n        return `${day}/${month}/${ts.getFullYear()} - ${hour}:${minute}`\r\n    };\r\n\r\n    renderMessages = messages => {\r\n        const currentUser = this.props.username;\r\n        return messages.map(message => (\r\n            <li\r\n                key={message.id}\r\n                className={message.author === currentUser ? \"sent\" : \"received\"}\r\n            >\r\n                <p>\r\n                    {message.content}\r\n                    <br />\r\n                    <small>\r\n                        {this.renderTimestamp(message.timestamp)} {message.author === currentUser ? message.read ? '✓✓' : '✓' : ''}\r\n                    </small>\r\n                </p>\r\n            </li>\r\n        ));\r\n    };\r\n\r\n    scrollToBottom = () => {\r\n        if (document.querySelector('#chat-log')) {\r\n            const chatLog = document.querySelector('#chat-log')\r\n            chatLog.scrollTop = chatLog.scrollHeight\r\n        }\r\n    };\r\n\r\n    openCloseEmojiList = () => {\r\n        const el = document.querySelector('#emoji-list-container')\r\n        const style = el.style\r\n        if (!style.display) style.display = 'none'\r\n        style.display = style.display === 'none' ? 'initial' : 'none'\r\n    }\r\n\r\n    onEmojiSelect = (event, emojiObject) => {\r\n        this.setState({ message: this.state.message + emojiObject.emoji })\r\n        document.querySelector('#chat-message-submit').disabled = false\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.otherProfile ?\r\n                    <div className=\"d-flex flex-column justify-content-between align-items-center current-chat\">\r\n                        <div className=\"current-chat-header\">\r\n                            <Link to={`/user/${this.state.otherProfile.slug}`}>\r\n                                <img src={`${SERVER_URL}${this.state.otherProfile.photo}`}\r\n                                    className=\"profile-img-sm\"\r\n                                    style={{ marginRight: '5px' }}\r\n                                />\r\n                            </Link>\r\n                            <div className=\"d-flex flex-column align-items-start\" style={{ height: '52px' }}>\r\n                                <strong>{this.state.otherProfile.first_name} {this.state.otherProfile.last_name}</strong>\r\n                                <p className=\"text-secondary\">@{this.state.otherProfile.user.username}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div id=\"chat-log\">\r\n                            {this.state.messages ? this.renderMessages(this.state.messages) : ''}\r\n                        </div>\r\n                        <div className=\"emoji-list-container chat-emoji-list\" id=\"emoji-list-container\">\r\n                            <Picker onEmojiClick={this.onEmojiSelect} />\r\n                        </div>\r\n                        <form className=\"send-message-container\" onSubmit={this.sendMessageHandler}>\r\n                            <label\r\n                                className=\"far fa-smile\"\r\n                                onClick={this.openCloseEmojiList}\r\n                            />\r\n                            <input\r\n                                placeholder=\"Mensagem\"\r\n                                className=\"message-input\"\r\n                                id=\"chat-message-input\"\r\n                                value={this.state.message}\r\n                                autoFocus\r\n                                onChange={this.messageChangeHandler}\r\n                            />\r\n                            <button\r\n                                className=\"btn btn-primary chat-message-submit\"\r\n                                id=\"chat-message-submit\"\r\n                                disabled\r\n                            >\r\n                                <i class=\"fas fa-paper-plane\" />\r\n                            </button>\r\n                        </form>\r\n                    </div> :\r\n                    <div className=\"d-flex flex-column justify-content-center align-items-center current-chat\">\r\n                        <div>\r\n                            <strong style={{ fontSize: 'larger' }}>Você não tem uma conversa selecionada</strong>\r\n                            <p className=\"text-secondary\">Selecione uma existente ou comece uma nova</p>\r\n                            <button className=\"btn btn-primary\" onClick={() => this.props.openModal()}>Nova conversa</button>\r\n                        </div>\r\n                    </div>}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chat\r\n","import React from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Header from '../../components/header'\r\nimport Chat from './chat'\r\nimport { SERVER_URL } from '../../settings'\r\n\r\nclass Messages extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: null,\r\n            chatId: null,\r\n            activeChats: null,\r\n            activeChatsProfiles: null,\r\n            addingNewChat: false,\r\n            modalProfiles: [],\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps === this.props) return\r\n        const participants = { username: this.state.username, other_username: newProps.match.params.slug }\r\n        fetch(`${SERVER_URL}/chat-api/chat-id/${JSON.stringify(participants)}`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                chatId: data['chat_id']\r\n            }))\r\n    }\r\n\r\n    handleComponentChange() {\r\n        if (!this.state.username) {\r\n            fetch(`${SERVER_URL}/profile-api/logged-user`)\r\n                .then(response => response.json())\r\n                .then(data => this.setState({\r\n                    username: data.username\r\n                }))\r\n        }\r\n        if (!this.state.activeChatsProfiles && this.state.activeChatsProfiles !== []) {\r\n            this.fetchActiveChatProfiles()\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.title = 'Mensagens / Napker'\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    fetchActiveChatProfiles = () => {\r\n        fetch(`${SERVER_URL}/chat-api/active-chats-profiles`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (!this.state.username) return\r\n                this.setState({\r\n                    activeChats: data.chats.reverse(),\r\n                    activeChatsProfiles: data.profiles.reverse()\r\n                })\r\n            })\r\n    }\r\n\r\n    openModal = () => {\r\n        this.setState({\r\n            addingNewChat: true\r\n        })\r\n    }\r\n\r\n    setModalSearch = query => {\r\n        if (query === '') {\r\n            this.setState({\r\n                modalProfiles: []\r\n            })\r\n            return\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/users/${query}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    modalProfiles: data\r\n                })\r\n            })\r\n    }\r\n\r\n    setContactSearch = query => {\r\n        if (query === '') {\r\n            this.fetchActiveChatProfiles()\r\n            return\r\n        }\r\n        if (this.state.activeChatsProfiles) {\r\n            const filteredProfiles = this.state.activeChatsProfiles.filter(p => p.user.username.includes(query))\r\n            this.setState({\r\n                activeChatsProfiles: filteredProfiles\r\n            })\r\n        }\r\n    }\r\n\r\n    resetUnreadMessagesCounter = () => {\r\n        this.unreadMessagesCounter = 0\r\n    }\r\n\r\n    incrementUnreadMessagesCounter = () => {\r\n        this.unreadMessagesCounter++\r\n    }\r\n\r\n    setLastChatMessage = message => {\r\n        this.lastChatMessage = message\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header page=\"Mensagens\" />\r\n                <div className=\"content d-flex messages-wrapper\">\r\n                    <Modal show={this.state.addingNewChat}\r\n                        onHide={() => this.setState({ addingNewChat: false })}\r\n                        size=\"lg\">\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title><strong>Nova conversa</strong></Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body style={{ padding: '0' }}>\r\n                            <input className=\"modal-search-input\"\r\n                                placeholder=\"Pesquisar pessoas\"\r\n                                onChange={e => this.setModalSearch(e.target.value)}\r\n                            />\r\n                            <div className=\"list-group\" style={{ height: '400px', overflow: 'hidden', overflowY: 'scroll' }}>\r\n                                {this.state.modalProfiles && this.state.modalProfiles.map(profile => {\r\n                                    return (\r\n                                        <Link to={`/mensagens/${profile.slug}`}\r\n                                            style={{ color: '#000', textDecoration: 'none' }}\r\n                                            onClick={() => this.setState({\r\n                                                addingNewChat: false\r\n                                            })}\r\n                                        >\r\n                                            <li className=\"list-group-item profile-row modal-profile-li\" key={profile.id}>\r\n                                                <div className=\"d-flex justify-content-between\">\r\n                                                    <div className=\"profile-col\">\r\n                                                        <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                            className=\"profile-img-med\"\r\n                                                            style={{ marginRight: '10px' }}\r\n                                                        />\r\n                                                        <div className=\"main-profile-data\">\r\n                                                            <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                                            <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"profile-col\">\r\n                                                        {profile.bio}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </li>\r\n                                        </Link>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                    <div className=\"d-flex flex-column chats-list\">\r\n                        <div className=\"search-input-container\">\r\n                            <input placeholder=\"Pesquisar pessoas\" className=\"search-input\" onChange={e => this.setContactSearch(e.target.value)} />\r\n                            <i className=\"fas fa-plus add-icon\" onClick={this.openModal}></i>\r\n                        </div>\r\n                        <div className=\"list-group chats-container\">\r\n                            {this.state.activeChatsProfiles !== null ?\r\n                                this.state.activeChatsProfiles.map(profile => {\r\n                                    return (\r\n                                        <Link to={`/mensagens/${profile.slug}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                                            {this.resetUnreadMessagesCounter()}\r\n                                            <li className=\"list-item profile-chat-item\" style={{ whiteSpace: 'nowrap' }}>\r\n                                                <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                    className=\"profile-img-med\"\r\n                                                    style={{ marginRight: '10px' }}\r\n                                                />\r\n                                                <div className=\"d-flex flex-column align-items-start\">\r\n                                                    <div className=\"d-flex\" style={{ maxHeight: '30px' }}>\r\n                                                        <strong style={{ height: 'fit-content' }}>{profile.first_name} {profile.last_name}</strong>\r\n                                                        {this.state.activeChats[this.state.activeChatsProfiles.indexOf(profile)].messages.map(message => {\r\n                                                            const messages = this.state.activeChats[this.state.activeChatsProfiles.indexOf(profile)].messages\r\n                                                            if (messages[messages.length - 1] === message) this.setLastChatMessage(message.content)\r\n                                                            if (message.read || message.contact.user.username !== profile.user.username) return\r\n                                                            this.incrementUnreadMessagesCounter()\r\n                                                        })}\r\n                                                        {this.unreadMessagesCounter ? <p className=\"notifications-number\">{this.unreadMessagesCounter}</p> : ''}\r\n                                                        <p className=\"text-secondary\" style={{ marginLeft: '5px' }}>@{profile.user.username}</p>\r\n                                                    </div>\r\n                                                    <p className=\"text-secondary\">{this.lastChatMessage.slice(0, 40)}</p>\r\n                                                </div>\r\n                                            </li>\r\n                                        </Link>\r\n                                    )\r\n                                }) :\r\n                                <div className=\"messages-loader-container\">\r\n                                    <div className=\"loader\" />\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <Chat username={this.state.username}\r\n                        otherUsername={this.props.match.params.slug}\r\n                        chatId={this.state.chatId}\r\n                        openModal={this.openModal}\r\n                        updateUnreadMessagesNumber={this.props.updateUnreadMessagesNumber}\r\n                        updateMessagesComponent={this.fetchActiveChatProfiles}\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Messages","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport LikesModal from '../../components/likesmodal'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nexport default function Posts(props) {\r\n    const [myprofile, setMyProfile] = useState(null)\r\n    const [likesModal, setLikesModal] = useState({ isOpen: false, likes: null })\r\n    const profile = props.profile\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n    }, [])\r\n\r\n    const likeUnlikePost = e => {\r\n        e.stopPropagation()\r\n        const likeBtn = e.target\r\n        if (likeBtn.classList.contains('fas')) {\r\n            likeBtn.classList.remove('fas') //border heart\r\n            likeBtn.classList.add('far')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/unlike-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.fetchProfile()\r\n                })\r\n        } else {\r\n            likeBtn.classList.remove('far') //border heart\r\n            likeBtn.classList.add('fas')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/like-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.fetchProfile()\r\n                })\r\n        }\r\n    }\r\n\r\n    const hideLikesModal = () => {\r\n        setLikesModal({\r\n            isOpen: false,\r\n            likes: null\r\n        })\r\n    }\r\n\r\n    const deletePost = (e, postId) => {\r\n        e.stopPropagation()\r\n        const el = document.querySelector(`#profile-post-${postId}`)\r\n        if (window.confirm('Tem certeza que deseja apagar o post?\\nEssa ação é irreversível.')) {\r\n            el.style.animationPlayState = 'running'\r\n            el.addEventListener('animationend', () => {\r\n                props.fetchProfile()\r\n            })\r\n            fetch(`${SERVER_URL}/post-api/delete-post/${postId}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <LikesModal\r\n                isOpen={likesModal.isOpen}\r\n                likes={likesModal.likes}\r\n                hideModal={hideLikesModal}\r\n            />\r\n            <div className=\"post-list\">\r\n                {profile && myprofile ?\r\n                    <>\r\n                        {profile.posts.length ? profile.posts.map(post => {\r\n                            return (\r\n                                <li\r\n                                    className=\"post-container\"\r\n                                    key={post.id}\r\n                                    id={`profile-post-${post.id}`}\r\n                                    onClick={() => window.location.href = `/post/${post.id}`}\r\n                                >\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <div className=\"post-row\">\r\n                                            <div className=\"post-col\">\r\n                                                <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                    className=\"profile-img-med\"\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"post-col\">\r\n                                                <div style={{ height: '30px' }}>\r\n                                                    <strong>{profile.first_name} {profile.last_name} </strong>\r\n                                                    <p className=\"text-secondary d-inline-block\">\r\n                                                        @{profile.user.username} • {post.created.split('-').reverse().join('/')}\r\n                                                    </p>\r\n                                                </div>\r\n                                                <div style={{ textAlign: 'start' }}>\r\n                                                    {post.content}\r\n                                                </div>\r\n                                                {post.image &&\r\n                                                    <img src={`${SERVER_URL}${post.image}`} className=\"post-img\" />\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                        {profile.id == myprofile.id &&\r\n                                            <i\r\n                                                className=\"far fa-trash-alt trash-icon text-secondary\"\r\n                                                style={{ margin: '20px 20px 0 0' }}\r\n                                                onClick={e => deletePost(e, post.id)}\r\n                                            />}\r\n                                    </div>\r\n                                    <div className=\"post-actions\">\r\n                                        <p className=\"text-secondary\">\r\n                                            <Link\r\n                                                to={`/post/${post.id}/comment`}\r\n                                                className=\"text-secondary\"\r\n                                                onClick={e => e.stopPropagation()}\r\n                                            >\r\n                                                <i class=\"far fa-comment\" />\r\n                                            </Link>{post.comments.length}\r\n                                            {post.likes.map(like => like.profile.id).includes(myprofile.id) ?\r\n                                                <i class=\"fas fa-heart\"\r\n                                                    data-postid={post.id}\r\n                                                    onClick={likeUnlikePost}\r\n                                                />\r\n                                                :\r\n                                                <i class=\"far fa-heart\"\r\n                                                    data-postid={post.id}\r\n                                                    onClick={likeUnlikePost}\r\n                                                />}\r\n                                            <p className=\"post-likes-number\"\r\n                                                onClick={e => {\r\n                                                    e.stopPropagation()\r\n                                                    setLikesModal({ isOpen: true, likes: post.likes })\r\n                                                }\r\n                                                }\r\n                                            >\r\n                                                {post.likes.length}\r\n                                            </p>\r\n                                        </p>\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        }) :\r\n                            <div className=\"no-posts-container\">\r\n                                <h3 style={{ marginTop: '50px' }}>{profile.first_name} não tem posts</h3>\r\n                            </div>\r\n                        }\r\n                    </>\r\n                    :\r\n                    <div className=\"posts-loader-container\" >\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Interests(props) {\r\n    const profile = props.profile\r\n\r\n    return (\r\n        <div className=\"interests-page-container\">\r\n            <h3>Interesses públicos de {profile.first_name}</h3>\r\n            <div>\r\n                {profile && profile.interests.filter(i => i.public).map(interest => {\r\n                    return (\r\n                        <>\r\n                            {interest.title &&\r\n                                <>\r\n                                    <hr />\r\n                                    <li className=\"interest-item\">\r\n                                        {interest.title[0].toUpperCase() + interest.title.slice(1)}\r\n                                        <Link to={`/interesse/${interest.title}`}>\r\n                                            <button className=\"btn-secondary\" style={{ padding: '5px' }}>Pesquisar usuários</button>\r\n                                        </Link>\r\n                                    </li>\r\n                                </>\r\n                            }\r\n                        </>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nimport Header from '../components/header'\r\nimport Posts from './profile-components/posts'\r\nimport Interests from './profile-components/interests'\r\nimport { SERVER_URL } from '../settings'\r\nimport { csrftoken } from '../utils'\r\n\r\nexport default function MyProfile() {\r\n    const [profile, setProfile] = useState(null)\r\n    const [profileImagePreview, setProfileImagePreview] = useState(null)\r\n    const [isEditing, setIsEditing] = useState(false)\r\n    const [currentPageIsPosts, setCurrentPageIsPosts] = useState(true)\r\n\r\n    document.title = 'Perfil / Napker'\r\n\r\n    useEffect(() => {\r\n        fetchProfile()\r\n    }, [])\r\n\r\n    const fetchProfile = () => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setProfile(data)\r\n                setProfileImagePreview(`${SERVER_URL}${data.photo}`)\r\n            })\r\n    }\r\n\r\n    const switchPage = e => {\r\n        document.querySelectorAll('.profile-page-menu-item-active').forEach(el => {\r\n            el.classList.remove('profile-page-menu-item-active')\r\n        })\r\n        e.target.classList.add('profile-page-menu-item-active')\r\n        setCurrentPageIsPosts(!currentPageIsPosts)\r\n    }\r\n\r\n    const handleProfileImageChange = e => {\r\n        const reader = new FileReader()\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                setProfileImagePreview(reader.result)\r\n            }\r\n        }\r\n        try {\r\n            reader.readAsDataURL(e.target.files[0])\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n    const handleUsernameChange = e => {\r\n        fetch(`${SERVER_URL}/profile-api/user/${e.target.value}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.bool !== 'false') {\r\n                    document.querySelector('#username-taken').style.display = 'initial'\r\n                } else if (document.querySelector('#username-taken').style.display === 'initial') {\r\n                    document.querySelector('#username-taken').style.display = 'none'\r\n                }\r\n            })\r\n    }\r\n\r\n    const handleEmailChange = e => {\r\n        fetch(`${SERVER_URL}/profile-api/profile-by-email/${e.target.value}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.bool !== 'false') {\r\n                    document.querySelector('#email-taken').style.display = 'initial'\r\n                } else if (document.querySelector('#email-taken').style.display === 'initial') {\r\n                    document.querySelector('#email-taken').style.display = 'none'\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Perfil\" />\r\n            <div className=\"content\">\r\n                {profile ?\r\n                    <>\r\n                        <Modal show={isEditing}\r\n                            onHide={() => setIsEditing(false)}\r\n                            size=\"lg\">\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title>Editar perfil</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                <form action={`${SERVER_URL}/update-profile`} id=\"update-profile-form\" method=\"POST\" encType=\"multipart/form-data\">\r\n                                    <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n                                    <div className=\"d-flex flex-column justify-content-center align-items-center\" style={{ padding: '25px' }}>\r\n                                        <img src={profileImagePreview}\r\n                                            className=\"profile-img-big\"\r\n                                            style={{ marginBottom: '25px' }}\r\n                                        />\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            accept=\"image/png, image/jpg, image/jpeg\"\r\n                                            name=\"profile-photo\"\r\n                                            onChange={handleProfileImageChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"d-flex\">\r\n                                        <label htmlFor=\"first-name\" className=\"profile-label\">Nome:</label>\r\n                                        <input className=\"form-control\" type=\"text\" name=\"first-name\" id=\"first-name\" placeholder={profile.first_name} />\r\n                                    </div>\r\n                                    <div className=\"d-flex\">\r\n                                        <label htmlFor=\"last-name\" className=\"profile-label\">Sobrenome:</label>\r\n                                        <input className=\"form-control\" type=\"text\" name=\"last-name\" id=\"last-name\" placeholder={profile.last_name} />\r\n                                    </div>\r\n                                    <div className=\"d-flex\">\r\n                                        <label htmlFor=\"username\" className=\"profile-label\">Nome de usuário:</label>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            type=\"text\"\r\n                                            name=\"username\"\r\n                                            id=\"username\"\r\n                                            placeholder={profile.user.username}\r\n                                            onChange={handleUsernameChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div style={{ width: '100%', textAlign: 'center', padding: '3px' }}>\r\n                                        <span id=\"username-taken\">Nome de usuário já existe</span>\r\n                                    </div>\r\n                                    <div className=\"d-flex\">\r\n                                        <label htmlFor=\"email\" className=\"profile-label\">Email:</label>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            type=\"email\"\r\n                                            name=\"email\"\r\n                                            id=\"email\"\r\n                                            placeholder={profile.email}\r\n                                            onChange={handleEmailChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div style={{ width: '100%', textAlign: 'center', padding: '3px' }}>\r\n                                        <span id=\"email-taken\">Email já utilizado</span>\r\n                                    </div>\r\n                                    <div className=\"d-flex\">\r\n                                        <label htmlFor=\"gender\" className=\"profile-label\">Gênero:</label>\r\n                                        <select className=\"form-control\" name=\"gender\" id=\"gender\" placeholder={profile.gender}>\r\n                                            <option value=\"male\">Masculino</option>\r\n                                            <option value=\"female\">Feminino</option>\r\n                                            <option value=\"other\">Outro</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"d-flex\">\r\n                                        <label htmlFor=\"birth-date\" className=\"profile-label\">Data de nascimento:</label>\r\n                                        <input className=\"form-control\" type=\"date\" name=\"birth-date\" id=\"birth-date\" defaultValue={profile.birth_date} />\r\n                                    </div>\r\n                                    <div className=\"d-flex\">\r\n                                        <label htmlFor=\"bio\" className=\"profile-label\">Bio:</label>\r\n                                        <input className=\"form-control\" type=\"email\" name=\"bio\" id=\"bio\" placeholder={profile.bio} />\r\n                                    </div>\r\n                                </form>\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <button className=\"btn btn-grey\" onClick={() => setIsEditing(false)}>Fechar</button>\r\n                                <button className=\"btn btn-primary\" onClick={() => document.querySelector('form#update-profile-form').submit()}>Salvar</button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n                        <div className=\"profile-data-container\">\r\n                            <div className=\"d-flex flex-column align-items-start\">\r\n                                <p style={{ padding: '15px' }}>\r\n                                    <img src={`${SERVER_URL}${profile.photo}`}\r\n                                        className=\"profile-img-big\"\r\n                                        style={{ marginBottom: '25px' }}\r\n                                    />\r\n                                </p>\r\n                                <p style={{ marginBottom: 0 }}><strong>{profile.first_name} {profile.last_name}</strong></p>\r\n                                <p className=\"text-secondary\" style={{ marginTop: 0 }}>@{profile.user.username}</p>\r\n                                <p>{profile.bio}</p>\r\n                                <p className=\"text-secondary\">\r\n                                    <i className=\"far fa-calendar-alt\"></i> Entrou em {profile.created.split('-').reverse().join('/')}\r\n                                </p>\r\n                                <p>\r\n                                    <Link to={`/user/${profile.slug}/amigos`} style={{ color: '#000' }}>\r\n                                        <strong>{profile.friends.length}</strong> {profile.friends.length === 1 ? 'amigo' : 'amigos'}\r\n                                    </Link>\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"d-flex flex-column\">\r\n                                <button\r\n                                    className=\"btn btn-secondary\"\r\n                                    type=\"button\"\r\n                                    onClick={() => setIsEditing(true)}\r\n                                    style={{ marginBottom: '10px' }}\r\n                                >\r\n                                    Editar perfil\r\n                        </button>\r\n                                <Link to='/perfil/meus-interesses'>\r\n                                    <button className=\"btn btn-secondary\">Editar interesses</button>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"profile-page-menu\">\r\n                            <div className=\"profile-page-menu-item profile-page-menu-item-active\" onClick={switchPage}>\r\n                                Posts ({profile.posts.length})\r\n                    </div>\r\n                            <div className=\"profile-page-menu-item\" onClick={switchPage}>\r\n                                Interesses ({profile.interests.filter(i => i.public).length})\r\n                    </div>\r\n                        </div>\r\n                        {currentPageIsPosts ?\r\n                            <Posts profile={profile} fetchProfile={fetchProfile} /> :\r\n                            <Interests profile={profile} />\r\n                        }\r\n                    </> :\r\n                    <div className=\"profile-page-loader-container\">\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport Header from '../components/header'\r\n\r\nexport default function Settings() {\r\n\r\n    document.title = 'Configurações / Napker'\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Configurações\" />\r\n            <div className=\"content\">\r\n                Em desenvolvimento...\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Header from '../../components/header'\r\nimport Posts from '../profile-components/posts'\r\nimport Interests from '../profile-components/interests'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            profile: null,\r\n            relationshipButtonLabel: '',\r\n            currentPageIsPosts: true,\r\n        }\r\n        this.slug = this.props.match.params.slug\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.fetchProfile()\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${SERVER_URL}/profile-api/relationship/${this.slug}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                let label\r\n                switch (data.relationship) {\r\n                    case 'friends':\r\n                        label = 'Amigos'\r\n                        break\r\n                    case 'invite-sent':\r\n                        label = 'Solicitado'\r\n                        break\r\n                    case 'invite-received':\r\n                        label = 'Aceitar'\r\n                        break\r\n                    case 'none':\r\n                        label = 'Solicitar'\r\n                }\r\n                this.setState({\r\n                    relationshipButtonLabel: label\r\n                })\r\n            })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        let btn = document.querySelector('#profile-page-relationship-btn')\r\n        if (btn) {\r\n            switch (btn.innerHTML) {\r\n                case 'Amigos':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.onmouseenter = () => {\r\n                        if (btn.innerHTML === 'Amigos') btn.innerHTML = 'Remover'\r\n                    }\r\n                    btn.onmouseout = () => {\r\n                        if (btn.innerHTML === 'Remover') btn.innerHTML = 'Amigos'\r\n                    }\r\n                    btn.classList.add('friend-btn')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Solicitado':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Aceitar':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Solicitar':\r\n                    btn.classList.add('btn-secondary')\r\n                    btn.classList.remove('d-none')\r\n            }\r\n        }\r\n    }\r\n\r\n    fetchProfile = () => {\r\n        fetch(`${SERVER_URL}/profile-api/user/${this.slug}`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                profile: data\r\n            }))\r\n    }\r\n\r\n    sendFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/send-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    cancelFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/cancel-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    removeFromFriends = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/remove-from-friends`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    acceptFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/reply-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({\r\n                'senderid': pk,\r\n                'reply': 'accept'\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                this.props.updateNotificationsNumber()\r\n            })\r\n    }\r\n\r\n    handleRelationshipUpdate = e => {\r\n        const btn = e.target\r\n        if (btn.innerHTML === 'Solicitar') {\r\n            this.sendFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitado'\r\n            btn.className = 'btn btn-primary'\r\n        } else if (btn.innerHTML === 'Solicitado') {\r\n            this.cancelFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitar'\r\n            btn.className = 'btn btn-secondary'\r\n        } else if (btn.innerHTML === 'Amigos' || btn.innerHTML === 'Remover') {\r\n            if (window.confirm(`Remover @${this.state.profile.user.username} dos amigos?`)) {\r\n                this.removeFromFriends(btn.dataset.pk)\r\n                btn.innerHTML = 'Solicitar'\r\n                btn.className = 'btn btn-secondary'\r\n            }\r\n        } else if (btn.innerHTML === 'Aceitar') {\r\n            this.acceptFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Amigos'\r\n            btn.className = 'btn btn-primary'\r\n        }\r\n    }\r\n\r\n    switchPage = e => {\r\n        document.querySelectorAll('.profile-page-menu-item-active').forEach(el => {\r\n            el.classList.remove('profile-page-menu-item-active')\r\n        })\r\n        e.target.classList.add('profile-page-menu-item-active')\r\n        this.setState({\r\n            currentPageIsPosts: !this.state.currentPageIsPosts\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header page={this.state.profile ? `${this.state.profile.first_name} ${this.state.profile.last_name}` : 'Perfil'}\r\n                    backArrow={true}\r\n                />\r\n                {this.state.profile ?\r\n                    <div className=\"content\">\r\n                        <div className=\"d-flex justify-content-between align-items-center profile-data-container\">\r\n                            <div className=\"d-flex flex-column align-items-start\">\r\n                                <p style={{ padding: '15px' }}>\r\n                                    <img src={`${SERVER_URL}${this.state.profile.photo}`}\r\n                                        className=\"profile-img-big\"\r\n                                        style={{ marginBottom: '25px' }}\r\n                                    />\r\n                                </p>\r\n                                <p style={{ marginBottom: 0 }}><strong>{this.state.profile.first_name} {this.state.profile.last_name}</strong></p>\r\n                                <p className=\"text-secondary\" style={{ marginTop: 0 }}>@{this.state.profile.user.username}</p>\r\n                                <p>{this.state.profile.bio}</p>\r\n                                <p className=\"text-secondary\">\r\n                                    <i className=\"far fa-calendar-alt\"></i> Entrou em {this.state.profile.created.split('-').reverse().join('/')}\r\n                                </p>\r\n                                <p>\r\n                                    <Link to={`/user/${this.state.profile.slug}/amigos`} style={{ color: '#000' }}>\r\n                                        <strong>{this.state.profile.friends.length}</strong> {this.state.profile.friends.length === 1 ? 'amigo' : 'amigos'}\r\n                                    </Link>\r\n                                </p>\r\n                            </div>\r\n                            <div>\r\n                                <button className=\"btn d-none\"\r\n                                    id=\"profile-page-relationship-btn\"\r\n                                    data-pk={this.state.profile.id}\r\n                                    onClick={this.handleRelationshipUpdate}\r\n                                >{this.state.relationshipButtonLabel}</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"profile-page-menu\">\r\n                            <div className=\"profile-page-menu-item profile-page-menu-item-active\" onClick={this.switchPage}>\r\n                                Posts ({this.state.profile.posts.length})\r\n                            </div>\r\n                            <div className=\"profile-page-menu-item\" onClick={this.switchPage}>\r\n                                Interesses ({this.state.profile.interests.filter(i => i.public).length})\r\n                            </div>\r\n                        </div>\r\n                        {this.state.currentPageIsPosts ?\r\n                            <Posts profile={this.state.profile} fetchProfile={this.fetchProfile} /> :\r\n                            <Interests profile={this.state.profile} />\r\n                        }\r\n                    </div>\r\n                    :\r\n                    <div className=\"profile-page-loader-container\">\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile","import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nimport Header from '../../components/header'\r\nimport { SERVER_URL } from '../../settings'\r\n\r\nexport default function Friends() {\r\n    const [friends, setFriends] = useState([])\r\n    const [profile, setProfile] = useState(null)\r\n    const { slug } = useParams()\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/user/${slug}`)\r\n            .then(response => response.json())\r\n            .then(data => setProfile(data))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (profile) {\r\n            fetch(`${SERVER_URL}/profile-api/get-friends-profiles/${profile.slug}`)\r\n                .then(response => response.json())\r\n                .then(data => setFriends(data))\r\n        }\r\n    }, [profile])\r\n\r\n    return (\r\n        <>\r\n            <Header page={profile ? `${profile.first_name} ${profile.last_name} / Amigos` : 'Perfil / Amigos'}\r\n                backArrow={true}\r\n            />\r\n            <div className=\"content\">\r\n                <div className=\"list-group\">\r\n                    {friends && friends.map(friend => {\r\n                        return (\r\n                            <Link to={`/user/${friend.slug}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                                <li className=\"list-group-item profile-row filtered-profile\" key={friend.id}>\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <div className=\"profile-col\">\r\n                                            <img src={`${SERVER_URL}${friend.photo}`}\r\n                                                className=\"profile-img-med\"\r\n                                                style={{ marginRight: '10px' }}\r\n                                            />\r\n                                            <div className=\"main-profile-data\">\r\n                                                <strong>{friend.first_name} {friend.last_name}</strong>\r\n                                                <p className=\"text-secondary\">@{friend.user.username}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"profile-col\">\r\n                                            {friend.bio}\r\n                                        </div>\r\n                                        <div className=\"profile-col\">\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            </Link>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport Header from '../../components/header'\r\nimport { SERVER_URL } from '../../settings'\r\n\r\nexport default function InterestProfiles() {\r\n    const [profiles, setProfiles] = useState(null)\r\n    const { interest } = useParams()\r\n\r\n    document.title = `${interest[0].toUpperCase() + interest.slice(1)} / Napker`\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/interest-profile-list/${interest}`)\r\n            .then(response => response.json())\r\n            .then(data => setProfiles(data))\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Header\r\n                page={`Interesse / ${interest[0].toUpperCase() + interest.slice(1)}`}\r\n                backArrow={true}\r\n            />\r\n            <div className=\"content\">\r\n                <div className=\"list-group\">\r\n                    <div className=\"interests-title-container\">\r\n                        <h3>Perfis interessados em \"{interest}\"</h3>\r\n                    </div>\r\n                    {profiles !== null ? profiles.map(profile => {\r\n                        return (\r\n                            <li\r\n                                className=\"list-group-item profile-row filtered-profile\"\r\n                                key={profile.id}\r\n                                onClick={() => window.location.href = `/user/${profile.slug}`}\r\n                            >\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                    <div className=\"profile-col\">\r\n                                        <img src={`${SERVER_URL}${profile.photo}`}\r\n                                            className=\"profile-img-med\"\r\n                                            style={{ marginRight: '10px' }}\r\n                                        />\r\n                                        <div className=\"main-profile-data\">\r\n                                            <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                            <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"profile-col\">\r\n                                        {profile.bio}\r\n                                    </div>\r\n                                    <div className=\"profile-col\"></div>\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    }) :\r\n                        <div className=\"profiles-loader-container\">\r\n                            <div className=\"loader\" />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport { SERVER_URL } from '../../../settings'\r\n\r\nexport default function PublicInterests(props) {\r\n\r\n    useEffect(() => {\r\n        if (document.querySelector('.public-interests-container')) {\r\n            const tagContainer = document.querySelector('.public-tag-container');\r\n            const input = document.querySelector('.public-tag-container input');\r\n\r\n            let tags = props.myProfile.interests.filter(i => i.public).map(i => i.title);\r\n            const interestsInput = document.querySelector('#public-interests')\r\n            addTags()\r\n\r\n            function createTag(label) {\r\n                const div = document.createElement('div');\r\n                div.classList.add('tag');\r\n                div.classList.add('public-tag');\r\n                const span = document.createElement('span');\r\n                span.innerHTML = label;\r\n                const closeIcon = document.createElement('i');\r\n                closeIcon.classList.add('public-close-icon')\r\n                closeIcon.innerHTML = '×';\r\n                closeIcon.classList.add('material-icons')\r\n                closeIcon.setAttribute('data-item', label);\r\n                div.appendChild(span);\r\n                div.appendChild(closeIcon);\r\n                if (!interestsInput.value.includes(label)) interestsInput.value += ` ${label}`;\r\n                return div;\r\n            }\r\n\r\n            function clearTags() {\r\n                document.querySelectorAll('.public-tag').forEach(tag => {\r\n                    tag.parentElement.removeChild(tag);\r\n                });\r\n            }\r\n\r\n            function addTags() {\r\n                clearTags();\r\n                tags.sort()\r\n                tags.slice().reverse().forEach(tag => {\r\n                    tagContainer.prepend(createTag(tag));\r\n                });\r\n                props.setInterests(tags)\r\n            }\r\n\r\n            input.addEventListener('keydown', (e) => {\r\n                if (e.key === 'Enter') {\r\n                    e.target.value.split(',').forEach(tag => {\r\n                        tags.push(tag);\r\n                    });\r\n\r\n                    e.preventDefault()\r\n\r\n                    addTags();\r\n                    input.value = '';\r\n                    return false; //prevent the form to submit\r\n                }\r\n            });\r\n            document.addEventListener('click', (e) => {\r\n                if (e.target.classList.contains('public-close-icon')) {\r\n                    const tagLabel = e.target.getAttribute('data-item');\r\n                    const index = tags.indexOf(tagLabel);\r\n                    tags = [...tags.slice(0, index), ...tags.slice(index + 1)];\r\n                    addTags();\r\n                }\r\n            })\r\n\r\n            input.focus();\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"public-interests-container\">\r\n            <h3>Interesses públicos</h3>\r\n            <p>\r\n                Os interesses públicos são visíveis para os outros usuários.\r\n                Coloque aqui interesses que sem eles seu perfil ficaria incompleto.\r\n            </p>\r\n            <div class=\"tag-container public-tag-container\">\r\n                <input />\r\n                <input type=\"hidden\" name=\"public-interests\" id=\"public-interests\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport { SERVER_URL } from '../../../settings'\r\n\r\nexport default function PrivateInterests(props) {\r\n\r\n    useEffect(() => {\r\n        if (document.querySelector('.private-interests-container')) {\r\n            const tagContainer = document.querySelector('.private-tag-container');\r\n            const input = document.querySelector('.private-tag-container input');\r\n\r\n            let tags = props.myProfile.interests.filter(i => !i.public).map(i => i.title);\r\n            const interestsInput = document.querySelector('#private-interests')\r\n            addTags()\r\n\r\n            function createTag(label) {\r\n                const div = document.createElement('div');\r\n                div.classList.add('tag');\r\n                div.classList.add('private-tag');\r\n                const span = document.createElement('span');\r\n                span.innerHTML = label;\r\n                const closeIcon = document.createElement('i');\r\n                closeIcon.classList.add('private-close-icon')\r\n                closeIcon.classList.add('material-icons')\r\n                closeIcon.innerHTML = '×';\r\n                closeIcon.setAttribute('data-item', label);\r\n                div.appendChild(span);\r\n                div.appendChild(closeIcon);\r\n                if (!interestsInput.value.includes(label)) interestsInput.value += ` ${label}`;\r\n                return div;\r\n            }\r\n\r\n            function clearTags() {\r\n                document.querySelectorAll('.private-tag').forEach(tag => {\r\n                    tag.parentElement.removeChild(tag);\r\n                });\r\n            }\r\n\r\n            function addTags() {\r\n                clearTags();\r\n                tags.sort()\r\n                tags.slice().reverse().forEach(tag => {\r\n                    tagContainer.prepend(createTag(tag));\r\n                });\r\n                props.setInterests(tags)\r\n            }\r\n\r\n            input.addEventListener('keydown', (e) => {\r\n                if (e.key === 'Enter') {\r\n                    e.target.value.split(',').forEach(tag => {\r\n                        tags.push(tag);\r\n                    });\r\n\r\n                    e.preventDefault()\r\n\r\n                    addTags();\r\n                    input.value = '';\r\n                    return false; //prevent the form to submit\r\n                }\r\n            });\r\n            document.addEventListener('click', (e) => {\r\n                if (e.target.classList.contains('private-close-icon')) {\r\n                    const tagLabel = e.target.getAttribute('data-item');\r\n                    const index = tags.indexOf(tagLabel);\r\n                    tags = [...tags.slice(0, index), ...tags.slice(index + 1)];\r\n                    addTags();\r\n                }\r\n            })\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"private-interests-container\">\r\n            <h3>Interesses privados</h3>\r\n            <p>\r\n                Os interesses privados não são visíveis para os outros usuários.\r\n                Eles servem para aumentar a precisão das recomendações de perfis que\r\n                possuem o máximo de afinidade possível com você.\r\n            </p>\r\n            <div class=\"tag-container private-tag-container\">\r\n                <input />\r\n                <input type=\"hidden\" name=\"private-interests\" id=\"private-interests\" />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport Header from '../../../components/header'\r\nimport PublicInterests from './publicInterests'\r\nimport PrivateInterests from './privateInterests'\r\nimport { SERVER_URL } from '../../../settings'\r\nimport { csrftoken } from '../../../utils'\r\n\r\nexport default function EditInterests() {\r\n    const [myProfile, setMyProfile] = useState(null)\r\n    let [publicInterests, setPublicInterests] = [null, value => publicInterests = value]\r\n    let [privateInterests, setPrivateInterests] = [null, value => privateInterests = value]\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n    }, [])\r\n\r\n    const submitInterests = () => {\r\n        fetch(`${SERVER_URL}/profile-api/set-myinterests`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({\r\n                public_interests: publicInterests.sort(),\r\n                private_interests: privateInterests.sort()\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                document.querySelector('#interests-updated-message').style.display = 'block'\r\n                document.documentElement.scrollTop = 0\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Meus interesses\" backArrow={true} />\r\n            <div className=\"content\">\r\n                <p\r\n                    id=\"interests-updated-message\"\r\n                    style={{ background: '#fff', color: '#0f0', display: 'none', padding: '5px', fontSize: 'large', fontWeight: 'bold' }}\r\n                >\r\n                    Interesses atualizados com sucesso\r\n                </p>\r\n                {myProfile ?\r\n                    <div className=\"interests-page-container\">\r\n                        <PublicInterests\r\n                            myProfile={myProfile}\r\n                            setInterests={setPublicInterests}\r\n                        />\r\n\r\n                        <br />\r\n                        <hr />\r\n                        <br />\r\n\r\n                        <PrivateInterests\r\n                            myProfile={myProfile}\r\n                            setInterests={setPrivateInterests}\r\n                        />\r\n\r\n                        <hr />\r\n                        <button\r\n                            className=\"btn btn-primary\"\r\n                            onClick={submitInterests}\r\n                        >\r\n                            Salvar\r\n                        </button>\r\n                    </div> :\r\n                    <div className=\"edit-interests-loader-container\">\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Picker from 'emoji-picker-react'\r\n\r\nimport { csrftoken } from '../utils'\r\nimport { SERVER_URL } from '../settings'\r\n\r\nexport default function CommentModal(props) {\r\n    const [commentContent, setCommentContent] = useState('')\r\n\r\n    const post = props.post\r\n\r\n    const handleCommentChange = e => {\r\n        setCommentContent(e.target.value)\r\n        const el = document.querySelector('#comment-form-submit')\r\n        el.disabled = e.target.value === ''\r\n    }\r\n\r\n    const openCloseEmojiList = () => {\r\n        const el = document.querySelector('#emoji-list-container')\r\n        const style = el.style\r\n        if (!style.display) style.display = 'none'\r\n        style.display = style.display === 'none' ? 'initial' : 'none'\r\n    }\r\n\r\n    const onEmojiSelect = (event, emojiObject) => {\r\n        setCommentContent(commentContent + emojiObject.emoji)\r\n        document.querySelector('#comment-form-submit').disabled = false\r\n    }\r\n\r\n    return (\r\n        <Modal show={props.isOpen}\r\n            onHide={props.hideModal}\r\n            size=\"lg\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title><strong>Comentar</strong></Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"post-container\">\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <div className=\"post-row\">\r\n                            <div className=\"post-col\">\r\n                                <img src={`${SERVER_URL}${post.author.photo}`}\r\n                                    className=\"profile-img-med\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"post-col\">\r\n                                <div style={{ height: '30px' }}>\r\n                                    <strong>{post.author.first_name} {post.author.last_name} </strong>\r\n                                    <p className=\"text-secondary d-inline-block\">\r\n                                        @{post.author.user.username} • {post.created.split('-').reverse().join('/')}\r\n                                    </p>\r\n                                </div>\r\n                                <div style={{ textAlign: 'start' }}>\r\n                                    {post.content}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <form action={`${SERVER_URL}/post-api/comment-post/${post.id}`} method=\"POST\" className=\"comment-form\">\r\n                    <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n                    <label\r\n                        className=\"far fa-smile\"\r\n                        onClick={openCloseEmojiList}\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"comment-content\"\r\n                        value={commentContent}\r\n                        placeholder=\"Comente alguma coisa\"\r\n                        style={{ marginRight: '5px' }}\r\n                        onChange={handleCommentChange}\r\n                    />\r\n                    <div className=\"emoji-list-container chat-emoji-list\" id=\"emoji-list-container\">\r\n                        <Picker onEmojiClick={onEmojiSelect} />\r\n                    </div>\r\n                    <button\r\n                        className=\"btn btn-primary\"\r\n                        id=\"comment-form-submit\"\r\n                        type=\"submit\"\r\n                        disabled\r\n                    >\r\n                        Enviar\r\n                    </button>\r\n                </form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nimport CommentModal from '../../components/commentmodal'\r\nimport LikesModal from '../../components/likesmodal'\r\nimport Header from '../../components/header'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nexport default function Post(props) {\r\n    const [post, setPost] = useState(null)\r\n    const [profile, setProfile] = useState(null)\r\n    const [commentModalIsOpen, setCommentModalIsOpen] = useState(props.commentModalIsOpen)\r\n    const [postLikesModal, setPostLikesModal] = useState({ isOpen: false, likes: null })\r\n    const [commentLikesModal, setCommentLikesModal] = useState({ isOpen: false, likes: null })\r\n\r\n    const { id } = useParams()\r\n\r\n    useEffect(() => {\r\n        fetchPost()\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setProfile(data))\r\n    }, [])\r\n\r\n    const fetchPost = () => {\r\n        fetch(`${SERVER_URL}/post-api/post/${id}`)\r\n            .then(response => response.json())\r\n            .then(data => setPost(data))\r\n    }\r\n\r\n    const likeUnlikePost = e => {\r\n        const likeBtn = e.target\r\n        if (likeBtn.classList.contains('fas')) {\r\n            likeBtn.classList.remove('fas') //border heart\r\n            likeBtn.classList.add('far')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/unlike-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPost()\r\n                })\r\n        } else {\r\n            likeBtn.classList.remove('far') //border heart\r\n            likeBtn.classList.add('fas')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/like-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPost()\r\n                })\r\n        }\r\n    }\r\n\r\n    const likeUnlikeComment = e => {\r\n        const likeBtn = e.target\r\n        if (likeBtn.classList.contains('fas')) {\r\n            likeBtn.classList.remove('fas') //border heart\r\n            likeBtn.classList.add('far')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/unlike-comment/${likeBtn.dataset.commentid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPost()\r\n                })\r\n        } else {\r\n            likeBtn.classList.remove('far') //border heart\r\n            likeBtn.classList.add('fas')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/like-comment/${likeBtn.dataset.commentid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPost()\r\n                })\r\n        }\r\n    }\r\n\r\n    const deleteComment = (e, commentId) => {\r\n        e.stopPropagation()\r\n        const el = document.querySelector(`#post-comment-${commentId}`)\r\n        if (window.confirm('Tem certeza que deseja apagar o comentário?\\nEssa ação é irreversível.')) {\r\n            el.style.animationPlayState = 'running'\r\n            console.log(el, el.style.animationPlayState)\r\n            el.addEventListener('animationend', () => {\r\n                fetchPost()\r\n            })\r\n            fetch(`${SERVER_URL}/post-api/delete-comment/${commentId}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                })\r\n        }\r\n    }\r\n\r\n    const deletePost = (e, postId) => {\r\n        e.stopPropagation()\r\n        const el = document.querySelector(`#profile-post-${postId}`)\r\n        if (window.confirm('Tem certeza que deseja apagar o post?\\nEssa ação é irreversível.')) {\r\n            fetch(`${SERVER_URL}/post-api/delete-post/${postId}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    window.location.href = '/'\r\n                })\r\n        }\r\n    }\r\n\r\n    const hideCommentModal = () => {\r\n        setCommentModalIsOpen(false)\r\n    }\r\n\r\n    const hidePostLikesModal = () => {\r\n        setPostLikesModal({\r\n            isOpen: false,\r\n            likes: null\r\n        })\r\n    }\r\n\r\n    const hideCommentLikesModal = () => {\r\n        setCommentLikesModal({\r\n            isOpen: false,\r\n            likes: null\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {post &&\r\n                <CommentModal\r\n                    isOpen={commentModalIsOpen}\r\n                    hideModal={hideCommentModal}\r\n                    post={post}\r\n                />\r\n            }\r\n            <LikesModal\r\n                isOpen={postLikesModal.isOpen}\r\n                likes={postLikesModal.likes}\r\n                hideModal={hidePostLikesModal}\r\n            />\r\n            <LikesModal\r\n                isOpen={commentLikesModal.isOpen}\r\n                likes={commentLikesModal.likes}\r\n                hideModal={hideCommentLikesModal}\r\n            />\r\n            <Header page=\"Post\" backArrow={true} />\r\n            <div className=\"content\">\r\n                {post && profile ?\r\n                    <>\r\n                        <div className=\"post-container\">\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                <div className=\"post-row\">\r\n                                    <div className=\"post-col\">\r\n                                        <Link to={`/user/${post.author.slug}`}>\r\n                                            <img src={`${SERVER_URL}${post.author.photo}`}\r\n                                                className=\"profile-img-med\"\r\n                                            />\r\n                                        </Link>\r\n                                    </div>\r\n                                    <div className=\"post-col\">\r\n                                        <Link to={`/user/${post.author.slug}`} style={{ color: '#000' }}>\r\n                                            <div style={{ height: '30px' }}>\r\n                                                <strong>{post.author.first_name} {post.author.last_name} </strong>\r\n                                                <p className=\"text-secondary d-inline-block\">\r\n                                                    @{post.author.user.username} • {post.created.split('-').reverse().join('/')}\r\n                                                </p>\r\n                                            </div>\r\n                                        </Link>\r\n                                        <div style={{ textAlign: 'start', fontSize: 'larger' }}>\r\n                                            {post.content}\r\n                                        </div>\r\n                                        {post.image &&\r\n                                            <img src={`${SERVER_URL}${post.image}`} className=\"post-img\" />\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                {profile.id == post.author.id &&\r\n                                    <i\r\n                                        className=\"far fa-trash-alt trash-icon text-secondary\"\r\n                                        style={{ margin: '20px 20px 0 0' }}\r\n                                        onClick={e => deletePost(e, post.id)}\r\n                                    />}\r\n                            </div>\r\n                            <div className=\"post-actions\">\r\n                                <p className=\"text-secondary\" style={{ fontSize: 'large' }}>\r\n                                    <Link to={`/post/${id}/comment`} className=\"text-secondary\">\r\n                                        <i\r\n                                            class=\"far fa-comment\"\r\n                                            onClick={() => setCommentModalIsOpen(true)}\r\n                                        />\r\n                                    </Link>{post.comments.length}\r\n                                    {post.likes.map(like => like.profile.id).includes(profile.id) ?\r\n                                        <i class=\"fas fa-heart\"\r\n                                            data-postid={post.id}\r\n                                            onClick={likeUnlikePost}\r\n                                        />\r\n                                        :\r\n                                        <i class=\"far fa-heart\"\r\n                                            data-postid={post.id}\r\n                                            onClick={likeUnlikePost}\r\n                                        />}\r\n                                    <p className=\"post-likes-number\"\r\n                                        onClick={() => setPostLikesModal({ isOpen: true, likes: post.likes })}\r\n                                    >\r\n                                        {post.likes.length}\r\n                                    </p>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"comment-list\">\r\n                            {post.comments.map(comment => {\r\n                                return (\r\n                                    <li\r\n                                        className=\"post-container\"\r\n                                        id={`post-comment-${comment.id}`}\r\n                                        key={comment.id}\r\n                                    >\r\n                                        <div className=\"d-flex justify-content-between\">\r\n                                            <div className=\"post-row\">\r\n                                                <div className=\"post-col\">\r\n                                                    <Link to={`/user/${comment.author.slug}`}>\r\n                                                        <img src={`${SERVER_URL}${comment.author.photo}`}\r\n                                                            className=\"profile-img-med\"\r\n                                                        />\r\n                                                    </Link>\r\n                                                </div>\r\n                                                <div className=\"post-col\">\r\n                                                    <Link to={`/user/${comment.author.slug}`} style={{ color: '#000' }}>\r\n                                                        <div style={{ height: '30px' }}>\r\n                                                            <strong>{comment.author.first_name} {comment.author.last_name} </strong>\r\n                                                            <p className=\"text-secondary d-inline-block\">\r\n                                                                @{comment.author.user.username} • {comment.created.split('-').reverse().join('/')}\r\n                                                            </p>\r\n                                                        </div>\r\n                                                    </Link>\r\n                                                    <div style={{ textAlign: 'start' }}>\r\n                                                        {comment.content}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            {comment.author.id == profile.id &&\r\n                                                <i\r\n                                                    className=\"far fa-trash-alt trash-icon text-secondary\"\r\n                                                    style={{ margin: '20px 20px 0 0' }}\r\n                                                    onClick={e => deleteComment(e, comment.id)}\r\n                                                />}\r\n                                        </div>\r\n                                        <div className=\"post-actions\">\r\n                                            <p className=\"text-secondary\">\r\n                                                {comment.likes.map(like => like.profile.id).includes(profile.id) ?\r\n                                                    <i class=\"fas fa-heart\"\r\n                                                        data-commentid={comment.id}\r\n                                                        onClick={likeUnlikeComment}\r\n                                                    />\r\n                                                    :\r\n                                                    <i class=\"far fa-heart\"\r\n                                                        data-commentid={comment.id}\r\n                                                        onClick={likeUnlikeComment}\r\n                                                    />}\r\n                                                <p\r\n                                                    className=\"post-likes-number\"\r\n                                                    onClick={() => setPostLikesModal({ isOpen: true, likes: comment.likes })}\r\n                                                >\r\n                                                    {comment.likes.length}\r\n                                                </p>\r\n                                            </p>\r\n                                        </div>\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </> :\r\n                    <div className=\"posts-loader-container\" >\r\n                        <div className=\"loader\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\nimport Sidebar from './components/sidebar'\r\nimport Home from './pages/home'\r\nimport Notifications from './pages/notifications'\r\nimport Messages from './pages/messages/messages'\r\nimport MyProfile from './pages/myprofile'\r\nimport Settings from './pages/settings'\r\nimport Profile from './pages/home-components/profile'\r\nimport ProfileFriends from './pages/profile-components/friends'\r\nimport InterestProfiles from './pages/profile-components/interestprofiles'\r\nimport EditInterests from './pages/profile-components/edit-interests/editinterests'\r\nimport Post from './pages/home-components/post'\r\n\r\nimport { SERVER_URL } from './settings'\r\n\r\nexport default function App() {\r\n    const [invitesReceivedNumber, setInvitesReceived] = useState(0)\r\n    const [unvisualizedLikesNumber, setUnvisulaizedLikes] = useState(0)\r\n    const [unvisualizedCommentsNumber, setUnvisulaizedComments] = useState(0)\r\n    let notificationsNumber = invitesReceivedNumber + unvisualizedLikesNumber + unvisualizedCommentsNumber\r\n    const [unreadMessagesNumber, setUnreadMessagesNumber] = useState(0)\r\n\r\n    useEffect(() => {\r\n        updateNotificationsNumber()\r\n        updateUnreadMessagesNumber()\r\n    }, [])\r\n\r\n    const updateNotificationsNumber = () => {\r\n        fetch(`${SERVER_URL}/profile-api/myinvites`)\r\n            .then(response => response.json())\r\n            .then(data => setInvitesReceived(data.length))\r\n        fetch(`${SERVER_URL}/post-api/unvisualized-post-likes`)\r\n            .then(response => response.json())\r\n            .then(data => setUnvisulaizedLikes(data.length))\r\n        fetch(`${SERVER_URL}/post-api/unvisualized-post-comments`)\r\n            .then(response => response.json())\r\n            .then(data => setUnvisulaizedComments(data.length))\r\n    }\r\n\r\n    const updateUnreadMessagesNumber = () => {\r\n        fetch(`${SERVER_URL}/chat-api/all-unread-messages-number`)\r\n            .then(response => response.json())\r\n            .then(data => setUnreadMessagesNumber(data['unread_messages_number']))\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <Sidebar notificationsNumber={notificationsNumber} unreadMessagesNumber={unreadMessagesNumber} />\r\n            <div className=\"main-content\">\r\n                <Switch>\r\n                    <Route path=\"/notificações\" render={props => (\r\n                        <Notifications {...props} updateNotificationsNumber={updateNotificationsNumber} />\r\n                    )} />\r\n                    <Route path=\"/mensagens\" exact component={Messages} />\r\n                    <Route path=\"/mensagens/:slug\" render={props => (\r\n                        <Messages {...props} updateUnreadMessagesNumber={updateUnreadMessagesNumber} />\r\n                    )} />\r\n                    <Route path=\"/perfil\" exact component={MyProfile} />\r\n                    <Route path=\"/perfil/meus-interesses\" component={EditInterests} />\r\n                    <Route path=\"/configurações\" component={Settings} />\r\n                    <Route path=\"/user/:slug\" exact render={props => (\r\n                        <Profile {...props} updateNotificationsNumber={updateNotificationsNumber} />\r\n                    )} />\r\n                    <Route path=\"/user/:slug/amigos\" component={ProfileFriends} />\r\n                    <Route path=\"/post/:id\" exact component={Post} />\r\n                    <Route path=\"/post/:id/comment\" render={props => (\r\n                        <Post {...props} commentModalIsOpen={true} />\r\n                    )} />\r\n                    <Route path=\"/interesse/:interest\" component={InterestProfiles} />\r\n                    <Route path=\"/\" component={Home} />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './assets/profile.css'\r\nimport './assets/profiles.css'\r\nimport './assets/chat.css'\r\nimport './assets/posts.css'\r\nimport './assets/commentModal.css'\r\nimport './assets/style.css'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'))\r\n"],"sourceRoot":""}