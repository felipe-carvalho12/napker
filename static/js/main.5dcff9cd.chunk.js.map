{"version":3,"sources":["components/sidebar.js","settings.js","utils.js","pages/home-components/posts.js","pages/home-components/profiles.js","components/header.js","pages/home.js","pages/notifications.js","pages/messages/websocket.js","pages/messages/chat.js","pages/messages/messages.js","pages/myprofile.js","pages/settings.js","pages/home-components/profile.js","pages/profile-components/friends.js","pages/profile-components/posts.js","App.js","index.js"],"names":["Sidebar","props","className","to","style","textDecoration","notificationsNumber","unreadMessagesNumber","SERVER_URL","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","handleLogout","window","confirm","location","replace","Posts","useState","postContent","setPostContent","type","placeholder","marginRight","width","value","onChange","e","target","marginBottom","borderRadius","onClick","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","Profiles","profiles","setProfiles","filteredProfiles","setFilteredProfiles","search","setSearch","useEffect","handleRelationshipUpdate","pk","btn","innerHTML","dataset","cancelFriendRequest","map","profile","slug","color","key","id","src","photo","first_name","last_name","user","username","bio","data-pk","Header","backArrow","class","history","back","page","Home","setPage","pages","title","Notifications","invites","setInvites","replyRequest","requestBody","senderid","reply","updateNotificationsNumber","getElementById","removeChild","sender","justifyContent","data-senderid","data-reply","marginTop","WebSocketService","callbacks","this","socketRef","instance","chatUrl","path","WebSocket","onopen","socketNewMessage","command","onmessage","onerror","message","onclose","connect","close","parsedData","parse","Object","keys","messages","chatId","sendMessage","from","content","messagesCallback","newMessageCallback","send","err","readyState","WebSocketInstance","getInstance","Chat","messageChangeHandler","event","setState","sendMessageHandler","preventDefault","messageObject","state","newChatMessage","updateMessagesComponent","renderTimestamp","timestamp","ts","Date","getDate","getMonth","getFullYear","getHours","getMinutes","renderMessages","currentUser","author","read","scrollToBottom","querySelector","chatLog","scrollTop","scrollHeight","handleComponentChange","otherUsername","otherProfile","initialiseChat","waitForSocketConnection","addCallbacks","setMessages","bind","addMessage","fetchMessages","callback","component","setTimeout","reverse","newProps","disconnect","chat_id","updateUnreadMessagesNumber","height","onSubmit","position","right","fontSize","openModal","React","Component","Messages","fetchActiveChatProfiles","activeChats","chats","activeChatsProfiles","addingNewChat","setModalSearch","query","modalProfiles","setContactSearch","filter","p","includes","resetUnreadMessagesCounter","unreadMessagesCounter","incrementUnreadMessagesCounter","setLastChatMessage","lastChatMessage","participants","other_username","match","params","Modal","show","onHide","size","closeButton","Title","Body","padding","overflow","overflowY","whiteSpace","alt","maxHeight","indexOf","contact","marginLeft","slice","MyProfile","setProfile","isEditing","setIsEditing","profilePhotoStyle","display","heigh","action","accept","files","htmlFor","email","gender","defaultValue","birth_date","Footer","submit","created","join","friends","posts","Settings","Profile","sendFriendRequest","removeFromFriends","acceptFriendRequest","relationshipButtonLabel","label","relationship","classList","add","onmouseenter","onmouseout","remove","Friends","setFriends","useParams","friend","post","App","setNotificationsNumber","setUnreadMessagesNumber","render","exact","ProfileFriends","ProfilePosts","ReactDOM"],"mappings":"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","file":"static/js/main.5dcff9cd.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Sidebar(props) {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n                <h2>Napker</h2>\r\n            </Link>\r\n            <ul>\r\n                <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-home\"/>Home</li>\r\n                </Link>\r\n                <Link to=\"/notificações\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-bell\"/>Notificações{!props.notificationsNumber ? '' : <p className=\"notifications-number\">{props.notificationsNumber}</p>}</li>\r\n                </Link>\r\n                <Link to=\"/mensagens\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-envelope\"/>Mensagens{!props.unreadMessagesNumber ? '' : <p className=\"notifications-number\">{props.unreadMessagesNumber}</p>}</li>\r\n                </Link>\r\n                <Link to=\"/perfil\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-user\"/>Perfil</li>\r\n                </Link>\r\n                <Link to=\"/configurações\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-cog\"/>Configurações</li>\r\n                </Link>\r\n            </ul>\r\n        </div>\r\n    )\r\n}","const SERVER_URL = 'http://127.0.0.1:8000'\r\nconst SOCKET_URL = 'ws://127.0.0.1:8000'\r\n\r\nexport {SERVER_URL, SOCKET_URL}","import { SERVER_URL } from './settings'\r\n\r\nconst csrftoken = getCookie('csrftoken')\r\n\r\nfunction getCookie(name) {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nfunction handleLogout() {\r\n  const bool = window.confirm('Sair do Napker?\\nVocê poderá entrar novamente quando quiser.')\r\n  if (bool) {\r\n    window.location.replace(`${SERVER_URL}/logout`)\r\n  }\r\n}\r\n\r\nexport { csrftoken, handleLogout };","import React, { useState } from 'react'\r\n\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nexport default function Posts() {\r\n    const [postContent, setPostContent] = useState('')\r\n\r\n    const createPost = () => {\r\n        fetch(`${SERVER_URL}/post-api/create-post`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(postContent)\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data)\r\n            setPostContent('')\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"form-row d-inline-block\">\r\n                <div className=\"col d-flex\">\r\n                    <input type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"O que está acontecendo?\"\r\n                        style={{ marginRight: '5px', width: '400px' }}\r\n                        value={postContent}\r\n                        onChange={e => setPostContent(e.target.value)}\r\n                    />\r\n                    <button className=\"btn btn-primary\" style={{ marginBottom: '20px', borderRadius: '5px' }} onClick={createPost}>Postar</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"list-group\">\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nexport default function Profiles(props) {\r\n    const [profiles, setProfiles] = useState([])\r\n    const [filteredProfiles, setFilteredProfiles] = useState(null)\r\n    const [search, setSearch] = useState('')\r\n\r\n    useEffect(() => {\r\n        console.log('fetching profiles...')\r\n        fetch(`${SERVER_URL}/profile-api/profile-list`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setFilteredProfiles(null)\r\n                setProfiles(data)\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (search === '') {\r\n            setFilteredProfiles(null)\r\n            return\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/users/${search}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setFilteredProfiles(data)\r\n            })\r\n    }, [search])\r\n\r\n    const sendFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/send-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    const cancelFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/cancel-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    const handleRelationshipUpdate = e => {\r\n        const btn = e.target\r\n        if (btn.innerHTML === 'Solicitar') {\r\n            sendFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitado'\r\n            btn.className = 'btn btn-primary'\r\n        } else {\r\n            cancelFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitar'\r\n            btn.className = 'btn btn-secondary'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"form-row d-inline-block\">\r\n                <div className=\"col\">\r\n                    <input type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Pesquisar\"\r\n                        style={{ width: '400px' }}\r\n                        value={search}\r\n                        onChange={e => setSearch(e.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"list-group\">\r\n                {filteredProfiles ? filteredProfiles.map(profile => {\r\n                    return (\r\n                        <Link to={`/user/${profile.slug}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                            <li className=\"list-group-item profile-row filtered-profile\" key={profile.id}>\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                    <div className=\"profile-col\">\r\n                                        <img src={`${SERVER_URL}${profile.photo}`} />\r\n                                        <div className=\"main-profile-data\">\r\n                                            <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                            <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"profile-col\">\r\n                                        {profile.bio}\r\n                                    </div>\r\n                                    <div className=\"profile-col\">\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        </Link>\r\n                    )\r\n                }) : profiles && profiles.map(profile => {\r\n                    return (\r\n                        <li className=\"list-group-item profile-row\" key={profile.id}>\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                <div className=\"profile-col\">\r\n                                    <Link to={`/user/${profile.slug}`}>\r\n                                        <img src={`${SERVER_URL}${profile.photo}`} />\r\n                                    </Link>\r\n                                    <div className=\"main-profile-data\">\r\n                                        <Link to={`/user/${profile.slug}`} style={{ color: '#000' }}>\r\n                                            <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                        </Link>\r\n                                        <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"profile-col\">\r\n                                    {profile.bio}\r\n                                </div>\r\n                                <div className=\"profile-col\">\r\n                                    <button className=\"btn btn-secondary\" data-pk={profile.user.id} onClick={handleRelationshipUpdate}>\r\n                                        Solicitar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { handleLogout } from '../utils'\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <div className=\"header fixed-top\">\r\n            {!props.backArrow ? '' : <i class=\"fas fa-arrow-left profile-left-arrow\" onClick={() => window.history.back()}/>}\r\n            <strong>{props.page}</strong>\r\n            <a className=\"logout\" onClick={handleLogout}>Sair</a>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport Posts from './home-components/posts'\r\nimport Profiles from './home-components/profiles'\r\nimport Header from '../components/header'\r\n\r\nexport default function Home(props) {\r\n    const [page, setPage] = useState('Perfis')\r\n    const pages = {\r\n        'Perfis': <Profiles />,\r\n        'Posts': <Posts />\r\n    }\r\n\r\n    document.title = 'Home / Napker'\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Home\" />\r\n            <div className=\"content\">\r\n                <button type=\"button\" className=\"btn btn-primary\" style={{ marginRight: '50px', borderRadius: '20px' }} onClick={() => setPage(page === 'Perfis' ? 'Posts' : 'Perfis')}>\r\n                    {page === 'Perfis' ? 'Ver posts' : 'Ver perfis'}\r\n                </button>\r\n                {pages[page]}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Header from '../components/header'\r\nimport { SERVER_URL } from '../settings'\r\nimport { csrftoken } from '../utils'\r\n\r\nexport default function Notifications(props) {\r\n    const [invites, setInvites] = useState([])\r\n\r\n    document.title = 'Notificações / Napker'\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myinvites`)\r\n            .then(response => response.json())\r\n            .then(data => setInvites(data))\r\n    }, [])\r\n\r\n    const replyRequest = e => {\r\n        const btn = e.target\r\n        const requestBody = {\r\n            'senderid': btn.dataset.senderid,\r\n            'reply': btn.dataset.reply\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/reply-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(requestBody)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                props.updateNotificationsNumber()\r\n            })\r\n        document.getElementById('friend-request-list').removeChild(document.getElementById(btn.dataset.senderid))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Notificações\" />\r\n            <div className=\"content\">\r\n                <div className=\"list-group\" id='friend-request-list'>\r\n                    {invites.length ? invites.map(i => {\r\n                        return (\r\n                            <li className=\"list-group-item profile-row\" id={i.sender.id} key={i.sender.id}>\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                    <div className=\"profile-col\">\r\n                                        <Link to={`/user/${i.sender.slug}`}>\r\n                                            <img src={`${SERVER_URL}${i.sender.photo}`} />\r\n                                        </Link>\r\n                                        <div className=\"main-profile-data\">\r\n                                            <Link to={`/user/${i.sender.slug}`} style={{ color: '#000' }}>\r\n                                                <strong>{i.sender.first_name} {i.sender.last_name}</strong>\r\n                                            </Link>\r\n                                            <p className=\"text-secondary\">@{i.sender.user.username}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"profile-col\">\r\n                                        {i.sender.bio}\r\n                                    </div>\r\n                                    <div className=\"profile-col\" style={{ justifyContent: 'space-between' }}>\r\n                                        <button className=\"btn btn-primary btn-reply-fr\" data-senderid={i.sender.id} data-reply='accept' onClick={replyRequest}>Confirmar</button>\r\n                                        <button className=\"btn btn-grey btn-reply-fr\" data-senderid={i.sender.id} data-reply='decline' onClick={replyRequest}>Excluir</button>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    }) : <h3 style={{ marginTop: '100px' }}>Você ainda não tem nenhuma notificação</h3>}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import { SOCKET_URL } from '../../settings'\r\n\r\nclass WebSocketService {\r\n    static instance = null;\r\n    callbacks = {};\r\n  \r\n    static getInstance() {\r\n      if (!WebSocketService.instance) {\r\n        WebSocketService.instance = new WebSocketService();\r\n      }\r\n      return WebSocketService.instance;\r\n    }\r\n  \r\n    constructor() {\r\n      this.socketRef = null;\r\n    }\r\n  \r\n    connect(chatUrl) {\r\n      const path = `${SOCKET_URL}/ws/chat/${chatUrl}/`;\r\n      this.socketRef = new WebSocket(path);\r\n      this.socketRef.onopen = () => {\r\n        console.log(\"WebSocket open\");\r\n      };\r\n      this.socketNewMessage(JSON.stringify({\r\n        command: 'fetch-messages'\r\n      }))\r\n      this.socketRef.onmessage = e => {\r\n        this.socketNewMessage(e.data);\r\n      };\r\n      this.socketRef.onerror = e => {\r\n        console.log(e.message);\r\n      };\r\n      this.socketRef.onclose = () => {\r\n        console.log(\"WebSocket closed let's reopen\");\r\n        this.connect(chatUrl);\r\n      };\r\n    }\r\n  \r\n    disconnect() {\r\n      if (this.socketRef) this.socketRef.close();\r\n    }\r\n  \r\n    socketNewMessage(data) {\r\n      const parsedData = JSON.parse(data);\r\n      const command = parsedData.command;\r\n      if (Object.keys(this.callbacks).length === 0) {\r\n        return;\r\n      }\r\n      if (command === \"messages\") {\r\n        this.callbacks[command](parsedData.messages);\r\n      }\r\n      if (command === \"new_message\") {\r\n        this.callbacks[command](parsedData.message);\r\n      }\r\n    }\r\n  \r\n    fetchMessages(username, chatId) {\r\n      this.sendMessage({\r\n        command: \"fetch_messages\",\r\n        username: username,\r\n        chatId: chatId\r\n      });\r\n    }\r\n  \r\n    newChatMessage(message) {\r\n      this.sendMessage({\r\n        command: \"new_message\",\r\n        from: message.from,\r\n        content: message.content,\r\n        chatId: message.chatId\r\n      });\r\n    }\r\n  \r\n    addCallbacks(messagesCallback, newMessageCallback) {\r\n      this.callbacks[\"messages\"] = messagesCallback;\r\n      this.callbacks[\"new_message\"] = newMessageCallback;\r\n    }\r\n  \r\n    sendMessage(data) {\r\n      try {\r\n        this.socketRef.send(JSON.stringify({ ...data }));\r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n    }\r\n  \r\n    state() {\r\n      return this.socketRef ? this.socketRef.readyState : 0\r\n    }\r\n  }\r\n  \r\n  const WebSocketInstance = WebSocketService.getInstance();\r\n  \r\n  export default WebSocketInstance;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { csrftoken } from '../../utils'\r\nimport { SERVER_URL } from '../../settings'\r\nimport WebSocketInstance from './websocket'\r\n\r\nclass Chat extends React.Component {\r\n    initialiseChat() {\r\n        this.waitForSocketConnection(() => {\r\n            WebSocketInstance.addCallbacks(\r\n                this.setMessages.bind(this),\r\n                this.addMessage.bind(this)\r\n            )\r\n            WebSocketInstance.fetchMessages(\r\n                this.props.username,\r\n                this.props.chatId\r\n            );\r\n        });\r\n        if (this.props.chatId) WebSocketInstance.connect(this.props.chatId)\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            message: '',\r\n            messages: [],\r\n            otherUsername: this.props.otherUsername,\r\n            otherProfile: null\r\n        }\r\n        this.initialiseChat();\r\n    }\r\n\r\n    waitForSocketConnection(callback) {\r\n        const component = this;\r\n        setTimeout(function () {\r\n            if (WebSocketInstance.state() === 1) {\r\n                console.log(\"Connection is made\");\r\n                callback();\r\n                return;\r\n            } else {\r\n                console.log(\"wait for connection...\");\r\n                component.waitForSocketConnection(callback);\r\n            }\r\n        }, 100);\r\n    }\r\n\r\n    setMessages(messages) {\r\n        this.setState({ messages: messages.reverse() })\r\n    }\r\n\r\n    addMessage(message) {\r\n        this.setState({ messages: [...this.state.messages, message] })\r\n    }\r\n\r\n    messageChangeHandler = event => {\r\n        this.setState({ message: event.target.value });\r\n    };\r\n\r\n    sendMessageHandler = e => {\r\n        e.preventDefault();\r\n        const messageObject = {\r\n            from: this.props.username,\r\n            content: this.state.message,\r\n            chatId: this.props.chatId\r\n        };\r\n        WebSocketInstance.newChatMessage(messageObject);\r\n        this.setState({ message: \"\" });\r\n        this.props.updateMessagesComponent()\r\n        \r\n    };\r\n\r\n    renderTimestamp = timestamp => {\r\n        const ts = new Date(timestamp)\r\n        return `${ts.getDate()}/${ts.getMonth()}/${ts.getFullYear()} - ${ts.getHours()}:${ts.getMinutes()}`\r\n    };\r\n\r\n    renderMessages = messages => {\r\n        const currentUser = this.props.username;\r\n        return messages.map(message => (\r\n            <li\r\n                key={message.id}\r\n                className={message.author === currentUser ? \"sent\" : \"received\"}\r\n            >\r\n                <p>\r\n                    {message.content}\r\n                    <br />\r\n                    <small>\r\n                        {this.renderTimestamp(message.timestamp)} {message.author === currentUser ? message.read ? '✓✓' : '✓' : ''}\r\n                    </small>\r\n                </p>\r\n            </li>\r\n        ));\r\n    };\r\n\r\n    scrollToBottom = () => {\r\n        if (document.querySelector('#chat-log')) {\r\n            const chatLog = document.querySelector('#chat-log')\r\n            chatLog.scrollTop = chatLog.scrollHeight\r\n        }\r\n    };\r\n\r\n    handleComponentChange = () => {\r\n        this.scrollToBottom();\r\n        if (this.state.otherUsername && (!this.state.otherProfile || this.state.otherProfile.user.username !== this.state.otherUsername)) {\r\n            fetch(`${SERVER_URL}/profile-api/user/${this.state.otherUsername}`)\r\n                .then(response => response.json())\r\n                .then(data => this.setState({\r\n                    otherProfile: data\r\n                }))\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (this.props.chatId !== newProps.chatId) {\r\n            WebSocketInstance.disconnect();\r\n            this.waitForSocketConnection(() => {\r\n                WebSocketInstance.fetchMessages(\r\n                    this.props.username,\r\n                    newProps.chatId\r\n                );\r\n            });\r\n            WebSocketInstance.connect(newProps.chatId);\r\n\r\n            this.props.updateMessagesComponent()\r\n        }\r\n        if (this.state.otherUsername != newProps.otherUsername) {\r\n            this.setState({\r\n                otherUsername: newProps.otherUsername\r\n            })\r\n        }\r\n        if (newProps.chatId) {\r\n            fetch(`${SERVER_URL}/chat-api/read-messages`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                },\r\n                body: JSON.stringify({ chat_id: newProps.chatId })\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => console.log(data))\r\n        }\r\n        if (this.props.updateUnreadMessagesNumber) {\r\n            this.props.updateUnreadMessagesNumber()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.otherProfile ?\r\n                    <div className=\"d-flex flex-column justify-content-between align-items-center current-chat\">\r\n                        <div className=\"current-chat-header\">\r\n                            <Link to={`/user/${this.state.otherProfile.slug}`}>\r\n                                <img src={`${SERVER_URL}${this.state.otherProfile.photo}`} className=\"header-profile-img\" />\r\n                            </Link>\r\n                            <div className=\"d-flex flex-column align-items-start\" style={{ height: '52px' }}>\r\n                                <strong>{this.state.otherProfile.first_name} {this.state.otherProfile.last_name}</strong>\r\n                                <p className=\"text-secondary\">@{this.state.otherProfile.user.username}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div id=\"chat-log\">\r\n                            {this.state.messages ? this.renderMessages(this.state.messages) : ''}\r\n                        </div>\r\n                        <form className=\"send-message-container\" onSubmit={this.sendMessageHandler}>\r\n                            <input placeholder=\"Mensagem\" className=\"message-input\" id=\"chat-message-input\" value={this.state.message} onChange={this.messageChangeHandler} />\r\n                            <button className=\"btn btn-primary\" id=\"chat-message-submit\">\r\n                                <i class=\"fas fa-paper-plane\" style={{ position: 'relative', right: '10%' }} />\r\n                            </button>\r\n                        </form>\r\n                    </div> :\r\n                    <div className=\"d-flex flex-column justify-content-center align-items-center current-chat\">\r\n                        <div>\r\n                            <strong style={{ fontSize: 'larger' }}>Você não tem uma conversa selecionada</strong>\r\n                            <p className=\"text-secondary\">Selecione uma existente ou comece uma nova</p>\r\n                            <button className=\"btn btn-primary\" onClick={() => this.props.openModal()}>Nova conversa</button>\r\n                        </div>\r\n                    </div>}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chat","import React from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Header from '../../components/header'\r\nimport Chat from './chat'\r\nimport { SERVER_URL } from '../../settings'\r\n\r\nclass Messages extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: null,\r\n            chatId: null,\r\n            activeChats: null,\r\n            activeChatsProfiles: null,\r\n            addingNewChat: false,\r\n            modalProfiles: [],\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps === this.props) return\r\n        const participants = { username: this.state.username, other_username: newProps.match.params.slug }\r\n        fetch(`${SERVER_URL}/chat-api/chat-id/${JSON.stringify(participants)}`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                chatId: data['chat_id']\r\n            }))\r\n    }\r\n\r\n    handleComponentChange() {\r\n        if (!this.state.username) {\r\n            fetch(`${SERVER_URL}/profile-api/logged-user`)\r\n                .then(response => response.json())\r\n                .then(data => this.setState({\r\n                    username: data.username\r\n                }))\r\n        }\r\n        if (!this.state.activeChatsProfiles && this.state.activeChatsProfiles !== []) {\r\n            this.fetchActiveChatProfiles()\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.title = 'Mensagens / Napker'\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    fetchActiveChatProfiles = () => {\r\n        fetch(`${SERVER_URL}/chat-api/active-chats-profiles`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (!this.state.username) return\r\n                this.setState({\r\n                    activeChats: data.chats.reverse(),\r\n                    activeChatsProfiles: data.profiles.reverse()\r\n                })\r\n            })\r\n    }\r\n\r\n    openModal = () => {\r\n        this.setState({\r\n            addingNewChat: true\r\n        })\r\n    }\r\n\r\n    setModalSearch = query => {\r\n        if (query === '') {\r\n            this.setState({\r\n                modalProfiles: []\r\n            })\r\n            return\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/users/${query}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    modalProfiles: data\r\n                })\r\n            })\r\n    }\r\n\r\n    setContactSearch = query => {\r\n        if (query === '') {\r\n            this.fetchActiveChatProfiles()\r\n            return\r\n        }\r\n        if (this.state.activeChatsProfiles) {\r\n            const filteredProfiles = this.state.activeChatsProfiles.filter(p => p.user.username.includes(query))\r\n            this.setState({\r\n                activeChatsProfiles: filteredProfiles\r\n            })\r\n        }\r\n    }\r\n\r\n    resetUnreadMessagesCounter = () => {\r\n        this.unreadMessagesCounter = 0\r\n    }\r\n\r\n    incrementUnreadMessagesCounter = () => {\r\n        this.unreadMessagesCounter++\r\n    }\r\n\r\n    setLastChatMessage = message => {\r\n        this.lastChatMessage = message\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header page=\"Mensagens\" />\r\n                <div className=\"content d-flex messages-wrapper\">\r\n                    <Modal show={this.state.addingNewChat}\r\n                        onHide={() => this.setState({ addingNewChat: false })}\r\n                        size=\"lg\">\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title><strong>Nova conversa</strong></Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body style={{ padding: '0' }}>\r\n                            <input className=\"modal-search-input\"\r\n                                placeholder=\"Pesquisar pessoas\"\r\n                                onChange={e => this.setModalSearch(e.target.value)}\r\n                            />\r\n                            <div className=\"list-group\" style={{ height: '400px', overflow: 'hidden', overflowY: 'scroll' }}>\r\n                                {this.state.modalProfiles && this.state.modalProfiles.map(profile => {\r\n                                    return (\r\n                                        <Link to={`/mensagens/${profile.slug}`}\r\n                                            style={{ color: '#000', textDecoration: 'none' }}\r\n                                            onClick={() => this.setState({\r\n                                                addingNewChat: false\r\n                                            })}\r\n                                        >\r\n                                            <li className=\"list-group-item profile-row modal-profile-li\" key={profile.id}>\r\n                                                <div className=\"d-flex justify-content-between\">\r\n                                                    <div className=\"profile-col\">\r\n\r\n                                                        <img src={`${SERVER_URL}${profile.photo}`} />\r\n                                                        <div className=\"main-profile-data\">\r\n                                                            <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                                            <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"profile-col\">\r\n                                                        {profile.bio}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </li>\r\n                                        </Link>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                    <div className=\"d-flex flex-column chats-list\">\r\n                        <div className=\"search-input-container\">\r\n                            <input placeholder=\"Pesquisar pessoas\" className=\"search-input\" onChange={e => this.setContactSearch(e.target.value)} />\r\n                            <i className=\"fas fa-plus add-icon\" onClick={this.openModal}></i>\r\n                        </div>\r\n                        <div className=\"list-group chats-container\">\r\n                            {this.state.activeChatsProfiles && this.state.activeChatsProfiles.map(profile => {\r\n                                return (\r\n                                    <Link to={`/mensagens/${profile.user.username}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                                        {this.resetUnreadMessagesCounter()}\r\n                                        <li className=\"list-item profile-chat-item\" style={{ whiteSpace: 'nowrap' }}>\r\n                                            <img src={`${SERVER_URL}${profile.photo}`} alt=\"\" style={{ borderRadius: '50%', width: '64px', height: '64px', marginRight: '10px' }} />\r\n                                            <div className=\"d-flex flex-column align-items-start\">\r\n                                                <div className=\"d-flex\" style={{ maxHeight: '30px' }}>\r\n                                                    <strong style={{ height: 'fit-content' }}>{profile.first_name} {profile.last_name}</strong>\r\n                                                    {this.state.activeChats[this.state.activeChatsProfiles.indexOf(profile)].messages.map(message => {\r\n                                                        const messages = this.state.activeChats[this.state.activeChatsProfiles.indexOf(profile)].messages\r\n                                                        if (messages[messages.length - 1] === message) this.setLastChatMessage(message.content)\r\n                                                        if (message.read || message.contact.user.username !== profile.user.username) return\r\n                                                        this.incrementUnreadMessagesCounter()\r\n                                                    })}\r\n                                                    {this.unreadMessagesCounter ? <p className=\"notifications-number\">{this.unreadMessagesCounter}</p> : ''}\r\n                                                    <p className=\"text-secondary\" style={{ marginLeft: '5px' }}>@{profile.user.username}</p>\r\n                                                </div>\r\n                                                <p className=\"text-secondary\">{this.lastChatMessage.slice(0, 40)}</p>\r\n                                            </div>\r\n                                        </li>\r\n                                    </Link>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <Chat username={this.state.username}\r\n                        otherUsername={this.props.match.params.slug}\r\n                        chatId={this.state.chatId}\r\n                        openModal={this.openModal}\r\n                        updateUnreadMessagesNumber={this.props.updateUnreadMessagesNumber}\r\n                        updateMessagesComponent={this.fetchActiveChatProfiles}\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Messages","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Header from '../components/header'\r\nimport { SERVER_URL } from '../settings'\r\nimport { csrftoken } from '../utils'\r\n\r\nexport default function MyProfile() {\r\n    const [profile, setProfile] = useState(null)\r\n    const [isEditing, setIsEditing] = useState(false)\r\n    const profilePhotoStyle = {\r\n        borderRadius: '50%',\r\n        display: 'inline-block',\r\n        width: '96px',\r\n        heigh: '96px',\r\n        marginBottom: '25px'\r\n    }\r\n\r\n    document.title = 'Perfil / Napker'\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setProfile(data))\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Perfil\" />\r\n            {profile ? <div className=\"content\">\r\n                <Modal show={isEditing}\r\n                    onHide={() => setIsEditing(false)}\r\n                    size=\"lg\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Editar perfil</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <form action={`${SERVER_URL}/update-profile`} id=\"update-profile-form\" method=\"POST\">\r\n                            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n                            <div className=\"d-flex flex-column justify-content-center align-items-center\" style={{ padding: '25px' }}>\r\n                                <img src={`${SERVER_URL}${profile.photo}`} style={profilePhotoStyle} />\r\n                                <input type=\"file\" accept=\"image/png, image/jpg\" name=\"profile-photo\" onChange={e => console.log(e.target.files)} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"first-name\" className=\"profile-label\">Nome:</label>\r\n                                <input className=\"form-control\" type=\"text\" name=\"first-name\" id=\"first-name\" placeholder={profile.first_name} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"last-name\" className=\"profile-label\">Sobrenome:</label>\r\n                                <input className=\"form-control\" type=\"text\" name=\"last-name\" id=\"last-name\" placeholder={profile.last_name} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"username\" className=\"profile-label\">Nome de usuário:</label>\r\n                                <input className=\"form-control\" type=\"text\" name=\"username\" id=\"username\" placeholder={profile.user.username} />\r\n                                <span id=\"username-taken\">Nome de usuário já existe</span>\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"email\" className=\"profile-label\">Email:</label>\r\n                                <input className=\"form-control\" type=\"email\" name=\"email\" id=\"email\" placeholder={profile.email} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"gender\" className=\"profile-label\">Gênero:</label>\r\n                                <select className=\"form-control\" name=\"gender\" id=\"gender\" placeholder={profile.gender}>\r\n                                    <option value=\"male\">Masculino</option>\r\n                                    <option value=\"female\">Feminino</option>\r\n                                    <option value=\"other\">Outro</option>\r\n                                </select>\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"birth-date\" className=\"profile-label\">Data de nascimento:</label>\r\n                                <input className=\"form-control\" type=\"date\" name=\"birth-date\" id=\"birth-date\" defaultValue={profile.birth_date} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"bio\" className=\"profile-label\">Bio:</label>\r\n                                <input className=\"form-control\" type=\"email\" name=\"bio\" id=\"bio\" placeholder={profile.bio} />\r\n                            </div>\r\n                        </form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <button className=\"btn btn-grey\" onClick={() => setIsEditing(false)}>Fechar</button>\r\n                        <button className=\"btn btn-primary\" onClick={() => document.querySelector('form#update-profile-form').submit()}>Salvar</button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <div className=\"d-flex justify-content-between align-items-center profile-data-container\">\r\n                    <div className=\"d-flex flex-column align-items-start\">\r\n                        <p style={{ padding: '15px' }}><img src={`${SERVER_URL}${profile.photo}`} style={profilePhotoStyle} /></p>\r\n                        <p style={{ marginBottom: 0 }}><strong>{profile.first_name} {profile.last_name}</strong></p>\r\n                        <p className=\"text-secondary\" style={{ marginTop: 0 }}>@{profile.user.username}</p>\r\n                        <p>{profile.bio}</p>\r\n                        <p className=\"text-secondary\">\r\n                            <i className=\"far fa-calendar-alt\"></i> Entrou em {profile.created.split('-').reverse().join('/')}\r\n                        </p>\r\n                        <p>\r\n                            <Link to={`/user/${profile.slug}/amigos`} style={{ color: '#000' }}>\r\n                                <strong>{profile.friends.length}</strong> {profile.friends.length === 1 ? 'amigo' : 'amigos'}\r\n                            </Link>\r\n                        </p>\r\n                        <p>\r\n                            <Link to={`/user/${profile.slug}/posts`} style={{ color: '#000' }}>\r\n                                <strong>{profile.posts.length}</strong> {profile.posts.length === 1 ? 'post' : 'posts'}\r\n                            </Link>\r\n                        </p>\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"btn btn-secondary\" type=\"button\" onClick={() => setIsEditing(true)}>Editar perfil</button>\r\n                    </div>\r\n                </div>\r\n            </div > : ''}\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport Header from '../components/header'\r\n\r\nexport default function Settings() {\r\n\r\n    document.title = 'Configurações / Napker'\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Configurações\" />\r\n            <div className=\"content\">\r\n                Configurações\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Header from '../../components/header'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            profile: null,\r\n            relationshipButtonLabel: ''\r\n        }\r\n        this.slug = this.props.match.params.slug\r\n    }\r\n    profilePhotoStyle = {\r\n        borderRadius: '50%',\r\n        display: 'inline-block',\r\n        width: '96px',\r\n        heigh: '96px',\r\n        marginBottom: '25px'\r\n    }\r\n\r\n    componentWillMount() {\r\n        fetch(`${SERVER_URL}/profile-api/user/${this.slug}`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                profile: data\r\n            }))\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${SERVER_URL}/profile-api/relationship/${this.slug}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                let label\r\n                switch (data.relationship) {\r\n                    case 'friends':\r\n                        label = 'Amigos'\r\n                        break\r\n                    case 'invite-sent':\r\n                        label = 'Solicitado'\r\n                        break\r\n                    case 'invite-received':\r\n                        label = 'Aceitar'\r\n                        break\r\n                    case 'none':\r\n                        label = 'Solicitar'\r\n                }\r\n                this.setState({\r\n                    relationshipButtonLabel: label\r\n                })\r\n            })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        let btn = document.querySelector('#profile-page-relationship-btn')\r\n        if (btn) {\r\n            switch (btn.innerHTML) {\r\n                case 'Amigos':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.onmouseenter = () => {\r\n                        btn.innerHTML = 'Remover'\r\n                    }\r\n                    btn.onmouseout = () => {\r\n                        btn.innerHTML = 'Amigos'\r\n                    }\r\n                    btn.classList.add('friend-btn')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Solicitado':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Aceitar':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Solicitar':\r\n                    btn.classList.add('btn-secondary')\r\n                    btn.classList.remove('d-none')\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    sendFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/send-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    cancelFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/cancel-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    removeFromFriends = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/remove-from-friends`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    acceptFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/reply-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({\r\n                'senderid': pk,\r\n                'reply': 'accept'\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                this.props.updateNotificationsNumber()\r\n            })\r\n    }\r\n\r\n    handleRelationshipUpdate = e => {\r\n        const btn = e.target\r\n        if (btn.innerHTML === 'Solicitar') {\r\n            this.sendFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitado'\r\n            btn.className = 'btn btn-primary'\r\n        } else if (btn.innerHTML === 'Solicitado') {\r\n            this.cancelFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitar'\r\n            btn.className = 'btn btn-secondary'\r\n        } else if (btn.innerHTML === 'Amigos' || btn.innerHTML === 'Remover') {\r\n            if (window.confirm(`Remover @${this.state.profile.user.username} dos amigos?`)) {\r\n                this.removeFromFriends(btn.dataset.pk)\r\n                btn.innerHTML = 'Solicitar'\r\n                btn.className = 'btn btn-secondary'\r\n            }\r\n        } else if (btn.innerHTML === 'Aceitar') {\r\n            this.acceptFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Amigos'\r\n            btn.className = 'btn btn-primary'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header page={this.state.profile ? `${this.state.profile.first_name} ${this.state.profile.last_name}` : 'Perfil'}\r\n                    backArrow={true}\r\n                />\r\n                {!this.state.profile ? <></> : <>\r\n                    <div className=\"content\">\r\n                        <div className=\"d-flex justify-content-between align-items-center profile-data-container\">\r\n                            <div className=\"d-flex flex-column align-items-start\">\r\n                                <p style={{ padding: '15px' }}><img src={`${SERVER_URL}${this.state.profile.photo}`} style={this.profilePhotoStyle} /></p>\r\n                                <p style={{ marginBottom: 0 }}><strong>{this.state.profile.first_name} {this.state.profile.last_name}</strong></p>\r\n                                <p className=\"text-secondary\" style={{ marginTop: 0 }}>@{this.state.profile.user.username}</p>\r\n                                <p>{this.state.profile.bio}</p>\r\n                                <p className=\"text-secondary\">\r\n                                    <i className=\"far fa-calendar-alt\"></i> Entrou em {this.state.profile.created.split('-').reverse().join('/')}\r\n                                </p>\r\n                                <p>\r\n                                    <Link to={`/user/${this.state.profile.slug}/amigos`} style={{ color: '#000' }}>\r\n                                        <strong>{this.state.profile.friends.length}</strong> {this.state.profile.friends.length === 1 ? 'amigo' : 'amigos'}\r\n                                    </Link>\r\n                                </p>\r\n                                <p>\r\n                                    <Link to={`/user/${this.state.profile.slug}/posts`} style={{ color: '#000' }}>\r\n                                        <strong>{this.state.profile.posts.length}</strong> {this.state.profile.posts.length === 1 ? 'post' : 'posts'}\r\n                                    </Link>\r\n                                </p>\r\n                            </div>\r\n                            <div>\r\n                                <button className=\"btn d-none\"\r\n                                    id=\"profile-page-relationship-btn\"\r\n                                    data-pk={this.state.profile.user.id}\r\n                                    onClick={this.handleRelationshipUpdate}\r\n                                >{this.state.relationshipButtonLabel}</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile","import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nimport Header from '../../components/header'\r\nimport { SERVER_URL } from '../../settings'\r\n\r\nexport default function Friends() {\r\n    const [friends, setFriends] = useState([])\r\n    const [profile, setProfile] = useState(null)\r\n    const { slug } = useParams()\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/user/${slug}`)\r\n            .then(response => response.json())\r\n            .then(data => setProfile(data))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (profile) {\r\n            fetch(`${SERVER_URL}/profile-api/get-friends-profiles/${profile.slug}`)\r\n                .then(response => response.json())\r\n                .then(data => setFriends(data))\r\n        }\r\n    }, [profile])\r\n\r\n    return (\r\n        <>\r\n            <Header page={profile ? `${profile.first_name} ${profile.last_name} / Amigos` : 'Perfil / Amigos'}\r\n                backArrow={true}\r\n            />\r\n            <div className=\"content\">\r\n                <div className=\"lidt-group\">\r\n                    {friends && friends.map(friend => {\r\n                        return (\r\n                            <Link to={`/user/${friend.slug}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                                <li className=\"list-group-item profile-row filtered-profile\" key={friend.id}>\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <div className=\"profile-col\">\r\n                                            <img src={`${SERVER_URL}${friend.photo}`} />\r\n                                            <div className=\"main-profile-data\">\r\n                                                <strong>{friend.first_name} {friend.last_name}</strong>\r\n                                                <p className=\"text-secondary\">@{friend.user.username}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"profile-col\">\r\n                                            {friend.bio}\r\n                                        </div>\r\n                                        <div className=\"profile-col\">\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            </Link>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nimport Header from '../../components/header'\r\nimport { SERVER_URL } from '../../settings'\r\n\r\nexport default function Posts(props) {\r\n    const [profile, setProfile] = useState(null)\r\n    const { slug } = useParams()\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/user/${slug}`)\r\n            .then(response => response.json())\r\n            .then(data => setProfile(data))\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Header page={profile ? `${profile.first_name} ${profile.last_name} / Posts` : 'Perfil / Posts'}\r\n                backArrow={true}\r\n            />\r\n            <div className=\"content\">\r\n                <div className=\"lidt-group\">\r\n                    {profile && profile.posts.map(post => {\r\n                        return (\r\n                            <li className=\"list-group-item profile-row filtered-profile\" key={post.id}>\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                   <div className=\"profile-col\">\r\n                                        {post.content}\r\n                                   </div>\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\nimport Sidebar from './components/sidebar'\r\nimport Home from './pages/home'\r\nimport Notifications from './pages/notifications'\r\nimport Messages from './pages/messages/messages'\r\nimport MyProfile from './pages/myprofile'\r\nimport Settings from './pages/settings'\r\nimport Profile from './pages/home-components/profile'\r\nimport ProfileFriends from './pages/profile-components/friends'\r\nimport ProfilePosts from './pages/profile-components/posts'\r\n\r\nimport { SERVER_URL } from './settings'\r\n\r\nexport default function App() {\r\n    const [notificationsNumber, setNotificationsNumber] = useState(0)\r\n    const [unreadMessagesNumber, setUnreadMessagesNumber] = useState(0)\r\n\r\n    useEffect(() => {\r\n        updateNotificationsNumber()\r\n        updateUnreadMessagesNumber()\r\n    }, [])\r\n\r\n    const updateNotificationsNumber = () => {\r\n        fetch(`${SERVER_URL}/profile-api/myinvites`)\r\n            .then(response => response.json())\r\n            .then(data => setNotificationsNumber(data.length))\r\n    }\r\n\r\n    const updateUnreadMessagesNumber = () => {\r\n        fetch(`${SERVER_URL}/chat-api/all-unread-messages-number`)\r\n            .then(response => response.json())\r\n            .then(data => setUnreadMessagesNumber(data['unread_messages_number']))\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <Sidebar notificationsNumber={notificationsNumber} unreadMessagesNumber={unreadMessagesNumber} />\r\n            <div className=\"main-content\">\r\n                <Switch>\r\n                    <Route path=\"/notificações\" render={props => (\r\n                        <Notifications {...props} updateNotificationsNumber={updateNotificationsNumber} />\r\n                    )} />\r\n                    <Route path=\"/mensagens\" exact component={Messages} />\r\n                    <Route path=\"/mensagens/:slug\" render={props => (\r\n                        <Messages {...props} updateUnreadMessagesNumber={updateUnreadMessagesNumber} />\r\n                    )} />\r\n                    <Route path=\"/perfil\" component={MyProfile} />\r\n                    <Route path=\"/configurações\" component={Settings} />\r\n                    <Route path=\"/user/:slug\" exact render={props => (\r\n                        <Profile {...props} updateNotificationsNumber={updateNotificationsNumber} />\r\n                    )} />\r\n                    <Route path=\"/user/:slug/amigos\" component={ProfileFriends} />\r\n                    <Route path=\"/user/:slug/posts\" component={ProfilePosts} />\r\n                    <Route path=\"/\" component={Home} />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css'\n\nimport App from './App'\n\nReactDOM.render(<App />, document.querySelector('#root'))\n"],"sourceRoot":""}