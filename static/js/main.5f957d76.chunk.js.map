{"version":3,"sources":["components/sidebar.js","settings.js","components/likesmodal.js","utils.js","pages/home-components/posts.js","pages/home-components/profiles.js","components/header.js","pages/home.js","pages/notifications.js","pages/messages/websocket.js","pages/messages/chat.js","pages/messages/messages.js","pages/profile-components/posts.js","pages/profile-components/interests.js","pages/myprofile.js","pages/settings.js","pages/home-components/profile.js","pages/profile-components/friends.js","components/commentmodal.js","pages/home-components/post.js","App.js","index.js"],"names":["Sidebar","props","className","to","style","textDecoration","notificationsNumber","unreadMessagesNumber","SERVER_URL","LikesModal","Modal","show","isOpen","onHide","hideModal","size","Header","closeButton","Title","Body","height","overflow","overflowY","likes","map","like","profile","slug","color","onClick","key","id","src","photo","marginRight","first_name","last_name","user","username","bio","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","handleLogout","window","confirm","location","replace","Posts","fetchPosts","fetch","then","response","json","data","setState","posts","createPost","method","headers","body","JSON","stringify","content","state","postContent","console","log","likeUnlikePost","e","likeBtn","target","classList","contains","remove","add","dataset","postid","hideLikesModal","likesModal","this","type","placeholder","width","value","onChange","marginBottom","borderRadius","post","author","created","reverse","join","textAlign","image","class","comments","includes","data-postid","React","Component","Profiles","useState","profiles","setProfiles","filteredProfiles","setFilteredProfiles","search","setSearch","useEffect","handleRelationshipUpdate","pk","btn","innerHTML","cancelFriendRequest","data-pk","backArrow","history","back","page","Home","setPage","pages","title","Notifications","invites","setInvites","postLikes","setPostLikes","updateNotificationsNumber","replyRequest","requestBody","senderid","reply","getElementById","removeChild","sender","justifyContent","data-senderid","data-reply","fontSize","marginTop","WebSocketService","callbacks","socketRef","instance","chatUrl","path","WebSocket","onopen","socketNewMessage","command","onmessage","onerror","message","onclose","connect","close","parsedData","parse","Object","keys","messages","chatId","sendMessage","from","messagesCallback","newMessageCallback","send","err","readyState","WebSocketInstance","getInstance","Chat","messageChangeHandler","event","sendMessageHandler","preventDefault","messageObject","newChatMessage","updateMessagesComponent","renderTimestamp","timestamp","ts","Date","getDate","getMonth","getFullYear","getHours","getMinutes","renderMessages","currentUser","read","scrollToBottom","querySelector","chatLog","scrollTop","scrollHeight","handleComponentChange","otherUsername","otherProfile","initialiseChat","waitForSocketConnection","addCallbacks","setMessages","bind","addMessage","fetchMessages","callback","component","setTimeout","newProps","disconnect","chat_id","updateUnreadMessagesNumber","onSubmit","position","right","openModal","Messages","fetchActiveChatProfiles","activeChats","chats","activeChatsProfiles","addingNewChat","setModalSearch","query","modalProfiles","setContactSearch","filter","p","resetUnreadMessagesCounter","unreadMessagesCounter","incrementUnreadMessagesCounter","setLastChatMessage","lastChatMessage","participants","other_username","match","params","padding","whiteSpace","maxHeight","indexOf","contact","marginLeft","slice","setLikesModal","fetchProfile","Interests","interests","interest","toUpperCase","MyProfile","setProfile","isEditing","setIsEditing","currentPageIsPosts","setCurrentPageIsPosts","switchPage","querySelectorAll","forEach","el","action","accept","files","htmlFor","email","gender","defaultValue","birth_date","Footer","submit","friends","Settings","Profile","sendFriendRequest","removeFromFriends","acceptFriendRequest","relationshipButtonLabel","label","relationship","onmouseenter","onmouseout","Friends","setFriends","useParams","friend","CommentModal","commentPost","Post","setPost","commentModalIsOpen","setCommentModalIsOpen","fetchPost","likeUnlikeComment","commentid","comment","data-commentid","App","invitesReceivedNumber","setInvitesReceived","unvisualizedLikes","setUnvisulaizedLikes","setUnreadMessagesNumber","render","exact","ProfileFriends","ReactDOM"],"mappings":"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","file":"static/js/main.5f957d76.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Sidebar(props) {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n                <h2>Napker</h2>\r\n            </Link>\r\n            <ul>\r\n                <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-home\"/>Home</li>\r\n                </Link>\r\n                <Link to=\"/notificações\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-bell\"/>Notificações{!props.notificationsNumber ? '' : <p className=\"notifications-number\">{props.notificationsNumber}</p>}</li>\r\n                </Link>\r\n                <Link to=\"/mensagens\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-envelope\"/>Mensagens{!props.unreadMessagesNumber ? '' : <p className=\"notifications-number\">{props.unreadMessagesNumber}</p>}</li>\r\n                </Link>\r\n                <Link to=\"/perfil\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-user\"/>Perfil</li>\r\n                </Link>\r\n                <Link to=\"/configurações\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-cog\"/>Configurações</li>\r\n                </Link>\r\n            </ul>\r\n        </div>\r\n    )\r\n}","const SERVER_URL = 'http://127.0.0.1:8000'\r\nconst SOCKET_URL = 'ws://127.0.0.1:8000'\r\n\r\nexport {SERVER_URL, SOCKET_URL}","import React from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../settings'\r\n\r\nexport default function LikesModal(props) {\r\n    return (\r\n        <Modal show={props.isOpen}\r\n            onHide={props.hideModal}\r\n            size=\"lg\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title><strong>Curtidas</strong></Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"list-group\" style={{ height: '400px', overflow: 'hidden', overflowY: 'scroll' }}>\r\n                    {props.likes &&\r\n                        props.likes.map(like => like.profile).map(profile => {\r\n                            return (\r\n                                <Link to={`/user/${profile.slug}`}\r\n                                    style={{ color: '#000', textDecoration: 'none' }}\r\n                                    onClick={props.hideModal}\r\n                                >\r\n                                    <li className=\"list-group-item profile-row modal-profile-li\" key={profile.id}>\r\n                                        <div className=\"d-flex justify-content-between\">\r\n                                            <div className=\"profile-col\">\r\n                                                <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                    className=\"profile-img-med\"\r\n                                                    style={{ marginRight: '10px' }}\r\n                                                />\r\n                                                <div className=\"main-profile-data\">\r\n                                                    <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                                    <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"profile-col\">\r\n                                                {profile.bio}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                </Link>\r\n                            )\r\n                        })}\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}","import { SERVER_URL } from './settings'\r\n\r\nconst csrftoken = getCookie('csrftoken')\r\n\r\nfunction getCookie(name) {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nfunction handleLogout() {\r\n  const bool = window.confirm('Sair do Napker?\\nVocê poderá entrar novamente quando quiser.')\r\n  if (bool) {\r\n    window.location.replace(`${SERVER_URL}/logout`)\r\n  }\r\n}\r\n\r\nexport { csrftoken, handleLogout };","import React from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport LikesModal from '../../components/likesmodal'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nexport default class Posts extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            profile: null,\r\n            posts: null,\r\n            postContent: '',\r\n            likesModal: {\r\n                isOpen: false,\r\n                likes: null\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ profile: data }))\r\n        this.fetchPosts()\r\n    }\r\n\r\n    fetchPosts = () => {\r\n        fetch(`${SERVER_URL}/post-api/post-list`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ posts: data }))\r\n    }\r\n\r\n    createPost = () => {\r\n        fetch(`${SERVER_URL}/post-api/create-post`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({ content: this.state.postContent })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                this.setState({ postContent: '' })\r\n            })\r\n    }\r\n\r\n    likeUnlikePost = e => {\r\n        const likeBtn = e.target\r\n        if (likeBtn.classList.contains('fas')) {\r\n            likeBtn.classList.remove('fas') //border heart\r\n            likeBtn.classList.add('far')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/unlike-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    this.fetchPosts()\r\n                })\r\n        } else {\r\n            likeBtn.classList.remove('far') //border heart\r\n            likeBtn.classList.add('fas')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/like-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    this.fetchPosts()\r\n                })\r\n        }\r\n    }\r\n\r\n    hideLikesModal = () => {\r\n        this.setState({\r\n            likesModal: {\r\n                isOpen: false,\r\n                likes: null\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <LikesModal\r\n                    isOpen={this.state.likesModal.isOpen}\r\n                    likes={this.state.likesModal.likes}\r\n                    hideModal={this.hideLikesModal}\r\n                />\r\n                <div className=\"form-row d-inline-block\">\r\n                    <div className=\"col d-flex\">\r\n                        <input type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"O que está acontecendo?\"\r\n                            style={{ marginRight: '5px', width: '400px' }}\r\n                            value={this.state.postContent}\r\n                            onChange={e => this.setState({ postContent: e.target.value })}\r\n                        />\r\n                        <button className=\"btn btn-primary\" style={{ marginBottom: '20px', borderRadius: '5px' }} onClick={this.createPost}>Postar</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"post-list\">\r\n                    {this.state.posts && this.state.profile && this.state.posts.map(post => {\r\n                        return (\r\n                            <li className=\"post-container\" key={post.id}>\r\n                                <div className=\"post-row\">\r\n                                    <div className=\"post-col\">\r\n                                        <Link to={`/user/${post.author.slug}`}>\r\n                                            <img src={`${SERVER_URL}${post.author.photo}`}\r\n                                                className=\"profile-img-med\"\r\n                                            />\r\n                                        </Link>\r\n                                    </div>\r\n                                    <div className=\"post-col\">\r\n                                        <Link to={`/user/${post.author.slug}`} style={{ color: '#000' }}>\r\n                                            <div style={{ height: '30px' }}>\r\n                                                <strong>{post.author.first_name} {post.author.last_name} </strong>\r\n                                                <p className=\"text-secondary d-inline-block\">\r\n                                                    @{post.author.user.username} • {post.created.split('-').reverse().join('/')}\r\n                                                </p>\r\n                                            </div>\r\n                                        </Link>\r\n                                        <Link to={`/post/${post.id}`} style={{ color: '#000' }}>\r\n                                            <div style={{ textAlign: 'start' }}>\r\n                                                {post.content}\r\n                                            </div>\r\n                                            {post.image &&\r\n                                                <img src={`${SERVER_URL}${post.image}`} className=\"post-img\" />\r\n                                            }\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"post-actions\">\r\n                                    <p className=\"text-secondary\">\r\n                                        <Link\r\n                                            to={`/post/${post.id}/comment`}\r\n                                            className=\"text-secondary\"\r\n                                        >\r\n                                            <i\r\n                                                class=\"far fa-comment\"\r\n                                            />{post.comments.length}\r\n                                        </Link>\r\n                                        {post.likes.map(like => like.profile.id).includes(this.state.profile.id) ?\r\n                                            <i class=\"fas fa-heart\"\r\n                                                data-postid={post.id}\r\n                                                onClick={this.likeUnlikePost}\r\n                                            />\r\n                                            :\r\n                                            <i class=\"far fa-heart\"\r\n                                                data-postid={post.id}\r\n                                                onClick={this.likeUnlikePost}\r\n                                            />}\r\n                                        <p className=\"post-likes-number\"\r\n                                            onClick={() => this.setState({ likesModal: { isOpen: true, likes: post.likes } })}\r\n                                        >\r\n                                            {post.likes.length}\r\n                                        </p>\r\n                                    </p>\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nexport default function Profiles(props) {\r\n    const [profiles, setProfiles] = useState([])\r\n    const [filteredProfiles, setFilteredProfiles] = useState(null)\r\n    const [search, setSearch] = useState('')\r\n\r\n    useEffect(() => {\r\n        console.log('fetching profiles...')\r\n        fetch(`${SERVER_URL}/profile-api/profile-list`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setFilteredProfiles(null)\r\n                setProfiles(data)\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (search === '') {\r\n            setFilteredProfiles(null)\r\n            return\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/users/${search}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setFilteredProfiles(data)\r\n            })\r\n    }, [search])\r\n\r\n    const sendFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/send-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    const cancelFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/cancel-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    const handleRelationshipUpdate = e => {\r\n        const btn = e.target\r\n        if (btn.innerHTML === 'Solicitar') {\r\n            sendFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitado'\r\n            btn.className = 'btn btn-primary'\r\n        } else {\r\n            cancelFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitar'\r\n            btn.className = 'btn btn-secondary'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"form-row d-inline-block\">\r\n                <div className=\"col\">\r\n                    <input type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Pesquisar\"\r\n                        style={{ width: '400px' }}\r\n                        value={search}\r\n                        onChange={e => setSearch(e.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"list-group\">\r\n                {filteredProfiles ? filteredProfiles.map(profile => {\r\n                    return (\r\n                        <Link to={`/user/${profile.slug}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                            <li className=\"list-group-item profile-row filtered-profile\" key={profile.id}>\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                    <div className=\"profile-col\">\r\n                                        <img src={`${SERVER_URL}${profile.photo}`}\r\n                                            className=\"profile-img-med\"\r\n                                            style={{ marginRight: '10px' }}\r\n                                        />\r\n                                        <div className=\"main-profile-data\">\r\n                                            <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                            <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"profile-col\">\r\n                                        {profile.bio}\r\n                                    </div>\r\n                                    <div className=\"profile-col\">\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        </Link>\r\n                    )\r\n                }) : profiles && profiles.map(profile => {\r\n                    return (\r\n                        <li className=\"list-group-item profile-row\" key={profile.id}>\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                <div className=\"profile-col\">\r\n                                    <Link to={`/user/${profile.slug}`}>\r\n                                        <img src={`${SERVER_URL}${profile.photo}`}\r\n                                            className=\"profile-img-med\"\r\n                                            style={{ marginRight: '10px' }}\r\n                                        />\r\n                                    </Link>\r\n                                    <div className=\"main-profile-data\">\r\n                                        <Link to={`/user/${profile.slug}`} style={{ color: '#000' }}>\r\n                                            <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                        </Link>\r\n                                        <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"profile-col\">\r\n                                    {profile.bio}\r\n                                </div>\r\n                                <div className=\"profile-col\">\r\n                                    <button className=\"btn btn-secondary\" data-pk={profile.user.id} onClick={handleRelationshipUpdate}>\r\n                                        Solicitar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { handleLogout } from '../utils'\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <div className=\"header fixed-top\">\r\n            {!props.backArrow ? '' : <i class=\"fas fa-arrow-left left-arrow-icon\" onClick={() => window.history.back()}/>}\r\n            <strong>{props.page}</strong>\r\n            <a className=\"logout\" onClick={handleLogout}>Sair</a>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport Posts from './home-components/posts'\r\nimport Profiles from './home-components/profiles'\r\nimport Header from '../components/header'\r\n\r\nexport default function Home(props) {\r\n    const [page, setPage] = useState('Posts')\r\n    const pages = {\r\n        'Perfis': <Profiles />,\r\n        'Posts': <Posts />\r\n    }\r\n\r\n    document.title = 'Home / Napker'\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Home\" />\r\n            <div className=\"content\">\r\n                <button type=\"button\" className=\"btn btn-primary\" style={{ marginRight: '50px', borderRadius: '20px' }} onClick={() => setPage(page === 'Perfis' ? 'Posts' : 'Perfis')}>\r\n                    {page === 'Perfis' ? 'Ver posts' : 'Ver perfis'}\r\n                </button>\r\n                {pages[page]}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Header from '../components/header'\r\nimport { SERVER_URL } from '../settings'\r\nimport { csrftoken } from '../utils'\r\n\r\nexport default function Notifications(props) {\r\n    const [invites, setInvites] = useState([])\r\n    const [postLikes, setPostLikes] = useState([])\r\n    let notificationsNumber = invites.length + postLikes.length\r\n\r\n    document.title = 'Notificações / Napker'\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myinvites`)\r\n            .then(response => response.json())\r\n            .then(data => setInvites(data))\r\n        fetch(`${SERVER_URL}/post-api/unvisualized-post-likes`)\r\n            .then(response => response.json())\r\n            .then(data => setPostLikes(data))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (postLikes.length) {\r\n            fetch(`${SERVER_URL}/post-api/visualize-likes`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.updateNotificationsNumber()\r\n                })\r\n        }\r\n    }, [postLikes])\r\n\r\n    const replyRequest = e => {\r\n        const btn = e.target\r\n        const requestBody = {\r\n            'senderid': btn.dataset.senderid,\r\n            'reply': btn.dataset.reply\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/reply-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(requestBody)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                props.updateNotificationsNumber()\r\n            })\r\n        document.getElementById('friend-request-list').removeChild(document.getElementById(btn.dataset.senderid))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Notificações\" />\r\n            <div className=\"content\">\r\n                <div className=\"list-group\" id='friend-request-list'>\r\n                    {!!invites.length &&\r\n                        <>\r\n                            <h4>Solicitações de amizade</h4>\r\n                            {invites.map(i => {\r\n                                return (\r\n                                    <li className=\"list-group-item profile-row\" id={i.sender.id} key={i.sender.id}>\r\n                                        <div className=\"d-flex justify-content-between\">\r\n                                            <div className=\"profile-col\">\r\n                                                <Link to={`/user/${i.sender.slug}`}>\r\n                                                    <img src={`${SERVER_URL}${i.sender.photo}`}\r\n                                                        className=\"profile-img-med\"\r\n                                                        style={{ marginRight: '10px' }}\r\n                                                    />\r\n                                                </Link>\r\n                                                <div className=\"main-profile-data\">\r\n                                                    <Link to={`/user/${i.sender.slug}`} style={{ color: '#000' }}>\r\n                                                        <strong>{i.sender.first_name} {i.sender.last_name}</strong>\r\n                                                    </Link>\r\n                                                    <p className=\"text-secondary\">@{i.sender.user.username}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"profile-col\">\r\n                                                {i.sender.bio}\r\n                                            </div>\r\n                                            <div className=\"profile-col\" style={{ justifyContent: 'space-between' }}>\r\n                                                <button className=\"btn btn-primary btn-reply-fr\" data-senderid={i.sender.id} data-reply='accept' onClick={replyRequest}>Confirmar</button>\r\n                                                <button className=\"btn btn-grey btn-reply-fr\" data-senderid={i.sender.id} data-reply='decline' onClick={replyRequest}>Excluir</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                        </>\r\n                    }\r\n\r\n                    <br />\r\n\r\n                    {!!postLikes.length &&\r\n                        <>\r\n                            <h4>Curtidas</h4>\r\n                            {postLikes.map(like => {\r\n                                return (\r\n                                    <li className=\"list-group-item profile-row\" key={like.profile.id}>\r\n                                        <div className=\"d-flex justify-content-between\">\r\n                                            <div className=\"profile-col\">\r\n                                                <Link to={`/user/${like.profile.slug}`}>\r\n                                                    <img src={`${SERVER_URL}${like.profile.photo}`}\r\n                                                        className=\"profile-img-med\"\r\n                                                        style={{ marginRight: '10px' }}\r\n                                                    />\r\n                                                </Link>\r\n                                            </div>\r\n                                            <div className=\"profile-col\" style={{ fontSize: 'larger' }}>\r\n                                                <p>\r\n                                                    <Link to={`/user/${like.profile.slug}`} style={{ color: \"#000\" }}>\r\n                                                        @{like.profile.user.username}\r\n                                                    </Link> curtiu o seu post.\r\n                                                </p>\r\n                                            </div>\r\n                                            <div className=\"profile-col\" style={{ justifyContent: 'center' }}>\r\n                                                <Link to={`/post/${like.post.id}`}>\r\n                                                    <button className=\"btn btn-primary\">Ver post</button>\r\n                                                </Link>\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                        </>\r\n                    }\r\n\r\n                    <br />\r\n\r\n                </div>\r\n                {!notificationsNumber &&\r\n                    <h3 style={{ marginTop: '100px' }}>Você não tem nenhuma notificação</h3>}\r\n            </div>\r\n        </>\r\n    )\r\n}","import { SOCKET_URL } from '../../settings'\r\n\r\nclass WebSocketService {\r\n    static instance = null;\r\n    callbacks = {};\r\n  \r\n    static getInstance() {\r\n      if (!WebSocketService.instance) {\r\n        WebSocketService.instance = new WebSocketService();\r\n      }\r\n      return WebSocketService.instance;\r\n    }\r\n  \r\n    constructor() {\r\n      this.socketRef = null;\r\n    }\r\n  \r\n    connect(chatUrl) {\r\n      const path = `${SOCKET_URL}/ws/chat/${chatUrl}/`;\r\n      this.socketRef = new WebSocket(path);\r\n      this.socketRef.onopen = () => {\r\n        console.log(\"WebSocket open\");\r\n      };\r\n      this.socketNewMessage(JSON.stringify({\r\n        command: 'fetch-messages'\r\n      }))\r\n      this.socketRef.onmessage = e => {\r\n        this.socketNewMessage(e.data);\r\n      };\r\n      this.socketRef.onerror = e => {\r\n        console.log(e.message);\r\n      };\r\n      this.socketRef.onclose = () => {\r\n        console.log(\"WebSocket closed let's reopen\");\r\n        this.connect(chatUrl);\r\n      };\r\n    }\r\n  \r\n    disconnect() {\r\n      if (this.socketRef) this.socketRef.close();\r\n    }\r\n  \r\n    socketNewMessage(data) {\r\n      const parsedData = JSON.parse(data);\r\n      const command = parsedData.command;\r\n      if (Object.keys(this.callbacks).length === 0) {\r\n        return;\r\n      }\r\n      if (command === \"messages\") {\r\n        this.callbacks[command](parsedData.messages);\r\n      }\r\n      if (command === \"new_message\") {\r\n        this.callbacks[command](parsedData.message);\r\n      }\r\n    }\r\n  \r\n    fetchMessages(username, chatId) {\r\n      this.sendMessage({\r\n        command: \"fetch_messages\",\r\n        username: username,\r\n        chatId: chatId\r\n      });\r\n    }\r\n  \r\n    newChatMessage(message) {\r\n      this.sendMessage({\r\n        command: \"new_message\",\r\n        from: message.from,\r\n        content: message.content,\r\n        chatId: message.chatId\r\n      });\r\n    }\r\n  \r\n    addCallbacks(messagesCallback, newMessageCallback) {\r\n      this.callbacks[\"messages\"] = messagesCallback;\r\n      this.callbacks[\"new_message\"] = newMessageCallback;\r\n    }\r\n  \r\n    sendMessage(data) {\r\n      try {\r\n        this.socketRef.send(JSON.stringify({ ...data }));\r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n    }\r\n  \r\n    state() {\r\n      return this.socketRef ? this.socketRef.readyState : 0\r\n    }\r\n  }\r\n  \r\n  const WebSocketInstance = WebSocketService.getInstance();\r\n  \r\n  export default WebSocketInstance;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { csrftoken } from '../../utils'\r\nimport { SERVER_URL } from '../../settings'\r\nimport WebSocketInstance from './websocket'\r\n\r\nclass Chat extends React.Component {\r\n    initialiseChat() {\r\n        this.waitForSocketConnection(() => {\r\n            WebSocketInstance.addCallbacks(\r\n                this.setMessages.bind(this),\r\n                this.addMessage.bind(this)\r\n            )\r\n            WebSocketInstance.fetchMessages(\r\n                this.props.username,\r\n                this.props.chatId\r\n            );\r\n        });\r\n        if (this.props.chatId) WebSocketInstance.connect(this.props.chatId)\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            message: '',\r\n            messages: [],\r\n            otherUsername: this.props.otherUsername,\r\n            otherProfile: null\r\n        }\r\n        this.initialiseChat();\r\n    }\r\n\r\n    waitForSocketConnection(callback) {\r\n        const component = this;\r\n        setTimeout(function () {\r\n            if (WebSocketInstance.state() === 1) {\r\n                console.log(\"Connection is made\");\r\n                callback();\r\n                return;\r\n            } else {\r\n                console.log(\"wait for connection...\");\r\n                component.waitForSocketConnection(callback);\r\n            }\r\n        }, 100);\r\n    }\r\n\r\n    setMessages(messages) {\r\n        this.setState({ messages: messages.reverse() })\r\n    }\r\n\r\n    addMessage(message) {\r\n        this.setState({ messages: [...this.state.messages, message] })\r\n    }\r\n\r\n    messageChangeHandler = event => {\r\n        this.setState({ message: event.target.value });\r\n    };\r\n\r\n    sendMessageHandler = e => {\r\n        e.preventDefault();\r\n        const messageObject = {\r\n            from: this.props.username,\r\n            content: this.state.message,\r\n            chatId: this.props.chatId\r\n        };\r\n        WebSocketInstance.newChatMessage(messageObject);\r\n        this.setState({ message: \"\" });\r\n        this.props.updateMessagesComponent()\r\n\r\n    };\r\n\r\n    renderTimestamp = timestamp => {\r\n        const ts = new Date(timestamp)\r\n        return `${ts.getDate()}/${ts.getMonth()}/${ts.getFullYear()} - ${ts.getHours()}:${ts.getMinutes()}`\r\n    };\r\n\r\n    renderMessages = messages => {\r\n        const currentUser = this.props.username;\r\n        return messages.map(message => (\r\n            <li\r\n                key={message.id}\r\n                className={message.author === currentUser ? \"sent\" : \"received\"}\r\n            >\r\n                <p>\r\n                    {message.content}\r\n                    <br />\r\n                    <small>\r\n                        {this.renderTimestamp(message.timestamp)} {message.author === currentUser ? message.read ? '✓✓' : '✓' : ''}\r\n                    </small>\r\n                </p>\r\n            </li>\r\n        ));\r\n    };\r\n\r\n    scrollToBottom = () => {\r\n        if (document.querySelector('#chat-log')) {\r\n            const chatLog = document.querySelector('#chat-log')\r\n            chatLog.scrollTop = chatLog.scrollHeight\r\n        }\r\n    };\r\n\r\n    handleComponentChange = () => {\r\n        this.scrollToBottom();\r\n        if (this.state.otherUsername && (!this.state.otherProfile || this.state.otherProfile.user.username !== this.state.otherUsername)) {\r\n            fetch(`${SERVER_URL}/profile-api/user/${this.state.otherUsername}`)\r\n                .then(response => response.json())\r\n                .then(data => this.setState({\r\n                    otherProfile: data\r\n                }))\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (this.props.chatId !== newProps.chatId) {\r\n            WebSocketInstance.disconnect();\r\n            this.waitForSocketConnection(() => {\r\n                WebSocketInstance.fetchMessages(\r\n                    this.props.username,\r\n                    newProps.chatId\r\n                );\r\n            });\r\n            WebSocketInstance.connect(newProps.chatId);\r\n\r\n            this.props.updateMessagesComponent()\r\n        }\r\n        if (this.state.otherUsername != newProps.otherUsername) {\r\n            this.setState({\r\n                otherUsername: newProps.otherUsername\r\n            })\r\n        }\r\n        if (newProps.chatId) {\r\n            fetch(`${SERVER_URL}/chat-api/read-messages`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                },\r\n                body: JSON.stringify({ chat_id: newProps.chatId })\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => console.log(data))\r\n        }\r\n        if (this.props.updateUnreadMessagesNumber) {\r\n            this.props.updateUnreadMessagesNumber()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.otherProfile ?\r\n                    <div className=\"d-flex flex-column justify-content-between align-items-center current-chat\">\r\n                        <div className=\"current-chat-header\">\r\n                            <Link to={`/user/${this.state.otherProfile.slug}`}>\r\n                                <img src={`${SERVER_URL}${this.state.otherProfile.photo}`}\r\n                                    className=\"profile-img-sm\"\r\n                                    style={{ marginRight: '5px' }}\r\n                                />\r\n                            </Link>\r\n                            <div className=\"d-flex flex-column align-items-start\" style={{ height: '52px' }}>\r\n                                <strong>{this.state.otherProfile.first_name} {this.state.otherProfile.last_name}</strong>\r\n                                <p className=\"text-secondary\">@{this.state.otherProfile.user.username}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div id=\"chat-log\">\r\n                            {this.state.messages ? this.renderMessages(this.state.messages) : ''}\r\n                        </div>\r\n                        <form className=\"send-message-container\" onSubmit={this.sendMessageHandler}>\r\n                            <input placeholder=\"Mensagem\" className=\"message-input\" id=\"chat-message-input\" value={this.state.message} onChange={this.messageChangeHandler} />\r\n                            <button className=\"btn btn-primary\" id=\"chat-message-submit\">\r\n                                <i class=\"fas fa-paper-plane\" style={{ position: 'relative', right: '10%' }} />\r\n                            </button>\r\n                        </form>\r\n                    </div> :\r\n                    <div className=\"d-flex flex-column justify-content-center align-items-center current-chat\">\r\n                        <div>\r\n                            <strong style={{ fontSize: 'larger' }}>Você não tem uma conversa selecionada</strong>\r\n                            <p className=\"text-secondary\">Selecione uma existente ou comece uma nova</p>\r\n                            <button className=\"btn btn-primary\" onClick={() => this.props.openModal()}>Nova conversa</button>\r\n                        </div>\r\n                    </div>}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chat","import React from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Header from '../../components/header'\r\nimport Chat from './chat'\r\nimport { SERVER_URL } from '../../settings'\r\n\r\nclass Messages extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: null,\r\n            chatId: null,\r\n            activeChats: null,\r\n            activeChatsProfiles: null,\r\n            addingNewChat: false,\r\n            modalProfiles: [],\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps === this.props) return\r\n        const participants = { username: this.state.username, other_username: newProps.match.params.slug }\r\n        fetch(`${SERVER_URL}/chat-api/chat-id/${JSON.stringify(participants)}`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                chatId: data['chat_id']\r\n            }))\r\n    }\r\n\r\n    handleComponentChange() {\r\n        if (!this.state.username) {\r\n            fetch(`${SERVER_URL}/profile-api/logged-user`)\r\n                .then(response => response.json())\r\n                .then(data => this.setState({\r\n                    username: data.username\r\n                }))\r\n        }\r\n        if (!this.state.activeChatsProfiles && this.state.activeChatsProfiles !== []) {\r\n            this.fetchActiveChatProfiles()\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.title = 'Mensagens / Napker'\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    fetchActiveChatProfiles = () => {\r\n        fetch(`${SERVER_URL}/chat-api/active-chats-profiles`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (!this.state.username) return\r\n                this.setState({\r\n                    activeChats: data.chats.reverse(),\r\n                    activeChatsProfiles: data.profiles.reverse()\r\n                })\r\n            })\r\n    }\r\n\r\n    openModal = () => {\r\n        this.setState({\r\n            addingNewChat: true\r\n        })\r\n    }\r\n\r\n    setModalSearch = query => {\r\n        if (query === '') {\r\n            this.setState({\r\n                modalProfiles: []\r\n            })\r\n            return\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/users/${query}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    modalProfiles: data\r\n                })\r\n            })\r\n    }\r\n\r\n    setContactSearch = query => {\r\n        if (query === '') {\r\n            this.fetchActiveChatProfiles()\r\n            return\r\n        }\r\n        if (this.state.activeChatsProfiles) {\r\n            const filteredProfiles = this.state.activeChatsProfiles.filter(p => p.user.username.includes(query))\r\n            this.setState({\r\n                activeChatsProfiles: filteredProfiles\r\n            })\r\n        }\r\n    }\r\n\r\n    resetUnreadMessagesCounter = () => {\r\n        this.unreadMessagesCounter = 0\r\n    }\r\n\r\n    incrementUnreadMessagesCounter = () => {\r\n        this.unreadMessagesCounter++\r\n    }\r\n\r\n    setLastChatMessage = message => {\r\n        this.lastChatMessage = message\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header page=\"Mensagens\" />\r\n                <div className=\"content d-flex messages-wrapper\">\r\n                    <Modal show={this.state.addingNewChat}\r\n                        onHide={() => this.setState({ addingNewChat: false })}\r\n                        size=\"lg\">\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title><strong>Nova conversa</strong></Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body style={{ padding: '0' }}>\r\n                            <input className=\"modal-search-input\"\r\n                                placeholder=\"Pesquisar pessoas\"\r\n                                onChange={e => this.setModalSearch(e.target.value)}\r\n                            />\r\n                            <div className=\"list-group\" style={{ height: '400px', overflow: 'hidden', overflowY: 'scroll' }}>\r\n                                {this.state.modalProfiles && this.state.modalProfiles.map(profile => {\r\n                                    return (\r\n                                        <Link to={`/mensagens/${profile.slug}`}\r\n                                            style={{ color: '#000', textDecoration: 'none' }}\r\n                                            onClick={() => this.setState({\r\n                                                addingNewChat: false\r\n                                            })}\r\n                                        >\r\n                                            <li className=\"list-group-item profile-row modal-profile-li\" key={profile.id}>\r\n                                                <div className=\"d-flex justify-content-between\">\r\n                                                    <div className=\"profile-col\">\r\n                                                        <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                            className=\"profile-img-med\"\r\n                                                            style={{ marginRight: '10px' }}\r\n                                                        />\r\n                                                        <div className=\"main-profile-data\">\r\n                                                            <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                                            <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"profile-col\">\r\n                                                        {profile.bio}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </li>\r\n                                        </Link>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                    <div className=\"d-flex flex-column chats-list\">\r\n                        <div className=\"search-input-container\">\r\n                            <input placeholder=\"Pesquisar pessoas\" className=\"search-input\" onChange={e => this.setContactSearch(e.target.value)} />\r\n                            <i className=\"fas fa-plus add-icon\" onClick={this.openModal}></i>\r\n                        </div>\r\n                        <div className=\"list-group chats-container\">\r\n                            {this.state.activeChatsProfiles && this.state.activeChatsProfiles.map(profile => {\r\n                                return (\r\n                                    <Link to={`/mensagens/${profile.slug}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                                        {this.resetUnreadMessagesCounter()}\r\n                                        <li className=\"list-item profile-chat-item\" style={{ whiteSpace: 'nowrap' }}>\r\n                                            <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                className=\"profile-img-med\"\r\n                                                style={{ marginRight: '10px' }}\r\n                                            />\r\n                                            <div className=\"d-flex flex-column align-items-start\">\r\n                                                <div className=\"d-flex\" style={{ maxHeight: '30px' }}>\r\n                                                    <strong style={{ height: 'fit-content' }}>{profile.first_name} {profile.last_name}</strong>\r\n                                                    {this.state.activeChats[this.state.activeChatsProfiles.indexOf(profile)].messages.map(message => {\r\n                                                        const messages = this.state.activeChats[this.state.activeChatsProfiles.indexOf(profile)].messages\r\n                                                        if (messages[messages.length - 1] === message) this.setLastChatMessage(message.content)\r\n                                                        if (message.read || message.contact.user.username !== profile.user.username) return\r\n                                                        this.incrementUnreadMessagesCounter()\r\n                                                    })}\r\n                                                    {this.unreadMessagesCounter ? <p className=\"notifications-number\">{this.unreadMessagesCounter}</p> : ''}\r\n                                                    <p className=\"text-secondary\" style={{ marginLeft: '5px' }}>@{profile.user.username}</p>\r\n                                                </div>\r\n                                                <p className=\"text-secondary\">{this.lastChatMessage.slice(0, 40)}</p>\r\n                                            </div>\r\n                                        </li>\r\n                                    </Link>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <Chat username={this.state.username}\r\n                        otherUsername={this.props.match.params.slug}\r\n                        chatId={this.state.chatId}\r\n                        openModal={this.openModal}\r\n                        updateUnreadMessagesNumber={this.props.updateUnreadMessagesNumber}\r\n                        updateMessagesComponent={this.fetchActiveChatProfiles}\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Messages","import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nimport LikesModal from '../../components/likesmodal'\r\nimport { SERVER_URL } from '../../settings'\r\n\r\nexport default function Posts(props) {\r\n    const [likesModal, setLikesModal] = useState({ isOpen: false, likes: null })\r\n    const profile = props.profile\r\n\r\n    const likeUnlikePost = e => {\r\n        const likeBtn = e.target\r\n        if (likeBtn.classList.contains('fas')) {\r\n            likeBtn.classList.remove('fas') //border heart\r\n            likeBtn.classList.add('far')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/unlike-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.fetchProfile()\r\n                })\r\n        } else {\r\n            likeBtn.classList.remove('far') //border heart\r\n            likeBtn.classList.add('fas')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/like-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.fetchProfile()\r\n                })\r\n        }\r\n    }\r\n\r\n    const hideLikesModal = () => {\r\n        setLikesModal({\r\n            isOpen: false,\r\n            likes: null\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <LikesModal\r\n                isOpen={likesModal.isOpen}\r\n                likes={likesModal.likes}\r\n                hideModal={hideLikesModal}\r\n            />\r\n            <div className=\"post-list\">\r\n                {profile && profile.posts.length ? profile.posts.map(post => {\r\n                    return (\r\n                        <li className=\"post-container\" key={post.id}>\r\n                            <div className=\"post-row\">\r\n                                <div className=\"post-col\">\r\n                                    <img src={`${SERVER_URL}${profile.photo}`}\r\n                                        className=\"profile-img-med\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"post-col\">\r\n                                    <div style={{ height: '30px' }}>\r\n                                        <strong>{profile.first_name} {profile.last_name} </strong>\r\n                                        <p className=\"text-secondary d-inline-block\">\r\n                                            @{profile.user.username} • {post.created.split('-').reverse().join('/')}\r\n                                        </p>\r\n                                    </div>\r\n                                    <div style={{ textAlign: 'start' }}>\r\n                                        {post.content}\r\n                                    </div>\r\n                                    {post.image &&\r\n                                        <img src={`${SERVER_URL}${post.image}`} className=\"post-img\" />\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"post-actions\">\r\n                                <p className=\"text-secondary\">\r\n                                    <Link to={`/post/${post.id}/comment`} className=\"text-secondary\">\r\n                                        <i class=\"far fa-comment\" />\r\n                                    </Link>{post.comments.length}\r\n                                    {post.likes.map(like => like.profile.id).includes(profile.id) ?\r\n                                        <i class=\"fas fa-heart\"\r\n                                            data-postid={post.id}\r\n                                            onClick={likeUnlikePost}\r\n                                        />\r\n                                        :\r\n                                        <i class=\"far fa-heart\"\r\n                                            data-postid={post.id}\r\n                                            onClick={likeUnlikePost}\r\n                                        />}\r\n                                    <p className=\"post-likes-number\"\r\n                                        onClick={() => setLikesModal({ isOpen: true, likes: post.likes })}\r\n                                    >\r\n                                        {post.likes.length}\r\n                                    </p>\r\n                                </p>\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                }) : <h3 style={{ marginTop: '50px' }}>{profile.first_name} não tem posts</h3>}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Interests(props) {\r\n    const profile = props.profile\r\n\r\n    return (\r\n        <div className=\"interests-page-container\">\r\n            <h3>Interesses públicos de {profile.first_name}</h3>\r\n            <div>\r\n                {profile && profile.interests.map(interest => {\r\n                    return (\r\n                        <>\r\n                            {interest.title &&\r\n                                <>\r\n                                    <hr />\r\n                                    <li className=\"interest-item\">\r\n                                        {interest.title[0].toUpperCase() + interest.title.slice(1)}\r\n                                        <button className=\"btn-secondary\" style={{ padding: '5px' }}>Pesquisar usuários</button>\r\n                                    </li>\r\n                                </>\r\n                            }\r\n                        </>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nimport Header from '../components/header'\r\nimport Posts from './profile-components/posts'\r\nimport Interests from './profile-components/interests'\r\nimport { SERVER_URL } from '../settings'\r\nimport { csrftoken } from '../utils'\r\n\r\nexport default function MyProfile() {\r\n    const [profile, setProfile] = useState(null)\r\n    const [isEditing, setIsEditing] = useState(false)\r\n    const [currentPageIsPosts, setCurrentPageIsPosts] = useState(true)\r\n\r\n    document.title = 'Perfil / Napker'\r\n\r\n    useEffect(() => {\r\n        fetchProfile()\r\n    }, [])\r\n\r\n    const fetchProfile = () => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setProfile(data))\r\n    }\r\n\r\n    const switchPage = e => {\r\n        document.querySelectorAll('.profile-page-menu-item-active').forEach(el => {\r\n            el.classList.remove('profile-page-menu-item-active')\r\n        })\r\n        e.target.classList.add('profile-page-menu-item-active')\r\n        setCurrentPageIsPosts(!currentPageIsPosts)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Perfil\" />\r\n            {profile ? <div className=\"content\">\r\n                <Modal show={isEditing}\r\n                    onHide={() => setIsEditing(false)}\r\n                    size=\"lg\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Editar perfil</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <form action={`${SERVER_URL}/update-profile`} id=\"update-profile-form\" method=\"POST\">\r\n                            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n                            <div className=\"d-flex flex-column justify-content-center align-items-center\" style={{ padding: '25px' }}>\r\n                                <img src={`${SERVER_URL}${profile.photo}`}\r\n                                    className=\"profile-img-big\"\r\n                                    style={{ marginBottom: '25px' }}\r\n                                />\r\n                                <input type=\"file\" accept=\"image/png, image/jpg\" name=\"profile-photo\" onChange={e => console.log(e.target.files)} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"first-name\" className=\"profile-label\">Nome:</label>\r\n                                <input className=\"form-control\" type=\"text\" name=\"first-name\" id=\"first-name\" placeholder={profile.first_name} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"last-name\" className=\"profile-label\">Sobrenome:</label>\r\n                                <input className=\"form-control\" type=\"text\" name=\"last-name\" id=\"last-name\" placeholder={profile.last_name} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"username\" className=\"profile-label\">Nome de usuário:</label>\r\n                                <input className=\"form-control\" type=\"text\" name=\"username\" id=\"username\" placeholder={profile.user.username} />\r\n                                <span id=\"username-taken\">Nome de usuário já existe</span>\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"email\" className=\"profile-label\">Email:</label>\r\n                                <input className=\"form-control\" type=\"email\" name=\"email\" id=\"email\" placeholder={profile.email} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"gender\" className=\"profile-label\">Gênero:</label>\r\n                                <select className=\"form-control\" name=\"gender\" id=\"gender\" placeholder={profile.gender}>\r\n                                    <option value=\"male\">Masculino</option>\r\n                                    <option value=\"female\">Feminino</option>\r\n                                    <option value=\"other\">Outro</option>\r\n                                </select>\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"birth-date\" className=\"profile-label\">Data de nascimento:</label>\r\n                                <input className=\"form-control\" type=\"date\" name=\"birth-date\" id=\"birth-date\" defaultValue={profile.birth_date} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"bio\" className=\"profile-label\">Bio:</label>\r\n                                <input className=\"form-control\" type=\"email\" name=\"bio\" id=\"bio\" placeholder={profile.bio} />\r\n                            </div>\r\n                        </form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <button className=\"btn btn-grey\" onClick={() => setIsEditing(false)}>Fechar</button>\r\n                        <button className=\"btn btn-primary\" onClick={() => document.querySelector('form#update-profile-form').submit()}>Salvar</button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <div className=\"profile-data-container\">\r\n                    <div className=\"d-flex flex-column align-items-start\">\r\n                        <p style={{ padding: '15px' }}>\r\n                            <img src={`${SERVER_URL}${profile.photo}`}\r\n                                className=\"profile-img-big\"\r\n                                style={{ marginBottom: '25px' }}\r\n                            />\r\n                        </p>\r\n                        <p style={{ marginBottom: 0 }}><strong>{profile.first_name} {profile.last_name}</strong></p>\r\n                        <p className=\"text-secondary\" style={{ marginTop: 0 }}>@{profile.user.username}</p>\r\n                        <p>{profile.bio}</p>\r\n                        <p className=\"text-secondary\">\r\n                            <i className=\"far fa-calendar-alt\"></i> Entrou em {profile.created.split('-').reverse().join('/')}\r\n                        </p>\r\n                        <p>\r\n                            <Link to={`/user/${profile.slug}/amigos`} style={{ color: '#000' }}>\r\n                                <strong>{profile.friends.length}</strong> {profile.friends.length === 1 ? 'amigo' : 'amigos'}\r\n                            </Link>\r\n                        </p>\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"btn btn-secondary\" type=\"button\" onClick={() => setIsEditing(true)}>Editar perfil</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"profile-page-menu\">\r\n                    <div className=\"profile-page-menu-item profile-page-menu-item-active\" onClick={switchPage}>\r\n                        Posts ({profile.posts.length})\r\n                    </div>\r\n                    <div className=\"profile-page-menu-item\" onClick={switchPage}>\r\n                        Interesses ({profile.interests.length})\r\n                    </div>\r\n                </div>\r\n                {currentPageIsPosts ?\r\n                    <Posts profile={profile} fetchProfile={fetchProfile}/> :\r\n                    <Interests profile={profile} />\r\n                }\r\n            </div > : ''}\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport Header from '../components/header'\r\n\r\nexport default function Settings() {\r\n\r\n    document.title = 'Configurações / Napker'\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Configurações\" />\r\n            <div className=\"content\">\r\n                Em desenvolvimento...\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Header from '../../components/header'\r\nimport Posts from '../profile-components/posts'\r\nimport Interests from '../profile-components/interests'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            profile: null,\r\n            relationshipButtonLabel: '',\r\n            currentPageIsPosts: true,\r\n        }\r\n        this.slug = this.props.match.params.slug\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.fetchProfile()\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${SERVER_URL}/profile-api/relationship/${this.slug}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                let label\r\n                switch (data.relationship) {\r\n                    case 'friends':\r\n                        label = 'Amigos'\r\n                        break\r\n                    case 'invite-sent':\r\n                        label = 'Solicitado'\r\n                        break\r\n                    case 'invite-received':\r\n                        label = 'Aceitar'\r\n                        break\r\n                    case 'none':\r\n                        label = 'Solicitar'\r\n                }\r\n                this.setState({\r\n                    relationshipButtonLabel: label\r\n                })\r\n            })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        let btn = document.querySelector('#profile-page-relationship-btn')\r\n        if (btn) {\r\n            switch (btn.innerHTML) {\r\n                case 'Amigos':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.onmouseenter = () => {\r\n                        if (btn.innerHTML === 'Amigos') btn.innerHTML = 'Remover'\r\n                    }\r\n                    btn.onmouseout = () => {\r\n                        if (btn.innerHTML === 'Remover') btn.innerHTML = 'Amigos'\r\n                    }\r\n                    btn.classList.add('friend-btn')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Solicitado':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Aceitar':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Solicitar':\r\n                    btn.classList.add('btn-secondary')\r\n                    btn.classList.remove('d-none')\r\n            }\r\n        }\r\n    }\r\n\r\n    fetchProfile = () => {\r\n        fetch(`${SERVER_URL}/profile-api/user/${this.slug}`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                profile: data\r\n            }))\r\n    }\r\n\r\n    sendFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/send-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    cancelFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/cancel-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    removeFromFriends = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/remove-from-friends`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    acceptFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/reply-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({\r\n                'senderid': pk,\r\n                'reply': 'accept'\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                this.props.updateNotificationsNumber()\r\n            })\r\n    }\r\n\r\n    handleRelationshipUpdate = e => {\r\n        const btn = e.target\r\n        if (btn.innerHTML === 'Solicitar') {\r\n            this.sendFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitado'\r\n            btn.className = 'btn btn-primary'\r\n        } else if (btn.innerHTML === 'Solicitado') {\r\n            this.cancelFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitar'\r\n            btn.className = 'btn btn-secondary'\r\n        } else if (btn.innerHTML === 'Amigos' || btn.innerHTML === 'Remover') {\r\n            if (window.confirm(`Remover @${this.state.profile.user.username} dos amigos?`)) {\r\n                this.removeFromFriends(btn.dataset.pk)\r\n                btn.innerHTML = 'Solicitar'\r\n                btn.className = 'btn btn-secondary'\r\n            }\r\n        } else if (btn.innerHTML === 'Aceitar') {\r\n            this.acceptFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Amigos'\r\n            btn.className = 'btn btn-primary'\r\n        }\r\n    }\r\n\r\n    switchPage = e => {\r\n        document.querySelectorAll('.profile-page-menu-item-active').forEach(el => {\r\n            el.classList.remove('profile-page-menu-item-active')\r\n        })\r\n        e.target.classList.add('profile-page-menu-item-active')\r\n        this.setState({\r\n            currentPageIsPosts: !this.state.currentPageIsPosts\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header page={this.state.profile ? `${this.state.profile.first_name} ${this.state.profile.last_name}` : 'Perfil'}\r\n                    backArrow={true}\r\n                />\r\n                {!this.state.profile ? <></> :\r\n                    <div className=\"content\">\r\n                        <div className=\"d-flex justify-content-between align-items-center profile-data-container\">\r\n                            <div className=\"d-flex flex-column align-items-start\">\r\n                                <p style={{ padding: '15px' }}>\r\n                                    <img src={`${SERVER_URL}${this.state.profile.photo}`}\r\n                                        className=\"profile-img-big\"\r\n                                        style={{ marginBottom: '25px' }}\r\n                                    />\r\n                                </p>\r\n                                <p style={{ marginBottom: 0 }}><strong>{this.state.profile.first_name} {this.state.profile.last_name}</strong></p>\r\n                                <p className=\"text-secondary\" style={{ marginTop: 0 }}>@{this.state.profile.user.username}</p>\r\n                                <p>{this.state.profile.bio}</p>\r\n                                <p className=\"text-secondary\">\r\n                                    <i className=\"far fa-calendar-alt\"></i> Entrou em {this.state.profile.created.split('-').reverse().join('/')}\r\n                                </p>\r\n                                <p>\r\n                                    <Link to={`/user/${this.state.profile.slug}/amigos`} style={{ color: '#000' }}>\r\n                                        <strong>{this.state.profile.friends.length}</strong> {this.state.profile.friends.length === 1 ? 'amigo' : 'amigos'}\r\n                                    </Link>\r\n                                </p>\r\n                            </div>\r\n                            <div>\r\n                                <button className=\"btn d-none\"\r\n                                    id=\"profile-page-relationship-btn\"\r\n                                    data-pk={this.state.profile.id}\r\n                                    onClick={this.handleRelationshipUpdate}\r\n                                >{this.state.relationshipButtonLabel}</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"profile-page-menu\">\r\n                            <div className=\"profile-page-menu-item profile-page-menu-item-active\" onClick={this.switchPage}>\r\n                                Posts ({this.state.profile.posts.length})\r\n                            </div>\r\n                            <div className=\"profile-page-menu-item\" onClick={this.switchPage}>\r\n                                Interesses ({this.state.profile.interests.length})\r\n                            </div>\r\n                        </div>\r\n                        {this.state.currentPageIsPosts ?\r\n                            <Posts profile={this.state.profile} fetchProfile={this.fetchProfile} /> :\r\n                            <Interests profile={this.state.profile} />\r\n                        }\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile","import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nimport Header from '../../components/header'\r\nimport { SERVER_URL } from '../../settings'\r\n\r\nexport default function Friends() {\r\n    const [friends, setFriends] = useState([])\r\n    const [profile, setProfile] = useState(null)\r\n    const { slug } = useParams()\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/user/${slug}`)\r\n            .then(response => response.json())\r\n            .then(data => setProfile(data))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (profile) {\r\n            fetch(`${SERVER_URL}/profile-api/get-friends-profiles/${profile.slug}`)\r\n                .then(response => response.json())\r\n                .then(data => setFriends(data))\r\n        }\r\n    }, [profile])\r\n\r\n    return (\r\n        <>\r\n            <Header page={profile ? `${profile.first_name} ${profile.last_name} / Amigos` : 'Perfil / Amigos'}\r\n                backArrow={true}\r\n            />\r\n            <div className=\"content\">\r\n                <div className=\"lidt-group\">\r\n                    {friends && friends.map(friend => {\r\n                        return (\r\n                            <Link to={`/user/${friend.slug}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                                <li className=\"list-group-item profile-row filtered-profile\" key={friend.id}>\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <div className=\"profile-col\">\r\n                                            <img src={`${SERVER_URL}${friend.photo}`}\r\n                                                className=\"profile-img-med\"\r\n                                                style={{ marginRight: '10px' }}\r\n                                            />\r\n                                            <div className=\"main-profile-data\">\r\n                                                <strong>{friend.first_name} {friend.last_name}</strong>\r\n                                                <p className=\"text-secondary\">@{friend.user.username}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"profile-col\">\r\n                                            {friend.bio}\r\n                                        </div>\r\n                                        <div className=\"profile-col\">\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            </Link>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nexport default function CommentModal(props) {\r\n    const comment = () => {\r\n        props.commentPost(document.querySelector('#comment-modal-input').value)\r\n        props.hideModal()\r\n    }\r\n    return (\r\n        <Modal show={props.isOpen}\r\n            onHide={props.hideModal}\r\n            size=\"lg\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title><strong>Comentar</strong></Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <input\r\n                    className=\"form-control\"\r\n                    id=\"comment-modal-input\"\r\n                    placeholder=\"Comente alguma coisa\"\r\n                    style={{ marginRight: '5px' }}\r\n                />\r\n                <button\r\n                    className=\"btn btn-primary\"\r\n                    onClick={comment}\r\n                >Enviar</button>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nimport CommentModal from '../../components/commentmodal'\r\nimport LikesModal from '../../components/likesmodal'\r\nimport Header from '../../components/header'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nexport default function Post(props) {\r\n    const [post, setPost] = useState(null)\r\n    const [profile, setProfile] = useState(null)\r\n    const [commentModalIsOpen, setCommentModalIsOpen] = useState(props.commentModalIsOpen)\r\n    const [likesModal, setLikesModal] = useState({ isOpen: false, likes: null })\r\n\r\n    const { id } = useParams()\r\n\r\n    useEffect(() => {\r\n        fetchPost()\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setProfile(data))\r\n    }, [])\r\n\r\n    const fetchPost = () => {\r\n        fetch(`${SERVER_URL}/post-api/post/${id}`)\r\n            .then(response => response.json())\r\n            .then(data => setPost(data))\r\n    }\r\n\r\n    const likeUnlikePost = e => {\r\n        const likeBtn = e.target\r\n        if (likeBtn.classList.contains('fas')) {\r\n            likeBtn.classList.remove('fas') //border heart\r\n            likeBtn.classList.add('far')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/unlike-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPost()\r\n                })\r\n        } else {\r\n            likeBtn.classList.remove('far') //border heart\r\n            likeBtn.classList.add('fas')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/like-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPost()\r\n                })\r\n        }\r\n    }\r\n\r\n    const likeUnlikeComment = e => {\r\n        const likeBtn = e.target\r\n        if (likeBtn.classList.contains('fas')) {\r\n            likeBtn.classList.remove('fas') //border heart\r\n            likeBtn.classList.add('far')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/unlike-comment/${likeBtn.dataset.commentid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPost()\r\n                })\r\n        } else {\r\n            likeBtn.classList.remove('far') //border heart\r\n            likeBtn.classList.add('fas')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/like-comment/${likeBtn.dataset.commentid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPost()\r\n                })\r\n        }\r\n    }\r\n\r\n    const commentPost = comment => {\r\n        fetch(`${SERVER_URL}/post-api/comment-post/${id}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({ comment: comment })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                fetchPost()\r\n            })\r\n    }\r\n\r\n    const hideCommentModal = () => {\r\n        setCommentModalIsOpen(false)\r\n    }\r\n\r\n    const hideLikesModal = () => {\r\n        setLikesModal({\r\n            isOpen: false,\r\n            likes: null\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CommentModal\r\n                isOpen={commentModalIsOpen}\r\n                hideModal={hideCommentModal}\r\n                commentPost={commentPost}\r\n            />\r\n            <LikesModal\r\n                isOpen={likesModal.isOpen}\r\n                likes={likesModal.likes}\r\n                hideModal={hideLikesModal}\r\n            />\r\n            <Header page=\"Post\" backArrow={true} />\r\n            <div className=\"content\">\r\n                {post && profile &&\r\n                    <>\r\n                        <div className=\"post-container\">\r\n                            <div className=\"post-row\">\r\n                                <div className=\"post-col\">\r\n                                    <Link to={`/user/${post.author.slug}`}>\r\n                                        <img src={`${SERVER_URL}${post.author.photo}`}\r\n                                            className=\"profile-img-med\"\r\n                                        />\r\n                                    </Link>\r\n                                </div>\r\n                                <div className=\"post-col\">\r\n                                    <Link to={`/user/${post.author.slug}`} style={{ color: '#000' }}>\r\n                                        <div style={{ height: '30px' }}>\r\n                                            <strong>{post.author.first_name} {post.author.last_name} </strong>\r\n                                            <p className=\"text-secondary d-inline-block\">\r\n                                                @{post.author.user.username} • {post.created.split('-').reverse().join('/')}\r\n                                            </p>\r\n                                        </div>\r\n                                    </Link>\r\n                                    <div style={{ textAlign: 'start', fontSize: 'larger' }}>\r\n                                        {post.content}\r\n                                    </div>\r\n                                    {post.image &&\r\n                                        <img src={`${SERVER_URL}${post.image}`} className=\"post-img\" />\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"post-actions\">\r\n                                <p className=\"text-secondary\" style={{ fontSize: 'large' }}>\r\n                                    <Link to={`/post/${id}/comment`} className=\"text-secondary\">\r\n                                        <i\r\n                                            class=\"far fa-comment\"\r\n                                            onClick={() => setCommentModalIsOpen(true)}\r\n                                        />\r\n                                    </Link>{post.comments.length}\r\n                                    {post.likes.map(like => like.profile.id).includes(profile.id) ?\r\n                                        <i class=\"fas fa-heart\"\r\n                                            data-postid={post.id}\r\n                                            onClick={likeUnlikePost}\r\n                                        />\r\n                                        :\r\n                                        <i class=\"far fa-heart\"\r\n                                            data-postid={post.id}\r\n                                            onClick={likeUnlikePost}\r\n                                        />}\r\n                                    <p className=\"post-likes-number\"\r\n                                        onClick={() => setLikesModal({ isOpen: true, likes: post.likes })}\r\n                                    >\r\n                                        {post.likes.length}\r\n                                    </p>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"comment-list\">\r\n                            {post.comments.map(comment => {\r\n                                return (\r\n                                    <li className=\"post-container\">\r\n                                        <div className=\"post-row\">\r\n                                            <div className=\"post-col\">\r\n                                                <Link to={`/user/${comment.author.slug}`}>\r\n                                                    <img src={`${SERVER_URL}${comment.author.photo}`}\r\n                                                        className=\"profile-img-med\"\r\n                                                    />\r\n                                                </Link>\r\n                                            </div>\r\n                                            <div className=\"post-col\">\r\n                                                <Link to={`/user/${comment.author.slug}`} style={{ color: '#000' }}>\r\n                                                    <div style={{ height: '30px' }}>\r\n                                                        <strong>{comment.author.first_name} {comment.author.last_name} </strong>\r\n                                                        <p className=\"text-secondary d-inline-block\">\r\n                                                            @{comment.author.user.username} • {comment.created.split('-').reverse().join('/')}\r\n                                                        </p>\r\n                                                    </div>\r\n                                                </Link>\r\n                                                <div style={{ textAlign: 'start' }}>\r\n                                                    {comment.content}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"post-actions\">\r\n                                            <p className=\"text-secondary\">\r\n                                                {comment.likes.map(like => like.profile.id).includes(profile.id) ?\r\n                                                    <i class=\"fas fa-heart\"\r\n                                                        data-commentid={comment.id}\r\n                                                        onClick={likeUnlikeComment}\r\n                                                    />\r\n                                                    :\r\n                                                    <i class=\"far fa-heart\"\r\n                                                        data-commentid={comment.id}\r\n                                                        onClick={likeUnlikeComment}\r\n                                                    />}\r\n                                                <p className=\"post-likes-number\">\r\n                                                    {comment.likes.length}\r\n                                                </p>\r\n                                            </p>\r\n                                        </div>\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\nimport Sidebar from './components/sidebar'\r\nimport Home from './pages/home'\r\nimport Notifications from './pages/notifications'\r\nimport Messages from './pages/messages/messages'\r\nimport MyProfile from './pages/myprofile'\r\nimport Settings from './pages/settings'\r\nimport Profile from './pages/home-components/profile'\r\nimport ProfileFriends from './pages/profile-components/friends'\r\nimport Post from './pages/home-components/post'\r\n\r\nimport { SERVER_URL } from './settings'\r\n\r\nexport default function App() {\r\n    const [invitesReceivedNumber, setInvitesReceived] = useState(0)\r\n    const [unvisualizedLikes, setUnvisulaizedLikes] = useState(0)\r\n    let notificationsNumber = invitesReceivedNumber + unvisualizedLikes\r\n    const [unreadMessagesNumber, setUnreadMessagesNumber] = useState(0)\r\n\r\n    useEffect(() => {\r\n        updateNotificationsNumber()\r\n        updateUnreadMessagesNumber()\r\n    }, [])\r\n\r\n    const updateNotificationsNumber = () => {\r\n        fetch(`${SERVER_URL}/profile-api/myinvites`)\r\n            .then(response => response.json())\r\n            .then(data => setInvitesReceived(data.length))\r\n        fetch(`${SERVER_URL}/post-api/unvisualized-post-likes`)\r\n            .then(response => response.json())\r\n            .then(data => setUnvisulaizedLikes(data.length))\r\n    }\r\n\r\n    const updateUnreadMessagesNumber = () => {\r\n        fetch(`${SERVER_URL}/chat-api/all-unread-messages-number`)\r\n            .then(response => response.json())\r\n            .then(data => setUnreadMessagesNumber(data['unread_messages_number']))\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <Sidebar notificationsNumber={notificationsNumber} unreadMessagesNumber={unreadMessagesNumber} />\r\n            <div className=\"main-content\">\r\n                <Switch>\r\n                    <Route path=\"/notificações\" render={props => (\r\n                        <Notifications {...props} updateNotificationsNumber={updateNotificationsNumber} />\r\n                    )} />\r\n                    <Route path=\"/mensagens\" exact component={Messages} />\r\n                    <Route path=\"/mensagens/:slug\" render={props => (\r\n                        <Messages {...props} updateUnreadMessagesNumber={updateUnreadMessagesNumber} />\r\n                    )} />\r\n                    <Route path=\"/perfil\" component={MyProfile} />\r\n                    <Route path=\"/configurações\" component={Settings} />\r\n                    <Route path=\"/user/:slug\" exact render={props => (\r\n                        <Profile {...props} updateNotificationsNumber={updateNotificationsNumber} />\r\n                    )} />\r\n                    <Route path=\"/user/:slug/amigos\" component={ProfileFriends} />\r\n                    <Route path=\"/post/:id\" exact component={Post}/>\r\n                    <Route path=\"/post/:id/comment\" render={props => (\r\n                        <Post {...props} commentModalIsOpen={true} />\r\n                    )} />\r\n                    <Route path=\"/\" component={Home} />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/style.css'\nimport './assets/profile.css'\nimport './assets/chat.css'\n\nimport App from './App'\n\nReactDOM.render(<App />, document.querySelector('#root'))\n"],"sourceRoot":""}