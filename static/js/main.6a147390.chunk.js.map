{"version":3,"sources":["components/sidebar.js","pages/home-components/posts.js","settings.js","utils.js","pages/home-components/profiles.js","components/header.js","pages/home.js","pages/notifications.js","pages/messages/websocket.js","pages/messages/chat.js","pages/messages/messages.js","pages/myprofile.js","pages/settings.js","pages/home-components/profile.js","pages/profile-components/friends.js","pages/profile-components/posts.js","App.js","index.js"],"names":["Sidebar","props","className","to","style","textDecoration","notificationsNumber","unreadMessagesNumber","Posts","type","placeholder","marginRight","width","marginBottom","borderRadius","SERVER_URL","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","handleLogout","window","confirm","location","replace","Profiles","useState","profiles","setProfiles","filteredProfiles","setFilteredProfiles","search","setSearch","useEffect","console","log","fetch","then","response","json","data","handleRelationshipUpdate","e","pk","btn","target","innerHTML","dataset","method","headers","body","JSON","stringify","cancelFriendRequest","value","onChange","map","profile","slug","color","key","id","src","photo","first_name","last_name","user","username","bio","data-pk","onClick","Header","backArrow","class","history","back","page","Home","setPage","pages","title","Notifications","invites","setInvites","replyRequest","requestBody","senderid","reply","updateNotificationsNumber","getElementById","removeChild","sender","justifyContent","data-senderid","data-reply","marginTop","WebSocketService","callbacks","this","socketRef","instance","chatUrl","path","WebSocket","onopen","socketNewMessage","command","onmessage","onerror","message","onclose","connect","close","parsedData","parse","Object","keys","messages","chatId","sendMessage","from","content","messagesCallback","newMessageCallback","send","err","readyState","WebSocketInstance","getInstance","Chat","messageChangeHandler","event","setState","sendMessageHandler","preventDefault","messageObject","state","newChatMessage","updateMessagesComponent","renderTimestamp","timestamp","ts","Date","getDate","getMonth","getFullYear","getHours","getMinutes","renderMessages","currentUser","author","read","scrollToBottom","querySelector","chatLog","scrollTop","scrollHeight","handleComponentChange","otherUsername","otherProfile","initialiseChat","waitForSocketConnection","addCallbacks","setMessages","bind","addMessage","fetchMessages","callback","component","setTimeout","reverse","newProps","disconnect","chat_id","updateUnreadMessagesNumber","height","onSubmit","position","right","fontSize","openModal","React","Component","Messages","fetchActiveChatProfiles","activeChats","chats","activeChatsProfiles","addingNewChat","setModalSearch","query","modalProfiles","setContactSearch","filter","p","includes","resetUnreadMessagesCounter","unreadMessagesCounter","incrementUnreadMessagesCounter","setLastChatMessage","lastChatMessage","participants","other_username","match","params","Modal","show","onHide","size","closeButton","Title","Body","padding","overflow","overflowY","whiteSpace","alt","maxHeight","indexOf","contact","marginLeft","slice","MyProfile","setProfile","isEditing","setIsEditing","profilePhotoStyle","display","heigh","action","accept","files","htmlFor","email","gender","defaultValue","birth_date","Footer","submit","created","join","friends","posts","Settings","Profile","sendFriendRequest","removeFromFriends","acceptFriendRequest","relationshipButtonLabel","label","relationship","classList","add","onmouseenter","onmouseout","remove","Friends","setFriends","useParams","friend","post","App","setNotificationsNumber","setUnreadMessagesNumber","render","exact","ProfileFriends","ProfilePosts","ReactDOM"],"mappings":"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","file":"static/js/main.6a147390.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Sidebar(props) {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n                <h2>Napker</h2>\r\n            </Link>\r\n            <ul>\r\n                <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-home\"/>Home</li>\r\n                </Link>\r\n                <Link to=\"/notificações\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-bell\"/>Notificações{!props.notificationsNumber ? '' : <p className=\"notifications-number\">{props.notificationsNumber}</p>}</li>\r\n                </Link>\r\n                <Link to=\"/mensagens\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-envelope\"/>Mensagens{!props.unreadMessagesNumber ? '' : <p className=\"notifications-number\">{props.unreadMessagesNumber}</p>}</li>\r\n                </Link>\r\n                <Link to=\"/perfil\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-user\"/>Perfil</li>\r\n                </Link>\r\n                <Link to=\"/configurações\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-cog\"/>Configurações</li>\r\n                </Link>\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nexport default function Posts() {\r\n    return (\r\n        <>\r\n            <div className=\"form-row d-inline-block\">\r\n                <div className=\"col d-flex\">\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"O que está acontecendo?\" style={{ marginRight: '5px', width: '400px' }} />\r\n                    <button className=\"btn btn-primary\" style={{ marginBottom: '20px', borderRadius: '5px' }}>Postar</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"list-group\">\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}","const SERVER_URL = 'http://127.0.0.1:8000'\r\nconst SOCKET_URL = 'ws://127.0.0.1:8000'\r\n\r\nexport {SERVER_URL, SOCKET_URL}","import { SERVER_URL } from './settings'\r\n\r\nconst csrftoken = getCookie('csrftoken')\r\n\r\nfunction getCookie(name) {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nfunction handleLogout() {\r\n  const bool = window.confirm('Sair do Napker?\\nVocê poderá entrar novamente quando quiser.')\r\n  if (bool) {\r\n    window.location.replace(`${SERVER_URL}/logout`)\r\n  }\r\n}\r\n\r\nexport { csrftoken, handleLogout };","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nexport default function Profiles(props) {\r\n    const [profiles, setProfiles] = useState([])\r\n    const [filteredProfiles, setFilteredProfiles] = useState(null)\r\n    const [search, setSearch] = useState('')\r\n\r\n    useEffect(() => {\r\n        console.log('fetching profiles...')\r\n        fetch(`${SERVER_URL}/profile-api/profile-list`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setFilteredProfiles(null)\r\n                setProfiles(data)\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (search === '') {\r\n            setFilteredProfiles(null)\r\n            return\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/users/${search}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setFilteredProfiles(data)\r\n            })\r\n    }, [search])\r\n\r\n    const sendFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/send-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    const cancelFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/cancel-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    const handleRelationshipUpdate = e => {\r\n        const btn = e.target\r\n        if (btn.innerHTML === 'Solicitar') {\r\n            sendFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitado'\r\n            btn.className = 'btn btn-primary'\r\n        } else {\r\n            cancelFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitar'\r\n            btn.className = 'btn btn-secondary'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"form-row d-inline-block\">\r\n                <div className=\"col\">\r\n                    <input type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Pesquisar\"\r\n                        style={{ width: '400px' }}\r\n                        value={search}\r\n                        onChange={e => setSearch(e.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"list-group\">\r\n                {filteredProfiles ? filteredProfiles.map(profile => {\r\n                    return (\r\n                        <Link to={`/user/${profile.slug}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                            <li className=\"list-group-item profile-row filtered-profile\" key={profile.id}>\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                    <div className=\"profile-col\">\r\n                                        <img src={`${SERVER_URL}${profile.photo}`} />\r\n                                        <div className=\"main-profile-data\">\r\n                                            <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                            <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"profile-col\">\r\n                                        {profile.bio}\r\n                                    </div>\r\n                                    <div className=\"profile-col\">\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        </Link>\r\n                    )\r\n                }) : profiles && profiles.map(profile => {\r\n                    return (\r\n                        <li className=\"list-group-item profile-row\" key={profile.id}>\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                <div className=\"profile-col\">\r\n                                    <Link to={`/user/${profile.slug}`}>\r\n                                        <img src={`${SERVER_URL}${profile.photo}`} />\r\n                                    </Link>\r\n                                    <div className=\"main-profile-data\">\r\n                                        <Link to={`/user/${profile.slug}`} style={{ color: '#000' }}>\r\n                                            <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                        </Link>\r\n                                        <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"profile-col\">\r\n                                    {profile.bio}\r\n                                </div>\r\n                                <div className=\"profile-col\">\r\n                                    <button className=\"btn btn-secondary\" data-pk={profile.user.id} onClick={handleRelationshipUpdate}>\r\n                                        Solicitar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { handleLogout } from '../utils'\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <div className=\"header fixed-top\">\r\n            {!props.backArrow ? '' : <i class=\"fas fa-arrow-left profile-left-arrow\" onClick={() => window.history.back()}/>}\r\n            <strong>{props.page}</strong>\r\n            <a className=\"logout\" onClick={handleLogout}>Sair</a>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport Posts from './home-components/posts'\r\nimport Profiles from './home-components/profiles'\r\nimport Header from '../components/header'\r\n\r\nexport default function Home(props) {\r\n    const [page, setPage] = useState('Perfis')\r\n    const pages = {\r\n        'Perfis': <Profiles />,\r\n        'Posts': <Posts />\r\n    }\r\n\r\n    document.title = 'Home / Napker'\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Home\" />\r\n            <div className=\"content\">\r\n                <button type=\"button\" className=\"btn btn-primary\" style={{ marginRight: '50px', borderRadius: '20px' }} onClick={() => setPage(page === 'Perfis' ? 'Posts' : 'Perfis')}>\r\n                    {page === 'Perfis' ? 'Ver posts' : 'Ver perfis'}\r\n                </button>\r\n                {pages[page]}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Header from '../components/header'\r\nimport { SERVER_URL } from '../settings'\r\nimport { csrftoken } from '../utils'\r\n\r\nexport default function Notifications(props) {\r\n    const [invites, setInvites] = useState([])\r\n\r\n    document.title = 'Notificações / Napker'\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myinvites`)\r\n            .then(response => response.json())\r\n            .then(data => setInvites(data))\r\n    }, [])\r\n\r\n    const replyRequest = e => {\r\n        const btn = e.target\r\n        const requestBody = {\r\n            'senderid': btn.dataset.senderid,\r\n            'reply': btn.dataset.reply\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/reply-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(requestBody)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                props.updateNotificationsNumber()\r\n            })\r\n        document.getElementById('friend-request-list').removeChild(document.getElementById(btn.dataset.senderid))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Notificações\" />\r\n            <div className=\"content\">\r\n                <div className=\"list-group\" id='friend-request-list'>\r\n                    {invites.length ? invites.map(i => {\r\n                        return (\r\n                            <li className=\"list-group-item profile-row\" id={i.sender.id} key={i.sender.id}>\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                    <div className=\"profile-col\">\r\n                                        <Link to={`/user/${i.sender.slug}`}>\r\n                                            <img src={`${SERVER_URL}${i.sender.photo}`} />\r\n                                        </Link>\r\n                                        <div className=\"main-profile-data\">\r\n                                            <Link to={`/user/${i.sender.slug}`} style={{ color: '#000' }}>\r\n                                                <strong>{i.sender.first_name} {i.sender.last_name}</strong>\r\n                                            </Link>\r\n                                            <p className=\"text-secondary\">@{i.sender.user.username}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"profile-col\">\r\n                                        {i.sender.bio}\r\n                                    </div>\r\n                                    <div className=\"profile-col\" style={{ justifyContent: 'space-between' }}>\r\n                                        <button className=\"btn btn-primary btn-reply-fr\" data-senderid={i.sender.id} data-reply='accept' onClick={replyRequest}>Confirmar</button>\r\n                                        <button className=\"btn btn-grey btn-reply-fr\" data-senderid={i.sender.id} data-reply='decline' onClick={replyRequest}>Excluir</button>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    }) : <h3 style={{ marginTop: '100px' }}>Você ainda não tem nenhuma notificação</h3>}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import { SOCKET_URL } from '../../settings'\r\n\r\nclass WebSocketService {\r\n    static instance = null;\r\n    callbacks = {};\r\n  \r\n    static getInstance() {\r\n      if (!WebSocketService.instance) {\r\n        WebSocketService.instance = new WebSocketService();\r\n      }\r\n      return WebSocketService.instance;\r\n    }\r\n  \r\n    constructor() {\r\n      this.socketRef = null;\r\n    }\r\n  \r\n    connect(chatUrl) {\r\n      const path = `${SOCKET_URL}/ws/chat/${chatUrl}/`;\r\n      this.socketRef = new WebSocket(path);\r\n      this.socketRef.onopen = () => {\r\n        console.log(\"WebSocket open\");\r\n      };\r\n      this.socketNewMessage(JSON.stringify({\r\n        command: 'fetch-messages'\r\n      }))\r\n      this.socketRef.onmessage = e => {\r\n        this.socketNewMessage(e.data);\r\n      };\r\n      this.socketRef.onerror = e => {\r\n        console.log(e.message);\r\n      };\r\n      this.socketRef.onclose = () => {\r\n        console.log(\"WebSocket closed let's reopen\");\r\n        this.connect(chatUrl);\r\n      };\r\n    }\r\n  \r\n    disconnect() {\r\n      if (this.socketRef) this.socketRef.close();\r\n    }\r\n  \r\n    socketNewMessage(data) {\r\n      const parsedData = JSON.parse(data);\r\n      const command = parsedData.command;\r\n      if (Object.keys(this.callbacks).length === 0) {\r\n        return;\r\n      }\r\n      if (command === \"messages\") {\r\n        this.callbacks[command](parsedData.messages);\r\n      }\r\n      if (command === \"new_message\") {\r\n        this.callbacks[command](parsedData.message);\r\n      }\r\n    }\r\n  \r\n    fetchMessages(username, chatId) {\r\n      this.sendMessage({\r\n        command: \"fetch_messages\",\r\n        username: username,\r\n        chatId: chatId\r\n      });\r\n    }\r\n  \r\n    newChatMessage(message) {\r\n      this.sendMessage({\r\n        command: \"new_message\",\r\n        from: message.from,\r\n        content: message.content,\r\n        chatId: message.chatId\r\n      });\r\n    }\r\n  \r\n    addCallbacks(messagesCallback, newMessageCallback) {\r\n      this.callbacks[\"messages\"] = messagesCallback;\r\n      this.callbacks[\"new_message\"] = newMessageCallback;\r\n    }\r\n  \r\n    sendMessage(data) {\r\n      try {\r\n        this.socketRef.send(JSON.stringify({ ...data }));\r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n    }\r\n  \r\n    state() {\r\n      return this.socketRef ? this.socketRef.readyState : 0\r\n    }\r\n  }\r\n  \r\n  const WebSocketInstance = WebSocketService.getInstance();\r\n  \r\n  export default WebSocketInstance;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { csrftoken } from '../../utils'\r\nimport { SERVER_URL } from '../../settings'\r\nimport WebSocketInstance from './websocket'\r\n\r\nclass Chat extends React.Component {\r\n    initialiseChat() {\r\n        this.waitForSocketConnection(() => {\r\n            WebSocketInstance.addCallbacks(\r\n                this.setMessages.bind(this),\r\n                this.addMessage.bind(this)\r\n            )\r\n            WebSocketInstance.fetchMessages(\r\n                this.props.username,\r\n                this.props.chatId\r\n            );\r\n        });\r\n        if (this.props.chatId) WebSocketInstance.connect(this.props.chatId)\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            message: '',\r\n            messages: [],\r\n            otherUsername: this.props.otherUsername,\r\n            otherProfile: null\r\n        }\r\n        this.initialiseChat();\r\n    }\r\n\r\n    waitForSocketConnection(callback) {\r\n        const component = this;\r\n        setTimeout(function () {\r\n            if (WebSocketInstance.state() === 1) {\r\n                console.log(\"Connection is made\");\r\n                callback();\r\n                return;\r\n            } else {\r\n                console.log(\"wait for connection...\");\r\n                component.waitForSocketConnection(callback);\r\n            }\r\n        }, 100);\r\n    }\r\n\r\n    setMessages(messages) {\r\n        this.setState({ messages: messages.reverse() })\r\n    }\r\n\r\n    addMessage(message) {\r\n        this.setState({ messages: [...this.state.messages, message] })\r\n    }\r\n\r\n    messageChangeHandler = event => {\r\n        this.setState({ message: event.target.value });\r\n    };\r\n\r\n    sendMessageHandler = e => {\r\n        e.preventDefault();\r\n        const messageObject = {\r\n            from: this.props.username,\r\n            content: this.state.message,\r\n            chatId: this.props.chatId\r\n        };\r\n        WebSocketInstance.newChatMessage(messageObject);\r\n        this.setState({ message: \"\" });\r\n        this.props.updateMessagesComponent()\r\n        \r\n    };\r\n\r\n    renderTimestamp = timestamp => {\r\n        const ts = new Date(timestamp)\r\n        return `${ts.getDate()}/${ts.getMonth()}/${ts.getFullYear()} - ${ts.getHours()}:${ts.getMinutes()}`\r\n    };\r\n\r\n    renderMessages = messages => {\r\n        const currentUser = this.props.username;\r\n        return messages.map(message => (\r\n            <li\r\n                key={message.id}\r\n                className={message.author === currentUser ? \"sent\" : \"received\"}\r\n            >\r\n                <p>\r\n                    {message.content}\r\n                    <br />\r\n                    <small>\r\n                        {this.renderTimestamp(message.timestamp)} {message.author === currentUser ? message.read ? '✓✓' : '✓' : ''}\r\n                    </small>\r\n                </p>\r\n            </li>\r\n        ));\r\n    };\r\n\r\n    scrollToBottom = () => {\r\n        if (document.querySelector('#chat-log')) {\r\n            const chatLog = document.querySelector('#chat-log')\r\n            chatLog.scrollTop = chatLog.scrollHeight\r\n        }\r\n    };\r\n\r\n    handleComponentChange = () => {\r\n        this.scrollToBottom();\r\n        if (this.state.otherUsername && (!this.state.otherProfile || this.state.otherProfile.user.username !== this.state.otherUsername)) {\r\n            fetch(`${SERVER_URL}/profile-api/user/${this.state.otherUsername}`)\r\n                .then(response => response.json())\r\n                .then(data => this.setState({\r\n                    otherProfile: data\r\n                }))\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (this.props.chatId !== newProps.chatId) {\r\n            WebSocketInstance.disconnect();\r\n            this.waitForSocketConnection(() => {\r\n                WebSocketInstance.fetchMessages(\r\n                    this.props.username,\r\n                    newProps.chatId\r\n                );\r\n            });\r\n            WebSocketInstance.connect(newProps.chatId);\r\n\r\n            this.props.updateMessagesComponent()\r\n        }\r\n        if (this.state.otherUsername != newProps.otherUsername) {\r\n            this.setState({\r\n                otherUsername: newProps.otherUsername\r\n            })\r\n        }\r\n        if (newProps.chatId) {\r\n            fetch(`${SERVER_URL}/chat-api/read-messages`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                },\r\n                body: JSON.stringify({ chat_id: newProps.chatId })\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => console.log(data))\r\n        }\r\n        if (this.props.updateUnreadMessagesNumber) {\r\n            this.props.updateUnreadMessagesNumber()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.otherProfile ?\r\n                    <div className=\"d-flex flex-column justify-content-between align-items-center current-chat\">\r\n                        <div className=\"current-chat-header\">\r\n                            <Link to={`/user/${this.state.otherProfile.slug}`}>\r\n                                <img src={`${SERVER_URL}${this.state.otherProfile.photo}`} className=\"header-profile-img\" />\r\n                            </Link>\r\n                            <div className=\"d-flex flex-column align-items-start\" style={{ height: '52px' }}>\r\n                                <strong>{this.state.otherProfile.first_name} {this.state.otherProfile.last_name}</strong>\r\n                                <p className=\"text-secondary\">@{this.state.otherProfile.user.username}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div id=\"chat-log\">\r\n                            {this.state.messages ? this.renderMessages(this.state.messages) : ''}\r\n                        </div>\r\n                        <form className=\"send-message-container\" onSubmit={this.sendMessageHandler}>\r\n                            <input placeholder=\"Mensagem\" className=\"message-input\" id=\"chat-message-input\" value={this.state.message} onChange={this.messageChangeHandler} />\r\n                            <button className=\"btn btn-primary\" id=\"chat-message-submit\">\r\n                                <i class=\"fas fa-paper-plane\" style={{ position: 'relative', right: '10%' }} />\r\n                            </button>\r\n                        </form>\r\n                    </div> :\r\n                    <div className=\"d-flex flex-column justify-content-center align-items-center current-chat\">\r\n                        <div>\r\n                            <strong style={{ fontSize: 'larger' }}>Você não tem uma conversa selecionada</strong>\r\n                            <p className=\"text-secondary\">Selecione uma existente ou comece uma nova</p>\r\n                            <button className=\"btn btn-primary\" onClick={() => this.props.openModal()}>Nova conversa</button>\r\n                        </div>\r\n                    </div>}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chat","import React from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Header from '../../components/header'\r\nimport Chat from './chat'\r\nimport { SERVER_URL } from '../../settings'\r\n\r\nclass Messages extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: null,\r\n            chatId: null,\r\n            activeChats: null,\r\n            activeChatsProfiles: null,\r\n            addingNewChat: false,\r\n            modalProfiles: [],\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps === this.props) return\r\n        const participants = { username: this.state.username, other_username: newProps.match.params.slug }\r\n        fetch(`${SERVER_URL}/chat-api/chat-id/${JSON.stringify(participants)}`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                chatId: data['chat_id']\r\n            }))\r\n    }\r\n\r\n    handleComponentChange() {\r\n        if (!this.state.username) {\r\n            fetch(`${SERVER_URL}/profile-api/logged-user`)\r\n                .then(response => response.json())\r\n                .then(data => this.setState({\r\n                    username: data.username\r\n                }))\r\n        }\r\n        if (!this.state.activeChatsProfiles && this.state.activeChatsProfiles !== []) {\r\n            this.fetchActiveChatProfiles()\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.title = 'Mensagens / Napker'\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    fetchActiveChatProfiles = () => {\r\n        fetch(`${SERVER_URL}/chat-api/active-chats-profiles`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (!this.state.username) return\r\n                this.setState({\r\n                    activeChats: data.chats.reverse(),\r\n                    activeChatsProfiles: data.profiles.reverse()\r\n                })\r\n            })\r\n    }\r\n\r\n    openModal = () => {\r\n        this.setState({\r\n            addingNewChat: true\r\n        })\r\n    }\r\n\r\n    setModalSearch = query => {\r\n        if (query === '') {\r\n            this.setState({\r\n                modalProfiles: []\r\n            })\r\n            return\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/users/${query}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    modalProfiles: data\r\n                })\r\n            })\r\n    }\r\n\r\n    setContactSearch = query => {\r\n        if (query === '') {\r\n            this.fetchActiveChatProfiles()\r\n            return\r\n        }\r\n        if (this.state.activeChatsProfiles) {\r\n            const filteredProfiles = this.state.activeChatsProfiles.filter(p => p.user.username.includes(query))\r\n            this.setState({\r\n                activeChatsProfiles: filteredProfiles\r\n            })\r\n        }\r\n    }\r\n\r\n    resetUnreadMessagesCounter = () => {\r\n        this.unreadMessagesCounter = 0\r\n    }\r\n\r\n    incrementUnreadMessagesCounter = () => {\r\n        this.unreadMessagesCounter++\r\n    }\r\n\r\n    setLastChatMessage = message => {\r\n        this.lastChatMessage = message\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header page=\"Mensagens\" />\r\n                <div className=\"content d-flex messages-wrapper\">\r\n                    <Modal show={this.state.addingNewChat}\r\n                        onHide={() => this.setState({ addingNewChat: false })}\r\n                        size=\"lg\">\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title><strong>Nova conversa</strong></Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body style={{ padding: '0' }}>\r\n                            <input className=\"modal-search-input\"\r\n                                placeholder=\"Pesquisar pessoas\"\r\n                                onChange={e => this.setModalSearch(e.target.value)}\r\n                            />\r\n                            <div className=\"list-group\" style={{ height: '400px', overflow: 'hidden', overflowY: 'scroll' }}>\r\n                                {this.state.modalProfiles && this.state.modalProfiles.map(profile => {\r\n                                    return (\r\n                                        <Link to={`/mensagens/${profile.slug}`}\r\n                                            style={{ color: '#000', textDecoration: 'none' }}\r\n                                            onClick={() => this.setState({\r\n                                                addingNewChat: false\r\n                                            })}\r\n                                        >\r\n                                            <li className=\"list-group-item profile-row modal-profile-li\" key={profile.id}>\r\n                                                <div className=\"d-flex justify-content-between\">\r\n                                                    <div className=\"profile-col\">\r\n\r\n                                                        <img src={`${SERVER_URL}${profile.photo}`} />\r\n                                                        <div className=\"main-profile-data\">\r\n                                                            <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                                            <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"profile-col\">\r\n                                                        {profile.bio}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </li>\r\n                                        </Link>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                    <div className=\"d-flex flex-column chats-list\">\r\n                        <div className=\"search-input-container\">\r\n                            <input placeholder=\"Pesquisar pessoas\" className=\"search-input\" onChange={e => this.setContactSearch(e.target.value)} />\r\n                            <i className=\"fas fa-plus add-icon\" onClick={this.openModal}></i>\r\n                        </div>\r\n                        <div className=\"list-group chats-container\">\r\n                            {this.state.activeChatsProfiles && this.state.activeChatsProfiles.map(profile => {\r\n                                return (\r\n                                    <Link to={`/mensagens/${profile.user.username}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                                        {this.resetUnreadMessagesCounter()}\r\n                                        <li className=\"list-item profile-chat-item\" style={{ whiteSpace: 'nowrap' }}>\r\n                                            <img src={`${SERVER_URL}${profile.photo}`} alt=\"\" style={{ borderRadius: '50%', width: '64px', height: '64px', marginRight: '10px' }} />\r\n                                            <div className=\"d-flex flex-column align-items-start\">\r\n                                                <div className=\"d-flex\" style={{ maxHeight: '30px' }}>\r\n                                                    <strong style={{ height: 'fit-content' }}>{profile.first_name} {profile.last_name}</strong>\r\n                                                    {this.state.activeChats[this.state.activeChatsProfiles.indexOf(profile)].messages.map(message => {\r\n                                                        const messages = this.state.activeChats[this.state.activeChatsProfiles.indexOf(profile)].messages\r\n                                                        if (messages[messages.length - 1] === message) this.setLastChatMessage(message.content)\r\n                                                        if (message.read || message.contact.user.username !== profile.user.username) return\r\n                                                        this.incrementUnreadMessagesCounter()\r\n                                                    })}\r\n                                                    {this.unreadMessagesCounter ? <p className=\"notifications-number\">{this.unreadMessagesCounter}</p> : ''}\r\n                                                    <p className=\"text-secondary\" style={{ marginLeft: '5px' }}>@{profile.user.username}</p>\r\n                                                </div>\r\n                                                <p className=\"text-secondary\">{this.lastChatMessage.slice(0, 40)}</p>\r\n                                            </div>\r\n                                        </li>\r\n                                    </Link>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <Chat username={this.state.username}\r\n                        otherUsername={this.props.match.params.slug}\r\n                        chatId={this.state.chatId}\r\n                        openModal={this.openModal}\r\n                        updateUnreadMessagesNumber={this.props.updateUnreadMessagesNumber}\r\n                        updateMessagesComponent={this.fetchActiveChatProfiles}\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Messages","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Header from '../components/header'\r\nimport { SERVER_URL } from '../settings'\r\nimport { csrftoken } from '../utils'\r\n\r\nexport default function MyProfile() {\r\n    const [profile, setProfile] = useState(null)\r\n    const [isEditing, setIsEditing] = useState(false)\r\n    const profilePhotoStyle = {\r\n        borderRadius: '50%',\r\n        display: 'inline-block',\r\n        width: '96px',\r\n        heigh: '96px',\r\n        marginBottom: '25px'\r\n    }\r\n\r\n    document.title = 'Perfil / Napker'\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setProfile(data))\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Perfil\" />\r\n            {profile ? <div className=\"content\">\r\n                <Modal show={isEditing}\r\n                    onHide={() => setIsEditing(false)}\r\n                    size=\"lg\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Editar perfil</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <form action={`${SERVER_URL}/update-profile`} id=\"update-profile-form\" method=\"POST\">\r\n                            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n                            <div className=\"d-flex flex-column justify-content-center align-items-center\" style={{ padding: '25px' }}>\r\n                                <img src={`${SERVER_URL}${profile.photo}`} style={profilePhotoStyle} />\r\n                                <input type=\"file\" accept=\"image/png, image/jpg\" name=\"profile-photo\" onChange={e => console.log(e.target.files)} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"first-name\" className=\"profile-label\">Nome:</label>\r\n                                <input className=\"form-control\" type=\"text\" name=\"first-name\" id=\"first-name\" placeholder={profile.first_name} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"last-name\" className=\"profile-label\">Sobrenome:</label>\r\n                                <input className=\"form-control\" type=\"text\" name=\"last-name\" id=\"last-name\" placeholder={profile.last_name} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"username\" className=\"profile-label\">Nome de usuário:</label>\r\n                                <input className=\"form-control\" type=\"text\" name=\"username\" id=\"username\" placeholder={profile.user.username} />\r\n                                <span id=\"username-taken\">Nome de usuário já existe</span>\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"email\" className=\"profile-label\">Email:</label>\r\n                                <input className=\"form-control\" type=\"email\" name=\"email\" id=\"email\" placeholder={profile.email} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"gender\" className=\"profile-label\">Gênero:</label>\r\n                                <select className=\"form-control\" name=\"gender\" id=\"gender\" placeholder={profile.gender}>\r\n                                    <option value=\"male\">Masculino</option>\r\n                                    <option value=\"female\">Feminino</option>\r\n                                    <option value=\"other\">Outro</option>\r\n                                </select>\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"birth-date\" className=\"profile-label\">Data de nascimento:</label>\r\n                                <input className=\"form-control\" type=\"date\" name=\"birth-date\" id=\"birth-date\" defaultValue={profile.birth_date} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"bio\" className=\"profile-label\">Bio:</label>\r\n                                <input className=\"form-control\" type=\"email\" name=\"bio\" id=\"bio\" placeholder={profile.bio} />\r\n                            </div>\r\n                        </form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <button className=\"btn btn-grey\" onClick={() => setIsEditing(false)}>Fechar</button>\r\n                        <button className=\"btn btn-primary\" onClick={() => document.querySelector('form#update-profile-form').submit()}>Salvar</button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <div className=\"d-flex justify-content-between align-items-center profile-data-container\">\r\n                    <div className=\"d-flex flex-column align-items-start\">\r\n                        <p style={{ padding: '15px' }}><img src={`${SERVER_URL}${profile.photo}`} style={profilePhotoStyle} /></p>\r\n                        <p style={{ marginBottom: 0 }}><strong>{profile.first_name} {profile.last_name}</strong></p>\r\n                        <p className=\"text-secondary\" style={{ marginTop: 0 }}>@{profile.user.username}</p>\r\n                        <p>{profile.bio}</p>\r\n                        <p className=\"text-secondary\">\r\n                            <i className=\"far fa-calendar-alt\"></i> Entrou em {profile.created.split('-').reverse().join('/')}\r\n                        </p>\r\n                        <p>\r\n                            <Link to={`/user/${profile.slug}/amigos`} style={{ color: '#000' }}>\r\n                                <strong>{profile.friends.length}</strong> {profile.friends.length === 1 ? 'amigo' : 'amigos'}\r\n                            </Link>\r\n                        </p>\r\n                        <p>\r\n                            <Link to={`/user/${profile.slug}/posts`} style={{ color: '#000' }}>\r\n                                <strong>{profile.posts.length}</strong> {profile.posts.length === 1 ? 'post' : 'posts'}\r\n                            </Link>\r\n                        </p>\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"btn btn-secondary\" type=\"button\" onClick={() => setIsEditing(true)}>Editar perfil</button>\r\n                    </div>\r\n                </div>\r\n            </div > : ''}\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport Header from '../components/header'\r\n\r\nexport default function Settings() {\r\n\r\n    document.title = 'Configurações / Napker'\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Configurações\" />\r\n            <div className=\"content\">\r\n                Configurações\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Header from '../../components/header'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            profile: null,\r\n            relationshipButtonLabel: ''\r\n        }\r\n        this.slug = this.props.match.params.slug\r\n    }\r\n    profilePhotoStyle = {\r\n        borderRadius: '50%',\r\n        display: 'inline-block',\r\n        width: '96px',\r\n        heigh: '96px',\r\n        marginBottom: '25px'\r\n    }\r\n\r\n    componentWillMount() {\r\n        fetch(`${SERVER_URL}/profile-api/user/${this.slug}`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                profile: data\r\n            }))\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${SERVER_URL}/profile-api/relationship/${this.slug}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                let label\r\n                switch (data.relationship) {\r\n                    case 'friends':\r\n                        label = 'Amigos'\r\n                        break\r\n                    case 'invite-sent':\r\n                        label = 'Solicitado'\r\n                        break\r\n                    case 'invite-received':\r\n                        label = 'Aceitar'\r\n                        break\r\n                    case 'none':\r\n                        label = 'Solicitar'\r\n                }\r\n                this.setState({\r\n                    relationshipButtonLabel: label\r\n                })\r\n            })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        let btn = document.querySelector('#profile-page-relationship-btn')\r\n        if (btn) {\r\n            switch (btn.innerHTML) {\r\n                case 'Amigos':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.onmouseenter = () => {\r\n                        btn.innerHTML = 'Remover'\r\n                    }\r\n                    btn.onmouseout = () => {\r\n                        btn.innerHTML = 'Amigos'\r\n                    }\r\n                    btn.classList.add('friend-btn')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Solicitado':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Aceitar':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Solicitar':\r\n                    btn.classList.add('btn-secondary')\r\n                    btn.classList.remove('d-none')\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    sendFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/send-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    cancelFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/cancel-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    removeFromFriends = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/remove-from-friends`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    acceptFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/reply-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({\r\n                'senderid': pk,\r\n                'reply': 'accept'\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                this.props.updateNotificationsNumber()\r\n            })\r\n    }\r\n\r\n    handleRelationshipUpdate = e => {\r\n        const btn = e.target\r\n        if (btn.innerHTML === 'Solicitar') {\r\n            this.sendFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitado'\r\n            btn.className = 'btn btn-primary'\r\n        } else if (btn.innerHTML === 'Solicitado') {\r\n            this.cancelFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitar'\r\n            btn.className = 'btn btn-secondary'\r\n        } else if (btn.innerHTML === 'Amigos' || btn.innerHTML === 'Remover') {\r\n            if (window.confirm(`Remover @${this.state.profile.user.username} dos amigos?`)) {\r\n                this.removeFromFriends(btn.dataset.pk)\r\n                btn.innerHTML = 'Solicitar'\r\n                btn.className = 'btn btn-secondary'\r\n            }\r\n        } else if (btn.innerHTML === 'Aceitar') {\r\n            this.acceptFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Amigos'\r\n            btn.className = 'btn btn-primary'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header page={this.state.profile ? `${this.state.profile.first_name} ${this.state.profile.last_name}` : 'Perfil'}\r\n                    backArrow={true}\r\n                />\r\n                {!this.state.profile ? <></> : <>\r\n                    <div className=\"content\">\r\n                        <div className=\"d-flex justify-content-between align-items-center profile-data-container\">\r\n                            <div className=\"d-flex flex-column align-items-start\">\r\n                                <p style={{ padding: '15px' }}><img src={`${SERVER_URL}${this.state.profile.photo}`} style={this.profilePhotoStyle} /></p>\r\n                                <p style={{ marginBottom: 0 }}><strong>{this.state.profile.first_name} {this.state.profile.last_name}</strong></p>\r\n                                <p className=\"text-secondary\" style={{ marginTop: 0 }}>@{this.state.profile.user.username}</p>\r\n                                <p>{this.state.profile.bio}</p>\r\n                                <p className=\"text-secondary\">\r\n                                    <i className=\"far fa-calendar-alt\"></i> Entrou em {this.state.profile.created.split('-').reverse().join('/')}\r\n                                </p>\r\n                                <p>\r\n                                    <Link to={`/user/${this.state.profile.slug}/amigos`} style={{ color: '#000' }}>\r\n                                        <strong>{this.state.profile.friends.length}</strong> {this.state.profile.friends.length === 1 ? 'amigo' : 'amigos'}\r\n                                    </Link>\r\n                                </p>\r\n                                <p>\r\n                                    <Link to={`/user/${this.state.profile.slug}/posts`} style={{ color: '#000' }}>\r\n                                        <strong>{this.state.profile.posts.length}</strong> {this.state.profile.posts.length === 1 ? 'post' : 'posts'}\r\n                                    </Link>\r\n                                </p>\r\n                            </div>\r\n                            <div>\r\n                                <button className=\"btn d-none\"\r\n                                    id=\"profile-page-relationship-btn\"\r\n                                    data-pk={this.state.profile.user.id}\r\n                                    onClick={this.handleRelationshipUpdate}\r\n                                >{this.state.relationshipButtonLabel}</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile","import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nimport Header from '../../components/header'\r\nimport { SERVER_URL } from '../../settings'\r\n\r\nexport default function Friends() {\r\n    const [friends, setFriends] = useState([])\r\n    const [profile, setProfile] = useState(null)\r\n    const { slug } = useParams()\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/user/${slug}`)\r\n            .then(response => response.json())\r\n            .then(data => setProfile(data))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (profile) {\r\n            fetch(`${SERVER_URL}/profile-api/get-friends-profiles/${profile.slug}`)\r\n                .then(response => response.json())\r\n                .then(data => setFriends(data))\r\n        }\r\n    }, [profile])\r\n\r\n    return (\r\n        <>\r\n            <Header page={profile ? `${profile.first_name} ${profile.last_name} / Amigos` : 'Perfil / Amigos'}\r\n                backArrow={true}\r\n            />\r\n            <div className=\"content\">\r\n                <div className=\"lidt-group\">\r\n                    {friends && friends.map(friend => {\r\n                        return (\r\n                            <Link to={`/user/${friend.slug}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                                <li className=\"list-group-item profile-row filtered-profile\" key={friend.id}>\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <div className=\"profile-col\">\r\n                                            <img src={`${SERVER_URL}${friend.photo}`} />\r\n                                            <div className=\"main-profile-data\">\r\n                                                <strong>{friend.first_name} {friend.last_name}</strong>\r\n                                                <p className=\"text-secondary\">@{friend.user.username}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"profile-col\">\r\n                                            {friend.bio}\r\n                                        </div>\r\n                                        <div className=\"profile-col\">\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            </Link>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nimport Header from '../../components/header'\r\nimport { SERVER_URL } from '../../settings'\r\n\r\nexport default function Posts(props) {\r\n    const [profile, setProfile] = useState(null)\r\n    const { slug } = useParams()\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/user/${slug}`)\r\n            .then(response => response.json())\r\n            .then(data => setProfile(data))\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Header page={profile ? `${profile.first_name} ${profile.last_name} / Posts` : 'Perfil / Posts'}\r\n                backArrow={true}\r\n            />\r\n            <div className=\"content\">\r\n                <div className=\"lidt-group\">\r\n                    {profile && profile.posts.map(post => {\r\n                        return (\r\n                            <li className=\"list-group-item profile-row filtered-profile\" key={post.id}>\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                   <div className=\"profile-col\">\r\n                                        {post.content}\r\n                                   </div>\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\nimport Sidebar from './components/sidebar'\r\nimport Home from './pages/home'\r\nimport Notifications from './pages/notifications'\r\nimport Messages from './pages/messages/messages'\r\nimport MyProfile from './pages/myprofile'\r\nimport Settings from './pages/settings'\r\nimport Profile from './pages/home-components/profile'\r\nimport ProfileFriends from './pages/profile-components/friends'\r\nimport ProfilePosts from './pages/profile-components/posts'\r\n\r\nimport { SERVER_URL } from './settings'\r\n\r\nexport default function App() {\r\n    const [notificationsNumber, setNotificationsNumber] = useState(0)\r\n    const [unreadMessagesNumber, setUnreadMessagesNumber] = useState(0)\r\n\r\n    useEffect(() => {\r\n        updateNotificationsNumber()\r\n        updateUnreadMessagesNumber()\r\n    }, [])\r\n\r\n    const updateNotificationsNumber = () => {\r\n        fetch(`${SERVER_URL}/profile-api/myinvites`)\r\n            .then(response => response.json())\r\n            .then(data => setNotificationsNumber(data.length))\r\n    }\r\n\r\n    const updateUnreadMessagesNumber = () => {\r\n        fetch(`${SERVER_URL}/chat-api/all-unread-messages-number`)\r\n            .then(response => response.json())\r\n            .then(data => setUnreadMessagesNumber(data['unread_messages_number']))\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <Sidebar notificationsNumber={notificationsNumber} unreadMessagesNumber={unreadMessagesNumber} />\r\n            <div className=\"main-content\">\r\n                <Switch>\r\n                    <Route path=\"/notificações\" render={props => (\r\n                        <Notifications {...props} updateNotificationsNumber={updateNotificationsNumber} />\r\n                    )} />\r\n                    <Route path=\"/mensagens\" exact component={Messages} />\r\n                    <Route path=\"/mensagens/:slug\" render={props => (\r\n                        <Messages {...props} updateUnreadMessagesNumber={updateUnreadMessagesNumber} />\r\n                    )} />\r\n                    <Route path=\"/perfil\" component={MyProfile} />\r\n                    <Route path=\"/configurações\" component={Settings} />\r\n                    <Route path=\"/user/:slug\" exact render={props => (\r\n                        <Profile {...props} updateNotificationsNumber={updateNotificationsNumber} />\r\n                    )} />\r\n                    <Route path=\"/user/:slug/amigos\" component={ProfileFriends} />\r\n                    <Route path=\"/user/:slug/posts\" component={ProfilePosts} />\r\n                    <Route path=\"/\" component={Home} />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css'\n\nimport App from './App'\n\nReactDOM.render(<App />, document.querySelector('#root'))\n"],"sourceRoot":""}