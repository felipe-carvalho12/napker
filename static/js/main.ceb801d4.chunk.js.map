{"version":3,"sources":["components/sidebar.js","settings.js","components/likesmodal.js","utils.js","pages/home-components/posts.js","pages/home-components/profiles.js","components/header.js","pages/home.js","pages/notifications.js","pages/messages/websocket.js","pages/messages/chat.js","pages/messages/messages.js","pages/profile-components/posts.js","pages/profile-components/interests.js","pages/myprofile.js","pages/settings.js","pages/home-components/profile.js","pages/profile-components/friends.js","pages/profile-components/interestprofiles.js","pages/profile-components/edit-interests/publicInterests.js","pages/profile-components/edit-interests/privateInterests.js","pages/profile-components/edit-interests/editinterests.js","components/commentmodal.js","pages/home-components/post.js","App.js","index.js"],"names":["Sidebar","props","className","to","style","textDecoration","notificationsNumber","unreadMessagesNumber","SERVER_URL","LikesModal","Modal","show","isOpen","onHide","hideModal","size","Header","closeButton","Title","Body","height","overflow","overflowY","likes","map","like","profile","slug","color","onClick","key","id","src","photo","marginRight","first_name","last_name","user","username","bio","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","handleLogout","window","confirm","location","replace","Posts","fetchPosts","fetch","then","response","json","data","setState","posts","likeUnlikePost","e","stopPropagation","likeBtn","target","classList","contains","remove","add","dataset","postid","console","log","hideLikesModal","likesModal","deletePost","postId","el","querySelector","animationPlayState","addEventListener","method","headers","handlePostImageChange","reader","FileReader","onload","readyState","postFormImagePreview","result","display","readAsDataURL","files","state","this","action","encType","type","value","placeholder","autoFocus","margin","htmlFor","class","accept","onChange","post","href","author","created","reverse","join","textAlign","content","image","comments","includes","data-postid","React","Component","Profiles","useState","profiles","setProfiles","filteredProfiles","setFilteredProfiles","search","setSearch","useEffect","handleRelationshipUpdate","pk","btn","innerHTML","body","JSON","stringify","cancelFriendRequest","width","data-pk","backArrow","history","back","page","Home","setPage","pages","title","marginBottom","borderRadius","Notifications","invites","setInvites","postLikes","setPostLikes","setComments","updateNotificationsNumber","replyRequest","requestBody","senderid","reply","getElementById","removeChild","sender","justifyContent","data-senderid","data-reply","fontSize","comment","marginTop","WebSocketService","callbacks","socketRef","instance","chatUrl","path","WebSocket","onopen","socketNewMessage","command","onmessage","onerror","message","onclose","connect","close","parsedData","parse","Object","keys","messages","chatId","sendMessage","from","messagesCallback","newMessageCallback","send","err","WebSocketInstance","getInstance","Chat","messageChangeHandler","event","sendMessageHandler","preventDefault","messageObject","newChatMessage","updateMessagesComponent","renderTimestamp","timestamp","ts","Date","getDate","getMonth","getFullYear","getHours","getMinutes","renderMessages","currentUser","read","scrollToBottom","chatLog","scrollTop","scrollHeight","handleComponentChange","otherUsername","otherProfile","initialiseChat","waitForSocketConnection","addCallbacks","setMessages","bind","addMessage","fetchMessages","callback","component","setTimeout","newProps","disconnect","chat_id","updateUnreadMessagesNumber","onSubmit","position","right","openModal","Messages","fetchActiveChatProfiles","activeChats","chats","activeChatsProfiles","addingNewChat","setModalSearch","query","modalProfiles","setContactSearch","filter","p","resetUnreadMessagesCounter","unreadMessagesCounter","incrementUnreadMessagesCounter","setLastChatMessage","lastChatMessage","participants","other_username","match","params","padding","whiteSpace","maxHeight","indexOf","contact","marginLeft","slice","myprofile","setMyProfile","setLikesModal","fetchProfile","Interests","interests","public","interest","toUpperCase","MyProfile","setProfile","profileImagePreview","setProfileImagePreview","isEditing","setIsEditing","currentPageIsPosts","setCurrentPageIsPosts","switchPage","querySelectorAll","forEach","bool","email","gender","defaultValue","birth_date","Footer","submit","friends","Settings","Profile","sendFriendRequest","removeFromFriends","acceptFriendRequest","relationshipButtonLabel","label","relationship","onmouseenter","onmouseout","Friends","setFriends","useParams","friend","InterestProfiles","PublicInterests","tagContainer","input","tags","myProfile","interestsInput","addTags","tag","parentElement","sort","prepend","div","createElement","span","closeIcon","setAttribute","appendChild","createTag","setInterests","push","tagLabel","getAttribute","index","focus","PrivateInterests","EditInterests","publicInterests","setPublicInterests","privateInterests","setPrivateInterests","background","fontWeight","public_interests","private_interests","documentElement","CommentModal","commentPost","Post","setPost","commentModalIsOpen","setCommentModalIsOpen","postLikesModal","setPostLikesModal","commentLikesModal","setCommentLikesModal","fetchPost","likeUnlikeComment","commentid","commentId","deleteComment","data-commentid","App","invitesReceivedNumber","setInvitesReceived","unvisualizedLikesNumber","setUnvisulaizedLikes","unvisualizedCommentsNumber","setUnvisulaizedComments","setUnreadMessagesNumber","render","exact","ProfileFriends","ReactDOM"],"mappings":"6RAGe,SAASA,EAAQC,GAC5B,OACI,yBAAKC,UAAU,WACX,kBAAC,IAAD,CAAMC,GAAG,IAAIC,MAAO,CAAEC,eAAgB,SAClC,uCAEJ,4BACI,kBAAC,IAAD,CAAMF,GAAG,IAAIC,MAAO,CAAEC,eAAgB,SAClC,4BAAI,uBAAGH,UAAU,gBAAjB,SAEJ,kBAAC,IAAD,CAAMC,GAAG,sBAAgBC,MAAO,CAAEC,eAAgB,SAC9C,4BAAI,uBAAGH,UAAU,gBAAjB,qBAA8CD,EAAMK,oBAA2B,uBAAGJ,UAAU,wBAAwBD,EAAMK,qBAAhD,KAE9E,kBAAC,IAAD,CAAMH,GAAG,aAAaC,MAAO,CAAEC,eAAgB,SAC3C,4BAAI,uBAAGH,UAAU,oBAAjB,YAA+CD,EAAMM,qBAA4B,uBAAGL,UAAU,wBAAwBD,EAAMM,sBAAhD,KAEhF,kBAAC,IAAD,CAAMJ,GAAG,UAAUC,MAAO,CAAEC,eAAgB,SACxC,4BAAI,uBAAGH,UAAU,gBAAjB,WAEJ,kBAAC,IAAD,CAAMC,GAAG,uBAAiBC,MAAO,CAAEC,eAAgB,SAC/C,4BAAI,uBAAGH,UAAU,eAAjB,0B,2CCvBdM,EAAa,wBCMJ,SAASC,EAAWR,GAC/B,OACI,kBAACS,EAAA,EAAD,CAAOC,KAAMV,EAAMW,OACfC,OAAQZ,EAAMa,UACdC,KAAK,MACL,kBAACL,EAAA,EAAMM,OAAP,CAAcC,aAAW,GACrB,kBAACP,EAAA,EAAMQ,MAAP,KAAa,8CAEjB,kBAACR,EAAA,EAAMS,KAAP,KACI,yBAAKjB,UAAU,aAAaE,MAAO,CAAEgB,OAAQ,QAASC,SAAU,SAAUC,UAAW,WAChFrB,EAAMsB,OACHtB,EAAMsB,MAAMC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,WAASF,KAAI,SAAAE,GACtC,OACI,kBAAC,IAAD,CAAMvB,GAAE,gBAAWuB,EAAQC,MACvBvB,MAAO,CAAEwB,MAAO,OAAQvB,eAAgB,QACxCwB,QAAS5B,EAAMa,WAEf,wBAAIZ,UAAU,+CAA+C4B,IAAKJ,EAAQK,IACtE,yBAAK7B,UAAU,kCACX,yBAAKA,UAAU,eACX,yBAAK8B,IAAG,UAAKxB,GAAL,OAAkBkB,EAAQO,OAC9B/B,UAAU,kBACVE,MAAO,CAAE8B,YAAa,UAE1B,yBAAKhC,UAAU,qBACX,gCAASwB,EAAQS,WAAjB,IAA8BT,EAAQU,WACtC,uBAAGlC,UAAU,kBAAb,IAAgCwB,EAAQW,KAAKC,YAGrD,yBAAKpC,UAAU,eACVwB,EAAQa,cClCzD,IAAMC,EAEN,SAAmBC,GACjB,IAAIC,EAAc,KAClB,GAAIC,SAASC,QAA8B,KAApBD,SAASC,OAE9B,IADA,IAAMC,EAAUF,SAASC,OAAOE,MAAM,KAC7BC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAAK,CACvC,IAAMH,EAASC,EAAQE,GAAGE,OAE1B,GAAIL,EAAOM,UAAU,EAAGT,EAAKO,OAAS,KAAQP,EAAO,IAAM,CACzDC,EAAcS,mBAAmBP,EAAOM,UAAUT,EAAKO,OAAS,IAChE,OAIN,OAAON,EAfSU,CAAU,aAkB5B,SAASC,IACMC,OAAOC,QAAQ,uEAE1BD,OAAOE,SAASC,QAAhB,UAA2BjD,EAA3B,Y,ICfiBkD,E,kDACjB,WAAYzD,GAAQ,IAAD,8BACf,cAAMA,IAmBV0D,WAAa,WACTC,MAAM,GAAD,OAAIpD,EAAJ,wBACAqD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAAEC,MAAOF,QAvB1B,EA0BnBG,eAAiB,SAAAC,GACbA,EAAEC,kBACF,IAAMC,EAAUF,EAAEG,OACdD,EAAQE,UAAUC,SAAS,QAC3BH,EAAQE,UAAUE,OAAO,OACzBJ,EAAQE,UAAUG,IAAI,OACtBf,MAAM,GAAD,OAAIpD,EAAJ,iCAAuC8D,EAAQM,QAAQC,SACvDhB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFc,QAAQC,IAAIf,GACZ,EAAKL,kBAGbW,EAAQE,UAAUE,OAAO,OACzBJ,EAAQE,UAAUG,IAAI,OACtBf,MAAM,GAAD,OAAIpD,EAAJ,+BAAqC8D,EAAQM,QAAQC,SACrDhB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFc,QAAQC,IAAIf,GACZ,EAAKL,kBA7CF,EAkDnBqB,eAAiB,WACb,EAAKf,SAAS,CACVgB,WAAY,CACRrE,QAAQ,EACRW,MAAO,SAtDA,EA2DnB2D,WAAa,SAACd,EAAGe,GACbf,EAAEC,kBACF,IAAMe,EAAKzC,SAAS0C,cAAT,wBAAwCF,IAC/C7B,OAAOC,QAAQ,kFACf6B,EAAGhF,MAAMkF,mBAAqB,UAC9BF,EAAGG,iBAAiB,gBAAgB,WAChC,EAAK5B,gBAETC,MAAM,GAAD,OAAIpD,EAAJ,iCAAuC2E,GAAU,CAClDK,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAejD,KAGlBqB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFc,QAAQC,IAAIf,QA5ET,EAiFnB0B,sBAAwB,SAAAtB,GACpB,IAAMuB,EAAS,IAAIC,WACnBD,EAAOE,OAAS,WACc,IAAtBF,EAAOG,aACP,EAAK7B,SAAS,CAAE8B,qBAAsBJ,EAAOK,SAC7CrD,SAAS0C,cAAc,4BAA4BjF,MAAM6F,QAAU,YAG3E,IACIN,EAAOO,cAAc9B,EAAEG,OAAO4B,MAAM,IACtC,YAzFF,EAAKC,MAAQ,CACT1E,QAAS,KACTwC,MAAO,KACPe,WAAY,CACRrE,QAAQ,EACRW,MAAO,MAEXwE,qBAAsB,MATX,E,iEAaG,IAAD,OACjBnC,MAAM,GAAD,OAAIpD,EAAJ,2BACAqD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAAEvC,QAASsC,OAC3CqC,KAAK1C,e,+BA+EC,IAAD,OACL,OACI,oCACI,kBAAClD,EAAD,CACIG,OAAQyF,KAAKD,MAAMnB,WAAWrE,OAC9BW,MAAO8E,KAAKD,MAAMnB,WAAW1D,MAC7BT,UAAWuF,KAAKrB,iBAEnBqB,KAAKD,MAAM1E,SACR,0BACI4E,OAAM,UAAK9F,EAAL,yBACNgF,OAAO,OACPtF,UAAU,mBACVqG,QAAQ,uBAER,2BAAOC,KAAK,SAAS/D,KAAK,sBAAsBgE,MAAOjE,IACvD,yBAAKtC,UAAU,UACX,yBACI8B,IAAG,UAAKxB,GAAL,OAAkB6F,KAAKD,MAAM1E,QAAQO,OACxC/B,UAAU,oBAEd,2BAAOsG,KAAK,OACRtG,UAAU,qBACVuC,KAAK,eACLiE,YAAY,mCACZC,WAAS,KAGjB,yBACI3E,IAAKqE,KAAKD,MAAML,qBAChB7F,UAAU,WACV6B,GAAG,0BACH3B,MAAO,CAAE6F,QAAS,UAEtB,6BACA,yBAAK/F,UAAU,iCAAiCE,MAAO,CAAEwG,OAAQ,oBAC7D,yBAAK1G,UAAU,sBACX,2BAAO2G,QAAQ,aAAaC,MAAM,iBAClC,2BACIN,KAAK,OACLO,OAAO,mCACPtE,KAAK,aACLV,GAAG,aACH3B,MAAO,CAAE6F,QAAS,QAClBe,SAAUX,KAAKX,wBAEnB,2BAAOoB,MAAM,kBAEjB,4BACIN,KAAK,SACLtG,UAAU,kBACVE,MAAO,CAAEgB,OAAQ,SAHrB,YASZ,yBAAKlB,UAAU,aACVmG,KAAKD,MAAMlC,OAASmC,KAAKD,MAAMlC,MAAM1C,KAAI,SAAAyF,GACtC,OACI,wBACI/G,UAAU,iBACV6B,GAAE,uBAAkBkF,EAAKlF,IACzBD,IAAKmF,EAAKlF,GACVF,QAAS,kBAAMyB,OAAOE,SAAS0D,KAAhB,gBAAgCD,EAAKlF,MAEpD,yBAAK7B,UAAU,kCACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,YACX,kBAAC,IAAD,CACIC,GAAI8G,EAAKE,OAAOpF,KAAO,EAAKqE,MAAM1E,QAAQK,GACtC,UADA,gBACqBkF,EAAKE,OAAOxF,MACrCE,QAAS,SAAAuC,GAAC,OAAIA,EAAEC,oBAEhB,yBAAKrC,IAAG,UAAKxB,GAAL,OAAkByG,EAAKE,OAAOlF,OAClC/B,UAAU,sBAItB,yBAAKA,UAAU,YACX,kBAAC,IAAD,CACIC,GAAI8G,EAAKE,OAAOpF,KAAO,EAAKqE,MAAM1E,QAAQK,GACtC,UADA,gBACqBkF,EAAKE,OAAOxF,MACrCvB,MAAO,CAAEwB,MAAO,QAChBC,QAAS,SAAAuC,GAAC,OAAIA,EAAEC,oBAEhB,yBAAKjE,MAAO,CAAEgB,OAAQ,SAClB,gCAAS6F,EAAKE,OAAOhF,WAArB,IAAkC8E,EAAKE,OAAO/E,UAA9C,KACA,uBAAGlC,UAAU,iCAAb,IACM+G,EAAKE,OAAO9E,KAAKC,SADvB,WACoC2E,EAAKG,QAAQtE,MAAM,KAAKuE,UAAUC,KAAK,QAInF,yBAAKlH,MAAO,CAAEmH,UAAW,UACpBN,EAAKO,SAETP,EAAKQ,OACF,yBAAKzF,IAAG,UAAKxB,GAAL,OAAkByG,EAAKQ,OAASvH,UAAU,eAI7D+G,EAAKE,OAAOpF,KAAO,EAAKqE,MAAM1E,QAAQK,IACnC,uBACI7B,UAAU,6CACVE,MAAO,CAAEwG,OAAQ,iBACjB/E,QAAS,SAAAuC,GAAC,OAAI,EAAKc,WAAWd,EAAG6C,EAAKlF,QAGlD,yBAAK7B,UAAU,gBACX,uBAAGA,UAAU,kBACT,kBAAC,IAAD,CACIC,GAAE,gBAAW8G,EAAKlF,GAAhB,YACF7B,UAAU,iBACV2B,QAAS,SAAAuC,GAAC,OAAIA,EAAEC,oBAEhB,uBACIyC,MAAM,mBACPG,EAAKS,SAAS1E,QAEpBiE,EAAK1F,MAAMC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,QAAQK,MAAI4F,SAAS,EAAKvB,MAAM1E,QAAQK,IACjE,uBAAG+E,MAAM,eACLc,cAAaX,EAAKlF,GAClBF,QAAS,EAAKsC,iBAGlB,uBAAG2C,MAAM,eACLc,cAAaX,EAAKlF,GAClBF,QAAS,EAAKsC,iBAEtB,uBAAGjE,UAAU,oBACT2B,QAAS,SAAAuC,GACLA,EAAEC,kBACF,EAAKJ,SAAS,CAAEgB,WAAY,CAAErE,QAAQ,EAAMW,MAAO0F,EAAK1F,WAG3D0F,EAAK1F,MAAMyB,oB,GAxOrB6E,IAAMC,WCH1B,SAASC,EAAS9H,GAAQ,IAAD,EACJ+H,mBAAS,IADL,mBAC7BC,EAD6B,KACnBC,EADmB,OAEYF,mBAAS,MAFrB,mBAE7BG,EAF6B,KAEXC,EAFW,OAGRJ,mBAAS,IAHD,mBAG7BK,EAH6B,KAGrBC,EAHqB,KAKpCC,qBAAU,WACN3E,MAAM,GAAD,OAAIpD,EAAJ,8BACAqD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFoE,EAAoB,MACpBF,EAAYlE,QAErB,IAEHuE,qBAAU,WACS,KAAXF,EAIJzE,MAAM,GAAD,OAAIpD,EAAJ,8BAAoC6H,IACpCxE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFoE,EAAoBpE,MANxBoE,EAAoB,QAQzB,CAACC,IAEJ,IA0BMG,EAA2B,SAAApE,GAC7BA,EAAEC,kBACF,IA5BsBoE,EA4BhBC,EAAMtE,EAAEG,OACQ,cAAlBmE,EAAIC,WA7BcF,EA8BAC,EAAI9D,QAAQ6D,GA7BlC7E,MAAM,GAAD,OAAIpD,EAAJ,oCAAkD,CACnDgF,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAejD,GAEnBoG,KAAMC,KAAKC,UAAUL,KAEpB5E,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIc,QAAQC,IAAIf,MAqB1B0E,EAAIC,UAAY,aAChBD,EAAIxI,UAAY,qBAnBI,SAAAuI,GACxB7E,MAAM,GAAD,OAAIpD,EAAJ,sCAAoD,CACrDgF,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAejD,GAEnBoG,KAAMC,KAAKC,UAAUL,KAEpB5E,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIc,QAAQC,IAAIf,MAW1B+E,CAAoBL,EAAI9D,QAAQ6D,IAChCC,EAAIC,UAAY,YAChBD,EAAIxI,UAAY,sBAIxB,OACI,oCACI,yBAAKA,UAAU,YACX,2BAAOsG,KAAK,OACRtG,UAAU,eACVwG,YAAY,YACZtG,MAAO,CAAE4I,MAAO,SAChBvC,MAAO4B,EACPrB,SAAU,SAAA5C,GAAC,OAAIkE,EAAUlE,EAAEG,OAAOkC,WAG1C,yBAAKvG,UAAU,cACViI,EAAmBA,EAAiB3G,KAAI,SAAAE,GACrC,OACI,kBAAC,IAAD,CAAMvB,GAAE,gBAAWuB,EAAQC,MAAQvB,MAAO,CAAEwB,MAAO,OAAQvB,eAAgB,SACvE,wBAAIH,UAAU,+CAA+C4B,IAAKJ,EAAQK,IACtE,yBAAK7B,UAAU,kCACX,yBAAKA,UAAU,eACX,yBAAK8B,IAAG,UAAKxB,GAAL,OAAkBkB,EAAQO,OAC9B/B,UAAU,kBACVE,MAAO,CAAE8B,YAAa,UAE1B,yBAAKhC,UAAU,qBACX,gCAASwB,EAAQS,WAAjB,IAA8BT,EAAQU,WACtC,uBAAGlC,UAAU,kBAAb,IAAgCwB,EAAQW,KAAKC,YAGrD,yBAAKpC,UAAU,eACVwB,EAAQa,KAEb,yBAAKrC,UAAU,sBAO9B+H,GAAYA,EAASzG,KAAI,SAAAE,GAC1B,OACI,wBACIxB,UAAU,8BACV4B,IAAKJ,EAAQK,GACbF,QAAS,kBAAMyB,OAAOE,SAAS0D,KAAhB,gBAAgCxF,EAAQC,QAEvD,yBAAKzB,UAAU,kCACX,yBAAKA,UAAU,eACX,yBAAK8B,IAAG,UAAKxB,GAAL,OAAkBkB,EAAQO,OAC9B/B,UAAU,kBACVE,MAAO,CAAE8B,YAAa,UAE1B,yBAAKhC,UAAU,qBACX,gCAASwB,EAAQS,WAAjB,IAA8BT,EAAQU,WACtC,uBAAGlC,UAAU,kBAAb,IAAgCwB,EAAQW,KAAKC,YAGrD,yBAAKpC,UAAU,eACVwB,EAAQa,KAEb,yBAAKrC,UAAU,eACX,4BAAQA,UAAU,oBAAoB+I,UAASvH,EAAQW,KAAKN,GAAIF,QAAS2G,GAAzE,qBC/HrB,SAASxH,EAAOf,GAC3B,OACI,yBAAKC,UAAU,oBACTD,EAAMiJ,UAAiB,uBAAGpC,MAAM,oCAAoCjF,QAAS,kBAAMyB,OAAO6F,QAAQC,UAAhF,GACpB,gCAASnJ,EAAMoJ,MACf,uBAAGnJ,UAAU,SAAS2B,QAASwB,GAA/B,SCHG,SAASiG,EAAKrJ,GAAQ,IAAD,EACR+H,mBAAS,SADD,mBACzBqB,EADyB,KACnBE,EADmB,KAE1BC,EAAQ,CACV,OAAU,kBAACzB,EAAD,MACV,MAAS,kBAAC,EAAD,OAKb,OAFApF,SAAS8G,MAAQ,gBAGb,oCACI,kBAACzI,EAAD,CAAQqI,KAAK,SACb,yBAAKnJ,UAAU,WACX,4BACIsG,KAAK,SACLtG,UAAU,kBACVE,MAAO,CAAEsJ,aAAc,OAAQC,aAAc,QAC7C9H,QAAS,kBAAM0H,EAAiB,WAATF,EAAoB,QAAU,YAE3C,WAATA,EAAoB,YAAc,cAEtCG,EAAMH,KCpBR,SAASO,EAAc3J,GAAQ,IAAD,EACX+H,mBAAS,IADE,mBAClC6B,EADkC,KACzBC,EADyB,OAEP9B,mBAAS,IAFF,mBAElC+B,EAFkC,KAEvBC,EAFuB,OAGThC,mBAAS,IAHA,mBAGlCN,EAHkC,KAGxBuC,EAHwB,KAIrC3J,EAAsBuJ,EAAQ7G,OAAS+G,EAAU/G,OAAS0E,EAAS1E,OAEvEL,SAAS8G,MAAQ,8BAEjBlB,qBAAU,WACN3E,MAAM,GAAD,OAAIpD,EAAJ,2BACAqD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI8F,EAAW9F,MAC7BJ,MAAM,GAAD,OAAIpD,EAAJ,sCACAqD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIgG,EAAahG,MAC/BJ,MAAM,GAAD,OAAIpD,EAAJ,yCACAqD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIiG,EAAYjG,QAC/B,IAEHuE,qBAAU,WACFwB,EAAU/G,QACVY,MAAM,GAAD,OAAIpD,EAAJ,8BACAqD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFc,QAAQC,IAAIf,GACZ/D,EAAMiK,iCAGnB,CAACH,IAEJxB,qBAAU,WACFb,EAAS1E,QACTY,MAAM,GAAD,OAAIpD,EAAJ,iCACAqD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFc,QAAQC,IAAIf,GACZ/D,EAAMiK,iCAGnB,CAACxC,IAEJ,IAAMyC,EAAe,SAAA/F,GACjBA,EAAEC,kBACF,IAAMqE,EAAMtE,EAAEG,OACR6F,EAAc,CAChB,SAAY1B,EAAI9D,QAAQyF,SACxB,MAAS3B,EAAI9D,QAAQ0F,OAEzB1G,MAAM,GAAD,OAAIpD,EAAJ,qCAAmD,CACpDgF,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAejD,GAEnBoG,KAAMC,KAAKC,UAAUsB,KAEpBvG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFc,QAAQC,IAAIf,GACZ/D,EAAMiK,+BAEdvH,SAAS4H,eAAe,uBAAuBC,YAAY7H,SAAS4H,eAAe7B,EAAI9D,QAAQyF,YAGnG,OACI,oCACI,kBAACrJ,EAAD,CAAQqI,KAAK,uBACb,yBAAKnJ,UAAU,WACX,yBAAKA,UAAU,aAAa6B,GAAG,yBACxB8H,EAAQ7G,QACP,oCACI,6DACC6G,EAAQrI,KAAI,SAAAuB,GACT,OACI,wBACI7C,UAAU,8BACV6B,GAAIgB,EAAE0H,OAAO1I,GACbD,IAAKiB,EAAE0H,OAAO1I,GACdF,QAAS,kBAAMyB,OAAOE,SAAS0D,KAAhB,gBAAgCnE,EAAE0H,OAAO9I,QAExD,yBAAKzB,UAAU,kCACX,yBAAKA,UAAU,eACX,yBAAK8B,IAAG,UAAKxB,GAAL,OAAkBuC,EAAE0H,OAAOxI,OAC/B/B,UAAU,kBACVE,MAAO,CAAE8B,YAAa,UAE1B,yBAAKhC,UAAU,qBACX,gCAAS6C,EAAE0H,OAAOtI,WAAlB,IAA+BY,EAAE0H,OAAOrI,WACxC,uBAAGlC,UAAU,kBAAb,IAAgC6C,EAAE0H,OAAOpI,KAAKC,YAGtD,yBAAKpC,UAAU,eACV6C,EAAE0H,OAAOlI,KAEd,yBAAKrC,UAAU,cAAcE,MAAO,CAAEsK,eAAgB,kBAClD,4BAAQxK,UAAU,+BAA+ByK,gBAAe5H,EAAE0H,OAAO1I,GAAI6I,aAAW,SAAS/I,QAASsI,GAA1G,aACA,4BAAQjK,UAAU,4BAA4ByK,gBAAe5H,EAAE0H,OAAO1I,GAAI6I,aAAW,UAAU/I,QAASsI,GAAxG,kBAS5B,+BAEGJ,EAAU/G,QACT,oCACI,wCACC+G,EAAUvI,KAAI,SAAAC,GACX,OACI,wBAAIvB,UAAU,8BAA8B4B,IAAKL,EAAKC,QAAQK,IAC1D,yBAAK7B,UAAU,kCACX,yBAAKA,UAAU,eACX,kBAAC,IAAD,CAAMC,GAAE,gBAAWsB,EAAKC,QAAQC,OAC5B,yBAAKK,IAAG,UAAKxB,GAAL,OAAkBiB,EAAKC,QAAQO,OACnC/B,UAAU,kBACVE,MAAO,CAAE8B,YAAa,YAIlC,yBAAKhC,UAAU,cAAcE,MAAO,CAAEyK,SAAU,WAC5C,2BACI,kBAAC,IAAD,CAAM1K,GAAE,gBAAWsB,EAAKC,QAAQC,MAAQvB,MAAO,CAAEwB,MAAO,SAAxD,IACMH,EAAKC,QAAQW,KAAKC,UAF5B,wBAMJ,yBAAKpC,UAAU,cAAcE,MAAO,CAAEsK,eAAgB,WAClD,kBAAC,IAAD,CAAMvK,GAAE,gBAAWsB,EAAKwF,KAAKlF,KACzB,4BAAQ7B,UAAU,mBAAlB,oBAUhC,+BAEGwH,EAAS1E,QACR,oCACI,8CACC0E,EAASlG,KAAI,SAAAsJ,GACV,OACI,wBAAI5K,UAAU,8BAA8B4B,IAAKgJ,EAAQ3D,OAAOpF,IAC5D,yBAAK7B,UAAU,kCACX,yBAAKA,UAAU,eACX,kBAAC,IAAD,CAAMC,GAAE,gBAAW2K,EAAQ3D,OAAOxF,OAC9B,yBAAKK,IAAG,UAAKxB,GAAL,OAAkBsK,EAAQ3D,OAAOlF,OACrC/B,UAAU,kBACVE,MAAO,CAAE8B,YAAa,YAIlC,yBAAKhC,UAAU,cAAcE,MAAO,CAAEyK,SAAU,WAC5C,2BACI,kBAAC,IAAD,CAAM1K,GAAE,gBAAW2K,EAAQ3D,OAAOxF,MAAQvB,MAAO,CAAEwB,MAAO,SAA1D,IACMkJ,EAAQ3D,OAAO9E,KAAKC,UAF9B,wBAMJ,yBAAKpC,UAAU,cAAcE,MAAO,CAAEsK,eAAgB,WAClD,kBAAC,IAAD,CAAMvK,GAAE,gBAAW2K,EAAQ7D,KAAKlF,KAC5B,4BAAQ7B,UAAU,mBAAlB,sBAWlCI,GACE,wBAAIF,MAAO,CAAE2K,UAAW,UAAxB,kD,oBCxLdC,E,WAWF,aAAe,yBATfC,UAAY,GAUV5E,KAAK6E,UAAY,K,+DAJjB,OAHKF,EAAiBG,WACpBH,EAAiBG,SAAW,IAAIH,GAE3BA,EAAiBG,a,6CAOlBC,GAAU,IAAD,OACTC,EAAI,URjBG,sBQiBH,oBAA4BD,EAA5B,KACV/E,KAAK6E,UAAY,IAAII,UAAUD,GAC/BhF,KAAK6E,UAAUK,OAAS,WACtBzG,QAAQC,IAAI,mBAEdsB,KAAKmF,iBAAiB3C,KAAKC,UAAU,CACnC2C,QAAS,oBAEXpF,KAAK6E,UAAUQ,UAAY,SAAAtH,GACzB,EAAKoH,iBAAiBpH,EAAEJ,OAE1BqC,KAAK6E,UAAUS,QAAU,SAAAvH,GACvBU,QAAQC,IAAIX,EAAEwH,UAEhBvF,KAAK6E,UAAUW,QAAU,WACvB/G,QAAQC,IAAI,iCACZ,EAAK+G,QAAQV,M,mCAKX/E,KAAK6E,WAAW7E,KAAK6E,UAAUa,U,uCAGpB/H,GACf,IAAMgI,EAAanD,KAAKoD,MAAMjI,GACxByH,EAAUO,EAAWP,QACgB,IAAvCS,OAAOC,KAAK9F,KAAK4E,WAAWjI,SAGhB,aAAZyI,GACFpF,KAAK4E,UAAUQ,GAASO,EAAWI,UAErB,gBAAZX,GACFpF,KAAK4E,UAAUQ,GAASO,EAAWJ,Y,oCAIzBtJ,EAAU+J,GACtBhG,KAAKiG,YAAY,CACfb,QAAS,iBACTnJ,SAAUA,EACV+J,OAAQA,M,qCAIGT,GACbvF,KAAKiG,YAAY,CACfb,QAAS,cACTc,KAAMX,EAAQW,KACd/E,QAASoE,EAAQpE,QACjB6E,OAAQT,EAAQS,W,mCAIPG,EAAkBC,GAC7BpG,KAAK4E,UAAL,SAA6BuB,EAC7BnG,KAAK4E,UAAL,YAAgCwB,I,kCAGtBzI,GACV,IACEqC,KAAK6E,UAAUwB,KAAK7D,KAAKC,UAAL,eAAoB9E,KACxC,MAAO2I,GACP7H,QAAQC,IAAI4H,EAAIf,Y,8BAKlB,OAAOvF,KAAK6E,UAAY7E,KAAK6E,UAAUpF,WAAa,M,KArFpDkF,EACKG,SAAW,KAwFpB,IAEeyB,EAFW5B,EAAiB6B,cCwG9BC,E,kDA7KX,WAAY7M,GAAQ,IAAD,8BACf,cAAMA,IAgCV8M,qBAAuB,SAAAC,GACnB,EAAK/I,SAAS,CAAE2H,QAASoB,EAAMzI,OAAOkC,SAlCvB,EAqCnBwG,mBAAqB,SAAA7I,GACjBA,EAAE8I,iBACF,IAAMC,EAAgB,CAClBZ,KAAM,EAAKtM,MAAMqC,SACjBkF,QAAS,EAAKpB,MAAMwF,QACpBS,OAAQ,EAAKpM,MAAMoM,QAEvBO,EAAkBQ,eAAeD,GACjC,EAAKlJ,SAAS,CAAE2H,QAAS,KACzB,EAAK3L,MAAMoN,2BA9CI,EAkDnBC,gBAAkB,SAAAC,GACd,IAAMC,EAAK,IAAIC,KAAKF,GACpB,MAAM,GAAN,OAAUC,EAAGE,UAAb,YAA0BF,EAAGG,WAA7B,YAA2CH,EAAGI,cAA9C,cAAiEJ,EAAGK,WAApE,YAAkFL,EAAGM,eApDtE,EAuDnBC,eAAiB,SAAA3B,GACb,IAAM4B,EAAc,EAAK/N,MAAMqC,SAC/B,OAAO8J,EAAS5K,KAAI,SAAAoK,GAAO,OACvB,wBACI9J,IAAK8J,EAAQ7J,GACb7B,UAAW0L,EAAQzE,SAAW6G,EAAc,OAAS,YAErD,2BACKpC,EAAQpE,QACT,6BACA,+BACK,EAAK8F,gBAAgB1B,EAAQ2B,WADlC,IAC+C3B,EAAQzE,SAAW6G,EAAcpC,EAAQqC,KAAO,eAAO,SAAM,UAlEzG,EAyEnBC,eAAiB,WACb,GAAIvL,SAAS0C,cAAc,aAAc,CACrC,IAAM8I,EAAUxL,SAAS0C,cAAc,aACvC8I,EAAQC,UAAYD,EAAQE,eA5EjB,EAgFnBC,sBAAwB,WACpB,EAAKJ,kBACD,EAAK9H,MAAMmI,eAAmB,EAAKnI,MAAMoI,cAAgB,EAAKpI,MAAMoI,aAAanM,KAAKC,WAAa,EAAK8D,MAAMmI,eAC9G3K,MAAM,GAAD,OAAIpD,EAAJ,6BAAmC,EAAK4F,MAAMmI,gBAC9C1K,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CACxBuK,aAAcxK,QApF1B,EAAKoC,MAAQ,CACTwF,QAAS,GACTQ,SAAU,GACVmC,cAAe,EAAKtO,MAAMsO,cAC1BC,aAAc,MAElB,EAAKC,iBARU,E,6DAdD,IAAD,OACbpI,KAAKqI,yBAAwB,WACzB9B,EAAkB+B,aACd,EAAKC,YAAYC,KAAK,GACtB,EAAKC,WAAWD,KAAK,IAEzBjC,EAAkBmC,cACd,EAAK9O,MAAMqC,SACX,EAAKrC,MAAMoM,WAGfhG,KAAKpG,MAAMoM,QAAQO,EAAkBd,QAAQzF,KAAKpG,MAAMoM,Y,6DAcxC2C,GACpB,IAAMC,EAAY5I,KAClB6I,YAAW,WACP,GAAkC,IAA9BtC,EAAkBxG,QAGlB,OAFAtB,QAAQC,IAAI,2BACZiK,IAGAlK,QAAQC,IAAI,0BACZkK,EAAUP,wBAAwBM,KAEvC,O,kCAGK5C,GACR/F,KAAKpC,SAAS,CAAEmI,SAAUA,EAAS/E,c,iCAG5BuE,GACPvF,KAAKpC,SAAS,CAAEmI,SAAS,GAAD,mBAAM/F,KAAKD,MAAMgG,UAAjB,CAA2BR,Q,0CA8DnDvF,KAAKiI,0B,2CAILjI,KAAKiI,0B,gDAGiBa,GAAW,IAAD,OAC5B9I,KAAKpG,MAAMoM,SAAW8C,EAAS9C,SAC/BO,EAAkBwC,aAClB/I,KAAKqI,yBAAwB,WACzB9B,EAAkBmC,cACd,EAAK9O,MAAMqC,SACX6M,EAAS9C,WAGjBO,EAAkBd,QAAQqD,EAAS9C,QAEnChG,KAAKpG,MAAMoN,2BAEXhH,KAAKD,MAAMmI,eAAiBY,EAASZ,eACrClI,KAAKpC,SAAS,CACVsK,cAAeY,EAASZ,gBAG5BY,EAAS9C,QACTzI,MAAM,GAAD,OAAIpD,EAAJ,2BAAyC,CAC1CgF,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAejD,GAEnBoG,KAAMC,KAAKC,UAAU,CAAEuG,QAASF,EAAS9C,WAExCxI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIc,QAAQC,IAAIf,MAE9BqC,KAAKpG,MAAMqP,4BACXjJ,KAAKpG,MAAMqP,+B,+BAIT,IAAD,OACL,OACI,oCACKjJ,KAAKD,MAAMoI,aACR,yBAAKtO,UAAU,8EACX,yBAAKA,UAAU,uBACX,kBAAC,IAAD,CAAMC,GAAE,gBAAWkG,KAAKD,MAAMoI,aAAa7M,OACvC,yBAAKK,IAAG,UAAKxB,GAAL,OAAkB6F,KAAKD,MAAMoI,aAAavM,OAC9C/B,UAAU,iBACVE,MAAO,CAAE8B,YAAa,UAG9B,yBAAKhC,UAAU,uCAAuCE,MAAO,CAAEgB,OAAQ,SACnE,gCAASiF,KAAKD,MAAMoI,aAAarM,WAAjC,IAA8CkE,KAAKD,MAAMoI,aAAapM,WACtE,uBAAGlC,UAAU,kBAAb,IAAgCmG,KAAKD,MAAMoI,aAAanM,KAAKC,YAGrE,yBAAKP,GAAG,YACHsE,KAAKD,MAAMgG,SAAW/F,KAAK0H,eAAe1H,KAAKD,MAAMgG,UAAY,IAEtE,0BAAMlM,UAAU,yBAAyBqP,SAAUlJ,KAAK4G,oBACpD,2BAAOvG,YAAY,WAAWxG,UAAU,gBAAgB6B,GAAG,qBAAqB0E,MAAOJ,KAAKD,MAAMwF,QAAS5E,SAAUX,KAAK0G,uBAC1H,4BAAQ7M,UAAU,kBAAkB6B,GAAG,uBACnC,uBAAG+E,MAAM,qBAAqB1G,MAAO,CAAEoP,SAAU,WAAYC,MAAO,YAIhF,yBAAKvP,UAAU,6EACX,6BACI,4BAAQE,MAAO,CAAEyK,SAAU,WAA3B,+CACA,uBAAG3K,UAAU,kBAAb,8CACA,4BAAQA,UAAU,kBAAkB2B,QAAS,kBAAM,EAAK5B,MAAMyP,cAA9D,wB,GApLT7H,IAAMC,WCyMV6H,E,kDAvMX,WAAY1P,GAAQ,IAAD,8BACf,cAAMA,IA2CV2P,wBAA0B,WACtBhM,MAAM,GAAD,OAAIpD,EAAJ,oCACAqD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACG,EAAKoC,MAAM9D,UAChB,EAAK2B,SAAS,CACV4L,YAAa7L,EAAK8L,MAAMzI,UACxB0I,oBAAqB/L,EAAKiE,SAASZ,gBAnDhC,EAwDnBqI,UAAY,WACR,EAAKzL,SAAS,CACV+L,eAAe,KA1DJ,EA8DnBC,eAAiB,SAAAC,GACC,KAAVA,EAMJtM,MAAM,GAAD,OAAIpD,EAAJ,8BAAoC0P,IACpCrM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,EAAKC,SAAS,CACVkM,cAAenM,OATvB,EAAKC,SAAS,CACVkM,cAAe,MAjER,EA8EnBC,iBAAmB,SAAAF,GACf,GAAc,KAAVA,GAIJ,GAAI,EAAK9J,MAAM2J,oBAAqB,CAChC,IAAM5H,EAAmB,EAAK/B,MAAM2J,oBAAoBM,QAAO,SAAAC,GAAC,OAAIA,EAAEjO,KAAKC,SAASqF,SAASuI,MAC7F,EAAKjM,SAAS,CACV8L,oBAAqB5H,UANzB,EAAKyH,2BAhFM,EA2FnBW,2BAA6B,WACzB,EAAKC,sBAAwB,GA5Fd,EA+FnBC,+BAAiC,WAC7B,EAAKD,yBAhGU,EAmGnBE,mBAAqB,SAAA9E,GACjB,EAAK+E,gBAAkB/E,GAlGvB,EAAKxF,MAAQ,CACT9D,SAAU,KACV+J,OAAQ,KACRwD,YAAa,KACbE,oBAAqB,KACrBC,eAAe,EACfG,cAAe,IARJ,E,sEAYOhB,GAAW,IAAD,OAChC,GAAIA,IAAa9I,KAAKpG,MAAtB,CACA,IAAM2Q,EAAe,CAAEtO,SAAU+D,KAAKD,MAAM9D,SAAUuO,eAAgB1B,EAAS2B,MAAMC,OAAOpP,MAC5FiC,MAAM,GAAD,OAAIpD,EAAJ,6BAAmCqI,KAAKC,UAAU8H,KAClD/M,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CACxBoI,OAAQrI,EAAI,gB,8CAIC,IAAD,OACfqC,KAAKD,MAAM9D,UACZsB,MAAM,GAAD,OAAIpD,EAAJ,6BACAqD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CACxB3B,SAAU0B,EAAK1B,cAGtB+D,KAAKD,MAAM2J,qBAAuB1J,KAAKD,MAAM2J,sBAAwB,IACtE1J,KAAKuJ,4B,2CAKTjN,SAAS8G,MAAQ,qBACjBpD,KAAKiI,0B,2CAILjI,KAAKiI,0B,+BA8DC,IAAD,OACL,OACI,oCACI,kBAACtN,EAAD,CAAQqI,KAAK,cACb,yBAAKnJ,UAAU,mCACX,kBAACQ,EAAA,EAAD,CAAOC,KAAM0F,KAAKD,MAAM4J,cACpBnP,OAAQ,kBAAM,EAAKoD,SAAS,CAAE+L,eAAe,KAC7CjP,KAAK,MACL,kBAACL,EAAA,EAAMM,OAAP,CAAcC,aAAW,GACrB,kBAACP,EAAA,EAAMQ,MAAP,KAAa,mDAEjB,kBAACR,EAAA,EAAMS,KAAP,CAAYf,MAAO,CAAE4Q,QAAS,MAC1B,2BAAO9Q,UAAU,qBACbwG,YAAY,oBACZM,SAAU,SAAA5C,GAAC,OAAI,EAAK6L,eAAe7L,EAAEG,OAAOkC,UAEhD,yBAAKvG,UAAU,aAAaE,MAAO,CAAEgB,OAAQ,QAASC,SAAU,SAAUC,UAAW,WAChF+E,KAAKD,MAAM+J,eAAiB9J,KAAKD,MAAM+J,cAAc3O,KAAI,SAAAE,GACtD,OACI,kBAAC,IAAD,CAAMvB,GAAE,qBAAgBuB,EAAQC,MAC5BvB,MAAO,CAAEwB,MAAO,OAAQvB,eAAgB,QACxCwB,QAAS,kBAAM,EAAKoC,SAAS,CACzB+L,eAAe,MAGnB,wBAAI9P,UAAU,+CAA+C4B,IAAKJ,EAAQK,IACtE,yBAAK7B,UAAU,kCACX,yBAAKA,UAAU,eACX,yBAAK8B,IAAG,UAAKxB,GAAL,OAAkBkB,EAAQO,OAC9B/B,UAAU,kBACVE,MAAO,CAAE8B,YAAa,UAE1B,yBAAKhC,UAAU,qBACX,gCAASwB,EAAQS,WAAjB,IAA8BT,EAAQU,WACtC,uBAAGlC,UAAU,kBAAb,IAAgCwB,EAAQW,KAAKC,YAGrD,yBAAKpC,UAAU,eACVwB,EAAQa,cAU7C,yBAAKrC,UAAU,iCACX,yBAAKA,UAAU,0BACX,2BAAOwG,YAAY,oBAAoBxG,UAAU,eAAe8G,SAAU,SAAA5C,GAAC,OAAI,EAAKgM,iBAAiBhM,EAAEG,OAAOkC,UAC9G,uBAAGvG,UAAU,uBAAuB2B,QAASwE,KAAKqJ,aAEtD,yBAAKxP,UAAU,8BACVmG,KAAKD,MAAM2J,qBAAuB1J,KAAKD,MAAM2J,oBAAoBvO,KAAI,SAAAE,GAClE,OACI,kBAAC,IAAD,CAAMvB,GAAE,qBAAgBuB,EAAQC,MAAQvB,MAAO,CAAEwB,MAAO,OAAQvB,eAAgB,SAC3E,EAAKkQ,6BACN,wBAAIrQ,UAAU,8BAA8BE,MAAO,CAAE6Q,WAAY,WAC7D,yBAAKjP,IAAG,UAAKxB,GAAL,OAAkBkB,EAAQO,OAC9B/B,UAAU,kBACVE,MAAO,CAAE8B,YAAa,UAE1B,yBAAKhC,UAAU,wCACX,yBAAKA,UAAU,SAASE,MAAO,CAAE8Q,UAAW,SACxC,4BAAQ9Q,MAAO,CAAEgB,OAAQ,gBAAkBM,EAAQS,WAAnD,IAAgET,EAAQU,WACvE,EAAKgE,MAAMyJ,YAAY,EAAKzJ,MAAM2J,oBAAoBoB,QAAQzP,IAAU0K,SAAS5K,KAAI,SAAAoK,GAClF,IAAMQ,EAAW,EAAKhG,MAAMyJ,YAAY,EAAKzJ,MAAM2J,oBAAoBoB,QAAQzP,IAAU0K,SACrFA,EAASA,EAASpJ,OAAS,KAAO4I,GAAS,EAAK8E,mBAAmB9E,EAAQpE,SAC3EoE,EAAQqC,MAAQrC,EAAQwF,QAAQ/O,KAAKC,WAAaZ,EAAQW,KAAKC,UACnE,EAAKmO,oCAER,EAAKD,sBAAwB,uBAAGtQ,UAAU,wBAAwB,EAAKsQ,uBAA6B,GACrG,uBAAGtQ,UAAU,iBAAiBE,MAAO,CAAEiR,WAAY,QAAnD,IAA8D3P,EAAQW,KAAKC,WAE/E,uBAAGpC,UAAU,kBAAkB,EAAKyQ,gBAAgBW,MAAM,EAAG,aAQzF,kBAAC,EAAD,CAAMhP,SAAU+D,KAAKD,MAAM9D,SACvBiM,cAAelI,KAAKpG,MAAM6Q,MAAMC,OAAOpP,KACvC0K,OAAQhG,KAAKD,MAAMiG,OACnBqD,UAAWrJ,KAAKqJ,UAChBJ,2BAA4BjJ,KAAKpG,MAAMqP,2BACvCjC,wBAAyBhH,KAAKuJ,gC,GAhM/B/H,IAAMC,WCDd,SAASpE,EAAMzD,GAAQ,IAAD,EACC+H,mBAAS,MADV,mBAC1BuJ,EAD0B,KACfC,EADe,OAEGxJ,mBAAS,CAAEpH,QAAQ,EAAOW,MAAO,OAFpC,mBAE1B0D,EAF0B,KAEdwM,EAFc,KAG3B/P,EAAUzB,EAAMyB,QAEtB6G,qBAAU,WACN3E,MAAM,GAAD,OAAIpD,EAAJ,2BACAqD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIwN,EAAaxN,QAChC,IAEH,IAAMG,EAAiB,SAAAC,GACnBA,EAAEC,kBACF,IAAMC,EAAUF,EAAEG,OACdD,EAAQE,UAAUC,SAAS,QAC3BH,EAAQE,UAAUE,OAAO,OACzBJ,EAAQE,UAAUG,IAAI,OACtBf,MAAM,GAAD,OAAIpD,EAAJ,iCAAuC8D,EAAQM,QAAQC,SACvDhB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFc,QAAQC,IAAIf,GACZ/D,EAAMyR,oBAGdpN,EAAQE,UAAUE,OAAO,OACzBJ,EAAQE,UAAUG,IAAI,OACtBf,MAAM,GAAD,OAAIpD,EAAJ,+BAAqC8D,EAAQM,QAAQC,SACrDhB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFc,QAAQC,IAAIf,GACZ/D,EAAMyR,oBAmCtB,OACI,oCACI,kBAACjR,EAAD,CACIG,OAAQqE,EAAWrE,OACnBW,MAAO0D,EAAW1D,MAClBT,UAnCW,WACnB2Q,EAAc,CACV7Q,QAAQ,EACRW,MAAO,UAkCP,yBAAKrB,UAAU,aACVwB,GAAW6P,GAAa7P,EAAQwC,MAAMlB,OAAStB,EAAQwC,MAAM1C,KAAI,SAAAyF,GAC9D,OACI,wBACI/G,UAAU,iBACV4B,IAAKmF,EAAKlF,GACVA,GAAE,uBAAkBkF,EAAKlF,IACzBF,QAAS,kBAAMyB,OAAOE,SAAS0D,KAAhB,gBAAgCD,EAAKlF,MAEpD,yBAAK7B,UAAU,kCACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,YACX,yBAAK8B,IAAG,UAAKxB,GAAL,OAAkBkB,EAAQO,OAC9B/B,UAAU,qBAGlB,yBAAKA,UAAU,YACX,yBAAKE,MAAO,CAAEgB,OAAQ,SAClB,gCAASM,EAAQS,WAAjB,IAA8BT,EAAQU,UAAtC,KACA,uBAAGlC,UAAU,iCAAb,IACMwB,EAAQW,KAAKC,SADnB,WACgC2E,EAAKG,QAAQtE,MAAM,KAAKuE,UAAUC,KAAK,OAG3E,yBAAKlH,MAAO,CAAEmH,UAAW,UACpBN,EAAKO,SAETP,EAAKQ,OACF,yBAAKzF,IAAG,UAAKxB,GAAL,OAAkByG,EAAKQ,OAASvH,UAAU,eAI7DwB,EAAQK,IAAMwP,EAAUxP,IACrB,uBACI7B,UAAU,6CACVE,MAAO,CAAEwG,OAAQ,iBACjB/E,QAAS,SAAAuC,GAAC,OAjE3B,SAACA,EAAGe,GACnBf,EAAEC,kBACF,IAAMe,EAAKzC,SAAS0C,cAAT,wBAAwCF,IAC/C7B,OAAOC,QAAQ,kFACf6B,EAAGhF,MAAMkF,mBAAqB,UAC9BF,EAAGG,iBAAiB,gBAAgB,WAChCtF,EAAMyR,kBAEV9N,MAAM,GAAD,OAAIpD,EAAJ,iCAAuC2E,GAAU,CAClDK,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAejD,KAGlBqB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFc,QAAQC,IAAIf,OAgDsBkB,CAAWd,EAAG6C,EAAKlF,QAG7C,yBAAK7B,UAAU,gBACX,uBAAGA,UAAU,kBACT,kBAAC,IAAD,CACIC,GAAE,gBAAW8G,EAAKlF,GAAhB,YACF7B,UAAU,iBACV2B,QAAS,SAAAuC,GAAC,OAAIA,EAAEC,oBAEhB,uBAAGyC,MAAM,oBACLG,EAAKS,SAAS1E,OACrBiE,EAAK1F,MAAMC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,QAAQK,MAAI4F,SAAS4J,EAAUxP,IACxD,uBAAG+E,MAAM,eACLc,cAAaX,EAAKlF,GAClBF,QAASsC,IAGb,uBAAG2C,MAAM,eACLc,cAAaX,EAAKlF,GAClBF,QAASsC,IAEjB,uBAAGjE,UAAU,oBACT2B,QAAS,SAAAuC,GACLA,EAAEC,kBACFoN,EAAc,CAAE7Q,QAAQ,EAAMW,MAAO0F,EAAK1F,UAI7C0F,EAAK1F,MAAMyB,cAM/B,wBAAI5C,MAAO,CAAE2K,UAAW,SAAWrJ,EAAQS,WAA3C,uBClJN,SAASwP,EAAU1R,GAC9B,IAAMyB,EAAUzB,EAAMyB,QAEtB,OACI,yBAAKxB,UAAU,4BACX,yDAA4BwB,EAAQS,YACpC,6BACKT,GAAWA,EAAQkQ,UAAUvB,QAAO,SAAAtN,GAAC,OAAIA,EAAE8O,UAAQrQ,KAAI,SAAAsQ,GACpD,OACI,oCACKA,EAASrI,OACN,oCACI,6BACA,wBAAIvJ,UAAU,iBACT4R,EAASrI,MAAM,GAAGsI,cAAgBD,EAASrI,MAAM6H,MAAM,GACxD,kBAAC,IAAD,CAAMnR,GAAE,qBAAgB2R,EAASrI,QAC7B,4BAAQvJ,UAAU,gBAAgBE,MAAO,CAAE4Q,QAAS,QAApD,kCCT7B,SAASgB,IAAa,IAAD,EACFhK,mBAAS,MADP,mBACzBtG,EADyB,KAChBuQ,EADgB,OAEsBjK,mBAAS,MAF/B,mBAEzBkK,EAFyB,KAEJC,EAFI,OAGEnK,oBAAS,GAHX,mBAGzBoK,EAHyB,KAGdC,EAHc,OAIoBrK,oBAAS,GAJ7B,mBAIzBsK,EAJyB,KAILC,EAJK,KAMhC5P,SAAS8G,MAAQ,kBAEjBlB,qBAAU,WACNmJ,MACD,IAEH,IAAMA,EAAe,WACjB9N,MAAM,GAAD,OAAIpD,EAAJ,2BACAqD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFiO,EAAWjO,GACXmO,EAAuB,GAAD,OAAI3R,GAAJ,OAAiBwD,EAAK/B,YAIlDuQ,EAAa,SAAApO,GACfzB,SAAS8P,iBAAiB,kCAAkCC,SAAQ,SAAAtN,GAChEA,EAAGZ,UAAUE,OAAO,oCAExBN,EAAEG,OAAOC,UAAUG,IAAI,iCACvB4N,GAAuBD,IAyC3B,OACI,oCACI,kBAACtR,EAAD,CAAQqI,KAAK,WACZ3H,EAAU,yBAAKxB,UAAU,WACtB,kBAACQ,EAAA,EAAD,CAAOC,KAAMyR,EACTvR,OAAQ,kBAAMwR,GAAa,IAC3BtR,KAAK,MACL,kBAACL,EAAA,EAAMM,OAAP,CAAcC,aAAW,GACrB,kBAACP,EAAA,EAAMQ,MAAP,uBAEJ,kBAACR,EAAA,EAAMS,KAAP,KACI,0BAAMmF,OAAM,UAAK9F,EAAL,mBAAkCuB,GAAG,sBAAsByD,OAAO,OAAOe,QAAQ,uBACzF,2BAAOC,KAAK,SAAS/D,KAAK,sBAAsBgE,MAAOjE,IACvD,yBAAKtC,UAAU,+DAA+DE,MAAO,CAAE4Q,QAAS,SAC5F,yBAAKhP,IAAKkQ,EACNhS,UAAU,kBACVE,MAAO,CAAEsJ,aAAc,UAE3B,2BACIlD,KAAK,OACLO,OAAO,mCACPtE,KAAK,gBACLuE,SA5DC,SAAA5C,GAC7B,IAAMuB,EAAS,IAAIC,WACnBD,EAAOE,OAAS,WACc,IAAtBF,EAAOG,YACPqM,EAAuBxM,EAAOK,SAGtC,IACIL,EAAOO,cAAc9B,EAAEG,OAAO4B,MAAM,IACtC,eAsDkB,yBAAKjG,UAAU,UACX,2BAAO2G,QAAQ,aAAa3G,UAAU,iBAAtC,SACA,2BAAOA,UAAU,eAAesG,KAAK,OAAO/D,KAAK,aAAaV,GAAG,aAAa2E,YAAahF,EAAQS,cAEvG,yBAAKjC,UAAU,UACX,2BAAO2G,QAAQ,YAAY3G,UAAU,iBAArC,cACA,2BAAOA,UAAU,eAAesG,KAAK,OAAO/D,KAAK,YAAYV,GAAG,YAAY2E,YAAahF,EAAQU,aAErG,yBAAKlC,UAAU,UACX,2BAAO2G,QAAQ,WAAW3G,UAAU,iBAApC,uBACA,2BACIA,UAAU,eACVsG,KAAK,OACL/D,KAAK,WACLV,GAAG,WACH2E,YAAahF,EAAQW,KAAKC,SAC1B0E,SAjEH,SAAA5C,GACzBR,MAAM,GAAD,OAAIpD,EAAJ,6BAAmC4D,EAAEG,OAAOkC,QAC5C5C,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACgB,UAAdA,EAAK2O,KACLhQ,SAAS0C,cAAc,mBAAmBjF,MAAM6F,QAAU,UACS,YAA5DtD,SAAS0C,cAAc,mBAAmBjF,MAAM6F,UACvDtD,SAAS0C,cAAc,mBAAmBjF,MAAM6F,QAAU,eA6DlD,yBAAK7F,MAAO,CAAE4I,MAAO,OAAQzB,UAAW,SAAUyJ,QAAS,QACvD,0BAAMjP,GAAG,kBAAT,oCAEJ,yBAAK7B,UAAU,UACX,2BAAO2G,QAAQ,QAAQ3G,UAAU,iBAAjC,UACA,2BACIA,UAAU,eACVsG,KAAK,QACL/D,KAAK,QACLV,GAAG,QACH2E,YAAahF,EAAQkR,MACrB5L,SAnEN,SAAA5C,GACtBR,MAAM,GAAD,OAAIpD,EAAJ,yCAA+C4D,EAAEG,OAAOkC,QACxD5C,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACgB,UAAdA,EAAK2O,KACLhQ,SAAS0C,cAAc,gBAAgBjF,MAAM6F,QAAU,UACS,YAAzDtD,SAAS0C,cAAc,gBAAgBjF,MAAM6F,UACpDtD,SAAS0C,cAAc,gBAAgBjF,MAAM6F,QAAU,eA+D/C,yBAAK7F,MAAO,CAAE4I,MAAO,OAAQzB,UAAW,SAAUyJ,QAAS,QACvD,0BAAMjP,GAAG,eAAT,0BAEJ,yBAAK7B,UAAU,UACX,2BAAO2G,QAAQ,SAAS3G,UAAU,iBAAlC,cACA,4BAAQA,UAAU,eAAeuC,KAAK,SAASV,GAAG,SAAS2E,YAAahF,EAAQmR,QAC5E,4BAAQpM,MAAM,QAAd,aACA,4BAAQA,MAAM,UAAd,YACA,4BAAQA,MAAM,SAAd,WAGR,yBAAKvG,UAAU,UACX,2BAAO2G,QAAQ,aAAa3G,UAAU,iBAAtC,uBACA,2BAAOA,UAAU,eAAesG,KAAK,OAAO/D,KAAK,aAAaV,GAAG,aAAa+Q,aAAcpR,EAAQqR,cAExG,yBAAK7S,UAAU,UACX,2BAAO2G,QAAQ,MAAM3G,UAAU,iBAA/B,QACA,2BAAOA,UAAU,eAAesG,KAAK,QAAQ/D,KAAK,MAAMV,GAAG,MAAM2E,YAAahF,EAAQa,SAIlG,kBAAC7B,EAAA,EAAMsS,OAAP,KACI,4BAAQ9S,UAAU,eAAe2B,QAAS,kBAAMwQ,GAAa,KAA7D,UACA,4BAAQnS,UAAU,kBAAkB2B,QAAS,kBAAMc,SAAS0C,cAAc,4BAA4B4N,WAAtG,YAGR,yBAAK/S,UAAU,0BACX,yBAAKA,UAAU,wCACX,uBAAGE,MAAO,CAAE4Q,QAAS,SACjB,yBAAKhP,IAAG,UAAKxB,GAAL,OAAkBkB,EAAQO,OAC9B/B,UAAU,kBACVE,MAAO,CAAEsJ,aAAc,WAG/B,uBAAGtJ,MAAO,CAAEsJ,aAAc,IAAK,gCAAShI,EAAQS,WAAjB,IAA8BT,EAAQU,YACrE,uBAAGlC,UAAU,iBAAiBE,MAAO,CAAE2K,UAAW,IAAlD,IAAyDrJ,EAAQW,KAAKC,UACtE,2BAAIZ,EAAQa,KACZ,uBAAGrC,UAAU,kBACT,uBAAGA,UAAU,wBADjB,cACuDwB,EAAQ0F,QAAQtE,MAAM,KAAKuE,UAAUC,KAAK,MAEjG,2BACI,kBAAC,IAAD,CAAMnH,GAAE,gBAAWuB,EAAQC,KAAnB,WAAkCvB,MAAO,CAAEwB,MAAO,SACtD,gCAASF,EAAQwR,QAAQlQ,QAD7B,IAC0E,IAA3BtB,EAAQwR,QAAQlQ,OAAe,QAAU,YAIhG,yBAAK9C,UAAU,sBACX,4BACIA,UAAU,oBACVsG,KAAK,SACL3E,QAAS,kBAAMwQ,GAAa,IAC5BjS,MAAO,CAAEsJ,aAAc,SAJ3B,iBAQA,kBAAC,IAAD,CAAMvJ,GAAG,2BACL,4BAAQD,UAAU,qBAAlB,wBAIZ,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,uDAAuD2B,QAAS2Q,GAA/E,UACY9Q,EAAQwC,MAAMlB,OAD1B,KAGA,yBAAK9C,UAAU,yBAAyB2B,QAAS2Q,GAAjD,eACiB9Q,EAAQkQ,UAAUvB,QAAO,SAAAtN,GAAC,OAAIA,EAAE8O,UAAQ7O,OADzD,MAIHsP,EACG,kBAAC,EAAD,CAAO5Q,QAASA,EAASgQ,aAAcA,IACvC,kBAACC,EAAD,CAAWjQ,QAASA,KAElB,IC5MP,SAASyR,IAIpB,OAFAxQ,SAAS8G,MAAQ,+BAGb,oCACI,kBAACzI,EAAD,CAAQqI,KAAK,wBACb,yBAAKnJ,UAAU,WAAf,0B,IC8NGkT,E,kDA9NX,WAAYnT,GAAQ,IAAD,8BACf,cAAMA,IAmEVyR,aAAe,WACX9N,MAAM,GAAD,OAAIpD,EAAJ,6BAAmC,EAAKmB,OACxCkC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CACxBvC,QAASsC,QAxEF,EA4EnBqP,kBAAoB,SAAA5K,GAChB7E,MAAM,GAAD,OAAIpD,EAAJ,oCAAkD,CACnDgF,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAejD,GAEnBoG,KAAMC,KAAKC,UAAUL,KAEpB5E,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIc,QAAQC,IAAIf,OAtFf,EAyFnB+E,oBAAsB,SAAAN,GAClB7E,MAAM,GAAD,OAAIpD,EAAJ,sCAAoD,CACrDgF,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAejD,GAEnBoG,KAAMC,KAAKC,UAAUL,KAEpB5E,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIc,QAAQC,IAAIf,OAnGf,EAsGnBsP,kBAAoB,SAAA7K,GAChB7E,MAAM,GAAD,OAAIpD,EAAJ,oCAAkD,CACnDgF,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAejD,GAEnBoG,KAAMC,KAAKC,UAAUL,KAEpB5E,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIc,QAAQC,IAAIf,OAhHf,EAmHnBuP,oBAAsB,SAAA9K,GAClB7E,MAAM,GAAD,OAAIpD,EAAJ,qCAAmD,CACpDgF,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAejD,GAEnBoG,KAAMC,KAAKC,UAAU,CACjB,SAAYL,EACZ,MAAS,aAGZ5E,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFc,QAAQC,IAAIf,GACZ,EAAK/D,MAAMiK,gCAlIJ,EAsInB1B,yBAA2B,SAAApE,GACvB,IAAMsE,EAAMtE,EAAEG,OACQ,cAAlBmE,EAAIC,WACJ,EAAK0K,kBAAkB3K,EAAI9D,QAAQ6D,IACnCC,EAAIC,UAAY,aAChBD,EAAIxI,UAAY,mBACS,eAAlBwI,EAAIC,WACX,EAAKI,oBAAoBL,EAAI9D,QAAQ6D,IACrCC,EAAIC,UAAY,YAChBD,EAAIxI,UAAY,qBACS,WAAlBwI,EAAIC,WAA4C,YAAlBD,EAAIC,UACrCrF,OAAOC,QAAP,mBAA2B,EAAK6C,MAAM1E,QAAQW,KAAKC,SAAnD,mBACA,EAAKgR,kBAAkB5K,EAAI9D,QAAQ6D,IACnCC,EAAIC,UAAY,YAChBD,EAAIxI,UAAY,qBAEK,YAAlBwI,EAAIC,YACX,EAAK4K,oBAAoB7K,EAAI9D,QAAQ6D,IACrCC,EAAIC,UAAY,SAChBD,EAAIxI,UAAY,oBAzJL,EA6JnBsS,WAAa,SAAApO,GACTzB,SAAS8P,iBAAiB,kCAAkCC,SAAQ,SAAAtN,GAChEA,EAAGZ,UAAUE,OAAO,oCAExBN,EAAEG,OAAOC,UAAUG,IAAI,iCACvB,EAAKV,SAAS,CACVqO,oBAAqB,EAAKlM,MAAMkM,sBAjKpC,EAAKlM,MAAQ,CACT1E,QAAS,KACT8R,wBAAyB,GACzBlB,oBAAoB,GAExB,EAAK3Q,KAAO,EAAK1B,MAAM6Q,MAAMC,OAAOpP,KAPrB,E,iEAWf0E,KAAKqL,iB,0CAGY,IAAD,OAChB9N,MAAM,GAAD,OAAIpD,EAAJ,qCAA2C6F,KAAK1E,OAChDkC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,IAAIyP,EACJ,OAAQzP,EAAK0P,cACT,IAAK,UACDD,EAAQ,SACR,MACJ,IAAK,cACDA,EAAQ,aACR,MACJ,IAAK,kBACDA,EAAQ,UACR,MACJ,IAAK,OACDA,EAAQ,YAEhB,EAAKxP,SAAS,CACVuP,wBAAyBC,S,2CAMrC,IAAI/K,EAAM/F,SAAS0C,cAAc,kCACjC,GAAIqD,EACA,OAAQA,EAAIC,WACR,IAAK,SACDD,EAAIlE,UAAUG,IAAI,eAClB+D,EAAIiL,aAAe,WACO,WAAlBjL,EAAIC,YAAwBD,EAAIC,UAAY,YAEpDD,EAAIkL,WAAa,WACS,YAAlBlL,EAAIC,YAAyBD,EAAIC,UAAY,WAErDD,EAAIlE,UAAUG,IAAI,cAClB+D,EAAIlE,UAAUE,OAAO,UACrB,MACJ,IAAK,aAIL,IAAK,UACDgE,EAAIlE,UAAUG,IAAI,eAClB+D,EAAIlE,UAAUE,OAAO,UACrB,MACJ,IAAK,YACDgE,EAAIlE,UAAUG,IAAI,iBAClB+D,EAAIlE,UAAUE,OAAO,a,+BAyGjC,OACI,oCACI,kBAAC1D,EAAD,CAAQqI,KAAMhD,KAAKD,MAAM1E,QAAX,UAAwB2E,KAAKD,MAAM1E,QAAQS,WAA3C,YAAyDkE,KAAKD,MAAM1E,QAAQU,WAAc,SACpG8G,WAAW,IAEb7C,KAAKD,MAAM1E,QACT,yBAAKxB,UAAU,WACX,yBAAKA,UAAU,4EACX,yBAAKA,UAAU,wCACX,uBAAGE,MAAO,CAAE4Q,QAAS,SACjB,yBAAKhP,IAAG,UAAKxB,GAAL,OAAkB6F,KAAKD,MAAM1E,QAAQO,OACzC/B,UAAU,kBACVE,MAAO,CAAEsJ,aAAc,WAG/B,uBAAGtJ,MAAO,CAAEsJ,aAAc,IAAK,gCAASrD,KAAKD,MAAM1E,QAAQS,WAA5B,IAAyCkE,KAAKD,MAAM1E,QAAQU,YAC3F,uBAAGlC,UAAU,iBAAiBE,MAAO,CAAE2K,UAAW,IAAlD,IAAyD1E,KAAKD,MAAM1E,QAAQW,KAAKC,UACjF,2BAAI+D,KAAKD,MAAM1E,QAAQa,KACvB,uBAAGrC,UAAU,kBACT,uBAAGA,UAAU,wBADjB,cACuDmG,KAAKD,MAAM1E,QAAQ0F,QAAQtE,MAAM,KAAKuE,UAAUC,KAAK,MAE5G,2BACI,kBAAC,IAAD,CAAMnH,GAAE,gBAAWkG,KAAKD,MAAM1E,QAAQC,KAA9B,WAA6CvB,MAAO,CAAEwB,MAAO,SACjE,gCAASyE,KAAKD,MAAM1E,QAAQwR,QAAQlQ,QADxC,IACgG,IAAtCqD,KAAKD,MAAM1E,QAAQwR,QAAQlQ,OAAe,QAAU,YAItH,6BACI,4BAAQ9C,UAAU,aACd6B,GAAG,gCACHkH,UAAS5C,KAAKD,MAAM1E,QAAQK,GAC5BF,QAASwE,KAAKmC,0BAChBnC,KAAKD,MAAMoN,2BAGrB,yBAAKtT,UAAU,qBACX,yBAAKA,UAAU,uDAAuD2B,QAASwE,KAAKmM,YAApF,UACYnM,KAAKD,MAAM1E,QAAQwC,MAAMlB,OADrC,KAGA,yBAAK9C,UAAU,yBAAyB2B,QAASwE,KAAKmM,YAAtD,eACiBnM,KAAKD,MAAM1E,QAAQkQ,UAAUvB,QAAO,SAAAtN,GAAC,OAAIA,EAAE8O,UAAQ7O,OADpE,MAIHqD,KAAKD,MAAMkM,mBACR,kBAAC,EAAD,CAAO5Q,QAAS2E,KAAKD,MAAM1E,QAASgQ,aAAcrL,KAAKqL,eACvD,kBAACC,EAAD,CAAWjQ,QAAS2E,KAAKD,MAAM1E,WAxCpB,0C,GA9KjBmG,IAAMC,WCHb,SAAS+L,IAAW,IAAD,EACA7L,mBAAS,IADT,mBACvBkL,EADuB,KACdY,EADc,OAEA9L,mBAAS,MAFT,mBAEvBtG,EAFuB,KAEduQ,EAFc,KAGtBtQ,EAASoS,cAATpS,KAgBR,OAdA4G,qBAAU,WACN3E,MAAM,GAAD,OAAIpD,EAAJ,6BAAmCmB,IACnCkC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIiO,EAAWjO,QAC9B,IAEHuE,qBAAU,WACF7G,GACAkC,MAAM,GAAD,OAAIpD,EAAJ,6CAAmDkB,EAAQC,OAC3DkC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI8P,EAAW9P,QAElC,CAACtC,IAGA,oCACI,kBAACV,EAAD,CAAQqI,KAAM3H,EAAO,UAAMA,EAAQS,WAAd,YAA4BT,EAAQU,UAApC,aAA2D,kBAC5E8G,WAAW,IAEf,yBAAKhJ,UAAU,WACX,yBAAKA,UAAU,cACVgT,GAAWA,EAAQ1R,KAAI,SAAAwS,GACpB,OACI,kBAAC,IAAD,CAAM7T,GAAE,gBAAW6T,EAAOrS,MAAQvB,MAAO,CAAEwB,MAAO,OAAQvB,eAAgB,SACtE,wBAAIH,UAAU,+CAA+C4B,IAAKkS,EAAOjS,IACrE,yBAAK7B,UAAU,kCACX,yBAAKA,UAAU,eACX,yBAAK8B,IAAG,UAAKxB,GAAL,OAAkBwT,EAAO/R,OAC7B/B,UAAU,kBACVE,MAAO,CAAE8B,YAAa,UAE1B,yBAAKhC,UAAU,qBACX,gCAAS8T,EAAO7R,WAAhB,IAA6B6R,EAAO5R,WACpC,uBAAGlC,UAAU,kBAAb,IAAgC8T,EAAO3R,KAAKC,YAGpD,yBAAKpC,UAAU,eACV8T,EAAOzR,KAEZ,yBAAKrC,UAAU,yBC3CxC,SAAS+T,IAAoB,IAAD,EACPjM,mBAAS,IADF,mBAChCC,EADgC,KACtBC,EADsB,KAE/B4J,EAAaiC,cAAbjC,SAUR,OARAnP,SAAS8G,MAAT,UAAoBqI,EAApB,aAEAvJ,qBAAU,WACN3E,MAAM,GAAD,OAAIpD,EAAJ,8CAAoDsR,IACpDjO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIkE,EAAYlE,QAC/B,IAGC,oCACI,kBAAChD,EAAD,CACIqI,KAAI,sBAAiByI,EAAS,GAAGC,cAAgBD,EAASR,MAAM,IAChEpI,WAAW,IAEf,yBAAKhJ,UAAU,WACX,yBAAKA,UAAU,cACX,uDAA6B4R,EAA7B,KACC7J,GAAYA,EAASzG,KAAI,SAAAE,GACtB,OACI,wBACIxB,UAAU,8BACV4B,IAAKJ,EAAQK,GACbF,QAAS,kBAAMyB,OAAOE,SAAS0D,KAAhB,gBAAgCxF,EAAQC,QAEvD,yBAAKzB,UAAU,kCACX,yBAAKA,UAAU,eACX,yBAAK8B,IAAG,UAAKxB,GAAL,OAAkBkB,EAAQO,OAC9B/B,UAAU,kBACVE,MAAO,CAAE8B,YAAa,UAE1B,yBAAKhC,UAAU,qBACX,gCAASwB,EAAQS,WAAjB,IAA8BT,EAAQU,WACtC,uBAAGlC,UAAU,kBAAb,IAAgCwB,EAAQW,KAAKC,YAGrD,yBAAKpC,UAAU,eACVwB,EAAQa,KAEb,yBAAKrC,UAAU,wBC7CpC,SAASgU,EAAgBjU,GAqEpC,OAnEAsI,qBAAU,WACN,GAAI5F,SAAS0C,cAAc,+BAAgC,CACvD,IAAM8O,EAAexR,SAAS0C,cAAc,yBACtC+O,EAAQzR,SAAS0C,cAAc,+BAEjCgP,EAAOpU,EAAMqU,UAAU1C,UAAUvB,QAAO,SAAAtN,GAAC,OAAIA,EAAE8O,UAAQrQ,KAAI,SAAAuB,GAAC,OAAIA,EAAE0G,SAChE8K,EAAiB5R,SAAS0C,cAAc,qBA0B9C,SAASmP,IALL7R,SAAS8P,iBAAiB,eAAeC,SAAQ,SAAA+B,GAC7CA,EAAIC,cAAclK,YAAYiK,MAMlCJ,EAAKM,OACLN,EAAK/C,QAAQjK,UAAUqL,SAAQ,SAAA+B,GAC3BN,EAAaS,QA3BrB,SAAmBnB,GACf,IAAMoB,EAAMlS,SAASmS,cAAc,OACnCD,EAAIrQ,UAAUG,IAAI,OAClBkQ,EAAIrQ,UAAUG,IAAI,cAClB,IAAMoQ,EAAOpS,SAASmS,cAAc,QACpCC,EAAKpM,UAAY8K,EACjB,IAAMuB,EAAYrS,SAASmS,cAAc,KAQzC,OAPAE,EAAUxQ,UAAUG,IAAI,qBACxBqQ,EAAUrM,UAAY,OACtBqM,EAAUxQ,UAAUG,IAAI,kBACxBqQ,EAAUC,aAAa,YAAaxB,GACpCoB,EAAIK,YAAYH,GAChBF,EAAIK,YAAYF,GACXT,EAAe9N,MAAMkB,SAAS8L,KAAQc,EAAe9N,OAAf,WAA4BgN,IAChEoB,EAakBM,CAAUV,OAEnCxU,EAAMmV,aAAaf,GA/BvBG,IAkCAJ,EAAM7O,iBAAiB,WAAW,SAACnB,GAC/B,GAAc,UAAVA,EAAEtC,IASF,OARAsC,EAAEG,OAAOkC,MAAM3D,MAAM,KAAK4P,SAAQ,SAAA+B,GAC9BJ,EAAKgB,KAAKZ,MAGdrQ,EAAE8I,iBAEFsH,IACAJ,EAAM3N,MAAQ,IACP,KAGf9D,SAAS4C,iBAAiB,SAAS,SAACnB,GAChC,GAAIA,EAAEG,OAAOC,UAAUC,SAAS,qBAAsB,CAClD,IAAM6Q,EAAWlR,EAAEG,OAAOgR,aAAa,aACjCC,EAAQnB,EAAKlD,QAAQmE,GAC3BjB,EAAI,sBAAOA,EAAK/C,MAAM,EAAGkE,IAArB,YAAgCnB,EAAK/C,MAAMkE,EAAQ,KACvDhB,QAIRJ,EAAMqB,YAKV,yBAAKvV,UAAU,8BACX,sDACA,2KAIA,yBAAK4G,MAAM,sCACP,gCACA,2BAAON,KAAK,SAAS/D,KAAK,mBAAmBV,GAAG,uBC9EjD,SAAS2T,EAAiBzV,GAmErC,OAjEAsI,qBAAU,WACN,GAAI5F,SAAS0C,cAAc,gCAAiC,CACxD,IAAM8O,EAAexR,SAAS0C,cAAc,0BACtC+O,EAAQzR,SAAS0C,cAAc,gCAEjCgP,EAAOpU,EAAMqU,UAAU1C,UAAUvB,QAAO,SAAAtN,GAAC,OAAKA,EAAE8O,UAAQrQ,KAAI,SAAAuB,GAAC,OAAIA,EAAE0G,SACjE8K,EAAiB5R,SAAS0C,cAAc,sBA0B9C,SAASmP,IALL7R,SAAS8P,iBAAiB,gBAAgBC,SAAQ,SAAA+B,GAC9CA,EAAIC,cAAclK,YAAYiK,MAMlCJ,EAAKM,OACLN,EAAK/C,QAAQjK,UAAUqL,SAAQ,SAAA+B,GAC3BN,EAAaS,QA3BrB,SAAmBnB,GACf,IAAMoB,EAAMlS,SAASmS,cAAc,OACnCD,EAAIrQ,UAAUG,IAAI,OAClBkQ,EAAIrQ,UAAUG,IAAI,eAClB,IAAMoQ,EAAOpS,SAASmS,cAAc,QACpCC,EAAKpM,UAAY8K,EACjB,IAAMuB,EAAYrS,SAASmS,cAAc,KAQzC,OAPAE,EAAUxQ,UAAUG,IAAI,sBACxBqQ,EAAUxQ,UAAUG,IAAI,kBACxBqQ,EAAUrM,UAAY,OACtBqM,EAAUC,aAAa,YAAaxB,GACpCoB,EAAIK,YAAYH,GAChBF,EAAIK,YAAYF,GACXT,EAAe9N,MAAMkB,SAAS8L,KAAQc,EAAe9N,OAAf,WAA4BgN,IAChEoB,EAakBM,CAAUV,OAEnCxU,EAAMmV,aAAaf,GA/BvBG,IAkCAJ,EAAM7O,iBAAiB,WAAW,SAACnB,GAC/B,GAAc,UAAVA,EAAEtC,IASF,OARAsC,EAAEG,OAAOkC,MAAM3D,MAAM,KAAK4P,SAAQ,SAAA+B,GAC9BJ,EAAKgB,KAAKZ,MAGdrQ,EAAE8I,iBAEFsH,IACAJ,EAAM3N,MAAQ,IACP,KAGf9D,SAAS4C,iBAAiB,SAAS,SAACnB,GAChC,GAAIA,EAAEG,OAAOC,UAAUC,SAAS,sBAAuB,CACnD,IAAM6Q,EAAWlR,EAAEG,OAAOgR,aAAa,aACjCC,EAAQnB,EAAKlD,QAAQmE,GAC3BjB,EAAI,sBAAOA,EAAK/C,MAAM,EAAGkE,IAArB,YAAgCnB,EAAK/C,MAAMkE,EAAQ,KACvDhB,YAOZ,yBAAKtU,UAAU,+BACX,mDACA,mPAKA,yBAAK4G,MAAM,uCACP,gCACA,2BAAON,KAAK,SAAS/D,KAAK,oBAAoBV,GAAG,wBCxElD,SAAS4T,IAAiB,IAAD,EACF3N,mBAAS,MADP,mBAC7BsM,EAD6B,KAClB9C,EADkB,OAEQ,CAAC,KAAM,SAAA/K,GAAK,OAAImP,EAAkBnP,IAAzEmP,EAF+B,KAEdC,EAFc,OAGU,CAAC,KAAM,SAAApP,GAAK,OAAIqP,EAAmBrP,IAA5EqP,EAH+B,KAGbC,EAHa,KAKpCxN,qBAAU,WACN3E,MAAM,GAAD,OAAIpD,EAAJ,2BACAqD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIwN,EAAaxN,QAChC,IAsBH,OACI,oCAAGc,QAAQC,IAAI,cACX,kBAAC/D,EAAD,CAAQqI,KAAK,kBAAkBH,WAAW,IAC1C,yBAAKhJ,UAAU,WACX,uBACI6B,GAAG,4BACH3B,MAAO,CAAE4V,WAAY,OAAQpU,MAAO,OAAQqE,QAAS,OAAQ+K,QAAS,MAAOnG,SAAU,QAASoL,WAAY,SAFhH,sCAMC3B,GACG,yBAAKpU,UAAU,4BACX,kBAACgU,EAAD,CACII,UAAWA,EACXc,aAAcS,IAGlB,6BACA,6BACA,6BAEA,kBAACH,EAAD,CACIpB,UAAWA,EACXc,aAAcW,IAGlB,6BACA,4BACI7V,UAAU,kBACV2B,QAjDA,WACpB+B,MAAM,GAAD,OAAIpD,EAAJ,gCAA8C,CAC/CgF,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAejD,GAEnBoG,KAAMC,KAAKC,UAAU,CACjBoN,iBAAkBN,EAAgBjB,OAClCwB,kBAAmBL,EAAiBnB,WAGvC9Q,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFc,QAAQC,IAAIf,GACZrB,SAAS0C,cAAc,8BAA8BjF,MAAM6F,QAAU,QACrEtD,SAASyT,gBAAgBhI,UAAY,OA+B7B,aChET,SAASiI,EAAapW,GAOjC,OACI,kBAACS,EAAA,EAAD,CAAOC,KAAMV,EAAMW,OACfC,OAAQZ,EAAMa,UACdC,KAAK,MACL,kBAACL,EAAA,EAAMM,OAAP,CAAcC,aAAW,GACrB,kBAACP,EAAA,EAAMQ,MAAP,KAAa,8CAEjB,kBAACR,EAAA,EAAMS,KAAP,KACI,8BACI,2BACIjB,UAAU,eACV6B,GAAG,sBACH2E,YAAY,uBACZtG,MAAO,CAAE8B,YAAa,SAE1B,4BACIhC,UAAU,kBACVsG,KAAK,SACL3E,QAxBJ,SAAAuC,GACZA,EAAE8I,iBACFjN,EAAMqW,YAAY3T,SAAS0C,cAAc,wBAAwBoB,OACjExG,EAAMa,cAkBM,aChBL,SAASyV,EAAKtW,GAAQ,IAAD,EACR+H,mBAAS,MADD,mBACzBf,EADyB,KACnBuP,EADmB,OAEFxO,mBAAS,MAFP,mBAEzBtG,EAFyB,KAEhBuQ,EAFgB,OAGoBjK,mBAAS/H,EAAMwW,oBAHnC,mBAGzBA,EAHyB,KAGLC,EAHK,OAIY1O,mBAAS,CAAEpH,QAAQ,EAAOW,MAAO,OAJ7C,mBAIzBoV,EAJyB,KAITC,EAJS,OAKkB5O,mBAAS,CAAEpH,QAAQ,EAAOW,MAAO,OALnD,mBAKzBsV,EALyB,KAKNC,EALM,KAOxB/U,EAAOgS,cAAPhS,GAERwG,qBAAU,WACNwO,IACAnT,MAAM,GAAD,OAAIpD,EAAJ,2BACAqD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIiO,EAAWjO,QAC9B,IAEH,IAAM+S,EAAY,WACdnT,MAAM,GAAD,OAAIpD,EAAJ,0BAAgCuB,IAChC8B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIwS,EAAQxS,OAGxBG,EAAiB,SAAAC,GACnB,IAAME,EAAUF,EAAEG,OACdD,EAAQE,UAAUC,SAAS,QAC3BH,EAAQE,UAAUE,OAAO,OACzBJ,EAAQE,UAAUG,IAAI,OACtBf,MAAM,GAAD,OAAIpD,EAAJ,iCAAuC8D,EAAQM,QAAQC,SACvDhB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFc,QAAQC,IAAIf,GACZ+S,SAGRzS,EAAQE,UAAUE,OAAO,OACzBJ,EAAQE,UAAUG,IAAI,OACtBf,MAAM,GAAD,OAAIpD,EAAJ,+BAAqC8D,EAAQM,QAAQC,SACrDhB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFc,QAAQC,IAAIf,GACZ+S,SAKVC,EAAoB,SAAA5S,GACtB,IAAME,EAAUF,EAAEG,OACdD,EAAQE,UAAUC,SAAS,QAC3BH,EAAQE,UAAUE,OAAO,OACzBJ,EAAQE,UAAUG,IAAI,OACtBf,MAAM,GAAD,OAAIpD,EAAJ,oCAA0C8D,EAAQM,QAAQqS,YAC1DpT,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFc,QAAQC,IAAIf,GACZ+S,SAGRzS,EAAQE,UAAUE,OAAO,OACzBJ,EAAQE,UAAUG,IAAI,OACtBf,MAAM,GAAD,OAAIpD,EAAJ,kCAAwC8D,EAAQM,QAAQqS,YACxDpT,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFc,QAAQC,IAAIf,GACZ+S,SAiFhB,OACI,oCACI,kBAACV,EAAD,CACIzV,OAAQ6V,EACR3V,UAtBa,WACrB4V,GAAsB,IAsBdJ,YAjFQ,SAAAxL,GAChBlH,MAAM,GAAD,OAAIpD,EAAJ,kCAAwCuB,GAAM,CAC/CyD,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAejD,GAEnBoG,KAAMC,KAAKC,UAAU,CAAEgC,QAASA,MAE/BjH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFc,QAAQC,IAAIf,GACZ+S,UAuEJ,kBAACtW,EAAD,CACIG,OAAQ+V,EAAe/V,OACvBW,MAAOoV,EAAepV,MACtBT,UAxBe,WACvB8V,EAAkB,CACdhW,QAAQ,EACRW,MAAO,UAuBP,kBAACd,EAAD,CACIG,OAAQiW,EAAkBjW,OAC1BW,MAAOsV,EAAkBtV,MACzBT,UAtBkB,WAC1BgW,EAAqB,CACjBlW,QAAQ,EACRW,MAAO,UAqBP,kBAACP,EAAD,CAAQqI,KAAK,OAAOH,WAAW,IAC/B,yBAAKhJ,UAAU,WACV+G,GAAQvF,GACL,oCACI,yBAAKxB,UAAU,kBACX,yBAAKA,UAAU,kCACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,YACX,kBAAC,IAAD,CAAMC,GAAE,gBAAW8G,EAAKE,OAAOxF,OAC3B,yBAAKK,IAAG,UAAKxB,GAAL,OAAkByG,EAAKE,OAAOlF,OAClC/B,UAAU,sBAItB,yBAAKA,UAAU,YACX,kBAAC,IAAD,CAAMC,GAAE,gBAAW8G,EAAKE,OAAOxF,MAAQvB,MAAO,CAAEwB,MAAO,SACnD,yBAAKxB,MAAO,CAAEgB,OAAQ,SAClB,gCAAS6F,EAAKE,OAAOhF,WAArB,IAAkC8E,EAAKE,OAAO/E,UAA9C,KACA,uBAAGlC,UAAU,iCAAb,IACM+G,EAAKE,OAAO9E,KAAKC,SADvB,WACoC2E,EAAKG,QAAQtE,MAAM,KAAKuE,UAAUC,KAAK,QAInF,yBAAKlH,MAAO,CAAEmH,UAAW,QAASsD,SAAU,WACvC5D,EAAKO,SAETP,EAAKQ,OACF,yBAAKzF,IAAG,UAAKxB,GAAL,OAAkByG,EAAKQ,OAASvH,UAAU,eAI7DwB,EAAQK,IAAMkF,EAAKE,OAAOpF,IACvB,uBACI7B,UAAU,6CACVE,MAAO,CAAEwG,OAAQ,iBACjB/E,QAAS,SAAAuC,GAAC,OAzF3B,SAACA,EAAGe,GACnBf,EAAEC,kBACS1B,SAAS0C,cAAT,wBAAwCF,IAC/C7B,OAAOC,QAAQ,iFACfK,MAAM,GAAD,OAAIpD,EAAJ,iCAAuC2E,GAAU,CAClDK,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAejD,KAGlBqB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFc,QAAQC,IAAIf,GACZV,OAAOE,SAAS0D,KAAO,OA2EWhC,CAAWd,EAAG6C,EAAKlF,QAG7C,yBAAK7B,UAAU,gBACX,uBAAGA,UAAU,iBAAiBE,MAAO,CAAEyK,SAAU,UAC7C,kBAAC,IAAD,CAAM1K,GAAE,gBAAW4B,EAAX,YAAyB7B,UAAU,kBACvC,uBACI4G,MAAM,iBACNjF,QAAS,kBAAM6U,GAAsB,OAErCzP,EAAKS,SAAS1E,OACrBiE,EAAK1F,MAAMC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,QAAQK,MAAI4F,SAASjG,EAAQK,IACtD,uBAAG+E,MAAM,eACLc,cAAaX,EAAKlF,GAClBF,QAASsC,IAGb,uBAAG2C,MAAM,eACLc,cAAaX,EAAKlF,GAClBF,QAASsC,IAEjB,uBAAGjE,UAAU,oBACT2B,QAAS,kBAAM+U,EAAkB,CAAEhW,QAAQ,EAAMW,MAAO0F,EAAK1F,UAE5D0F,EAAK1F,MAAMyB,WAK5B,yBAAK9C,UAAU,gBACV+G,EAAKS,SAASlG,KAAI,SAAAsJ,GACf,OACI,wBACI5K,UAAU,iBACV6B,GAAE,uBAAkB+I,EAAQ/I,IAC5BD,IAAKgJ,EAAQ/I,IAEb,yBAAK7B,UAAU,kCACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,YACX,kBAAC,IAAD,CAAMC,GAAE,gBAAW2K,EAAQ3D,OAAOxF,OAC9B,yBAAKK,IAAG,UAAKxB,GAAL,OAAkBsK,EAAQ3D,OAAOlF,OACrC/B,UAAU,sBAItB,yBAAKA,UAAU,YACX,kBAAC,IAAD,CAAMC,GAAE,gBAAW2K,EAAQ3D,OAAOxF,MAAQvB,MAAO,CAAEwB,MAAO,SACtD,yBAAKxB,MAAO,CAAEgB,OAAQ,SAClB,gCAAS0J,EAAQ3D,OAAOhF,WAAxB,IAAqC2I,EAAQ3D,OAAO/E,UAApD,KACA,uBAAGlC,UAAU,iCAAb,IACM4K,EAAQ3D,OAAO9E,KAAKC,SAD1B,WACuCwI,EAAQ1D,QAAQtE,MAAM,KAAKuE,UAAUC,KAAK,QAIzF,yBAAKlH,MAAO,CAAEmH,UAAW,UACpBuD,EAAQtD,WAIpBsD,EAAQ3D,OAAOpF,IAAML,EAAQK,IAC1B,uBACI7B,UAAU,6CACVE,MAAO,CAAEwG,OAAQ,iBACjB/E,QAAS,SAAAuC,GAAC,OAhLpC,SAACA,EAAG8S,GACtB9S,EAAEC,kBACF,IAAMe,EAAKzC,SAAS0C,cAAT,wBAAwC6R,IAC/C5T,OAAOC,QAAQ,2FACf6B,EAAGhF,MAAMkF,mBAAqB,UAC9BR,QAAQC,IAAIK,EAAIA,EAAGhF,MAAMkF,oBACzBF,EAAGG,iBAAiB,gBAAgB,WAChCwR,OAEJnT,MAAM,GAAD,OAAIpD,EAAJ,oCAA0C0W,GAAa,CACxD1R,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAejD,KAGlBqB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFc,QAAQC,IAAIf,OA8JkCmT,CAAc/S,EAAG0G,EAAQ/I,QAGnD,yBAAK7B,UAAU,gBACX,uBAAGA,UAAU,kBACR4K,EAAQvJ,MAAMC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,QAAQK,MAAI4F,SAASjG,EAAQK,IACzD,uBAAG+E,MAAM,eACLsQ,iBAAgBtM,EAAQ/I,GACxBF,QAASmV,IAGb,uBAAGlQ,MAAM,eACLsQ,iBAAgBtM,EAAQ/I,GACxBF,QAASmV,IAEjB,uBACI9W,UAAU,oBACV2B,QAAS,kBAAM+U,EAAkB,CAAEhW,QAAQ,EAAMW,MAAOuJ,EAAQvJ,UAE/DuJ,EAAQvJ,MAAMyB,kBC/QpD,SAASqU,IAAO,IAAD,EAC0BrP,mBAAS,GADnC,mBACnBsP,EADmB,KACIC,EADJ,OAE8BvP,mBAAS,GAFvC,mBAEnBwP,EAFmB,KAEMC,EAFN,OAGoCzP,mBAAS,GAH7C,mBAGnB0P,EAHmB,KAGSC,EAHT,KAItBrX,EAAsBgX,EAAwBE,EAA0BE,EAJlD,EAK8B1P,mBAAS,GALvC,mBAKnBzH,EALmB,KAKGqX,EALH,KAO1BrP,qBAAU,WACN2B,IACAoF,MACD,IAEH,IAAMpF,EAA4B,WAC9BtG,MAAM,GAAD,OAAIpD,EAAJ,2BACAqD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIuT,EAAmBvT,EAAKhB,WAC1CY,MAAM,GAAD,OAAIpD,EAAJ,sCACAqD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIyT,EAAqBzT,EAAKhB,WAC5CY,MAAM,GAAD,OAAIpD,EAAJ,yCACAqD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI2T,EAAwB3T,EAAKhB,YAG7CsM,EAA6B,WAC/B1L,MAAM,GAAD,OAAIpD,EAAJ,yCACAqD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI4T,EAAwB5T,EAAI,4BAGlD,OACI,kBAAC,IAAD,KACI,kBAAChE,EAAD,CAASM,oBAAqBA,EAAqBC,qBAAsBA,IACzE,yBAAKL,UAAU,gBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOmL,KAAK,sBAAgBwM,OAAQ,SAAA5X,GAAK,OACrC,kBAAC2J,EAAD,iBAAmB3J,EAAnB,CAA0BiK,0BAA2BA,QAEzD,kBAAC,IAAD,CAAOmB,KAAK,aAAayM,OAAK,EAAC7I,UAAWU,IAC1C,kBAAC,IAAD,CAAOtE,KAAK,mBAAmBwM,OAAQ,SAAA5X,GAAK,OACxC,kBAAC,EAAD,iBAAcA,EAAd,CAAqBqP,2BAA4BA,QAErD,kBAAC,IAAD,CAAOjE,KAAK,UAAUyM,OAAK,EAAC7I,UAAW+C,IACvC,kBAAC,IAAD,CAAO3G,KAAK,0BAA0B4D,UAAW0G,IACjD,kBAAC,IAAD,CAAOtK,KAAK,uBAAiB4D,UAAWkE,IACxC,kBAAC,IAAD,CAAO9H,KAAK,cAAcyM,OAAK,EAACD,OAAQ,SAAA5X,GAAK,OACzC,kBAAC,EAAD,iBAAaA,EAAb,CAAoBiK,0BAA2BA,QAEnD,kBAAC,IAAD,CAAOmB,KAAK,qBAAqB4D,UAAW8I,IAC5C,kBAAC,IAAD,CAAO1M,KAAK,YAAYyM,OAAK,EAAC7I,UAAWsH,IACzC,kBAAC,IAAD,CAAOlL,KAAK,oBAAoBwM,OAAQ,SAAA5X,GAAK,OACzC,kBAACsW,EAAD,iBAAUtW,EAAV,CAAiBwW,oBAAoB,QAEzC,kBAAC,IAAD,CAAOpL,KAAK,uBAAuB4D,UAAWgF,IAC9C,kBAAC,IAAD,CAAO5I,KAAK,IAAI4D,UAAW3F,OC/D/C0O,IAASH,OAAO,kBAACR,EAAD,MAAS1U,SAAS0C,cAAc,Y","file":"static/js/main.ceb801d4.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Sidebar(props) {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n                <h2>Napker</h2>\r\n            </Link>\r\n            <ul>\r\n                <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-home\"/>Home</li>\r\n                </Link>\r\n                <Link to=\"/notificações\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-bell\"/>Notificações{!props.notificationsNumber ? '' : <p className=\"notifications-number\">{props.notificationsNumber}</p>}</li>\r\n                </Link>\r\n                <Link to=\"/mensagens\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-envelope\"/>Mensagens{!props.unreadMessagesNumber ? '' : <p className=\"notifications-number\">{props.unreadMessagesNumber}</p>}</li>\r\n                </Link>\r\n                <Link to=\"/perfil\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-user\"/>Perfil</li>\r\n                </Link>\r\n                <Link to=\"/configurações\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-cog\"/>Configurações</li>\r\n                </Link>\r\n            </ul>\r\n        </div>\r\n    )\r\n}","const SERVER_URL = 'http://127.0.0.1:8000'\r\nconst SOCKET_URL = 'ws://127.0.0.1:8000'\r\n\r\nexport {SERVER_URL, SOCKET_URL}","import React from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../settings'\r\n\r\nexport default function LikesModal(props) {\r\n    return (\r\n        <Modal show={props.isOpen}\r\n            onHide={props.hideModal}\r\n            size=\"lg\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title><strong>Curtidas</strong></Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"list-group\" style={{ height: '400px', overflow: 'hidden', overflowY: 'scroll' }}>\r\n                    {props.likes &&\r\n                        props.likes.map(like => like.profile).map(profile => {\r\n                            return (\r\n                                <Link to={`/user/${profile.slug}`}\r\n                                    style={{ color: '#000', textDecoration: 'none' }}\r\n                                    onClick={props.hideModal}\r\n                                >\r\n                                    <li className=\"list-group-item profile-row modal-profile-li\" key={profile.id}>\r\n                                        <div className=\"d-flex justify-content-between\">\r\n                                            <div className=\"profile-col\">\r\n                                                <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                    className=\"profile-img-med\"\r\n                                                    style={{ marginRight: '10px' }}\r\n                                                />\r\n                                                <div className=\"main-profile-data\">\r\n                                                    <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                                    <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"profile-col\">\r\n                                                {profile.bio}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                </Link>\r\n                            )\r\n                        })}\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}","import { SERVER_URL } from './settings'\r\n\r\nconst csrftoken = getCookie('csrftoken')\r\n\r\nfunction getCookie(name) {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nfunction handleLogout() {\r\n  const bool = window.confirm('Sair do Napker?\\nVocê poderá entrar novamente quando quiser.')\r\n  if (bool) {\r\n    window.location.replace(`${SERVER_URL}/logout`)\r\n  }\r\n}\r\n\r\nexport { csrftoken, handleLogout };","import React from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport LikesModal from '../../components/likesmodal'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nexport default class Posts extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            profile: null,\r\n            posts: null,\r\n            likesModal: {\r\n                isOpen: false,\r\n                likes: null\r\n            },\r\n            postFormImagePreview: null\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ profile: data }))\r\n        this.fetchPosts()\r\n    }\r\n\r\n    fetchPosts = () => {\r\n        fetch(`${SERVER_URL}/post-api/post-list`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ posts: data }))\r\n    }\r\n\r\n    likeUnlikePost = e => {\r\n        e.stopPropagation()\r\n        const likeBtn = e.target\r\n        if (likeBtn.classList.contains('fas')) {\r\n            likeBtn.classList.remove('fas') //border heart\r\n            likeBtn.classList.add('far')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/unlike-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    this.fetchPosts()\r\n                })\r\n        } else {\r\n            likeBtn.classList.remove('far') //border heart\r\n            likeBtn.classList.add('fas')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/like-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    this.fetchPosts()\r\n                })\r\n        }\r\n    }\r\n\r\n    hideLikesModal = () => {\r\n        this.setState({\r\n            likesModal: {\r\n                isOpen: false,\r\n                likes: null\r\n            }\r\n        })\r\n    }\r\n\r\n    deletePost = (e, postId) => {\r\n        e.stopPropagation()\r\n        const el = document.querySelector(`#profile-post-${postId}`)\r\n        if (window.confirm('Tem certeza que deseja apagar o post?\\nEssa ação é irreversível.')) {\r\n            el.style.animationPlayState = 'running'\r\n            el.addEventListener('animationend', () => {\r\n                this.fetchPosts()\r\n            })\r\n            fetch(`${SERVER_URL}/post-api/delete-post/${postId}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                })\r\n        }\r\n    }\r\n\r\n    handlePostImageChange = e => {\r\n        const reader = new FileReader()\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                this.setState({ postFormImagePreview: reader.result })\r\n                document.querySelector('#post-form-image-preview').style.display = 'initial'\r\n            }\r\n        }\r\n        try {\r\n            reader.readAsDataURL(e.target.files[0])\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <LikesModal\r\n                    isOpen={this.state.likesModal.isOpen}\r\n                    likes={this.state.likesModal.likes}\r\n                    hideModal={this.hideLikesModal}\r\n                />\r\n                {this.state.profile &&\r\n                    <form\r\n                        action={`${SERVER_URL}/post-api/create-post`}\r\n                        method=\"POST\"\r\n                        className=\"create-post-form\"\r\n                        encType=\"multipart/form-data\"\r\n                    >\r\n                        <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n                        <div className=\"d-flex\">\r\n                            <img\r\n                                src={`${SERVER_URL}${this.state.profile.photo}`}\r\n                                className=\"profile-img-med\"\r\n                            />\r\n                            <input type=\"text\"\r\n                                className=\"post-content-input\"\r\n                                name=\"post-content\"\r\n                                placeholder=\"No que você está pensando?\"\r\n                                autoFocus\r\n                            />\r\n                        </div>\r\n                        <img\r\n                            src={this.state.postFormImagePreview}\r\n                            className=\"post-img\"\r\n                            id=\"post-form-image-preview\"\r\n                            style={{ display: 'none' }}\r\n                        />\r\n                        <hr />\r\n                        <div className=\"d-flex justify-content-between\" style={{ margin: '0px 70px 0 70px' }}>\r\n                            <div className=\"post-extra-options\">\r\n                                <label htmlFor=\"post-image\" class=\"far fa-image\" />\r\n                                <input\r\n                                    type=\"file\"\r\n                                    accept=\"image/png, image/jpg, image/jpeg\"\r\n                                    name=\"post-image\"\r\n                                    id=\"post-image\"\r\n                                    style={{ display: 'none' }}\r\n                                    onChange={this.handlePostImageChange}\r\n                                />\r\n                                <label class=\"far fa-smile\" />\r\n                            </div>\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"btn btn-primary\"\r\n                                style={{ height: '40px' }}\r\n                            >\r\n                                Postar\r\n                            </button>\r\n                        </div>\r\n                    </form>}\r\n                <div className=\"post-list\">\r\n                    {this.state.posts && this.state.posts.map(post => {\r\n                        return (\r\n                            <li\r\n                                className=\"post-container\"\r\n                                id={`profile-post-${post.id}`}\r\n                                key={post.id}\r\n                                onClick={() => window.location.href = `/post/${post.id}`}\r\n                            >\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                    <div className=\"post-row\">\r\n                                        <div className=\"post-col\">\r\n                                            <Link\r\n                                                to={post.author.id === this.state.profile.id ?\r\n                                                    '/perfil' : `/user/${post.author.slug}`}\r\n                                                onClick={e => e.stopPropagation()}\r\n                                            >\r\n                                                <img src={`${SERVER_URL}${post.author.photo}`}\r\n                                                    className=\"profile-img-med\"\r\n                                                />\r\n                                            </Link>\r\n                                        </div>\r\n                                        <div className=\"post-col\">\r\n                                            <Link\r\n                                                to={post.author.id === this.state.profile.id ?\r\n                                                    '/perfil' : `/user/${post.author.slug}`}\r\n                                                style={{ color: '#000' }}\r\n                                                onClick={e => e.stopPropagation()}\r\n                                            >\r\n                                                <div style={{ height: '30px' }}>\r\n                                                    <strong>{post.author.first_name} {post.author.last_name} </strong>\r\n                                                    <p className=\"text-secondary d-inline-block\">\r\n                                                        @{post.author.user.username} • {post.created.split('-').reverse().join('/')}\r\n                                                    </p>\r\n                                                </div>\r\n                                            </Link>\r\n                                            <div style={{ textAlign: 'start' }}>\r\n                                                {post.content}\r\n                                            </div>\r\n                                            {post.image &&\r\n                                                <img src={`${SERVER_URL}${post.image}`} className=\"post-img\" />\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                    {post.author.id === this.state.profile.id &&\r\n                                        <i\r\n                                            className=\"far fa-trash-alt trash-icon text-secondary\"\r\n                                            style={{ margin: '20px 20px 0 0' }}\r\n                                            onClick={e => this.deletePost(e, post.id)}\r\n                                        />}\r\n                                </div>\r\n                                <div className=\"post-actions\">\r\n                                    <p className=\"text-secondary\">\r\n                                        <Link\r\n                                            to={`/post/${post.id}/comment`}\r\n                                            className=\"text-secondary\"\r\n                                            onClick={e => e.stopPropagation()}\r\n                                        >\r\n                                            <i\r\n                                                class=\"far fa-comment\"\r\n                                            />{post.comments.length}\r\n                                        </Link>\r\n                                        {post.likes.map(like => like.profile.id).includes(this.state.profile.id) ?\r\n                                            <i class=\"fas fa-heart\"\r\n                                                data-postid={post.id}\r\n                                                onClick={this.likeUnlikePost}\r\n                                            />\r\n                                            :\r\n                                            <i class=\"far fa-heart\"\r\n                                                data-postid={post.id}\r\n                                                onClick={this.likeUnlikePost}\r\n                                            />}\r\n                                        <p className=\"post-likes-number\"\r\n                                            onClick={e => {\r\n                                                e.stopPropagation()\r\n                                                this.setState({ likesModal: { isOpen: true, likes: post.likes } })\r\n                                            }}\r\n                                        >\r\n                                            {post.likes.length}\r\n                                        </p>\r\n                                    </p>\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nexport default function Profiles(props) {\r\n    const [profiles, setProfiles] = useState([])\r\n    const [filteredProfiles, setFilteredProfiles] = useState(null)\r\n    const [search, setSearch] = useState('')\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/profile-list`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setFilteredProfiles(null)\r\n                setProfiles(data)\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (search === '') {\r\n            setFilteredProfiles(null)\r\n            return\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/users/${search}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setFilteredProfiles(data)\r\n            })\r\n    }, [search])\r\n\r\n    const sendFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/send-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    const cancelFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/cancel-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    const handleRelationshipUpdate = e => {\r\n        e.stopPropagation()\r\n        const btn = e.target\r\n        if (btn.innerHTML === 'Solicitar') {\r\n            sendFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitado'\r\n            btn.className = 'btn btn-primary'\r\n        } else {\r\n            cancelFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitar'\r\n            btn.className = 'btn btn-secondary'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"form-row\">\r\n                <input type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Pesquisar\"\r\n                    style={{ width: '400px' }}\r\n                    value={search}\r\n                    onChange={e => setSearch(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"list-group\">\r\n                {filteredProfiles ? filteredProfiles.map(profile => {\r\n                    return (\r\n                        <Link to={`/user/${profile.slug}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                            <li className=\"list-group-item profile-row filtered-profile\" key={profile.id}>\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                    <div className=\"profile-col\">\r\n                                        <img src={`${SERVER_URL}${profile.photo}`}\r\n                                            className=\"profile-img-med\"\r\n                                            style={{ marginRight: '10px' }}\r\n                                        />\r\n                                        <div className=\"main-profile-data\">\r\n                                            <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                            <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"profile-col\">\r\n                                        {profile.bio}\r\n                                    </div>\r\n                                    <div className=\"profile-col\">\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        </Link>\r\n                    )\r\n                }) : profiles && profiles.map(profile => {\r\n                    return (\r\n                        <li\r\n                            className=\"list-group-item profile-row\"\r\n                            key={profile.id}\r\n                            onClick={() => window.location.href = `/user/${profile.slug}`}\r\n                        >\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                <div className=\"profile-col\">\r\n                                    <img src={`${SERVER_URL}${profile.photo}`}\r\n                                        className=\"profile-img-med\"\r\n                                        style={{ marginRight: '10px' }}\r\n                                    />\r\n                                    <div className=\"main-profile-data\">\r\n                                        <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                        <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"profile-col\">\r\n                                    {profile.bio}\r\n                                </div>\r\n                                <div className=\"profile-col\">\r\n                                    <button className=\"btn btn-secondary\" data-pk={profile.user.id} onClick={handleRelationshipUpdate}>\r\n                                        Solicitar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { handleLogout } from '../utils'\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <div className=\"header fixed-top\">\r\n            {!props.backArrow ? '' : <i class=\"fas fa-arrow-left left-arrow-icon\" onClick={() => window.history.back()}/>}\r\n            <strong>{props.page}</strong>\r\n            <a className=\"logout\" onClick={handleLogout}>Sair</a>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport Posts from './home-components/posts'\r\nimport Profiles from './home-components/profiles'\r\nimport Header from '../components/header'\r\n\r\nexport default function Home(props) {\r\n    const [page, setPage] = useState('Posts')\r\n    const pages = {\r\n        'Perfis': <Profiles />,\r\n        'Posts': <Posts />\r\n    }\r\n\r\n    document.title = 'Home / Napker'\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Home\" />\r\n            <div className=\"content\">\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ marginBottom: '10px', borderRadius: '20px' }}\r\n                    onClick={() => setPage(page === 'Perfis' ? 'Posts' : 'Perfis')}\r\n                >\r\n                    {page === 'Perfis' ? 'Ver posts' : 'Ver perfis'}\r\n                </button>\r\n                {pages[page]}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Header from '../components/header'\r\nimport { SERVER_URL } from '../settings'\r\nimport { csrftoken } from '../utils'\r\n\r\nexport default function Notifications(props) {\r\n    const [invites, setInvites] = useState([])\r\n    const [postLikes, setPostLikes] = useState([])\r\n    const [comments, setComments] = useState([])\r\n    let notificationsNumber = invites.length + postLikes.length + comments.length\r\n\r\n    document.title = 'Notificações / Napker'\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myinvites`)\r\n            .then(response => response.json())\r\n            .then(data => setInvites(data))\r\n        fetch(`${SERVER_URL}/post-api/unvisualized-post-likes`)\r\n            .then(response => response.json())\r\n            .then(data => setPostLikes(data))\r\n        fetch(`${SERVER_URL}/post-api/unvisualized-post-comments`)\r\n            .then(response => response.json())\r\n            .then(data => setComments(data))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (postLikes.length) {\r\n            fetch(`${SERVER_URL}/post-api/visualize-likes`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.updateNotificationsNumber()\r\n                })\r\n        }\r\n    }, [postLikes])\r\n\r\n    useEffect(() => {\r\n        if (comments.length) {\r\n            fetch(`${SERVER_URL}/post-api/visualize-comments`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.updateNotificationsNumber()\r\n                })\r\n        }\r\n    }, [comments])\r\n\r\n    const replyRequest = e => {\r\n        e.stopPropagation()\r\n        const btn = e.target\r\n        const requestBody = {\r\n            'senderid': btn.dataset.senderid,\r\n            'reply': btn.dataset.reply\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/reply-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(requestBody)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                props.updateNotificationsNumber()\r\n            })\r\n        document.getElementById('friend-request-list').removeChild(document.getElementById(btn.dataset.senderid))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Notificações\" />\r\n            <div className=\"content\">\r\n                <div className=\"list-group\" id='friend-request-list'>\r\n                    {!!invites.length &&\r\n                        <>\r\n                            <h4>Solicitações de amizade</h4>\r\n                            {invites.map(i => {\r\n                                return (\r\n                                    <li\r\n                                        className=\"list-group-item profile-row\"\r\n                                        id={i.sender.id}\r\n                                        key={i.sender.id}\r\n                                        onClick={() => window.location.href = `/user/${i.sender.slug}`}\r\n                                    >\r\n                                        <div className=\"d-flex justify-content-between\">\r\n                                            <div className=\"profile-col\">\r\n                                                <img src={`${SERVER_URL}${i.sender.photo}`}\r\n                                                    className=\"profile-img-med\"\r\n                                                    style={{ marginRight: '10px' }}\r\n                                                />\r\n                                                <div className=\"main-profile-data\">\r\n                                                    <strong>{i.sender.first_name} {i.sender.last_name}</strong>\r\n                                                    <p className=\"text-secondary\">@{i.sender.user.username}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"profile-col\">\r\n                                                {i.sender.bio}\r\n                                            </div>\r\n                                            <div className=\"profile-col\" style={{ justifyContent: 'space-between' }}>\r\n                                                <button className=\"btn btn-primary btn-reply-fr\" data-senderid={i.sender.id} data-reply='accept' onClick={replyRequest}>Confirmar</button>\r\n                                                <button className=\"btn btn-grey btn-reply-fr\" data-senderid={i.sender.id} data-reply='decline' onClick={replyRequest}>Excluir</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                        </>\r\n                    }\r\n\r\n                    <br />\r\n\r\n                    {!!postLikes.length &&\r\n                        <>\r\n                            <h4>Curtidas</h4>\r\n                            {postLikes.map(like => {\r\n                                return (\r\n                                    <li className=\"list-group-item profile-row\" key={like.profile.id}>\r\n                                        <div className=\"d-flex justify-content-between\">\r\n                                            <div className=\"profile-col\">\r\n                                                <Link to={`/user/${like.profile.slug}`}>\r\n                                                    <img src={`${SERVER_URL}${like.profile.photo}`}\r\n                                                        className=\"profile-img-med\"\r\n                                                        style={{ marginRight: '10px' }}\r\n                                                    />\r\n                                                </Link>\r\n                                            </div>\r\n                                            <div className=\"profile-col\" style={{ fontSize: 'larger' }}>\r\n                                                <p>\r\n                                                    <Link to={`/user/${like.profile.slug}`} style={{ color: \"#000\" }}>\r\n                                                        @{like.profile.user.username}\r\n                                                    </Link> curtiu o seu post.\r\n                                                </p>\r\n                                            </div>\r\n                                            <div className=\"profile-col\" style={{ justifyContent: 'center' }}>\r\n                                                <Link to={`/post/${like.post.id}`}>\r\n                                                    <button className=\"btn btn-primary\">Ver post</button>\r\n                                                </Link>\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                        </>\r\n                    }\r\n\r\n                    <br />\r\n\r\n                    {!!comments.length &&\r\n                        <>\r\n                            <h4>Comentários</h4>\r\n                            {comments.map(comment => {\r\n                                return (\r\n                                    <li className=\"list-group-item profile-row\" key={comment.author.id}>\r\n                                        <div className=\"d-flex justify-content-between\">\r\n                                            <div className=\"profile-col\">\r\n                                                <Link to={`/user/${comment.author.slug}`}>\r\n                                                    <img src={`${SERVER_URL}${comment.author.photo}`}\r\n                                                        className=\"profile-img-med\"\r\n                                                        style={{ marginRight: '10px' }}\r\n                                                    />\r\n                                                </Link>\r\n                                            </div>\r\n                                            <div className=\"profile-col\" style={{ fontSize: 'larger' }}>\r\n                                                <p>\r\n                                                    <Link to={`/user/${comment.author.slug}`} style={{ color: \"#000\" }}>\r\n                                                        @{comment.author.user.username}\r\n                                                    </Link> comentou seu post.\r\n                                                </p>\r\n                                            </div>\r\n                                            <div className=\"profile-col\" style={{ justifyContent: 'center' }}>\r\n                                                <Link to={`/post/${comment.post.id}`}>\r\n                                                    <button className=\"btn btn-primary\">Ver post</button>\r\n                                                </Link>\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                        </>\r\n                    }\r\n\r\n                </div>\r\n                {!notificationsNumber &&\r\n                    <h3 style={{ marginTop: '100px' }}>Você não tem nenhuma notificação</h3>}\r\n            </div>\r\n        </>\r\n    )\r\n}","import { SOCKET_URL } from '../../settings'\r\n\r\nclass WebSocketService {\r\n    static instance = null;\r\n    callbacks = {};\r\n  \r\n    static getInstance() {\r\n      if (!WebSocketService.instance) {\r\n        WebSocketService.instance = new WebSocketService();\r\n      }\r\n      return WebSocketService.instance;\r\n    }\r\n  \r\n    constructor() {\r\n      this.socketRef = null;\r\n    }\r\n  \r\n    connect(chatUrl) {\r\n      const path = `${SOCKET_URL}/ws/chat/${chatUrl}/`;\r\n      this.socketRef = new WebSocket(path);\r\n      this.socketRef.onopen = () => {\r\n        console.log(\"WebSocket open\");\r\n      };\r\n      this.socketNewMessage(JSON.stringify({\r\n        command: 'fetch-messages'\r\n      }))\r\n      this.socketRef.onmessage = e => {\r\n        this.socketNewMessage(e.data);\r\n      };\r\n      this.socketRef.onerror = e => {\r\n        console.log(e.message);\r\n      };\r\n      this.socketRef.onclose = () => {\r\n        console.log(\"WebSocket closed let's reopen\");\r\n        this.connect(chatUrl);\r\n      };\r\n    }\r\n  \r\n    disconnect() {\r\n      if (this.socketRef) this.socketRef.close();\r\n    }\r\n  \r\n    socketNewMessage(data) {\r\n      const parsedData = JSON.parse(data);\r\n      const command = parsedData.command;\r\n      if (Object.keys(this.callbacks).length === 0) {\r\n        return;\r\n      }\r\n      if (command === \"messages\") {\r\n        this.callbacks[command](parsedData.messages);\r\n      }\r\n      if (command === \"new_message\") {\r\n        this.callbacks[command](parsedData.message);\r\n      }\r\n    }\r\n  \r\n    fetchMessages(username, chatId) {\r\n      this.sendMessage({\r\n        command: \"fetch_messages\",\r\n        username: username,\r\n        chatId: chatId\r\n      });\r\n    }\r\n  \r\n    newChatMessage(message) {\r\n      this.sendMessage({\r\n        command: \"new_message\",\r\n        from: message.from,\r\n        content: message.content,\r\n        chatId: message.chatId\r\n      });\r\n    }\r\n  \r\n    addCallbacks(messagesCallback, newMessageCallback) {\r\n      this.callbacks[\"messages\"] = messagesCallback;\r\n      this.callbacks[\"new_message\"] = newMessageCallback;\r\n    }\r\n  \r\n    sendMessage(data) {\r\n      try {\r\n        this.socketRef.send(JSON.stringify({ ...data }));\r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n    }\r\n  \r\n    state() {\r\n      return this.socketRef ? this.socketRef.readyState : 0\r\n    }\r\n  }\r\n  \r\n  const WebSocketInstance = WebSocketService.getInstance();\r\n  \r\n  export default WebSocketInstance;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { csrftoken } from '../../utils'\r\nimport { SERVER_URL } from '../../settings'\r\nimport WebSocketInstance from './websocket'\r\n\r\nclass Chat extends React.Component {\r\n    initialiseChat() {\r\n        this.waitForSocketConnection(() => {\r\n            WebSocketInstance.addCallbacks(\r\n                this.setMessages.bind(this),\r\n                this.addMessage.bind(this)\r\n            )\r\n            WebSocketInstance.fetchMessages(\r\n                this.props.username,\r\n                this.props.chatId\r\n            );\r\n        });\r\n        if (this.props.chatId) WebSocketInstance.connect(this.props.chatId)\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            message: '',\r\n            messages: [],\r\n            otherUsername: this.props.otherUsername,\r\n            otherProfile: null\r\n        }\r\n        this.initialiseChat();\r\n    }\r\n\r\n    waitForSocketConnection(callback) {\r\n        const component = this;\r\n        setTimeout(function () {\r\n            if (WebSocketInstance.state() === 1) {\r\n                console.log(\"Connection is made\");\r\n                callback();\r\n                return;\r\n            } else {\r\n                console.log(\"wait for connection...\");\r\n                component.waitForSocketConnection(callback);\r\n            }\r\n        }, 100);\r\n    }\r\n\r\n    setMessages(messages) {\r\n        this.setState({ messages: messages.reverse() })\r\n    }\r\n\r\n    addMessage(message) {\r\n        this.setState({ messages: [...this.state.messages, message] })\r\n    }\r\n\r\n    messageChangeHandler = event => {\r\n        this.setState({ message: event.target.value });\r\n    };\r\n\r\n    sendMessageHandler = e => {\r\n        e.preventDefault();\r\n        const messageObject = {\r\n            from: this.props.username,\r\n            content: this.state.message,\r\n            chatId: this.props.chatId\r\n        };\r\n        WebSocketInstance.newChatMessage(messageObject);\r\n        this.setState({ message: \"\" });\r\n        this.props.updateMessagesComponent()\r\n\r\n    };\r\n\r\n    renderTimestamp = timestamp => {\r\n        const ts = new Date(timestamp)\r\n        return `${ts.getDate()}/${ts.getMonth()}/${ts.getFullYear()} - ${ts.getHours()}:${ts.getMinutes()}`\r\n    };\r\n\r\n    renderMessages = messages => {\r\n        const currentUser = this.props.username;\r\n        return messages.map(message => (\r\n            <li\r\n                key={message.id}\r\n                className={message.author === currentUser ? \"sent\" : \"received\"}\r\n            >\r\n                <p>\r\n                    {message.content}\r\n                    <br />\r\n                    <small>\r\n                        {this.renderTimestamp(message.timestamp)} {message.author === currentUser ? message.read ? '✓✓' : '✓' : ''}\r\n                    </small>\r\n                </p>\r\n            </li>\r\n        ));\r\n    };\r\n\r\n    scrollToBottom = () => {\r\n        if (document.querySelector('#chat-log')) {\r\n            const chatLog = document.querySelector('#chat-log')\r\n            chatLog.scrollTop = chatLog.scrollHeight\r\n        }\r\n    };\r\n\r\n    handleComponentChange = () => {\r\n        this.scrollToBottom();\r\n        if (this.state.otherUsername && (!this.state.otherProfile || this.state.otherProfile.user.username !== this.state.otherUsername)) {\r\n            fetch(`${SERVER_URL}/profile-api/user/${this.state.otherUsername}`)\r\n                .then(response => response.json())\r\n                .then(data => this.setState({\r\n                    otherProfile: data\r\n                }))\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (this.props.chatId !== newProps.chatId) {\r\n            WebSocketInstance.disconnect();\r\n            this.waitForSocketConnection(() => {\r\n                WebSocketInstance.fetchMessages(\r\n                    this.props.username,\r\n                    newProps.chatId\r\n                );\r\n            });\r\n            WebSocketInstance.connect(newProps.chatId);\r\n\r\n            this.props.updateMessagesComponent()\r\n        }\r\n        if (this.state.otherUsername != newProps.otherUsername) {\r\n            this.setState({\r\n                otherUsername: newProps.otherUsername\r\n            })\r\n        }\r\n        if (newProps.chatId) {\r\n            fetch(`${SERVER_URL}/chat-api/read-messages`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                },\r\n                body: JSON.stringify({ chat_id: newProps.chatId })\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => console.log(data))\r\n        }\r\n        if (this.props.updateUnreadMessagesNumber) {\r\n            this.props.updateUnreadMessagesNumber()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.otherProfile ?\r\n                    <div className=\"d-flex flex-column justify-content-between align-items-center current-chat\">\r\n                        <div className=\"current-chat-header\">\r\n                            <Link to={`/user/${this.state.otherProfile.slug}`}>\r\n                                <img src={`${SERVER_URL}${this.state.otherProfile.photo}`}\r\n                                    className=\"profile-img-sm\"\r\n                                    style={{ marginRight: '5px' }}\r\n                                />\r\n                            </Link>\r\n                            <div className=\"d-flex flex-column align-items-start\" style={{ height: '52px' }}>\r\n                                <strong>{this.state.otherProfile.first_name} {this.state.otherProfile.last_name}</strong>\r\n                                <p className=\"text-secondary\">@{this.state.otherProfile.user.username}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div id=\"chat-log\">\r\n                            {this.state.messages ? this.renderMessages(this.state.messages) : ''}\r\n                        </div>\r\n                        <form className=\"send-message-container\" onSubmit={this.sendMessageHandler}>\r\n                            <input placeholder=\"Mensagem\" className=\"message-input\" id=\"chat-message-input\" value={this.state.message} onChange={this.messageChangeHandler} />\r\n                            <button className=\"btn btn-primary\" id=\"chat-message-submit\">\r\n                                <i class=\"fas fa-paper-plane\" style={{ position: 'relative', right: '10%' }} />\r\n                            </button>\r\n                        </form>\r\n                    </div> :\r\n                    <div className=\"d-flex flex-column justify-content-center align-items-center current-chat\">\r\n                        <div>\r\n                            <strong style={{ fontSize: 'larger' }}>Você não tem uma conversa selecionada</strong>\r\n                            <p className=\"text-secondary\">Selecione uma existente ou comece uma nova</p>\r\n                            <button className=\"btn btn-primary\" onClick={() => this.props.openModal()}>Nova conversa</button>\r\n                        </div>\r\n                    </div>}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chat","import React from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Header from '../../components/header'\r\nimport Chat from './chat'\r\nimport { SERVER_URL } from '../../settings'\r\n\r\nclass Messages extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: null,\r\n            chatId: null,\r\n            activeChats: null,\r\n            activeChatsProfiles: null,\r\n            addingNewChat: false,\r\n            modalProfiles: [],\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps === this.props) return\r\n        const participants = { username: this.state.username, other_username: newProps.match.params.slug }\r\n        fetch(`${SERVER_URL}/chat-api/chat-id/${JSON.stringify(participants)}`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                chatId: data['chat_id']\r\n            }))\r\n    }\r\n\r\n    handleComponentChange() {\r\n        if (!this.state.username) {\r\n            fetch(`${SERVER_URL}/profile-api/logged-user`)\r\n                .then(response => response.json())\r\n                .then(data => this.setState({\r\n                    username: data.username\r\n                }))\r\n        }\r\n        if (!this.state.activeChatsProfiles && this.state.activeChatsProfiles !== []) {\r\n            this.fetchActiveChatProfiles()\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.title = 'Mensagens / Napker'\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    fetchActiveChatProfiles = () => {\r\n        fetch(`${SERVER_URL}/chat-api/active-chats-profiles`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (!this.state.username) return\r\n                this.setState({\r\n                    activeChats: data.chats.reverse(),\r\n                    activeChatsProfiles: data.profiles.reverse()\r\n                })\r\n            })\r\n    }\r\n\r\n    openModal = () => {\r\n        this.setState({\r\n            addingNewChat: true\r\n        })\r\n    }\r\n\r\n    setModalSearch = query => {\r\n        if (query === '') {\r\n            this.setState({\r\n                modalProfiles: []\r\n            })\r\n            return\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/users/${query}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    modalProfiles: data\r\n                })\r\n            })\r\n    }\r\n\r\n    setContactSearch = query => {\r\n        if (query === '') {\r\n            this.fetchActiveChatProfiles()\r\n            return\r\n        }\r\n        if (this.state.activeChatsProfiles) {\r\n            const filteredProfiles = this.state.activeChatsProfiles.filter(p => p.user.username.includes(query))\r\n            this.setState({\r\n                activeChatsProfiles: filteredProfiles\r\n            })\r\n        }\r\n    }\r\n\r\n    resetUnreadMessagesCounter = () => {\r\n        this.unreadMessagesCounter = 0\r\n    }\r\n\r\n    incrementUnreadMessagesCounter = () => {\r\n        this.unreadMessagesCounter++\r\n    }\r\n\r\n    setLastChatMessage = message => {\r\n        this.lastChatMessage = message\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header page=\"Mensagens\" />\r\n                <div className=\"content d-flex messages-wrapper\">\r\n                    <Modal show={this.state.addingNewChat}\r\n                        onHide={() => this.setState({ addingNewChat: false })}\r\n                        size=\"lg\">\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title><strong>Nova conversa</strong></Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body style={{ padding: '0' }}>\r\n                            <input className=\"modal-search-input\"\r\n                                placeholder=\"Pesquisar pessoas\"\r\n                                onChange={e => this.setModalSearch(e.target.value)}\r\n                            />\r\n                            <div className=\"list-group\" style={{ height: '400px', overflow: 'hidden', overflowY: 'scroll' }}>\r\n                                {this.state.modalProfiles && this.state.modalProfiles.map(profile => {\r\n                                    return (\r\n                                        <Link to={`/mensagens/${profile.slug}`}\r\n                                            style={{ color: '#000', textDecoration: 'none' }}\r\n                                            onClick={() => this.setState({\r\n                                                addingNewChat: false\r\n                                            })}\r\n                                        >\r\n                                            <li className=\"list-group-item profile-row modal-profile-li\" key={profile.id}>\r\n                                                <div className=\"d-flex justify-content-between\">\r\n                                                    <div className=\"profile-col\">\r\n                                                        <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                            className=\"profile-img-med\"\r\n                                                            style={{ marginRight: '10px' }}\r\n                                                        />\r\n                                                        <div className=\"main-profile-data\">\r\n                                                            <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                                            <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"profile-col\">\r\n                                                        {profile.bio}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </li>\r\n                                        </Link>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                    <div className=\"d-flex flex-column chats-list\">\r\n                        <div className=\"search-input-container\">\r\n                            <input placeholder=\"Pesquisar pessoas\" className=\"search-input\" onChange={e => this.setContactSearch(e.target.value)} />\r\n                            <i className=\"fas fa-plus add-icon\" onClick={this.openModal}></i>\r\n                        </div>\r\n                        <div className=\"list-group chats-container\">\r\n                            {this.state.activeChatsProfiles && this.state.activeChatsProfiles.map(profile => {\r\n                                return (\r\n                                    <Link to={`/mensagens/${profile.slug}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                                        {this.resetUnreadMessagesCounter()}\r\n                                        <li className=\"list-item profile-chat-item\" style={{ whiteSpace: 'nowrap' }}>\r\n                                            <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                className=\"profile-img-med\"\r\n                                                style={{ marginRight: '10px' }}\r\n                                            />\r\n                                            <div className=\"d-flex flex-column align-items-start\">\r\n                                                <div className=\"d-flex\" style={{ maxHeight: '30px' }}>\r\n                                                    <strong style={{ height: 'fit-content' }}>{profile.first_name} {profile.last_name}</strong>\r\n                                                    {this.state.activeChats[this.state.activeChatsProfiles.indexOf(profile)].messages.map(message => {\r\n                                                        const messages = this.state.activeChats[this.state.activeChatsProfiles.indexOf(profile)].messages\r\n                                                        if (messages[messages.length - 1] === message) this.setLastChatMessage(message.content)\r\n                                                        if (message.read || message.contact.user.username !== profile.user.username) return\r\n                                                        this.incrementUnreadMessagesCounter()\r\n                                                    })}\r\n                                                    {this.unreadMessagesCounter ? <p className=\"notifications-number\">{this.unreadMessagesCounter}</p> : ''}\r\n                                                    <p className=\"text-secondary\" style={{ marginLeft: '5px' }}>@{profile.user.username}</p>\r\n                                                </div>\r\n                                                <p className=\"text-secondary\">{this.lastChatMessage.slice(0, 40)}</p>\r\n                                            </div>\r\n                                        </li>\r\n                                    </Link>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <Chat username={this.state.username}\r\n                        otherUsername={this.props.match.params.slug}\r\n                        chatId={this.state.chatId}\r\n                        openModal={this.openModal}\r\n                        updateUnreadMessagesNumber={this.props.updateUnreadMessagesNumber}\r\n                        updateMessagesComponent={this.fetchActiveChatProfiles}\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Messages","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport LikesModal from '../../components/likesmodal'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nexport default function Posts(props) {\r\n    const [myprofile, setMyProfile] = useState(null)\r\n    const [likesModal, setLikesModal] = useState({ isOpen: false, likes: null })\r\n    const profile = props.profile\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n    }, [])\r\n\r\n    const likeUnlikePost = e => {\r\n        e.stopPropagation()\r\n        const likeBtn = e.target\r\n        if (likeBtn.classList.contains('fas')) {\r\n            likeBtn.classList.remove('fas') //border heart\r\n            likeBtn.classList.add('far')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/unlike-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.fetchProfile()\r\n                })\r\n        } else {\r\n            likeBtn.classList.remove('far') //border heart\r\n            likeBtn.classList.add('fas')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/like-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.fetchProfile()\r\n                })\r\n        }\r\n    }\r\n\r\n    const hideLikesModal = () => {\r\n        setLikesModal({\r\n            isOpen: false,\r\n            likes: null\r\n        })\r\n    }\r\n\r\n    const deletePost = (e, postId) => {\r\n        e.stopPropagation()\r\n        const el = document.querySelector(`#profile-post-${postId}`)\r\n        if (window.confirm('Tem certeza que deseja apagar o post?\\nEssa ação é irreversível.')) {\r\n            el.style.animationPlayState = 'running'\r\n            el.addEventListener('animationend', () => {\r\n                props.fetchProfile()\r\n            })\r\n            fetch(`${SERVER_URL}/post-api/delete-post/${postId}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <LikesModal\r\n                isOpen={likesModal.isOpen}\r\n                likes={likesModal.likes}\r\n                hideModal={hideLikesModal}\r\n            />\r\n            <div className=\"post-list\">\r\n                {profile && myprofile && profile.posts.length ? profile.posts.map(post => {\r\n                    return (\r\n                        <li\r\n                            className=\"post-container\"\r\n                            key={post.id}\r\n                            id={`profile-post-${post.id}`}\r\n                            onClick={() => window.location.href = `/post/${post.id}`}\r\n                        >\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                <div className=\"post-row\">\r\n                                    <div className=\"post-col\">\r\n                                        <img src={`${SERVER_URL}${profile.photo}`}\r\n                                            className=\"profile-img-med\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"post-col\">\r\n                                        <div style={{ height: '30px' }}>\r\n                                            <strong>{profile.first_name} {profile.last_name} </strong>\r\n                                            <p className=\"text-secondary d-inline-block\">\r\n                                                @{profile.user.username} • {post.created.split('-').reverse().join('/')}\r\n                                            </p>\r\n                                        </div>\r\n                                        <div style={{ textAlign: 'start' }}>\r\n                                            {post.content}\r\n                                        </div>\r\n                                        {post.image &&\r\n                                            <img src={`${SERVER_URL}${post.image}`} className=\"post-img\" />\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                {profile.id == myprofile.id &&\r\n                                    <i\r\n                                        className=\"far fa-trash-alt trash-icon text-secondary\"\r\n                                        style={{ margin: '20px 20px 0 0' }}\r\n                                        onClick={e => deletePost(e, post.id)}\r\n                                    />}\r\n                            </div>\r\n                            <div className=\"post-actions\">\r\n                                <p className=\"text-secondary\">\r\n                                    <Link\r\n                                        to={`/post/${post.id}/comment`}\r\n                                        className=\"text-secondary\"\r\n                                        onClick={e => e.stopPropagation()}\r\n                                    >\r\n                                        <i class=\"far fa-comment\" />\r\n                                    </Link>{post.comments.length}\r\n                                    {post.likes.map(like => like.profile.id).includes(myprofile.id) ?\r\n                                        <i class=\"fas fa-heart\"\r\n                                            data-postid={post.id}\r\n                                            onClick={likeUnlikePost}\r\n                                        />\r\n                                        :\r\n                                        <i class=\"far fa-heart\"\r\n                                            data-postid={post.id}\r\n                                            onClick={likeUnlikePost}\r\n                                        />}\r\n                                    <p className=\"post-likes-number\"\r\n                                        onClick={e => {\r\n                                            e.stopPropagation()\r\n                                            setLikesModal({ isOpen: true, likes: post.likes })\r\n                                        }\r\n                                        }\r\n                                    >\r\n                                        {post.likes.length}\r\n                                    </p>\r\n                                </p>\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                }) : <h3 style={{ marginTop: '50px' }}>{profile.first_name} não tem posts</h3>}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Interests(props) {\r\n    const profile = props.profile\r\n\r\n    return (\r\n        <div className=\"interests-page-container\">\r\n            <h3>Interesses públicos de {profile.first_name}</h3>\r\n            <div>\r\n                {profile && profile.interests.filter(i => i.public).map(interest => {\r\n                    return (\r\n                        <>\r\n                            {interest.title &&\r\n                                <>\r\n                                    <hr />\r\n                                    <li className=\"interest-item\">\r\n                                        {interest.title[0].toUpperCase() + interest.title.slice(1)}\r\n                                        <Link to={`/interesse/${interest.title}`}>\r\n                                            <button className=\"btn-secondary\" style={{ padding: '5px' }}>Pesquisar usuários</button>\r\n                                        </Link>\r\n                                    </li>\r\n                                </>\r\n                            }\r\n                        </>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nimport Header from '../components/header'\r\nimport Posts from './profile-components/posts'\r\nimport Interests from './profile-components/interests'\r\nimport { SERVER_URL } from '../settings'\r\nimport { csrftoken } from '../utils'\r\n\r\nexport default function MyProfile() {\r\n    const [profile, setProfile] = useState(null)\r\n    const [profileImagePreview, setProfileImagePreview] = useState(null)\r\n    const [isEditing, setIsEditing] = useState(false)\r\n    const [currentPageIsPosts, setCurrentPageIsPosts] = useState(true)\r\n\r\n    document.title = 'Perfil / Napker'\r\n\r\n    useEffect(() => {\r\n        fetchProfile()\r\n    }, [])\r\n\r\n    const fetchProfile = () => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setProfile(data)\r\n                setProfileImagePreview(`${SERVER_URL}${data.photo}`)\r\n            })\r\n    }\r\n\r\n    const switchPage = e => {\r\n        document.querySelectorAll('.profile-page-menu-item-active').forEach(el => {\r\n            el.classList.remove('profile-page-menu-item-active')\r\n        })\r\n        e.target.classList.add('profile-page-menu-item-active')\r\n        setCurrentPageIsPosts(!currentPageIsPosts)\r\n    }\r\n\r\n    const handleProfileImageChange = e => {\r\n        const reader = new FileReader()\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                setProfileImagePreview(reader.result)\r\n            }\r\n        }\r\n        try {\r\n            reader.readAsDataURL(e.target.files[0])\r\n        } catch {\r\n            \r\n        }\r\n    }\r\n\r\n    const handleUsernameChange = e => {\r\n        fetch(`${SERVER_URL}/profile-api/user/${e.target.value}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.bool !== 'false') {\r\n                    document.querySelector('#username-taken').style.display = 'initial'\r\n                } else if (document.querySelector('#username-taken').style.display === 'initial') {\r\n                    document.querySelector('#username-taken').style.display = 'none'\r\n                }\r\n            })\r\n    }\r\n\r\n    const handleEmailChange = e => {\r\n        fetch(`${SERVER_URL}/profile-api/profile-by-email/${e.target.value}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.bool !== 'false') {\r\n                    document.querySelector('#email-taken').style.display = 'initial'\r\n                } else if (document.querySelector('#email-taken').style.display === 'initial') {\r\n                    document.querySelector('#email-taken').style.display = 'none'\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Perfil\" />\r\n            {profile ? <div className=\"content\">\r\n                <Modal show={isEditing}\r\n                    onHide={() => setIsEditing(false)}\r\n                    size=\"lg\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Editar perfil</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <form action={`${SERVER_URL}/update-profile`} id=\"update-profile-form\" method=\"POST\" encType=\"multipart/form-data\">\r\n                            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n                            <div className=\"d-flex flex-column justify-content-center align-items-center\" style={{ padding: '25px' }}>\r\n                                <img src={profileImagePreview}\r\n                                    className=\"profile-img-big\"\r\n                                    style={{ marginBottom: '25px' }}\r\n                                />\r\n                                <input\r\n                                    type=\"file\"\r\n                                    accept=\"image/png, image/jpg, image/jpeg\"\r\n                                    name=\"profile-photo\"\r\n                                    onChange={handleProfileImageChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"d-flex\">\r\n                                <label htmlFor=\"first-name\" className=\"profile-label\">Nome:</label>\r\n                                <input className=\"form-control\" type=\"text\" name=\"first-name\" id=\"first-name\" placeholder={profile.first_name} />\r\n                            </div>\r\n                            <div className=\"d-flex\">\r\n                                <label htmlFor=\"last-name\" className=\"profile-label\">Sobrenome:</label>\r\n                                <input className=\"form-control\" type=\"text\" name=\"last-name\" id=\"last-name\" placeholder={profile.last_name} />\r\n                            </div>\r\n                            <div className=\"d-flex\">\r\n                                <label htmlFor=\"username\" className=\"profile-label\">Nome de usuário:</label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"username\"\r\n                                    id=\"username\"\r\n                                    placeholder={profile.user.username}\r\n                                    onChange={handleUsernameChange}\r\n                                />\r\n                            </div>\r\n                            <div style={{ width: '100%', textAlign: 'center', padding: '3px' }}>\r\n                                <span id=\"username-taken\">Nome de usuário já existe</span>\r\n                            </div>\r\n                            <div className=\"d-flex\">\r\n                                <label htmlFor=\"email\" className=\"profile-label\">Email:</label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    id=\"email\"\r\n                                    placeholder={profile.email}\r\n                                    onChange={handleEmailChange}\r\n                                />\r\n                            </div>\r\n                            <div style={{ width: '100%', textAlign: 'center', padding: '3px' }}>\r\n                                <span id=\"email-taken\">Email já utilizado</span>\r\n                            </div>\r\n                            <div className=\"d-flex\">\r\n                                <label htmlFor=\"gender\" className=\"profile-label\">Gênero:</label>\r\n                                <select className=\"form-control\" name=\"gender\" id=\"gender\" placeholder={profile.gender}>\r\n                                    <option value=\"male\">Masculino</option>\r\n                                    <option value=\"female\">Feminino</option>\r\n                                    <option value=\"other\">Outro</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"d-flex\">\r\n                                <label htmlFor=\"birth-date\" className=\"profile-label\">Data de nascimento:</label>\r\n                                <input className=\"form-control\" type=\"date\" name=\"birth-date\" id=\"birth-date\" defaultValue={profile.birth_date} />\r\n                            </div>\r\n                            <div className=\"d-flex\">\r\n                                <label htmlFor=\"bio\" className=\"profile-label\">Bio:</label>\r\n                                <input className=\"form-control\" type=\"email\" name=\"bio\" id=\"bio\" placeholder={profile.bio} />\r\n                            </div>\r\n                        </form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <button className=\"btn btn-grey\" onClick={() => setIsEditing(false)}>Fechar</button>\r\n                        <button className=\"btn btn-primary\" onClick={() => document.querySelector('form#update-profile-form').submit()}>Salvar</button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <div className=\"profile-data-container\">\r\n                    <div className=\"d-flex flex-column align-items-start\">\r\n                        <p style={{ padding: '15px' }}>\r\n                            <img src={`${SERVER_URL}${profile.photo}`}\r\n                                className=\"profile-img-big\"\r\n                                style={{ marginBottom: '25px' }}\r\n                            />\r\n                        </p>\r\n                        <p style={{ marginBottom: 0 }}><strong>{profile.first_name} {profile.last_name}</strong></p>\r\n                        <p className=\"text-secondary\" style={{ marginTop: 0 }}>@{profile.user.username}</p>\r\n                        <p>{profile.bio}</p>\r\n                        <p className=\"text-secondary\">\r\n                            <i className=\"far fa-calendar-alt\"></i> Entrou em {profile.created.split('-').reverse().join('/')}\r\n                        </p>\r\n                        <p>\r\n                            <Link to={`/user/${profile.slug}/amigos`} style={{ color: '#000' }}>\r\n                                <strong>{profile.friends.length}</strong> {profile.friends.length === 1 ? 'amigo' : 'amigos'}\r\n                            </Link>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"d-flex flex-column\">\r\n                        <button\r\n                            className=\"btn btn-secondary\"\r\n                            type=\"button\"\r\n                            onClick={() => setIsEditing(true)}\r\n                            style={{ marginBottom: '10px' }}\r\n                        >\r\n                            Editar perfil\r\n                        </button>\r\n                        <Link to='/perfil/meus-interesses'>\r\n                            <button className=\"btn btn-secondary\">Editar interesses</button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"profile-page-menu\">\r\n                    <div className=\"profile-page-menu-item profile-page-menu-item-active\" onClick={switchPage}>\r\n                        Posts ({profile.posts.length})\r\n                    </div>\r\n                    <div className=\"profile-page-menu-item\" onClick={switchPage}>\r\n                        Interesses ({profile.interests.filter(i => i.public).length})\r\n                    </div>\r\n                </div>\r\n                {currentPageIsPosts ?\r\n                    <Posts profile={profile} fetchProfile={fetchProfile} /> :\r\n                    <Interests profile={profile} />\r\n                }\r\n            </div > : ''}\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport Header from '../components/header'\r\n\r\nexport default function Settings() {\r\n\r\n    document.title = 'Configurações / Napker'\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Configurações\" />\r\n            <div className=\"content\">\r\n                Em desenvolvimento...\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Header from '../../components/header'\r\nimport Posts from '../profile-components/posts'\r\nimport Interests from '../profile-components/interests'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            profile: null,\r\n            relationshipButtonLabel: '',\r\n            currentPageIsPosts: true,\r\n        }\r\n        this.slug = this.props.match.params.slug\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.fetchProfile()\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${SERVER_URL}/profile-api/relationship/${this.slug}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                let label\r\n                switch (data.relationship) {\r\n                    case 'friends':\r\n                        label = 'Amigos'\r\n                        break\r\n                    case 'invite-sent':\r\n                        label = 'Solicitado'\r\n                        break\r\n                    case 'invite-received':\r\n                        label = 'Aceitar'\r\n                        break\r\n                    case 'none':\r\n                        label = 'Solicitar'\r\n                }\r\n                this.setState({\r\n                    relationshipButtonLabel: label\r\n                })\r\n            })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        let btn = document.querySelector('#profile-page-relationship-btn')\r\n        if (btn) {\r\n            switch (btn.innerHTML) {\r\n                case 'Amigos':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.onmouseenter = () => {\r\n                        if (btn.innerHTML === 'Amigos') btn.innerHTML = 'Remover'\r\n                    }\r\n                    btn.onmouseout = () => {\r\n                        if (btn.innerHTML === 'Remover') btn.innerHTML = 'Amigos'\r\n                    }\r\n                    btn.classList.add('friend-btn')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Solicitado':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Aceitar':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Solicitar':\r\n                    btn.classList.add('btn-secondary')\r\n                    btn.classList.remove('d-none')\r\n            }\r\n        }\r\n    }\r\n\r\n    fetchProfile = () => {\r\n        fetch(`${SERVER_URL}/profile-api/user/${this.slug}`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                profile: data\r\n            }))\r\n    }\r\n\r\n    sendFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/send-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    cancelFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/cancel-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    removeFromFriends = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/remove-from-friends`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    acceptFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/reply-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({\r\n                'senderid': pk,\r\n                'reply': 'accept'\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                this.props.updateNotificationsNumber()\r\n            })\r\n    }\r\n\r\n    handleRelationshipUpdate = e => {\r\n        const btn = e.target\r\n        if (btn.innerHTML === 'Solicitar') {\r\n            this.sendFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitado'\r\n            btn.className = 'btn btn-primary'\r\n        } else if (btn.innerHTML === 'Solicitado') {\r\n            this.cancelFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitar'\r\n            btn.className = 'btn btn-secondary'\r\n        } else if (btn.innerHTML === 'Amigos' || btn.innerHTML === 'Remover') {\r\n            if (window.confirm(`Remover @${this.state.profile.user.username} dos amigos?`)) {\r\n                this.removeFromFriends(btn.dataset.pk)\r\n                btn.innerHTML = 'Solicitar'\r\n                btn.className = 'btn btn-secondary'\r\n            }\r\n        } else if (btn.innerHTML === 'Aceitar') {\r\n            this.acceptFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Amigos'\r\n            btn.className = 'btn btn-primary'\r\n        }\r\n    }\r\n\r\n    switchPage = e => {\r\n        document.querySelectorAll('.profile-page-menu-item-active').forEach(el => {\r\n            el.classList.remove('profile-page-menu-item-active')\r\n        })\r\n        e.target.classList.add('profile-page-menu-item-active')\r\n        this.setState({\r\n            currentPageIsPosts: !this.state.currentPageIsPosts\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header page={this.state.profile ? `${this.state.profile.first_name} ${this.state.profile.last_name}` : 'Perfil'}\r\n                    backArrow={true}\r\n                />\r\n                {!this.state.profile ? <></> :\r\n                    <div className=\"content\">\r\n                        <div className=\"d-flex justify-content-between align-items-center profile-data-container\">\r\n                            <div className=\"d-flex flex-column align-items-start\">\r\n                                <p style={{ padding: '15px' }}>\r\n                                    <img src={`${SERVER_URL}${this.state.profile.photo}`}\r\n                                        className=\"profile-img-big\"\r\n                                        style={{ marginBottom: '25px' }}\r\n                                    />\r\n                                </p>\r\n                                <p style={{ marginBottom: 0 }}><strong>{this.state.profile.first_name} {this.state.profile.last_name}</strong></p>\r\n                                <p className=\"text-secondary\" style={{ marginTop: 0 }}>@{this.state.profile.user.username}</p>\r\n                                <p>{this.state.profile.bio}</p>\r\n                                <p className=\"text-secondary\">\r\n                                    <i className=\"far fa-calendar-alt\"></i> Entrou em {this.state.profile.created.split('-').reverse().join('/')}\r\n                                </p>\r\n                                <p>\r\n                                    <Link to={`/user/${this.state.profile.slug}/amigos`} style={{ color: '#000' }}>\r\n                                        <strong>{this.state.profile.friends.length}</strong> {this.state.profile.friends.length === 1 ? 'amigo' : 'amigos'}\r\n                                    </Link>\r\n                                </p>\r\n                            </div>\r\n                            <div>\r\n                                <button className=\"btn d-none\"\r\n                                    id=\"profile-page-relationship-btn\"\r\n                                    data-pk={this.state.profile.id}\r\n                                    onClick={this.handleRelationshipUpdate}\r\n                                >{this.state.relationshipButtonLabel}</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"profile-page-menu\">\r\n                            <div className=\"profile-page-menu-item profile-page-menu-item-active\" onClick={this.switchPage}>\r\n                                Posts ({this.state.profile.posts.length})\r\n                            </div>\r\n                            <div className=\"profile-page-menu-item\" onClick={this.switchPage}>\r\n                                Interesses ({this.state.profile.interests.filter(i => i.public).length})\r\n                            </div>\r\n                        </div>\r\n                        {this.state.currentPageIsPosts ?\r\n                            <Posts profile={this.state.profile} fetchProfile={this.fetchProfile} /> :\r\n                            <Interests profile={this.state.profile} />\r\n                        }\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile","import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nimport Header from '../../components/header'\r\nimport { SERVER_URL } from '../../settings'\r\n\r\nexport default function Friends() {\r\n    const [friends, setFriends] = useState([])\r\n    const [profile, setProfile] = useState(null)\r\n    const { slug } = useParams()\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/user/${slug}`)\r\n            .then(response => response.json())\r\n            .then(data => setProfile(data))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (profile) {\r\n            fetch(`${SERVER_URL}/profile-api/get-friends-profiles/${profile.slug}`)\r\n                .then(response => response.json())\r\n                .then(data => setFriends(data))\r\n        }\r\n    }, [profile])\r\n\r\n    return (\r\n        <>\r\n            <Header page={profile ? `${profile.first_name} ${profile.last_name} / Amigos` : 'Perfil / Amigos'}\r\n                backArrow={true}\r\n            />\r\n            <div className=\"content\">\r\n                <div className=\"lidt-group\">\r\n                    {friends && friends.map(friend => {\r\n                        return (\r\n                            <Link to={`/user/${friend.slug}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                                <li className=\"list-group-item profile-row filtered-profile\" key={friend.id}>\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <div className=\"profile-col\">\r\n                                            <img src={`${SERVER_URL}${friend.photo}`}\r\n                                                className=\"profile-img-med\"\r\n                                                style={{ marginRight: '10px' }}\r\n                                            />\r\n                                            <div className=\"main-profile-data\">\r\n                                                <strong>{friend.first_name} {friend.last_name}</strong>\r\n                                                <p className=\"text-secondary\">@{friend.user.username}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"profile-col\">\r\n                                            {friend.bio}\r\n                                        </div>\r\n                                        <div className=\"profile-col\">\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            </Link>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nimport Header from '../../components/header'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nexport default function InterestProfiles() {\r\n    const [profiles, setProfiles] = useState([])\r\n    const { interest } = useParams()\r\n\r\n    document.title = `${interest} / Napker`\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/interest-profile-list/${interest}`)\r\n            .then(response => response.json())\r\n            .then(data => setProfiles(data))\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Header\r\n                page={`Interesse / ${interest[0].toUpperCase() + interest.slice(1)}`}\r\n                backArrow={true}\r\n            />\r\n            <div className=\"content\">\r\n                <div className=\"list-group\">\r\n                    <h3>Perfis interessados em \"{interest}\"</h3>\r\n                    {profiles && profiles.map(profile => {\r\n                        return (\r\n                            <li\r\n                                className=\"list-group-item profile-row\"\r\n                                key={profile.id}\r\n                                onClick={() => window.location.href = `/user/${profile.slug}`}\r\n                            >\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                    <div className=\"profile-col\">\r\n                                        <img src={`${SERVER_URL}${profile.photo}`}\r\n                                            className=\"profile-img-med\"\r\n                                            style={{ marginRight: '10px' }}\r\n                                        />\r\n                                        <div className=\"main-profile-data\">\r\n                                            <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                            <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"profile-col\">\r\n                                        {profile.bio}\r\n                                    </div>\r\n                                    <div className=\"profile-col\"></div>\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport { SERVER_URL } from '../../../settings'\r\n\r\nexport default function PublicInterests(props) {\r\n\r\n    useEffect(() => {\r\n        if (document.querySelector('.public-interests-container')) {\r\n            const tagContainer = document.querySelector('.public-tag-container');\r\n            const input = document.querySelector('.public-tag-container input');\r\n\r\n            let tags = props.myProfile.interests.filter(i => i.public).map(i => i.title);\r\n            const interestsInput = document.querySelector('#public-interests')\r\n            addTags()\r\n\r\n            function createTag(label) {\r\n                const div = document.createElement('div');\r\n                div.classList.add('tag');\r\n                div.classList.add('public-tag');\r\n                const span = document.createElement('span');\r\n                span.innerHTML = label;\r\n                const closeIcon = document.createElement('i');\r\n                closeIcon.classList.add('public-close-icon')\r\n                closeIcon.innerHTML = '×';\r\n                closeIcon.classList.add('material-icons')\r\n                closeIcon.setAttribute('data-item', label);\r\n                div.appendChild(span);\r\n                div.appendChild(closeIcon);\r\n                if (!interestsInput.value.includes(label)) interestsInput.value += ` ${label}`;\r\n                return div;\r\n            }\r\n\r\n            function clearTags() {\r\n                document.querySelectorAll('.public-tag').forEach(tag => {\r\n                    tag.parentElement.removeChild(tag);\r\n                });\r\n            }\r\n\r\n            function addTags() {\r\n                clearTags();\r\n                tags.sort()\r\n                tags.slice().reverse().forEach(tag => {\r\n                    tagContainer.prepend(createTag(tag));\r\n                });\r\n                props.setInterests(tags)\r\n            }\r\n\r\n            input.addEventListener('keydown', (e) => {\r\n                if (e.key === 'Enter') {\r\n                    e.target.value.split(',').forEach(tag => {\r\n                        tags.push(tag);\r\n                    });\r\n\r\n                    e.preventDefault()\r\n\r\n                    addTags();\r\n                    input.value = '';\r\n                    return false; //prevent the form to submit\r\n                }\r\n            });\r\n            document.addEventListener('click', (e) => {\r\n                if (e.target.classList.contains('public-close-icon')) {\r\n                    const tagLabel = e.target.getAttribute('data-item');\r\n                    const index = tags.indexOf(tagLabel);\r\n                    tags = [...tags.slice(0, index), ...tags.slice(index + 1)];\r\n                    addTags();\r\n                }\r\n            })\r\n\r\n            input.focus();\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"public-interests-container\">\r\n            <h3>Interesses públicos</h3>\r\n            <p>\r\n                Os interesses públicos são visíveis para os outros usuários.\r\n                Coloque aqui interesses que sem eles seu perfil ficaria incompleto.\r\n            </p>\r\n            <div class=\"tag-container public-tag-container\">\r\n                <input />\r\n                <input type=\"hidden\" name=\"public-interests\" id=\"public-interests\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport { SERVER_URL } from '../../../settings'\r\n\r\nexport default function PrivateInterests(props) {\r\n\r\n    useEffect(() => {\r\n        if (document.querySelector('.private-interests-container')) {\r\n            const tagContainer = document.querySelector('.private-tag-container');\r\n            const input = document.querySelector('.private-tag-container input');\r\n\r\n            let tags = props.myProfile.interests.filter(i => !i.public).map(i => i.title);\r\n            const interestsInput = document.querySelector('#private-interests')\r\n            addTags()\r\n\r\n            function createTag(label) {\r\n                const div = document.createElement('div');\r\n                div.classList.add('tag');\r\n                div.classList.add('private-tag');\r\n                const span = document.createElement('span');\r\n                span.innerHTML = label;\r\n                const closeIcon = document.createElement('i');\r\n                closeIcon.classList.add('private-close-icon')\r\n                closeIcon.classList.add('material-icons')\r\n                closeIcon.innerHTML = '×';\r\n                closeIcon.setAttribute('data-item', label);\r\n                div.appendChild(span);\r\n                div.appendChild(closeIcon);\r\n                if (!interestsInput.value.includes(label)) interestsInput.value += ` ${label}`;\r\n                return div;\r\n            }\r\n\r\n            function clearTags() {\r\n                document.querySelectorAll('.private-tag').forEach(tag => {\r\n                    tag.parentElement.removeChild(tag);\r\n                });\r\n            }\r\n\r\n            function addTags() {\r\n                clearTags();\r\n                tags.sort()\r\n                tags.slice().reverse().forEach(tag => {\r\n                    tagContainer.prepend(createTag(tag));\r\n                });\r\n                props.setInterests(tags)\r\n            }\r\n\r\n            input.addEventListener('keydown', (e) => {\r\n                if (e.key === 'Enter') {\r\n                    e.target.value.split(',').forEach(tag => {\r\n                        tags.push(tag);\r\n                    });\r\n\r\n                    e.preventDefault()\r\n\r\n                    addTags();\r\n                    input.value = '';\r\n                    return false; //prevent the form to submit\r\n                }\r\n            });\r\n            document.addEventListener('click', (e) => {\r\n                if (e.target.classList.contains('private-close-icon')) {\r\n                    const tagLabel = e.target.getAttribute('data-item');\r\n                    const index = tags.indexOf(tagLabel);\r\n                    tags = [...tags.slice(0, index), ...tags.slice(index + 1)];\r\n                    addTags();\r\n                }\r\n            })\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"private-interests-container\">\r\n            <h3>Interesses privados</h3>\r\n            <p>\r\n                Os interesses privados não são visíveis para os outros usuários.\r\n                Eles servem para aumentar a precisão das recomendações de perfis que\r\n                possuem o máximo de afinidade possível com você.\r\n            </p>\r\n            <div class=\"tag-container private-tag-container\">\r\n                <input />\r\n                <input type=\"hidden\" name=\"private-interests\" id=\"private-interests\" />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Header from '../../../components/header'\r\nimport PublicInterests from './publicInterests'\r\nimport PrivateInterests from './privateInterests'\r\nimport { SERVER_URL } from '../../../settings'\r\nimport { csrftoken } from '../../../utils'\r\n\r\nexport default function EditInterests() {\r\n    const [myProfile, setMyProfile] = useState(null)\r\n    let [publicInterests, setPublicInterests] = [null, value => publicInterests = value]\r\n    let [privateInterests, setPrivateInterests] = [null, value => privateInterests = value]\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n    }, [])\r\n\r\n    const submitInterests = () => {\r\n        fetch(`${SERVER_URL}/profile-api/set-myinterests`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({\r\n                public_interests: publicInterests.sort(),\r\n                private_interests: privateInterests.sort()\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                document.querySelector('#interests-updated-message').style.display = 'block'\r\n                document.documentElement.scrollTop = 0\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>{console.log('rerendered')}\r\n            <Header page=\"Meus interesses\" backArrow={true} />\r\n            <div className=\"content\">\r\n                <p\r\n                    id=\"interests-updated-message\"\r\n                    style={{ background: '#fff', color: '#0f0', display: 'none', padding: '5px', fontSize: 'large', fontWeight: 'bold' }}\r\n                >\r\n                    Interesses atualizados com sucesso\r\n                </p>\r\n                {myProfile &&\r\n                    <div className=\"interests-page-container\">\r\n                        <PublicInterests\r\n                            myProfile={myProfile}\r\n                            setInterests={setPublicInterests}\r\n                        />\r\n\r\n                        <br />\r\n                        <hr />\r\n                        <br />\r\n\r\n                        <PrivateInterests\r\n                            myProfile={myProfile}\r\n                            setInterests={setPrivateInterests}\r\n                        />\r\n\r\n                        <hr />\r\n                        <button\r\n                            className=\"btn btn-primary\"\r\n                            onClick={submitInterests}\r\n                        >\r\n                            Salvar\r\n                        </button>\r\n                    </div>}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nexport default function CommentModal(props) {\r\n    const comment = e => {\r\n        e.preventDefault()\r\n        props.commentPost(document.querySelector('#comment-modal-input').value)\r\n        props.hideModal()\r\n    }\r\n\r\n    return (\r\n        <Modal show={props.isOpen}\r\n            onHide={props.hideModal}\r\n            size=\"lg\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title><strong>Comentar</strong></Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        id=\"comment-modal-input\"\r\n                        placeholder=\"Comente alguma coisa\"\r\n                        style={{ marginRight: '5px' }}\r\n                    />\r\n                    <button\r\n                        className=\"btn btn-primary\"\r\n                        type=\"submit\"\r\n                        onClick={comment}\r\n                    >\r\n                        Enviar\r\n                    </button>\r\n                </form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nimport CommentModal from '../../components/commentmodal'\r\nimport LikesModal from '../../components/likesmodal'\r\nimport Header from '../../components/header'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nexport default function Post(props) {\r\n    const [post, setPost] = useState(null)\r\n    const [profile, setProfile] = useState(null)\r\n    const [commentModalIsOpen, setCommentModalIsOpen] = useState(props.commentModalIsOpen)\r\n    const [postLikesModal, setPostLikesModal] = useState({ isOpen: false, likes: null })\r\n    const [commentLikesModal, setCommentLikesModal] = useState({ isOpen: false, likes: null })\r\n\r\n    const { id } = useParams()\r\n\r\n    useEffect(() => {\r\n        fetchPost()\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setProfile(data))\r\n    }, [])\r\n\r\n    const fetchPost = () => {\r\n        fetch(`${SERVER_URL}/post-api/post/${id}`)\r\n            .then(response => response.json())\r\n            .then(data => setPost(data))\r\n    }\r\n\r\n    const likeUnlikePost = e => {\r\n        const likeBtn = e.target\r\n        if (likeBtn.classList.contains('fas')) {\r\n            likeBtn.classList.remove('fas') //border heart\r\n            likeBtn.classList.add('far')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/unlike-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPost()\r\n                })\r\n        } else {\r\n            likeBtn.classList.remove('far') //border heart\r\n            likeBtn.classList.add('fas')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/like-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPost()\r\n                })\r\n        }\r\n    }\r\n\r\n    const likeUnlikeComment = e => {\r\n        const likeBtn = e.target\r\n        if (likeBtn.classList.contains('fas')) {\r\n            likeBtn.classList.remove('fas') //border heart\r\n            likeBtn.classList.add('far')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/unlike-comment/${likeBtn.dataset.commentid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPost()\r\n                })\r\n        } else {\r\n            likeBtn.classList.remove('far') //border heart\r\n            likeBtn.classList.add('fas')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/like-comment/${likeBtn.dataset.commentid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPost()\r\n                })\r\n        }\r\n    }\r\n\r\n    const commentPost = comment => {\r\n        fetch(`${SERVER_URL}/post-api/comment-post/${id}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({ comment: comment })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                fetchPost()\r\n            })\r\n    }\r\n\r\n    const deleteComment = (e, commentId) => {\r\n        e.stopPropagation()\r\n        const el = document.querySelector(`#post-comment-${commentId}`)\r\n        if (window.confirm('Tem certeza que deseja apagar o comentário?\\nEssa ação é irreversível.')) {\r\n            el.style.animationPlayState = 'running'\r\n            console.log(el, el.style.animationPlayState)\r\n            el.addEventListener('animationend', () => {\r\n                fetchPost()\r\n            })\r\n            fetch(`${SERVER_URL}/post-api/delete-comment/${commentId}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                })\r\n        }\r\n    }\r\n\r\n    const deletePost = (e, postId) => {\r\n        e.stopPropagation()\r\n        const el = document.querySelector(`#profile-post-${postId}`)\r\n        if (window.confirm('Tem certeza que deseja apagar o post?\\nEssa ação é irreversível.')) {\r\n            fetch(`${SERVER_URL}/post-api/delete-post/${postId}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    window.location.href = '/'\r\n                })\r\n        }\r\n    }\r\n\r\n    const hideCommentModal = () => {\r\n        setCommentModalIsOpen(false)\r\n    }\r\n\r\n    const hidePostLikesModal = () => {\r\n        setPostLikesModal({\r\n            isOpen: false,\r\n            likes: null\r\n        })\r\n    }\r\n\r\n    const hideCommentLikesModal = () => {\r\n        setCommentLikesModal({\r\n            isOpen: false,\r\n            likes: null\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CommentModal\r\n                isOpen={commentModalIsOpen}\r\n                hideModal={hideCommentModal}\r\n                commentPost={commentPost}\r\n            />\r\n            <LikesModal\r\n                isOpen={postLikesModal.isOpen}\r\n                likes={postLikesModal.likes}\r\n                hideModal={hidePostLikesModal}\r\n            />\r\n            <LikesModal\r\n                isOpen={commentLikesModal.isOpen}\r\n                likes={commentLikesModal.likes}\r\n                hideModal={hideCommentLikesModal}\r\n            />\r\n            <Header page=\"Post\" backArrow={true} />\r\n            <div className=\"content\">\r\n                {post && profile &&\r\n                    <>\r\n                        <div className=\"post-container\">\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                <div className=\"post-row\">\r\n                                    <div className=\"post-col\">\r\n                                        <Link to={`/user/${post.author.slug}`}>\r\n                                            <img src={`${SERVER_URL}${post.author.photo}`}\r\n                                                className=\"profile-img-med\"\r\n                                            />\r\n                                        </Link>\r\n                                    </div>\r\n                                    <div className=\"post-col\">\r\n                                        <Link to={`/user/${post.author.slug}`} style={{ color: '#000' }}>\r\n                                            <div style={{ height: '30px' }}>\r\n                                                <strong>{post.author.first_name} {post.author.last_name} </strong>\r\n                                                <p className=\"text-secondary d-inline-block\">\r\n                                                    @{post.author.user.username} • {post.created.split('-').reverse().join('/')}\r\n                                                </p>\r\n                                            </div>\r\n                                        </Link>\r\n                                        <div style={{ textAlign: 'start', fontSize: 'larger' }}>\r\n                                            {post.content}\r\n                                        </div>\r\n                                        {post.image &&\r\n                                            <img src={`${SERVER_URL}${post.image}`} className=\"post-img\" />\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                {profile.id == post.author.id &&\r\n                                    <i\r\n                                        className=\"far fa-trash-alt trash-icon text-secondary\"\r\n                                        style={{ margin: '20px 20px 0 0' }}\r\n                                        onClick={e => deletePost(e, post.id)}\r\n                                    />}\r\n                            </div>\r\n                            <div className=\"post-actions\">\r\n                                <p className=\"text-secondary\" style={{ fontSize: 'large' }}>\r\n                                    <Link to={`/post/${id}/comment`} className=\"text-secondary\">\r\n                                        <i\r\n                                            class=\"far fa-comment\"\r\n                                            onClick={() => setCommentModalIsOpen(true)}\r\n                                        />\r\n                                    </Link>{post.comments.length}\r\n                                    {post.likes.map(like => like.profile.id).includes(profile.id) ?\r\n                                        <i class=\"fas fa-heart\"\r\n                                            data-postid={post.id}\r\n                                            onClick={likeUnlikePost}\r\n                                        />\r\n                                        :\r\n                                        <i class=\"far fa-heart\"\r\n                                            data-postid={post.id}\r\n                                            onClick={likeUnlikePost}\r\n                                        />}\r\n                                    <p className=\"post-likes-number\"\r\n                                        onClick={() => setPostLikesModal({ isOpen: true, likes: post.likes })}\r\n                                    >\r\n                                        {post.likes.length}\r\n                                    </p>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"comment-list\">\r\n                            {post.comments.map(comment => {\r\n                                return (\r\n                                    <li\r\n                                        className=\"post-container\"\r\n                                        id={`post-comment-${comment.id}`}\r\n                                        key={comment.id}\r\n                                    >\r\n                                        <div className=\"d-flex justify-content-between\">\r\n                                            <div className=\"post-row\">\r\n                                                <div className=\"post-col\">\r\n                                                    <Link to={`/user/${comment.author.slug}`}>\r\n                                                        <img src={`${SERVER_URL}${comment.author.photo}`}\r\n                                                            className=\"profile-img-med\"\r\n                                                        />\r\n                                                    </Link>\r\n                                                </div>\r\n                                                <div className=\"post-col\">\r\n                                                    <Link to={`/user/${comment.author.slug}`} style={{ color: '#000' }}>\r\n                                                        <div style={{ height: '30px' }}>\r\n                                                            <strong>{comment.author.first_name} {comment.author.last_name} </strong>\r\n                                                            <p className=\"text-secondary d-inline-block\">\r\n                                                                @{comment.author.user.username} • {comment.created.split('-').reverse().join('/')}\r\n                                                            </p>\r\n                                                        </div>\r\n                                                    </Link>\r\n                                                    <div style={{ textAlign: 'start' }}>\r\n                                                        {comment.content}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            {comment.author.id == profile.id &&\r\n                                                <i\r\n                                                    className=\"far fa-trash-alt trash-icon text-secondary\"\r\n                                                    style={{ margin: '20px 20px 0 0' }}\r\n                                                    onClick={e => deleteComment(e, comment.id)}\r\n                                                />}\r\n                                        </div>\r\n                                        <div className=\"post-actions\">\r\n                                            <p className=\"text-secondary\">\r\n                                                {comment.likes.map(like => like.profile.id).includes(profile.id) ?\r\n                                                    <i class=\"fas fa-heart\"\r\n                                                        data-commentid={comment.id}\r\n                                                        onClick={likeUnlikeComment}\r\n                                                    />\r\n                                                    :\r\n                                                    <i class=\"far fa-heart\"\r\n                                                        data-commentid={comment.id}\r\n                                                        onClick={likeUnlikeComment}\r\n                                                    />}\r\n                                                <p\r\n                                                    className=\"post-likes-number\"\r\n                                                    onClick={() => setPostLikesModal({ isOpen: true, likes: comment.likes })}\r\n                                                >\r\n                                                    {comment.likes.length}\r\n                                                </p>\r\n                                            </p>\r\n                                        </div>\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\nimport Sidebar from './components/sidebar'\r\nimport Home from './pages/home'\r\nimport Notifications from './pages/notifications'\r\nimport Messages from './pages/messages/messages'\r\nimport MyProfile from './pages/myprofile'\r\nimport Settings from './pages/settings'\r\nimport Profile from './pages/home-components/profile'\r\nimport ProfileFriends from './pages/profile-components/friends'\r\nimport InterestProfiles from './pages/profile-components/interestprofiles'\r\nimport EditInterests from './pages/profile-components/edit-interests/editinterests'\r\nimport Post from './pages/home-components/post'\r\n\r\nimport { SERVER_URL } from './settings'\r\n\r\nexport default function App() {\r\n    const [invitesReceivedNumber, setInvitesReceived] = useState(0)\r\n    const [unvisualizedLikesNumber, setUnvisulaizedLikes] = useState(0)\r\n    const [unvisualizedCommentsNumber, setUnvisulaizedComments] = useState(0)\r\n    let notificationsNumber = invitesReceivedNumber + unvisualizedLikesNumber + unvisualizedCommentsNumber\r\n    const [unreadMessagesNumber, setUnreadMessagesNumber] = useState(0)\r\n\r\n    useEffect(() => {\r\n        updateNotificationsNumber()\r\n        updateUnreadMessagesNumber()\r\n    }, [])\r\n\r\n    const updateNotificationsNumber = () => {\r\n        fetch(`${SERVER_URL}/profile-api/myinvites`)\r\n            .then(response => response.json())\r\n            .then(data => setInvitesReceived(data.length))\r\n        fetch(`${SERVER_URL}/post-api/unvisualized-post-likes`)\r\n            .then(response => response.json())\r\n            .then(data => setUnvisulaizedLikes(data.length))\r\n        fetch(`${SERVER_URL}/post-api/unvisualized-post-comments`)\r\n            .then(response => response.json())\r\n            .then(data => setUnvisulaizedComments(data.length))\r\n    }\r\n\r\n    const updateUnreadMessagesNumber = () => {\r\n        fetch(`${SERVER_URL}/chat-api/all-unread-messages-number`)\r\n            .then(response => response.json())\r\n            .then(data => setUnreadMessagesNumber(data['unread_messages_number']))\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <Sidebar notificationsNumber={notificationsNumber} unreadMessagesNumber={unreadMessagesNumber} />\r\n            <div className=\"main-content\">\r\n                <Switch>\r\n                    <Route path=\"/notificações\" render={props => (\r\n                        <Notifications {...props} updateNotificationsNumber={updateNotificationsNumber} />\r\n                    )} />\r\n                    <Route path=\"/mensagens\" exact component={Messages} />\r\n                    <Route path=\"/mensagens/:slug\" render={props => (\r\n                        <Messages {...props} updateUnreadMessagesNumber={updateUnreadMessagesNumber} />\r\n                    )} />\r\n                    <Route path=\"/perfil\" exact component={MyProfile} />\r\n                    <Route path=\"/perfil/meus-interesses\" component={EditInterests} />\r\n                    <Route path=\"/configurações\" component={Settings} />\r\n                    <Route path=\"/user/:slug\" exact render={props => (\r\n                        <Profile {...props} updateNotificationsNumber={updateNotificationsNumber} />\r\n                    )} />\r\n                    <Route path=\"/user/:slug/amigos\" component={ProfileFriends} />\r\n                    <Route path=\"/post/:id\" exact component={Post} />\r\n                    <Route path=\"/post/:id/comment\" render={props => (\r\n                        <Post {...props} commentModalIsOpen={true} />\r\n                    )} />\r\n                    <Route path=\"/interesse/:interest\" component={InterestProfiles} />\r\n                    <Route path=\"/\" component={Home} />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/style.css'\nimport './assets/profile.css'\nimport './assets/chat.css'\n\nimport App from './App'\n\nReactDOM.render(<App />, document.querySelector('#root'))\n"],"sourceRoot":""}