{"version":3,"sources":["components/sidebar.js","pages/home-components/posts.js","settings.js","utils.js","pages/home-components/profiles.js","components/header.js","pages/home.js","pages/notifications.js","pages/messages/websocket.js","pages/messages/chat.js","pages/messages/messages.js","pages/myprofile.js","pages/settings.js","pages/home-components/profile.js","App.js","index.js"],"names":["Sidebar","props","className","to","style","textDecoration","notificationsNumber","id","Posts","type","placeholder","marginRight","width","marginBottom","borderRadius","SERVER_URL","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","handleLogout","window","confirm","location","replace","Profiles","useState","profiles","setProfiles","search","setSearch","useEffect","url","fetch","then","response","json","data","catch","e","console","log","handleRelationshipUpdate","pk","btn","target","innerHTML","dataset","method","headers","body","JSON","stringify","cancelFriendRequest","onChange","value","map","profile","key","slug","src","photo","color","first_name","last_name","user","username","bio","data-pk","onClick","Header","backArrow","class","history","back","page","Home","setPage","pages","title","Notifications","invites","setInvites","replyRequest","requestBody","senderid","reply","updateNotificationsNumber","getElementById","removeChild","sender","justifyContent","data-senderid","data-reply","marginTop","WebSocketService","callbacks","this","socketRef","instance","chatUrl","path","WebSocket","onopen","socketNewMessage","command","onmessage","onerror","message","onclose","connect","close","parsedData","parse","Object","keys","messages","chatId","sendMessage","from","content","messagesCallback","newMessageCallback","send","err","readyState","WebSocketInstance","getInstance","Chat","messageChangeHandler","event","setState","sendMessageHandler","preventDefault","messageObject","state","newChatMessage","renderTimestamp","timestamp","timeDiff","Math","round","Date","getTime","renderMessages","currentUser","arr","author","scrollToBottom","querySelector","chatLog","scrollTop","scrollHeight","handleComponentChange","otherUsername","otherProfile","initialiseChat","waitForSocketConnection","addCallbacks","setMessages","bind","addMessage","fetchMessages","callback","component","setTimeout","reverse","newProps","disconnect","height","onSubmit","position","right","fontSize","React","Component","Messages","activeChatsProfiles","participants","other_username","match","params","alt","marginLeft","MyProfile","setProfile","isEditing","setIsEditing","profilePhotoStyle","display","transform","Modal","show","onHide","size","closeButton","Title","Body","action","padding","accept","files","htmlFor","email","gender","defaultValue","birth_date","Footer","submit","created","join","friends","Settings","Profile","useParams","App","setNotificationsNumber","render","exact","ReactDOM"],"mappings":"uOAGe,SAASA,EAAQC,GAC5B,OACI,yBAAKC,UAAU,WACX,kBAAC,IAAD,CAAMC,GAAG,IAAIC,MAAO,CAAEC,eAAgB,SAClC,uCAEJ,4BACI,kBAAC,IAAD,CAAMF,GAAG,IAAIC,MAAO,CAAEC,eAAgB,SAClC,4BAAI,uBAAGH,UAAU,gBAAjB,SAEJ,kBAAC,IAAD,CAAMC,GAAG,sBAAgBC,MAAO,CAAEC,eAAgB,SAC9C,4BAAI,uBAAGH,UAAU,gBAAjB,qBAA8CD,EAAMK,oBAA2B,uBAAGC,GAAG,wBAAwBN,EAAMK,qBAAzC,KAE9E,kBAAC,IAAD,CAAMH,GAAG,aAAaC,MAAO,CAAEC,eAAgB,SAC3C,4BAAI,uBAAGH,UAAU,oBAAjB,cAEJ,kBAAC,IAAD,CAAMC,GAAG,UAAUC,MAAO,CAAEC,eAAgB,SACxC,4BAAI,uBAAGH,UAAU,gBAAjB,WAEJ,kBAAC,IAAD,CAAMC,GAAG,uBAAiBC,MAAO,CAAEC,eAAgB,SAC/C,4BAAI,uBAAGH,UAAU,eAAjB,0BCrBL,SAASM,IACpB,OACI,oCACI,yBAAKN,UAAU,2BACX,yBAAKA,UAAU,cACX,2BAAOO,KAAK,OAAOP,UAAU,eAAeQ,YAAY,6BAA0BN,MAAO,CAAEO,YAAa,MAAOC,MAAO,WACtH,4BAAQV,UAAU,kBAAkBE,MAAO,CAAES,aAAc,OAAQC,aAAc,QAAjF,YAGR,yBAAKZ,UAAU,gBCX3B,IAAMa,EAAa,wBCEbC,EAEN,SAAmBC,GACjB,IAAIC,EAAc,KAClB,GAAIC,SAASC,QAA8B,KAApBD,SAASC,OAE9B,IADA,IAAMC,EAAUF,SAASC,OAAOE,MAAM,KAC7BC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAAK,CACvC,IAAMH,EAASC,EAAQE,GAAGE,OAE1B,GAAIL,EAAOM,UAAU,EAAGT,EAAKO,OAAS,KAAQP,EAAO,IAAM,CACzDC,EAAcS,mBAAmBP,EAAOM,UAAUT,EAAKO,OAAS,IAChE,OAIN,OAAON,EAfSU,CAAU,aAkB5B,SAASC,IACMC,OAAOC,QAAQ,uEAE1BD,OAAOE,SAASC,QAAhB,UAA2BlB,EAA3B,YClBW,SAASmB,IAAY,IAAD,EACCC,mBAAS,IADV,mBACxBC,EADwB,KACdC,EADc,OAEHF,mBAAS,IAFN,mBAExBG,EAFwB,KAEhBC,EAFgB,KAI/BC,qBAAU,WACN,IAAIC,EAEAA,EADW,KAAXH,EACG,UAAMvB,EAAN,6BAEA,UAAMA,EAAN,8BAAsCuB,GAE7CI,MAAMD,GACDE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFT,EAAYS,MAEfC,OAAM,SAAAC,GAAC,OAAIC,QAAQC,IAAIF,QAC7B,CAACV,IAEJ,IA0BMa,EAA2B,SAAAH,GAC7B,IA3BsBI,EA2BhBC,EAAML,EAAEM,OACQ,cAAlBD,EAAIE,WA5BcH,EA6BAC,EAAIG,QAAQJ,GA5BlCV,MAAM,GAAD,OAAI3B,EAAJ,oCAAkD,CACnD0C,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAe1C,GAEnB2C,KAAMC,KAAKC,UAAUT,KAExBT,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIG,QAAQC,IAAIJ,MAoBtBO,EAAIE,UAAY,aAChBF,EAAInD,UAAY,qBAlBI,SAAAkD,GACxBV,MAAM,GAAD,OAAI3B,EAAJ,sCAAoD,CACrD0C,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAe1C,GAEnB2C,KAAMC,KAAKC,UAAUT,KAExBT,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIG,QAAQC,IAAIJ,MAUtBgB,CAAoBT,EAAIG,QAAQJ,IAChCC,EAAIE,UAAY,YAChBF,EAAInD,UAAY,sBAIxB,OACI,oCACI,yBAAKA,UAAU,2BACX,yBAAKA,UAAU,OACX,2BAAOO,KAAK,OAAOP,UAAU,eAAeQ,YAAY,YAAYN,MAAO,CAAEQ,MAAO,SAAWmD,SAAU,SAAAf,GAAC,OAAIT,EAAUS,EAAEM,OAAOU,YAGzI,yBAAK9D,UAAU,cACVkC,EAAWA,EAAS6B,KAAI,SAAAC,GACrB,OACI,wBAAIhE,UAAU,8BAA8BiE,IAAKD,EAAQ3D,IACrD,yBAAKL,UAAU,kCACX,yBAAKA,UAAU,eACX,kBAAC,IAAD,CAAMC,GAAE,gBAAW+D,EAAQE,OACvB,yBAAKC,IAAG,UAAKtD,GAAL,OAAkBmD,EAAQI,UAEtC,yBAAKpE,UAAU,qBACX,kBAAC,IAAD,CAAMC,GAAE,gBAAW+D,EAAQE,MAAQhE,MAAO,CAAEmE,MAAO,SAC/C,gCAASL,EAAQM,WAAjB,IAA8BN,EAAQO,YAE1C,uBAAGvE,UAAU,kBAAb,IAAgCgE,EAAQQ,KAAKC,YAGrD,yBAAKzE,UAAU,eACVgE,EAAQU,KAEb,yBAAK1E,UAAU,eACX,4BAAQA,UAAU,oBAAoB2E,UAASX,EAAQQ,KAAKnE,GAAIuE,QAAS3B,GAAzE,mBAOf,uCC9FN,SAAS4B,EAAO9E,GAC3B,OACI,yBAAKC,UAAU,oBACTD,EAAM+E,UAAiB,uBAAGC,MAAM,uCAAuCH,QAAS,kBAAMhD,OAAOoD,QAAQC,UAAnF,GACpB,gCAASlF,EAAMmF,MACf,uBAAGlF,UAAU,SAAS4E,QAASjD,GAA/B,SCHG,SAASwD,IAAQ,IAAD,EACHlD,mBAAS,UADN,mBACpBiD,EADoB,KACdE,EADc,KAErBC,EAAQ,CACV,OAAU,kBAACrD,EAAD,MACV,MAAS,kBAAC1B,EAAD,OAKb,OAFAW,SAASqE,MAAQ,gBAGb,oCACI,kBAACT,EAAD,CAAQK,KAAK,SACb,yBAAKlF,UAAU,WACX,4BAAQO,KAAK,SAASP,UAAU,kBAAkBE,MAAO,CAAEO,YAAa,OAAQG,aAAc,QAAUgE,QAAS,kBAAMQ,EAAiB,WAATF,EAAoB,QAAU,YAC/I,WAATA,EAAoB,YAAc,cAEtCG,EAAMH,KCfR,SAASK,EAAcxF,GAAQ,IAAD,EACXkC,mBAAS,IADE,mBAClCuD,EADkC,KACzBC,EADyB,KAGzCxE,SAASqE,MAAQ,8BAEjBhD,qBAAU,WACNE,MAAM,GAAD,OAAI3B,EAAJ,2BACA4B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI6C,EAAW7C,QAC9B,IAEH,IAAM8C,EAAe,SAAA5C,GACjB,IAAMK,EAAML,EAAEM,OACRuC,EAAc,CAChB,SAAYxC,EAAIG,QAAQsC,SACxB,MAASzC,EAAIG,QAAQuC,OAEzBrD,MAAM,GAAD,OAAI3B,EAAJ,qCAAmD,CACpD0C,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAe1C,GAEnB2C,KAAMC,KAAKC,UAAUgC,KAEpBlD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFG,QAAQC,IAAIJ,GACZ7C,EAAM+F,+BAEd7E,SAAS8E,eAAe,uBAAuBC,YAAY/E,SAAS8E,eAAe5C,EAAIG,QAAQsC,YAGnG,OACI,oCACI,kBAACf,EAAD,CAAQK,KAAK,uBACb,yBAAKlF,UAAU,WACX,yBAAKA,UAAU,aAAaK,GAAG,uBAC1BmF,EAAQlE,OAASkE,EAAQzB,KAAI,SAAA1C,GAC1B,OACI,wBAAIrB,UAAU,8BAA8BK,GAAIgB,EAAE4E,OAAO5F,GAAI4D,IAAK5C,EAAE4E,OAAO5F,IACvE,yBAAKL,UAAU,kCACX,yBAAKA,UAAU,eACX,kBAAC,IAAD,CAAMC,GAAE,gBAAWoB,EAAE4E,OAAO/B,OACxB,yBAAKC,IAAG,UAAKtD,GAAL,OAAkBQ,EAAE4E,OAAO7B,UAEvC,yBAAKpE,UAAU,qBACX,kBAAC,IAAD,CAAMC,GAAE,gBAAWoB,EAAE4E,OAAO/B,MAAQhE,MAAO,CAAEmE,MAAO,SAChD,gCAAShD,EAAE4E,OAAO3B,WAAlB,IAA+BjD,EAAE4E,OAAO1B,YAE5C,uBAAGvE,UAAU,kBAAb,IAAgCqB,EAAE4E,OAAOzB,KAAKC,YAGtD,yBAAKzE,UAAU,eACVqB,EAAE4E,OAAOvB,KAEd,yBAAK1E,UAAU,cAAcE,MAAO,CAAEgG,eAAgB,kBAClD,4BAAQlG,UAAU,+BAA+BmG,gBAAe9E,EAAE4E,OAAO5F,GAAI+F,aAAW,SAASxB,QAASc,GAA1G,aACA,4BAAQ1F,UAAU,4BAA4BmG,gBAAe9E,EAAE4E,OAAO5F,GAAI+F,aAAW,UAAUxB,QAASc,GAAxG,iBAKf,wBAAIxF,MAAO,CAAEmG,UAAW,UAAxB,yD,oDCnEnBC,E,WAWF,aAAe,yBATfC,UAAY,GAUVC,KAAKC,UAAY,K,+DAJjB,OAHKH,EAAiBI,WACpBJ,EAAiBI,SAAW,IAAIJ,GAE3BA,EAAiBI,a,6CAOlBC,GAAU,IAAD,OACTC,EAAI,UNjBG,sBMiBH,oBAA4BD,EAA5B,KACVH,KAAKC,UAAY,IAAII,UAAUD,GAC/BJ,KAAKC,UAAUK,OAAS,WACtB/D,QAAQC,IAAI,mBAEdwD,KAAKO,iBAAiBrD,KAAKC,UAAU,CACnCqD,QAAS,oBAEXR,KAAKC,UAAUQ,UAAY,SAAAnE,GACzB,EAAKiE,iBAAiBjE,EAAEF,OAE1B4D,KAAKC,UAAUS,QAAU,SAAApE,GACvBC,QAAQC,IAAIF,EAAEqE,UAEhBX,KAAKC,UAAUW,QAAU,WACvBrE,QAAQC,IAAI,iCACZ,EAAKqE,QAAQV,M,mCAKXH,KAAKC,WAAWD,KAAKC,UAAUa,U,uCAGpB1E,GACf,IAAM2E,EAAa7D,KAAK8D,MAAM5E,GACxBoE,EAAUO,EAAWP,QACgB,IAAvCS,OAAOC,KAAKlB,KAAKD,WAAWjF,SAGhB,aAAZ0F,GACFR,KAAKD,UAAUS,GAASO,EAAWI,UAErB,gBAAZX,GACFR,KAAKD,UAAUS,GAASO,EAAWJ,Y,oCAIzB1C,EAAUmD,GACtBpB,KAAKqB,YAAY,CACfb,QAAS,iBACTvC,SAAUA,EACVmD,OAAQA,M,qCAIGT,GACbX,KAAKqB,YAAY,CACfb,QAAS,cACTc,KAAMX,EAAQW,KACdC,QAASZ,EAAQY,QACjBH,OAAQT,EAAQS,W,mCAIPI,EAAkBC,GAC7BzB,KAAKD,UAAL,SAA6ByB,EAC7BxB,KAAKD,UAAL,YAAgC0B,I,kCAGtBrF,GACV,IACE4D,KAAKC,UAAUyB,KAAKxE,KAAKC,UAAL,eAAoBf,KACxC,MAAOuF,GACPpF,QAAQC,IAAImF,EAAIhB,Y,8BAKlB,OAAOX,KAAKC,UAAYD,KAAKC,UAAU2B,WAAa,M,KArFpD9B,EACKI,SAAW,KAwFpB,IAEe2B,EAFW/B,EAAiBgC,cCwG9BC,E,kDA9KX,WAAYxI,GAAQ,IAAD,8BACf,cAAMA,IAgCVyI,qBAAuB,SAAAC,GACnB,EAAKC,SAAS,CAAEvB,QAASsB,EAAMrF,OAAOU,SAlCvB,EAqCnB6E,mBAAqB,SAAA7F,GACjBA,EAAE8F,iBACF,IAAMC,EAAgB,CAClBf,KAAM,EAAK/H,MAAM0E,SACjBsD,QAAS,EAAKe,MAAM3B,QACpBS,OAAQ,EAAK7H,MAAM6H,QAEvB7E,QAAQC,IAAI6F,GACZR,EAAkBU,eAAeF,GACjC,EAAKH,SAAS,CAAEvB,QAAS,MA9CV,EAiDnB6B,gBAAkB,SAAAC,GACd,IACMC,EAAWC,KAAKC,QACjB,IAAIC,MAAOC,UAAY,IAAID,KAAKJ,GAAWK,WAAa,KAuB7D,OArBIJ,EAAW,EAEF,iBACW,IAAbA,EACE,oBACFA,EAAW,IAAMA,EAAW,EAE7B,UAAMA,EAAN,qBACc,OAAbA,EACE,kBACFA,EAAW,MAAWA,EAAW,GAElC,UAAMC,KAAKC,MAAMF,EAAW,IAA5B,mBACc,QAAbA,EACE,iBACFA,EAAW,OAAgBA,EAAW,KAEvC,UAAMC,KAAKC,MAAMF,EAAQ,MAAzB,kBAEA,UAAM,IAAIG,KAAKJ,KAzEV,EA8EnBM,eAAiB,SAAA5B,GACb,IAAM6B,EAAc,EAAKzJ,MAAM0E,SAC/B,OAAOkD,EAAS5D,KAAI,SAACoD,EAAS9F,EAAGoI,GAAb,OAChB,wBACIxF,IAAKkD,EAAQ9G,GACbL,UAAWmH,EAAQuC,SAAWF,EAAc,OAAS,YAErD,2BACKrC,EAAQY,QACT,6BACA,+BAAQ,EAAKiB,gBAAgB7B,EAAQ8B,kBAxFlC,EA8FnBU,eAAiB,WACb,GAAI1I,SAAS2I,cAAc,aAAc,CACrC,IAAMC,EAAU5I,SAAS2I,cAAc,aACvCC,EAAQC,UAAYD,EAAQE,eAjGjB,EAqGnBC,sBAAwB,WACpB,EAAKL,kBACD,EAAKb,MAAMmB,eAAmB,EAAKnB,MAAMoB,cAAgB,EAAKpB,MAAMoB,aAAa1F,KAAKC,WAAa,EAAKqE,MAAMmB,eAC9GzH,MAAM,GAAD,OAAI3B,EAAJ,6BAAmC,EAAKiI,MAAMmB,gBAC9CxH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAK8F,SAAS,CACxBwB,aAActH,QAzG1B,EAAKkG,MAAQ,CACT3B,QAAS,GACTQ,SAAU,GACVsC,cAAe,EAAKlK,MAAMkK,cAC1BC,aAAc,MAElB,EAAKC,iBARU,E,6DAdD,IAAD,OACb3D,KAAK4D,yBAAwB,WACzB/B,EAAkBgC,aACd,EAAKC,YAAYC,KAAK,GACtB,EAAKC,WAAWD,KAAK,IAEzBlC,EAAkBoC,cACd,EAAK1K,MAAM0E,SACX,EAAK1E,MAAM6H,WAGfpB,KAAKzG,MAAM6H,QAAQS,EAAkBhB,QAAQb,KAAKzG,MAAM6H,Y,6DAcxC8C,GACpB,IAAMC,EAAYnE,KAClBoE,YAAW,WACP,GAAkC,IAA9BvC,EAAkBS,QAGlB,OAFA/F,QAAQC,IAAI,2BACZ0H,IAGA3H,QAAQC,IAAI,0BACZ2H,EAAUP,wBAAwBM,KAEvC,O,kCAGK/C,GACRnB,KAAKkC,SAAS,CAAEf,SAAUA,EAASkD,c,iCAG5B1D,GACPX,KAAKkC,SAAS,CAAEf,SAAS,GAAD,mBAAMnB,KAAKsC,MAAMnB,UAAjB,CAA2BR,Q,0CAmFnDX,KAAKwD,0B,2CAILxD,KAAKwD,0B,gDAGiBc,GAAW,IAAD,OAC5BtE,KAAKzG,MAAM6H,SAAWkD,EAASlD,SAC/BS,EAAkB0C,aAClBvE,KAAK4D,yBAAwB,WACzB/B,EAAkBoC,cACd,EAAK1K,MAAM0E,SACXqG,EAASlD,WAGjBS,EAAkBhB,QAAQyD,EAASlD,SAEnCpB,KAAKsC,MAAMmB,eAAiBa,EAASb,eACrCzD,KAAKkC,SAAS,CACVuB,cAAea,EAASb,kB,+BAMhC,OACI,oCACKzD,KAAKsC,MAAMoB,aACR,yBAAKlK,UAAU,8EACX,yBAAKA,UAAU,uBACX,kBAAC,IAAD,CAAMC,GAAG,gBACL,yBAAKkE,IAAG,UAAKtD,GAAL,OAAkB2F,KAAKsC,MAAMoB,aAAa9F,OAASpE,UAAU,wBAEzE,yBAAKA,UAAU,uCAAuCE,MAAO,CAAE8K,OAAQ,SACnE,gCAASxE,KAAKsC,MAAMoB,aAAa5F,WAAjC,IAA8CkC,KAAKsC,MAAMoB,aAAa3F,WACtE,uBAAGvE,UAAU,kBAAb,IAAgCwG,KAAKsC,MAAMoB,aAAa1F,KAAKC,YAGrE,yBAAKpE,GAAG,YACHmG,KAAKsC,MAAMnB,SAAWnB,KAAK+C,eAAe/C,KAAKsC,MAAMnB,UAAY,IAEtE,0BAAM3H,UAAU,yBAAyBiL,SAAUzE,KAAKmC,oBACpD,2BAAOnI,YAAY,WAAWR,UAAU,gBAAgBK,GAAG,qBAAqByD,MAAO0C,KAAKsC,MAAM3B,QAAStD,SAAU2C,KAAKgC,uBAC1H,4BAAQxI,UAAU,kBAAkBK,GAAG,uBACnC,uBAAG0E,MAAM,qBAAqB7E,MAAO,CAAEgL,SAAU,WAAYC,MAAO,YAIhF,yBAAKnL,UAAU,6EACX,6BACI,4BAAQE,MAAO,CAAEkL,SAAU,WAA3B,+CACA,uBAAGpL,UAAU,kBAAb,8CACA,4BAAQA,UAAU,mBAAlB,wB,GArLTqL,IAAMC,WCmFVC,E,kDAjFX,WAAYxL,GAAQ,IAAD,8BACf,cAAMA,IACD+I,MAAQ,CACTrE,SAAU,KACVmD,OAAQ,KACR4D,oBAAqB,MALV,E,sEASOV,GAAW,IAAD,OAChC,GAAIA,IAAatE,KAAKzG,MAAtB,CACA,IAAM0L,EAAe,CAAEhH,SAAU+B,KAAKsC,MAAMrE,SAAUiH,eAAgBZ,EAASa,MAAMC,OAAO3B,eAC5FzH,MAAM,GAAD,OAAI3B,EAAJ,6BAAmC6C,KAAKC,UAAU8H,KAClDhJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAK8F,SAAS,CACxBd,OAAQhF,EAAI,gB,8CAIC,IAAD,OACf4D,KAAKsC,MAAMrE,UACZjC,MAAM,GAAD,OAAI3B,EAAJ,6BACA4B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAK8F,SAAS,CACxBjE,SAAU7B,EAAK6B,cAGtB+B,KAAKsC,MAAM0C,qBAAuBhF,KAAKsC,MAAM0C,sBAAwB,KACtEzI,QAAQC,IAAI,eACZR,MAAM,GAAD,OAAI3B,EAAJ,oCACA4B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACG,EAAKkG,MAAMrE,WAChB1B,QAAQC,IAAIJ,GACZ,EAAK8F,SAAS,CACV8C,oBAAqB5I,W,2CAOrC3B,SAASqE,MAAQ,qBACjBkB,KAAKwD,0B,2CAILxD,KAAKwD,0B,+BAIL,OACI,oCACI,kBAACnF,EAAD,CAAQK,KAAK,cACb,yBAAKlF,UAAU,mCACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,0BACX,2BAAOQ,YAAY,oBAAoBR,UAAU,kBAErD,yBAAKA,UAAU,8BACVwG,KAAKsC,MAAM0C,qBAAuBhF,KAAKsC,MAAM0C,oBAAoBzH,KAAI,SAAAC,GAElE,OADAjB,QAAQC,IAAI,YAAagB,GAErB,kBAAC,IAAD,CAAM/D,GAAE,qBAAgB+D,EAAQQ,KAAKC,UAAYvE,MAAO,CAAEmE,MAAO,OAAQlE,eAAgB,SACrF,wBAAIH,UAAU,+BACV,yBAAKmE,IAAG,UAAKtD,GAAL,OAAkBmD,EAAQI,OAASyH,IAAI,GAAG3L,MAAO,CAAEU,aAAc,SACzE,gCAASoD,EAAQM,WAAjB,IAA8BN,EAAQO,WACtC,uBAAGvE,UAAU,iBAAiBE,MAAO,CAAE4L,WAAY,QAAnD,IAA8D9H,EAAQQ,KAAKC,iBAOnG,kBAAC,EAAD,CAAMA,SAAU+B,KAAKsC,MAAMrE,SAAUwF,cAAezD,KAAKzG,MAAM4L,MAAMC,OAAO3B,cAAerC,OAAQpB,KAAKsC,MAAMlB,e,GA3E3GyD,IAAMC,W,QCDd,SAASS,IAAa,IAAD,EACF9J,mBAAS,MADP,mBACzB+B,EADyB,KAChBgI,EADgB,OAEE/J,oBAAS,GAFX,mBAEzBgK,EAFyB,KAEdC,EAFc,KAG1BC,EAAoB,CACtBvL,aAAc,MACdwL,QAAS,eACTC,UAAW,aACX1L,aAAc,QAWlB,OARAM,SAASqE,MAAQ,kBAEjBhD,qBAAU,WACNE,MAAM,GAAD,OAAI3B,EAAJ,2BACA4B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIoJ,EAAWpJ,QAC9B,IAGC,oCACI,kBAACiC,EAAD,CAAQK,KAAK,WACZlB,EAAU,yBAAKhE,UAAU,WACtB,kBAACsM,EAAA,EAAD,CAAOC,KAAMN,EACTO,OAAQ,kBAAMN,GAAa,IAC3BO,KAAK,MACL,kBAACH,EAAA,EAAMzH,OAAP,CAAc6H,aAAW,GACrB,kBAACJ,EAAA,EAAMK,MAAP,uBAEJ,kBAACL,EAAA,EAAMM,KAAP,KACI,0BAAMC,OAAM,UAAKhM,EAAL,mBAAkCR,GAAG,sBAAsBkD,OAAO,QAC1E,2BAAOhD,KAAK,SAASQ,KAAK,sBAAsB+C,MAAOhD,IACvD,yBAAKd,UAAU,+DAA+DE,MAAO,CAAE4M,QAAS,SAC5F,yBAAK3I,IAAG,UAAKtD,GAAL,OAAkBmD,EAAQI,OAASlE,MAAOiM,IAClD,2BAAO5L,KAAK,OAAOwM,OAAO,uBAAuBhM,KAAK,gBAAgB8C,SAAU,SAAAf,GAAC,OAAIC,QAAQC,IAAIF,EAAEM,OAAO4J,WAE9G,6BACI,2BAAOC,QAAQ,aAAajN,UAAU,iBAAtC,SACA,2BAAOA,UAAU,eAAeO,KAAK,OAAOQ,KAAK,aAAaV,GAAG,aAAaG,YAAawD,EAAQM,cAEvG,6BACI,2BAAO2I,QAAQ,YAAYjN,UAAU,iBAArC,cACA,2BAAOA,UAAU,eAAeO,KAAK,OAAOQ,KAAK,YAAYV,GAAG,YAAYG,YAAawD,EAAQO,aAErG,6BACI,2BAAO0I,QAAQ,WAAWjN,UAAU,iBAApC,uBACA,2BAAOA,UAAU,eAAeO,KAAK,OAAOQ,KAAK,WAAWV,GAAG,WAAWG,YAAawD,EAAQQ,KAAKC,WACpG,0BAAMpE,GAAG,kBAAT,oCAEJ,6BACI,2BAAO4M,QAAQ,QAAQjN,UAAU,iBAAjC,UACA,2BAAOA,UAAU,eAAeO,KAAK,QAAQQ,KAAK,QAAQV,GAAG,QAAQG,YAAawD,EAAQkJ,SAE9F,6BACI,2BAAOD,QAAQ,SAASjN,UAAU,iBAAlC,cACA,4BAAQA,UAAU,eAAee,KAAK,SAASV,GAAG,SAASG,YAAawD,EAAQmJ,QAC5E,4BAAQrJ,MAAM,QAAd,aACA,4BAAQA,MAAM,UAAd,YACA,4BAAQA,MAAM,SAAd,WAGR,6BACI,2BAAOmJ,QAAQ,aAAajN,UAAU,iBAAtC,uBACA,2BAAOA,UAAU,eAAeO,KAAK,OAAOQ,KAAK,aAAaV,GAAG,aAAa+M,aAAcpJ,EAAQqJ,cAExG,6BACI,2BAAOJ,QAAQ,MAAMjN,UAAU,iBAA/B,QACA,2BAAOA,UAAU,eAAeO,KAAK,QAAQQ,KAAK,MAAMV,GAAG,MAAMG,YAAawD,EAAQU,SAIlG,kBAAC4H,EAAA,EAAMgB,OAAP,KACI,4BAAQtN,UAAU,eAAe4E,QAAS,kBAAMsH,GAAa,KAA7D,UACA,4BAAQlM,UAAU,kBAAkB4E,QAAS,kBAAM3D,SAAS2I,cAAc,4BAA4B2D,WAAtG,YAGR,yBAAKvN,UAAU,4EACX,yBAAKA,UAAU,wCACX,uBAAGE,MAAO,CAAE4M,QAAS,SAAU,yBAAK3I,IAAG,UAAKtD,GAAL,OAAkBmD,EAAQI,OAASlE,MAAOiM,KACjF,uBAAGjM,MAAO,CAAES,aAAc,IAAK,gCAASqD,EAAQM,WAAjB,IAA8BN,EAAQO,YACrE,uBAAGvE,UAAU,iBAAiBE,MAAO,CAAEmG,UAAW,IAAlD,IAAyDrC,EAAQQ,KAAKC,UACtE,2BAAIT,EAAQU,KACZ,uBAAG1E,UAAU,kBACT,uBAAGA,UAAU,wBADjB,cACuDgE,EAAQwJ,QAAQpM,MAAM,KAAKyJ,UAAU4C,KAAK,MAEjG,2BAAG,gCAASzJ,EAAQ0J,QAAQpM,QAA5B,IAAyE,IAA3B0C,EAAQ0J,QAAQpM,OAAe,QAAU,WAE3F,6BACI,4BAAQtB,UAAU,oBAAoBO,KAAK,SAASqE,QAAS,kBAAMsH,GAAa,KAAhF,oBAGF,sCC7FP,SAASyB,IAIpB,OAFA1M,SAASqE,MAAQ,+BAGb,oCACI,kBAACT,EAAD,CAAQK,KAAK,wBACb,yBAAKlF,UAAU,WAAf,wBCJG,SAAS4N,IAAW,IACvB1J,EAAS2J,cAAT3J,KADsB,EAEAjC,mBAAS,MAFT,mBAEvB+B,EAFuB,KAEdgI,EAFc,KAI9B1J,qBAAU,WACNE,MAAM,GAAD,OAAI3B,EAAJ,6BAAmCqD,IACnCzB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIoJ,EAAWpJ,QAC9B,IAgDH,OACI,oCACI,kBAACiC,EAAD,CAAQK,KAAMlB,EAAO,UAAMA,EAAQM,WAAd,YAA4BN,EAAQO,WAAc,SAAUO,WAAW,IAC1Fd,EAAkB,oCAChB,yBAAKhE,UAAU,WACX,yBAAKA,UAAU,4EACX,yBAAKA,UAAU,wCACX,uBAAGE,MAAO,CAAE4M,QAAS,SAAU,yBAAK3I,IAAG,UAAKtD,GAAL,OAAkBmD,EAAQI,OAASlE,MArDxE,CACtBU,aAAc,MACdwL,QAAS,eACTC,UAAW,aACX1L,aAAc,WAkDM,uBAAGT,MAAO,CAAES,aAAc,IAAK,gCAASqD,EAAQM,WAAjB,IAA8BN,EAAQO,YACrE,uBAAGvE,UAAU,iBAAiBE,MAAO,CAAEmG,UAAW,IAAlD,IAAyDrC,EAAQQ,KAAKC,UACtE,2BAAIT,EAAQU,KACZ,uBAAG1E,UAAU,kBACT,uBAAGA,UAAU,wBADjB,cACuDgE,EAAQwJ,QAAQpM,MAAM,KAAKyJ,UAAU4C,KAAK,MAEjG,2BAAG,gCAASzJ,EAAQ0J,QAAQpM,QAA5B,IAAyE,IAA3B0C,EAAQ0J,QAAQpM,OAAe,QAAU,WAE3F,6BACI,4BAAQtB,UAAU,oBAAoB2E,UAASX,EAAQQ,KAAKnE,GAAIuE,QA9BvD,SAAA9B,GAC7B,IA3BsBI,EA2BhBC,EAAML,EAAEM,OACQ,cAAlBD,EAAIE,WA5BcH,EA6BAC,EAAIG,QAAQJ,GA5BlCV,MAAM,GAAD,OAAI3B,EAAJ,oCAAkD,CACnD0C,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAe1C,GAEnB2C,KAAMC,KAAKC,UAAUT,KAEpBT,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIG,QAAQC,IAAIJ,MAoB1BO,EAAIE,UAAY,aAChBF,EAAInD,UAAY,qBAlBI,SAAAkD,GACxBV,MAAM,GAAD,OAAI3B,EAAJ,sCAAoD,CACrD0C,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAe1C,GAEnB2C,KAAMC,KAAKC,UAAUT,KAEpBT,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIG,QAAQC,IAAIJ,MAU1BgB,CAAoBT,EAAIG,QAAQJ,IAChCC,EAAIE,UAAY,YAChBF,EAAInD,UAAY,uBAqBA,iBAdJ,sCCpDT,SAAS8N,IAAO,IAAD,EAC4B7L,mBAAS,GADrC,mBACnB7B,EADmB,KACE2N,EADF,KAG1BzL,qBAAU,WACNwD,MACD,IAEH,IAAMA,EAA4B,WAC9BtD,MAAM,GAAD,OAAI3B,EAAJ,2BACA4B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAImL,EAAuBnL,EAAKtB,YAGlD,OACI,kBAAC,IAAD,KACI,kBAACxB,EAAD,CAASM,oBAAqBA,IAC9B,yBAAKJ,UAAU,gBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO4G,KAAK,sBAAgBoH,OAAQ,SAAAjO,GAAK,OACrC,kBAACwF,EAAD,iBAAmBxF,EAAnB,CAA0B+F,0BAA2BA,QAEzD,kBAAC,IAAD,CAAOc,KAAK,aAAaqH,OAAK,EAACtD,UAAWY,IAC1C,kBAAC,IAAD,CAAO3E,KAAK,4BAA4B+D,UAAWY,IACnD,kBAAC,IAAD,CAAO3E,KAAK,UAAU+D,UAAWoB,IACjC,kBAAC,IAAD,CAAOnF,KAAK,uBAAiB+D,UAAWgD,IACxC,kBAAC,IAAD,CAAO/G,KAAK,cAAc+D,UAAWiD,IACrC,kBAAC,IAAD,CAAOhH,KAAK,IAAI+D,UAAWxF,OCjC/C+I,IAASF,OAAO,kBAACF,EAAD,MAAS7M,SAAS2I,cAAc,Y","file":"static/js/main.0d553085.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Sidebar(props) {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n                <h2>Napker</h2>\r\n            </Link>\r\n            <ul>\r\n                <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-home\"/>Home</li>\r\n                </Link>\r\n                <Link to=\"/notificações\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-bell\"/>Notificações{!props.notificationsNumber ? '' : <p id=\"notifications-number\">{props.notificationsNumber}</p>}</li>\r\n                </Link>\r\n                <Link to=\"/mensagens\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-envelope\"/>Mensagens</li>\r\n                </Link>\r\n                <Link to=\"/perfil\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-user\"/>Perfil</li>\r\n                </Link>\r\n                <Link to=\"/configurações\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-cog\"/>Configurações</li>\r\n                </Link>\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nexport default function Posts() {\r\n    return (\r\n        <>\r\n            <div className=\"form-row d-inline-block\">\r\n                <div className=\"col d-flex\">\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"O que está acontecendo?\" style={{ marginRight: '5px', width: '400px' }} />\r\n                    <button className=\"btn btn-primary\" style={{ marginBottom: '20px', borderRadius: '5px' }}>Postar</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"list-group\">\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}","const SERVER_URL = 'http://127.0.0.1:8000'\r\nconst SOCKET_URL = 'ws://127.0.0.1:8000'\r\n\r\nexport {SERVER_URL, SOCKET_URL}","import { SERVER_URL } from './settings'\r\n\r\nconst csrftoken = getCookie('csrftoken')\r\n\r\nfunction getCookie(name) {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nfunction handleLogout() {\r\n  const bool = window.confirm('Sair do Napker?\\nVocê poderá entrar novamente quando quiser.')\r\n  if (bool) {\r\n    window.location.replace(`${SERVER_URL}/logout`)\r\n  }\r\n}\r\n\r\nexport { csrftoken, handleLogout };","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nexport default function Profiles() {\r\n    const [profiles, setProfiles] = useState([])\r\n    const [search, setSearch] = useState('')\r\n\r\n    useEffect(() => {\r\n        let url\r\n        if (search === '') {\r\n            url = `${SERVER_URL}/profile-api/profile-list`\r\n        } else {\r\n            url = `${SERVER_URL}/profile-api/users/${search}`\r\n        }\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setProfiles(data)\r\n            })\r\n            .catch(e => console.log(e))\r\n    }, [search])\r\n\r\n    const sendFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/send-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => console.log(data))\r\n    }\r\n\r\n    const cancelFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/cancel-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => console.log(data))\r\n    }\r\n\r\n    const handleRelationshipUpdate = e => {\r\n        const btn = e.target\r\n        if (btn.innerHTML === 'Solicitar') {\r\n            sendFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitado'\r\n            btn.className = 'btn btn-primary'\r\n        } else {\r\n            cancelFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitar'\r\n            btn.className = 'btn btn-secondary'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"form-row d-inline-block\">\r\n                <div className=\"col\">\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Pesquisar\" style={{ width: '400px' }} onChange={e => setSearch(e.target.value)} />\r\n                </div>\r\n            </div>\r\n            <div className=\"list-group\">\r\n                {profiles ? profiles.map(profile => {\r\n                    return (\r\n                        <li className=\"list-group-item profile-row\" key={profile.id}>\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                <div className=\"profile-col\">\r\n                                    <Link to={`/user/${profile.slug}`}>\r\n                                        <img src={`${SERVER_URL}${profile.photo}`} />\r\n                                    </Link>\r\n                                    <div className=\"main-profile-data\">\r\n                                        <Link to={`/user/${profile.slug}`} style={{ color: '#000' }}>\r\n                                            <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                        </Link>\r\n                                        <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"profile-col\">\r\n                                    {profile.bio}\r\n                                </div>\r\n                                <div className=\"profile-col\">\r\n                                    <button className=\"btn btn-secondary\" data-pk={profile.user.id} onClick={handleRelationshipUpdate}>\r\n                                        Solicitar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                }) : <></>}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { handleLogout } from '../utils'\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <div className=\"header fixed-top\">\r\n            {!props.backArrow ? '' : <i class=\"fas fa-arrow-left profile-left-arrow\" onClick={() => window.history.back()}/>}\r\n            <strong>{props.page}</strong>\r\n            <a className=\"logout\" onClick={handleLogout}>Sair</a>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport Posts from './home-components/posts'\r\nimport Profiles from './home-components/profiles'\r\nimport Header from '../components/header'\r\n\r\nexport default function Home() {\r\n    const [page, setPage] = useState('Perfis')\r\n    const pages = {\r\n        'Perfis': <Profiles />,\r\n        'Posts': <Posts />\r\n    }\r\n\r\n    document.title = 'Home / Napker'\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Home\" />\r\n            <div className=\"content\">\r\n                <button type=\"button\" className=\"btn btn-primary\" style={{ marginRight: '50px', borderRadius: '20px' }} onClick={() => setPage(page === 'Perfis' ? 'Posts' : 'Perfis')}>\r\n                    {page === 'Perfis' ? 'Ver posts' : 'Ver perfis'}\r\n                </button>\r\n                {pages[page]}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Header from '../components/header'\r\nimport { SERVER_URL } from '../settings'\r\nimport { csrftoken } from '../utils'\r\n\r\nexport default function Notifications(props) {\r\n    const [invites, setInvites] = useState([])\r\n\r\n    document.title = 'Notificações / Napker'\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myinvites`)\r\n            .then(response => response.json())\r\n            .then(data => setInvites(data))\r\n    }, [])\r\n\r\n    const replyRequest = e => {\r\n        const btn = e.target\r\n        const requestBody = {\r\n            'senderid': btn.dataset.senderid,\r\n            'reply': btn.dataset.reply\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/reply-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(requestBody)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                props.updateNotificationsNumber()\r\n            })\r\n        document.getElementById('friend-request-list').removeChild(document.getElementById(btn.dataset.senderid))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Notificações\" />\r\n            <div className=\"content\">\r\n                <div className=\"list-group\" id='friend-request-list'>\r\n                    {invites.length ? invites.map(i => {\r\n                        return (\r\n                            <li className=\"list-group-item profile-row\" id={i.sender.id} key={i.sender.id}>\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                    <div className=\"profile-col\">\r\n                                        <Link to={`/user/${i.sender.slug}`}>\r\n                                            <img src={`${SERVER_URL}${i.sender.photo}`} />\r\n                                        </Link>\r\n                                        <div className=\"main-profile-data\">\r\n                                            <Link to={`/user/${i.sender.slug}`} style={{ color: '#000' }}>\r\n                                                <strong>{i.sender.first_name} {i.sender.last_name}</strong>\r\n                                            </Link>\r\n                                            <p className=\"text-secondary\">@{i.sender.user.username}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"profile-col\">\r\n                                        {i.sender.bio}\r\n                                    </div>\r\n                                    <div className=\"profile-col\" style={{ justifyContent: 'space-between' }}>\r\n                                        <button className=\"btn btn-primary btn-reply-fr\" data-senderid={i.sender.id} data-reply='accept' onClick={replyRequest}>Confirmar</button>\r\n                                        <button className=\"btn btn-grey btn-reply-fr\" data-senderid={i.sender.id} data-reply='decline' onClick={replyRequest}>Excluir</button>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    }) : <h3 style={{ marginTop: '100px' }}>Você ainda não tem nenhuma notificação</h3>}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import { SOCKET_URL } from '../../settings'\r\n\r\nclass WebSocketService {\r\n    static instance = null;\r\n    callbacks = {};\r\n  \r\n    static getInstance() {\r\n      if (!WebSocketService.instance) {\r\n        WebSocketService.instance = new WebSocketService();\r\n      }\r\n      return WebSocketService.instance;\r\n    }\r\n  \r\n    constructor() {\r\n      this.socketRef = null;\r\n    }\r\n  \r\n    connect(chatUrl) {\r\n      const path = `${SOCKET_URL}/ws/chat/${chatUrl}/`;\r\n      this.socketRef = new WebSocket(path);\r\n      this.socketRef.onopen = () => {\r\n        console.log(\"WebSocket open\");\r\n      };\r\n      this.socketNewMessage(JSON.stringify({\r\n        command: 'fetch-messages'\r\n      }))\r\n      this.socketRef.onmessage = e => {\r\n        this.socketNewMessage(e.data);\r\n      };\r\n      this.socketRef.onerror = e => {\r\n        console.log(e.message);\r\n      };\r\n      this.socketRef.onclose = () => {\r\n        console.log(\"WebSocket closed let's reopen\");\r\n        this.connect(chatUrl);\r\n      };\r\n    }\r\n  \r\n    disconnect() {\r\n      if (this.socketRef) this.socketRef.close();\r\n    }\r\n  \r\n    socketNewMessage(data) {\r\n      const parsedData = JSON.parse(data);\r\n      const command = parsedData.command;\r\n      if (Object.keys(this.callbacks).length === 0) {\r\n        return;\r\n      }\r\n      if (command === \"messages\") {\r\n        this.callbacks[command](parsedData.messages);\r\n      }\r\n      if (command === \"new_message\") {\r\n        this.callbacks[command](parsedData.message);\r\n      }\r\n    }\r\n  \r\n    fetchMessages(username, chatId) {\r\n      this.sendMessage({\r\n        command: \"fetch_messages\",\r\n        username: username,\r\n        chatId: chatId\r\n      });\r\n    }\r\n  \r\n    newChatMessage(message) {\r\n      this.sendMessage({\r\n        command: \"new_message\",\r\n        from: message.from,\r\n        content: message.content,\r\n        chatId: message.chatId\r\n      });\r\n    }\r\n  \r\n    addCallbacks(messagesCallback, newMessageCallback) {\r\n      this.callbacks[\"messages\"] = messagesCallback;\r\n      this.callbacks[\"new_message\"] = newMessageCallback;\r\n    }\r\n  \r\n    sendMessage(data) {\r\n      try {\r\n        this.socketRef.send(JSON.stringify({ ...data }));\r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n    }\r\n  \r\n    state() {\r\n      return this.socketRef ? this.socketRef.readyState : 0\r\n    }\r\n  }\r\n  \r\n  const WebSocketInstance = WebSocketService.getInstance();\r\n  \r\n  export default WebSocketInstance;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../../settings'\r\nimport WebSocketInstance from './websocket'\r\n\r\nclass Chat extends React.Component {\r\n    initialiseChat() {\r\n        this.waitForSocketConnection(() => {\r\n            WebSocketInstance.addCallbacks(\r\n                this.setMessages.bind(this),\r\n                this.addMessage.bind(this)\r\n            )\r\n            WebSocketInstance.fetchMessages(\r\n                this.props.username,\r\n                this.props.chatId\r\n            );\r\n        });\r\n        if (this.props.chatId) WebSocketInstance.connect(this.props.chatId)\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            message: '',\r\n            messages: [],\r\n            otherUsername: this.props.otherUsername,\r\n            otherProfile: null\r\n        }\r\n        this.initialiseChat();\r\n    }\r\n\r\n    waitForSocketConnection(callback) {\r\n        const component = this;\r\n        setTimeout(function () {\r\n            if (WebSocketInstance.state() === 1) {\r\n                console.log(\"Connection is made\");\r\n                callback();\r\n                return;\r\n            } else {\r\n                console.log(\"wait for connection...\");\r\n                component.waitForSocketConnection(callback);\r\n            }\r\n        }, 100);\r\n    }\r\n\r\n    setMessages(messages) {\r\n        this.setState({ messages: messages.reverse() })\r\n    }\r\n\r\n    addMessage(message) {\r\n        this.setState({ messages: [...this.state.messages, message] })\r\n    }\r\n\r\n    messageChangeHandler = event => {\r\n        this.setState({ message: event.target.value });\r\n    };\r\n\r\n    sendMessageHandler = e => {\r\n        e.preventDefault();\r\n        const messageObject = {\r\n            from: this.props.username,\r\n            content: this.state.message,\r\n            chatId: this.props.chatId\r\n        };\r\n        console.log(messageObject)\r\n        WebSocketInstance.newChatMessage(messageObject);\r\n        this.setState({ message: \"\" });\r\n    };\r\n\r\n    renderTimestamp = timestamp => {\r\n        let prefix = \"\";\r\n        const timeDiff = Math.round(\r\n            (new Date().getTime() - new Date(timestamp).getTime()) / 60000\r\n        );\r\n        if (timeDiff < 1) {\r\n            // less than one minute ago\r\n            prefix = \"agora pouco...\";\r\n        } else if (timeDiff === 1) {\r\n            prefix = '1 minuto atrás'\r\n        } else if (timeDiff < 60 && timeDiff > 1) {\r\n            // less than sixty minutes ago\r\n            prefix = `${timeDiff} minutos atrás`;\r\n        } else if (timeDiff === 60 * 60) {\r\n            prefix = '1 hora atrás'\r\n        } else if (timeDiff < 24 * 60 && timeDiff > 60) {\r\n            // less than 24 hours ago\r\n            prefix = `${Math.round(timeDiff / 60)} horas atrás`;\r\n        } else if (timeDiff === 60 * 60 * 24) {\r\n            prefix = '1 dia atrás'\r\n        } else if (timeDiff < 31 * 24 * 60 && timeDiff > 24 * 60) {\r\n            // less than 7 days ago\r\n            prefix = `${Math.round(timeDiff / (60 * 24))} dias atrás`;\r\n        } else {\r\n            prefix = `${new Date(timestamp)}`;\r\n        }\r\n        return prefix;\r\n    };\r\n\r\n    renderMessages = messages => {\r\n        const currentUser = this.props.username;\r\n        return messages.map((message, i, arr) => (\r\n            <li\r\n                key={message.id}\r\n                className={message.author === currentUser ? \"sent\" : \"received\"}\r\n            >\r\n                <p>\r\n                    {message.content}\r\n                    <br />\r\n                    <small>{this.renderTimestamp(message.timestamp)}</small>\r\n                </p>\r\n            </li>\r\n        ));\r\n    };\r\n\r\n    scrollToBottom = () => {\r\n        if (document.querySelector('#chat-log')) {\r\n            const chatLog = document.querySelector('#chat-log')\r\n            chatLog.scrollTop = chatLog.scrollHeight\r\n        }\r\n    };\r\n\r\n    handleComponentChange = () => {\r\n        this.scrollToBottom();\r\n        if (this.state.otherUsername && (!this.state.otherProfile || this.state.otherProfile.user.username !== this.state.otherUsername)) {\r\n            fetch(`${SERVER_URL}/profile-api/user/${this.state.otherUsername}`)\r\n                .then(response => response.json())\r\n                .then(data => this.setState({\r\n                    otherProfile: data\r\n                }))\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (this.props.chatId !== newProps.chatId) {\r\n            WebSocketInstance.disconnect();\r\n            this.waitForSocketConnection(() => {\r\n                WebSocketInstance.fetchMessages(\r\n                    this.props.username,\r\n                    newProps.chatId\r\n                );\r\n            });\r\n            WebSocketInstance.connect(newProps.chatId);\r\n        }\r\n        if (this.state.otherUsername != newProps.otherUsername) {\r\n            this.setState({\r\n                otherUsername: newProps.otherUsername\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.otherProfile ?\r\n                    <div className=\"d-flex flex-column justify-content-between align-items-center current-chat\">\r\n                        <div className=\"current-chat-header\">\r\n                            <Link to=\"/user/felipe\">\r\n                                <img src={`${SERVER_URL}${this.state.otherProfile.photo}`} className=\"header-profile-img\" />\r\n                            </Link>\r\n                            <div className=\"d-flex flex-column align-items-start\" style={{ height: '52px' }}>\r\n                                <strong>{this.state.otherProfile.first_name} {this.state.otherProfile.last_name}</strong>\r\n                                <p className=\"text-secondary\">@{this.state.otherProfile.user.username}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div id=\"chat-log\">\r\n                            {this.state.messages ? this.renderMessages(this.state.messages) : ''}\r\n                        </div>\r\n                        <form className=\"send-message-container\" onSubmit={this.sendMessageHandler}>\r\n                            <input placeholder=\"Mensagem\" className=\"message-input\" id=\"chat-message-input\" value={this.state.message} onChange={this.messageChangeHandler} />\r\n                            <button className=\"btn btn-primary\" id=\"chat-message-submit\">\r\n                                <i class=\"fas fa-paper-plane\" style={{ position: 'relative', right: '10%' }} />\r\n                            </button>\r\n                        </form>\r\n                    </div> :\r\n                    <div className=\"d-flex flex-column justify-content-center align-items-center current-chat\">\r\n                        <div>\r\n                            <strong style={{ fontSize: 'larger' }}>Você não tem uma conversa selecionada</strong>\r\n                            <p className=\"text-secondary\">Selecione uma existente ou comece uma nova</p>\r\n                            <button className=\"btn btn-primary\">Nova conversa</button>\r\n                        </div>\r\n                    </div>}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chat","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Header from '../../components/header'\r\nimport Chat from './chat'\r\nimport { SERVER_URL } from '../../settings'\r\n\r\nclass Messages extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: null,\r\n            chatId: null,\r\n            activeChatsProfiles: null\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps === this.props) return\r\n        const participants = { username: this.state.username, other_username: newProps.match.params.otherUsername }\r\n        fetch(`${SERVER_URL}/chat-api/chat-id/${JSON.stringify(participants)}`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                chatId: data['chat_id']\r\n            }))\r\n    }\r\n\r\n    handleComponentChange() {\r\n        if (!this.state.username) {\r\n            fetch(`${SERVER_URL}/profile-api/logged-user`)\r\n                .then(response => response.json())\r\n                .then(data => this.setState({\r\n                    username: data.username\r\n                }))\r\n        }\r\n        if (!this.state.activeChatsProfiles && this.state.activeChatsProfiles !== []) {\r\n            console.log('fetching...')\r\n            fetch(`${SERVER_URL}/chat-api/active-chats-profiles`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if (!this.state.username) return\r\n                    console.log(data)\r\n                    this.setState({\r\n                        activeChatsProfiles: data\r\n                    })\r\n                })\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.title = 'Mensagens / Napker'\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header page=\"Mensagens\" />\r\n                <div className=\"content d-flex messages-wrapper\">\r\n                    <div className=\"d-flex flex-column chats-list\">\r\n                        <div className=\"search-input-container\">\r\n                            <input placeholder=\"Pesquisar pessoas\" className=\"search-input\" />\r\n                        </div>\r\n                        <div className=\"list-group chats-container\">\r\n                            {this.state.activeChatsProfiles && this.state.activeChatsProfiles.map(profile => {\r\n                                console.log('rendering', profile)\r\n                                return (\r\n                                    <Link to={`/mensagens/${profile.user.username}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                                        <li className=\"list-item profile-chat-item\">\r\n                                            <img src={`${SERVER_URL}${profile.photo}`} alt=\"\" style={{ borderRadius: '50%' }} />\r\n                                            <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                            <p className=\"text-secondary\" style={{ marginLeft: '5px' }}>@{profile.user.username}</p>\r\n                                        </li>\r\n                                    </Link>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <Chat username={this.state.username} otherUsername={this.props.match.params.otherUsername} chatId={this.state.chatId} />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Messages","import React, { useEffect, useState } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Header from '../components/header'\r\nimport { SERVER_URL } from '../settings'\r\nimport { csrftoken } from '../utils'\r\n\r\nexport default function MyProfile() {\r\n    const [profile, setProfile] = useState(null)\r\n    const [isEditing, setIsEditing] = useState(false)\r\n    const profilePhotoStyle = {\r\n        borderRadius: '50%',\r\n        display: 'inline-block',\r\n        transform: 'scale(1.5)',\r\n        marginBottom: '25px'\r\n    }\r\n\r\n    document.title = 'Perfil / Napker'\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setProfile(data))\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Perfil\" />\r\n            {profile ? <div className=\"content\">\r\n                <Modal show={isEditing}\r\n                    onHide={() => setIsEditing(false)}\r\n                    size=\"lg\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Editar perfil</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <form action={`${SERVER_URL}/update-profile`} id=\"update-profile-form\" method=\"POST\">\r\n                            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n                            <div className=\"d-flex flex-column justify-content-center align-items-center\" style={{ padding: '25px' }}>\r\n                                <img src={`${SERVER_URL}${profile.photo}`} style={profilePhotoStyle} />\r\n                                <input type=\"file\" accept=\"image/png, image/jpg\" name=\"profile-photo\" onChange={e => console.log(e.target.files)}/>\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"first-name\" className=\"profile-label\">Nome:</label>\r\n                                <input className=\"form-control\" type=\"text\" name=\"first-name\" id=\"first-name\" placeholder={profile.first_name} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"last-name\" className=\"profile-label\">Sobrenome:</label>\r\n                                <input className=\"form-control\" type=\"text\" name=\"last-name\" id=\"last-name\" placeholder={profile.last_name} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"username\" className=\"profile-label\">Nome de usuário:</label>\r\n                                <input className=\"form-control\" type=\"text\" name=\"username\" id=\"username\" placeholder={profile.user.username} />\r\n                                <span id=\"username-taken\">Nome de usuário já existe</span>\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"email\" className=\"profile-label\">Email:</label>\r\n                                <input className=\"form-control\" type=\"email\" name=\"email\" id=\"email\" placeholder={profile.email} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"gender\" className=\"profile-label\">Gênero:</label>\r\n                                <select className=\"form-control\" name=\"gender\" id=\"gender\" placeholder={profile.gender}>\r\n                                    <option value=\"male\">Masculino</option>\r\n                                    <option value=\"female\">Feminino</option>\r\n                                    <option value=\"other\">Outro</option>\r\n                                </select>\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"birth-date\" className=\"profile-label\">Data de nascimento:</label>\r\n                                <input className=\"form-control\" type=\"date\" name=\"birth-date\" id=\"birth-date\" defaultValue={profile.birth_date} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"bio\" className=\"profile-label\">Bio:</label>\r\n                                <input className=\"form-control\" type=\"email\" name=\"bio\" id=\"bio\" placeholder={profile.bio} />\r\n                            </div>\r\n                        </form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <button className=\"btn btn-grey\" onClick={() => setIsEditing(false)}>Fechar</button>\r\n                        <button className=\"btn btn-primary\" onClick={() => document.querySelector('form#update-profile-form').submit()}>Salvar</button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <div className=\"d-flex justify-content-between align-items-center profile-data-container\">\r\n                    <div className=\"d-flex flex-column align-items-start\">\r\n                        <p style={{ padding: '15px' }}><img src={`${SERVER_URL}${profile.photo}`} style={profilePhotoStyle} /></p>\r\n                        <p style={{ marginBottom: 0 }}><strong>{profile.first_name} {profile.last_name}</strong></p>\r\n                        <p className=\"text-secondary\" style={{ marginTop: 0 }}>@{profile.user.username}</p>\r\n                        <p>{profile.bio}</p>\r\n                        <p className=\"text-secondary\">\r\n                            <i className=\"far fa-calendar-alt\"></i> Entrou em {profile.created.split('-').reverse().join('/')}\r\n                        </p>\r\n                        <p><strong>{profile.friends.length}</strong> {profile.friends.length === 1 ? 'amigo' : 'amigos'}</p>\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"btn btn-secondary\" type=\"button\" onClick={() => setIsEditing(true)}>Editar perfil</button>\r\n                    </div>\r\n                </div>\r\n            </div > : <></>}\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport Header from '../components/header'\r\n\r\nexport default function Settings() {\r\n\r\n    document.title = 'Configurações / Napker'\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Configurações\" />\r\n            <div className=\"content\">\r\n                Configurações\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport Header from '../../components/header'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nexport default function Profile() {\r\n    const { slug } = useParams()\r\n    const [profile, setProfile] = useState(null)\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/user/${slug}`)\r\n            .then(response => response.json())\r\n            .then(data => setProfile(data))\r\n    }, [])\r\n\r\n    const profilePhotoStyle = {\r\n        borderRadius: '50%',\r\n        display: 'inline-block',\r\n        transform: 'scale(1.5)',\r\n        marginBottom: '25px'\r\n    }\r\n\r\n    const sendFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/send-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    const cancelFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/cancel-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    const handleRelationshipUpdate = e => {\r\n        const btn = e.target\r\n        if (btn.innerHTML === 'Solicitar') {\r\n            sendFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitado'\r\n            btn.className = 'btn btn-primary'\r\n        } else {\r\n            cancelFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitar'\r\n            btn.className = 'btn btn-secondary'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header page={profile ? `${profile.first_name} ${profile.last_name}` : 'Perfil'} backArrow={true} />\r\n            {!profile ? <></> : <>\r\n                <div className=\"content\">\r\n                    <div className=\"d-flex justify-content-between align-items-center profile-data-container\">\r\n                        <div className=\"d-flex flex-column align-items-start\">\r\n                            <p style={{ padding: '15px' }}><img src={`${SERVER_URL}${profile.photo}`} style={profilePhotoStyle} /></p>\r\n                            <p style={{ marginBottom: 0 }}><strong>{profile.first_name} {profile.last_name}</strong></p>\r\n                            <p className=\"text-secondary\" style={{ marginTop: 0 }}>@{profile.user.username}</p>\r\n                            <p>{profile.bio}</p>\r\n                            <p className=\"text-secondary\">\r\n                                <i className=\"far fa-calendar-alt\"></i> Entrou em {profile.created.split('-').reverse().join('/')}\r\n                            </p>\r\n                            <p><strong>{profile.friends.length}</strong> {profile.friends.length === 1 ? 'amigo' : 'amigos'}</p>\r\n                        </div>\r\n                        <div>\r\n                            <button className=\"btn btn-secondary\" data-pk={profile.user.id} onClick={handleRelationshipUpdate}>\r\n                                Solicitar\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>}\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\nimport Sidebar from './components/sidebar'\r\nimport Home from './pages/home'\r\nimport Notifications from './pages/notifications'\r\nimport Messages from './pages/messages/messages'\r\nimport MyProfile from './pages/myprofile'\r\nimport Settings from './pages/settings'\r\nimport Profile from './pages/home-components/profile'\r\n\r\nimport { SERVER_URL } from './settings'\r\n\r\nexport default function App() {\r\n    const [notificationsNumber, setNotificationsNumber] = useState(0)\r\n\r\n    useEffect(() => {\r\n        updateNotificationsNumber()\r\n    }, [])\r\n\r\n    const updateNotificationsNumber = () => {\r\n        fetch(`${SERVER_URL}/profile-api/myinvites`)\r\n            .then(response => response.json())\r\n            .then(data => setNotificationsNumber(data.length))\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <Sidebar notificationsNumber={notificationsNumber} />\r\n            <div className=\"main-content\">\r\n                <Switch>\r\n                    <Route path=\"/notificações\" render={props => (\r\n                        <Notifications {...props} updateNotificationsNumber={updateNotificationsNumber} />\r\n                    )} />\r\n                    <Route path=\"/mensagens\" exact component={Messages} />\r\n                    <Route path=\"/mensagens/:otherUsername\" component={Messages} />\r\n                    <Route path=\"/perfil\" component={MyProfile} />\r\n                    <Route path=\"/configurações\" component={Settings} />\r\n                    <Route path=\"/user/:slug\" component={Profile} />\r\n                    <Route path=\"/\" component={Home} />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css'\n\nimport App from './App'\n\nReactDOM.render(<App />, document.querySelector('#root'))\n"],"sourceRoot":""}