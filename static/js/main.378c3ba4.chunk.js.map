{"version":3,"sources":["components/sidebar.js","settings.js","components/likesmodal.js","utils.js","pages/home-components/posts.js","pages/home-components/profiles.js","components/header.js","pages/home.js","pages/notifications.js","pages/messages/websocket.js","pages/messages/chat.js","pages/messages/messages.js","pages/profile-components/posts.js","pages/profile-components/interests.js","pages/myprofile.js","pages/settings.js","pages/home-components/profile.js","pages/profile-components/friends.js","pages/profile-components/interestprofiles.js","pages/profile-components/edit-interests/publicInterests.js","pages/profile-components/edit-interests/privateInterests.js","pages/profile-components/edit-interests/editinterests.js","components/commentmodal.js","pages/home-components/post.js","App.js","index.js"],"names":["Sidebar","props","className","to","style","textDecoration","notificationsNumber","unreadMessagesNumber","SERVER_URL","LikesModal","Modal","show","isOpen","onHide","hideModal","size","Header","closeButton","Title","Body","height","overflow","overflowY","likes","map","like","profile","slug","color","onClick","key","id","src","photo","marginRight","first_name","last_name","user","username","bio","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","handleLogout","window","confirm","location","replace","Posts","fetchPosts","fetch","then","response","json","data","setState","posts","likeUnlikePost","e","stopPropagation","likeBtn","target","classList","contains","remove","add","dataset","postid","console","log","hideLikesModal","likesModal","deletePost","postId","el","querySelector","animationPlayState","addEventListener","method","headers","handlePostImageChange","reader","FileReader","onload","readyState","postFormImagePreview","result","display","readAsDataURL","files","openCloseEmojiList","onEmojiSelect","event","emojiObject","postContent","state","emoji","this","action","encType","type","value","placeholder","autoFocus","onChange","margin","htmlFor","class","accept","onEmojiClick","post","href","author","created","reverse","join","textAlign","content","image","comments","includes","data-postid","React","Component","Profiles","useState","profiles","setProfiles","filteredProfiles","setFilteredProfiles","search","setSearch","useEffect","handleRelationshipUpdate","pk","btn","innerHTML","body","JSON","stringify","cancelFriendRequest","width","data-pk","backArrow","history","back","page","Home","setPage","pages","title","marginBottom","borderRadius","Notifications","invites","setInvites","postLikes","setPostLikes","setComments","updateNotificationsNumber","replyRequest","requestBody","senderid","reply","getElementById","removeChild","sender","justifyContent","data-senderid","data-reply","fontSize","comment","marginTop","WebSocketService","callbacks","socketRef","instance","chatUrl","path","WebSocket","onopen","socketNewMessage","command","onmessage","onerror","message","onclose","connect","close","parsedData","parse","Object","keys","messages","chatId","sendMessage","from","messagesCallback","newMessageCallback","send","err","WebSocketInstance","getInstance","Chat","handleComponentChange","scrollToBottom","otherUsername","otherProfile","messageChangeHandler","sendMessageHandler","preventDefault","messageObject","newChatMessage","updateMessagesComponent","renderTimestamp","timestamp","ts","Date","day","getDate","month","getMonth","hour","getHours","minute","getMinutes","getFullYear","renderMessages","currentUser","read","chatLog","scrollTop","scrollHeight","initialiseChat","waitForSocketConnection","addCallbacks","setMessages","bind","addMessage","fetchMessages","newProps","disconnect","chat_id","updateUnreadMessagesNumber","callback","component","setTimeout","onSubmit","openModal","Messages","fetchActiveChatProfiles","activeChats","chats","activeChatsProfiles","addingNewChat","setModalSearch","query","modalProfiles","setContactSearch","filter","p","resetUnreadMessagesCounter","unreadMessagesCounter","incrementUnreadMessagesCounter","setLastChatMessage","lastChatMessage","participants","other_username","match","params","padding","whiteSpace","maxHeight","indexOf","contact","marginLeft","slice","myprofile","setMyProfile","setLikesModal","fetchProfile","Interests","interests","public","interest","toUpperCase","MyProfile","setProfile","profileImagePreview","setProfileImagePreview","isEditing","setIsEditing","currentPageIsPosts","setCurrentPageIsPosts","switchPage","querySelectorAll","forEach","bool","email","gender","defaultValue","birth_date","Footer","submit","friends","Settings","Profile","sendFriendRequest","removeFromFriends","acceptFriendRequest","relationshipButtonLabel","label","relationship","onmouseenter","onmouseout","Friends","setFriends","useParams","friend","InterestProfiles","PublicInterests","tagContainer","input","tags","myProfile","interestsInput","addTags","tag","parentElement","sort","prepend","div","createElement","span","closeIcon","setAttribute","appendChild","createTag","setInterests","push","tagLabel","getAttribute","index","focus","PrivateInterests","EditInterests","publicInterests","setPublicInterests","privateInterests","setPrivateInterests","background","fontWeight","public_interests","private_interests","documentElement","CommentModal","commentPost","Post","setPost","commentModalIsOpen","setCommentModalIsOpen","postLikesModal","setPostLikesModal","commentLikesModal","setCommentLikesModal","fetchPost","likeUnlikeComment","commentid","commentId","deleteComment","data-commentid","App","invitesReceivedNumber","setInvitesReceived","unvisualizedLikesNumber","setUnvisulaizedLikes","unvisualizedCommentsNumber","setUnvisulaizedComments","setUnreadMessagesNumber","render","exact","ProfileFriends","ReactDOM"],"mappings":"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","file":"static/js/main.378c3ba4.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Sidebar(props) {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n                <h2>Napker</h2>\r\n            </Link>\r\n            <ul>\r\n                <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-home\"/>Home</li>\r\n                </Link>\r\n                <Link to=\"/notificações\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-bell\"/>Notificações{!props.notificationsNumber ? '' : <p className=\"notifications-number\">{props.notificationsNumber}</p>}</li>\r\n                </Link>\r\n                <Link to=\"/mensagens\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-envelope\"/>Mensagens{!props.unreadMessagesNumber ? '' : <p className=\"notifications-number\">{props.unreadMessagesNumber}</p>}</li>\r\n                </Link>\r\n                <Link to=\"/perfil\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-user\"/>Perfil</li>\r\n                </Link>\r\n                <Link to=\"/configurações\" style={{ textDecoration: 'none' }}>\r\n                    <li><i className=\"fas fa-cog\"/>Configurações</li>\r\n                </Link>\r\n            </ul>\r\n        </div>\r\n    )\r\n}","const SERVER_URL = 'http://127.0.0.1:8000'\r\nconst SOCKET_URL = 'ws://127.0.0.1:8000'\r\n\r\nexport {SERVER_URL, SOCKET_URL}","import React from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { SERVER_URL } from '../settings'\r\n\r\nexport default function LikesModal(props) {\r\n    return (\r\n        <Modal show={props.isOpen}\r\n            onHide={props.hideModal}\r\n            size=\"lg\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title><strong>Curtidas</strong></Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"list-group\" style={{ height: '400px', overflow: 'hidden', overflowY: 'scroll' }}>\r\n                    {props.likes &&\r\n                        props.likes.map(like => like.profile).map(profile => {\r\n                            return (\r\n                                <Link to={`/user/${profile.slug}`}\r\n                                    style={{ color: '#000', textDecoration: 'none' }}\r\n                                    onClick={props.hideModal}\r\n                                >\r\n                                    <li className=\"list-group-item profile-row modal-profile-li\" key={profile.id}>\r\n                                        <div className=\"d-flex justify-content-between\">\r\n                                            <div className=\"profile-col\">\r\n                                                <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                    className=\"profile-img-med\"\r\n                                                    style={{ marginRight: '10px' }}\r\n                                                />\r\n                                                <div className=\"main-profile-data\">\r\n                                                    <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                                    <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"profile-col\">\r\n                                                {profile.bio}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                </Link>\r\n                            )\r\n                        })}\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}","import { SERVER_URL } from './settings'\r\n\r\nconst csrftoken = getCookie('csrftoken')\r\n\r\nfunction getCookie(name) {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nfunction handleLogout() {\r\n  const bool = window.confirm('Sair do Napker?\\nVocê poderá entrar novamente quando quiser.')\r\n  if (bool) {\r\n    window.location.replace(`${SERVER_URL}/logout`)\r\n  }\r\n}\r\n\r\nexport { csrftoken, handleLogout };","import React from 'react'\r\nimport Picker from 'emoji-picker-react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport LikesModal from '../../components/likesmodal'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nexport default class Posts extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            profile: null,\r\n            posts: null,\r\n            likesModal: {\r\n                isOpen: false,\r\n                likes: null\r\n            },\r\n            postContent: '',\r\n            postFormImagePreview: null\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ profile: data }))\r\n        this.fetchPosts()\r\n    }\r\n\r\n    fetchPosts = () => {\r\n        fetch(`${SERVER_URL}/post-api/post-list`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ posts: data }))\r\n    }\r\n\r\n    likeUnlikePost = e => {\r\n        e.stopPropagation()\r\n        const likeBtn = e.target\r\n        if (likeBtn.classList.contains('fas')) {\r\n            likeBtn.classList.remove('fas') //border heart\r\n            likeBtn.classList.add('far')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/unlike-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    this.fetchPosts()\r\n                })\r\n        } else {\r\n            likeBtn.classList.remove('far') //border heart\r\n            likeBtn.classList.add('fas')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/like-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    this.fetchPosts()\r\n                })\r\n        }\r\n    }\r\n\r\n    hideLikesModal = () => {\r\n        this.setState({\r\n            likesModal: {\r\n                isOpen: false,\r\n                likes: null\r\n            }\r\n        })\r\n    }\r\n\r\n    deletePost = (e, postId) => {\r\n        e.stopPropagation()\r\n        const el = document.querySelector(`#profile-post-${postId}`)\r\n        if (window.confirm('Tem certeza que deseja apagar o post?\\nEssa ação é irreversível.')) {\r\n            el.style.animationPlayState = 'running'\r\n            el.addEventListener('animationend', () => {\r\n                this.fetchPosts()\r\n            })\r\n            fetch(`${SERVER_URL}/post-api/delete-post/${postId}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                })\r\n        }\r\n    }\r\n\r\n    handlePostImageChange = e => {\r\n        const reader = new FileReader()\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                this.setState({ postFormImagePreview: reader.result })\r\n                document.querySelector('#post-form-image-preview').style.display = 'initial'\r\n            }\r\n        }\r\n        try {\r\n            reader.readAsDataURL(e.target.files[0])\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n    openCloseEmojiList = () => {\r\n        const el = document.querySelector('#emoji-list-container')\r\n        const style = el.style\r\n        if (!style.display) style.display = 'none'\r\n        style.display = style.display === 'none' ? 'initial' : 'none'\r\n    }\r\n\r\n    onEmojiSelect = (event, emojiObject) => {\r\n        this.setState({ postContent: this.state.postContent + emojiObject.emoji })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <LikesModal\r\n                    isOpen={this.state.likesModal.isOpen}\r\n                    likes={this.state.likesModal.likes}\r\n                    hideModal={this.hideLikesModal}\r\n                />\r\n                {this.state.profile &&\r\n                    <form\r\n                        action={`${SERVER_URL}/post-api/create-post`}\r\n                        method=\"POST\"\r\n                        className=\"create-post-form\"\r\n                        encType=\"multipart/form-data\"\r\n                    >\r\n                        <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n                        <div className=\"d-flex\">\r\n                            <img\r\n                                src={`${SERVER_URL}${this.state.profile.photo}`}\r\n                                className=\"profile-img-med\"\r\n                            />\r\n                            <input type=\"text\"\r\n                                className=\"post-content-input\"\r\n                                name=\"post-content\"\r\n                                value={this.state.postContent}\r\n                                placeholder=\"No que você está pensando?\"\r\n                                autoFocus\r\n                                onChange={e => this.setState({ postContent: e.target.value })}\r\n                            />\r\n                        </div>\r\n                        <img\r\n                            src={this.state.postFormImagePreview}\r\n                            className=\"post-img\"\r\n                            id=\"post-form-image-preview\"\r\n                            style={{ display: 'none' }}\r\n                        />\r\n                        <hr />\r\n                        <div className=\"d-flex justify-content-between\" style={{ margin: '0px 70px 0 70px' }}>\r\n                            <div className=\"post-extra-options\">\r\n                                <label htmlFor=\"post-image\" class=\"far fa-image\" />\r\n                                <input\r\n                                    type=\"file\"\r\n                                    accept=\"image/png, image/jpg, image/jpeg\"\r\n                                    name=\"post-image\"\r\n                                    id=\"post-image\"\r\n                                    style={{ display: 'none' }}\r\n                                    onChange={this.handlePostImageChange}\r\n                                />\r\n                                <label\r\n                                    className=\"far fa-smile\"\r\n                                    onClick={this.openCloseEmojiList}\r\n                                />\r\n                            </div>\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"btn btn-primary\"\r\n                                style={{ height: '40px' }}\r\n                            >\r\n                                Postar\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"emoji-list-container\" id=\"emoji-list-container\">\r\n                            <Picker onEmojiClick={this.onEmojiSelect} />\r\n                        </div>\r\n                    </form>}\r\n                <div className=\"post-list\">\r\n                    {this.state.posts && this.state.posts.map(post => {\r\n                        return (\r\n                            <li\r\n                                className=\"post-container\"\r\n                                id={`profile-post-${post.id}`}\r\n                                key={post.id}\r\n                                onClick={() => window.location.href = `/post/${post.id}`}\r\n                            >\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                    <div className=\"post-row\">\r\n                                        <div className=\"post-col\">\r\n                                            <Link\r\n                                                to={post.author.id === this.state.profile.id ?\r\n                                                    '/perfil' : `/user/${post.author.slug}`}\r\n                                                onClick={e => e.stopPropagation()}\r\n                                            >\r\n                                                <img src={`${SERVER_URL}${post.author.photo}`}\r\n                                                    className=\"profile-img-med\"\r\n                                                />\r\n                                            </Link>\r\n                                        </div>\r\n                                        <div className=\"post-col\">\r\n                                            <Link\r\n                                                to={post.author.id === this.state.profile.id ?\r\n                                                    '/perfil' : `/user/${post.author.slug}`}\r\n                                                style={{ color: '#000' }}\r\n                                                onClick={e => e.stopPropagation()}\r\n                                            >\r\n                                                <div style={{ height: '30px' }}>\r\n                                                    <strong>{post.author.first_name} {post.author.last_name} </strong>\r\n                                                    <p className=\"text-secondary d-inline-block\">\r\n                                                        @{post.author.user.username} • {post.created.split('-').reverse().join('/')}\r\n                                                    </p>\r\n                                                </div>\r\n                                            </Link>\r\n                                            <div style={{ textAlign: 'start' }}>\r\n                                                {post.content}\r\n                                            </div>\r\n                                            {post.image &&\r\n                                                <img src={`${SERVER_URL}${post.image}`} className=\"post-img\" />\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                    {post.author.id === this.state.profile.id &&\r\n                                        <i\r\n                                            className=\"far fa-trash-alt trash-icon text-secondary\"\r\n                                            style={{ margin: '20px 20px 0 0' }}\r\n                                            onClick={e => this.deletePost(e, post.id)}\r\n                                        />}\r\n                                </div>\r\n                                <div className=\"post-actions\">\r\n                                    <p className=\"text-secondary\">\r\n                                        <Link\r\n                                            to={`/post/${post.id}/comment`}\r\n                                            className=\"text-secondary\"\r\n                                            onClick={e => e.stopPropagation()}\r\n                                        >\r\n                                            <i\r\n                                                class=\"far fa-comment\"\r\n                                            />{post.comments.length}\r\n                                        </Link>\r\n                                        {post.likes.map(like => like.profile.id).includes(this.state.profile.id) ?\r\n                                            <i class=\"fas fa-heart\"\r\n                                                data-postid={post.id}\r\n                                                onClick={this.likeUnlikePost}\r\n                                            />\r\n                                            :\r\n                                            <i class=\"far fa-heart\"\r\n                                                data-postid={post.id}\r\n                                                onClick={this.likeUnlikePost}\r\n                                            />}\r\n                                        <p className=\"post-likes-number\"\r\n                                            onClick={e => {\r\n                                                e.stopPropagation()\r\n                                                this.setState({ likesModal: { isOpen: true, likes: post.likes } })\r\n                                            }}\r\n                                        >\r\n                                            {post.likes.length}\r\n                                        </p>\r\n                                    </p>\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nexport default function Profiles(props) {\r\n    const [profiles, setProfiles] = useState([])\r\n    const [filteredProfiles, setFilteredProfiles] = useState(null)\r\n    const [search, setSearch] = useState('')\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/profile-list`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setFilteredProfiles(null)\r\n                setProfiles(data)\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (search === '') {\r\n            setFilteredProfiles(null)\r\n            return\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/users/${search}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setFilteredProfiles(data)\r\n            })\r\n    }, [search])\r\n\r\n    const sendFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/send-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    const cancelFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/cancel-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    const handleRelationshipUpdate = e => {\r\n        e.stopPropagation()\r\n        const btn = e.target\r\n        if (btn.innerHTML === 'Solicitar') {\r\n            sendFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitado'\r\n            btn.className = 'btn btn-primary'\r\n        } else {\r\n            cancelFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitar'\r\n            btn.className = 'btn btn-secondary'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"form-row\">\r\n                <input type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Pesquisar\"\r\n                    style={{ width: '400px' }}\r\n                    value={search}\r\n                    onChange={e => setSearch(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"list-group\">\r\n                {filteredProfiles ? filteredProfiles.map(profile => {\r\n                    return (\r\n                        <Link to={`/user/${profile.slug}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                            <li className=\"list-group-item profile-row filtered-profile\" key={profile.id}>\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                    <div className=\"profile-col\">\r\n                                        <img src={`${SERVER_URL}${profile.photo}`}\r\n                                            className=\"profile-img-med\"\r\n                                            style={{ marginRight: '10px' }}\r\n                                        />\r\n                                        <div className=\"main-profile-data\">\r\n                                            <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                            <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"profile-col\">\r\n                                        {profile.bio}\r\n                                    </div>\r\n                                    <div className=\"profile-col\">\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        </Link>\r\n                    )\r\n                }) : profiles && profiles.map(profile => {\r\n                    return (\r\n                        <li\r\n                            className=\"list-group-item profile-row\"\r\n                            key={profile.id}\r\n                            onClick={() => window.location.href = `/user/${profile.slug}`}\r\n                        >\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                <div className=\"profile-col\">\r\n                                    <img src={`${SERVER_URL}${profile.photo}`}\r\n                                        className=\"profile-img-med\"\r\n                                        style={{ marginRight: '10px' }}\r\n                                    />\r\n                                    <div className=\"main-profile-data\">\r\n                                        <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                        <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"profile-col\">\r\n                                    {profile.bio}\r\n                                </div>\r\n                                <div className=\"profile-col\">\r\n                                    <button className=\"btn btn-secondary\" data-pk={profile.user.id} onClick={handleRelationshipUpdate}>\r\n                                        Solicitar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { handleLogout } from '../utils'\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <div className=\"header fixed-top\">\r\n            {!props.backArrow ? '' : <i class=\"fas fa-arrow-left left-arrow-icon\" onClick={() => window.history.back()}/>}\r\n            <strong>{props.page}</strong>\r\n            <a className=\"logout\" onClick={handleLogout}>Sair</a>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport Posts from './home-components/posts'\r\nimport Profiles from './home-components/profiles'\r\nimport Header from '../components/header'\r\n\r\nexport default function Home(props) {\r\n    const [page, setPage] = useState('Posts')\r\n    const pages = {\r\n        'Perfis': <Profiles />,\r\n        'Posts': <Posts />\r\n    }\r\n\r\n    document.title = 'Home / Napker'\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Home\" />\r\n            <div className=\"content\">\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ marginBottom: '10px', borderRadius: '20px' }}\r\n                    onClick={() => setPage(page === 'Perfis' ? 'Posts' : 'Perfis')}\r\n                >\r\n                    {page === 'Perfis' ? 'Ver posts' : 'Ver perfis'}\r\n                </button>\r\n                {pages[page]}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Header from '../components/header'\r\nimport { SERVER_URL } from '../settings'\r\nimport { csrftoken } from '../utils'\r\n\r\nexport default function Notifications(props) {\r\n    const [invites, setInvites] = useState([])\r\n    const [postLikes, setPostLikes] = useState([])\r\n    const [comments, setComments] = useState([])\r\n    let notificationsNumber = invites.length + postLikes.length + comments.length\r\n\r\n    document.title = 'Notificações / Napker'\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myinvites`)\r\n            .then(response => response.json())\r\n            .then(data => setInvites(data))\r\n        fetch(`${SERVER_URL}/post-api/unvisualized-post-likes`)\r\n            .then(response => response.json())\r\n            .then(data => setPostLikes(data))\r\n        fetch(`${SERVER_URL}/post-api/unvisualized-post-comments`)\r\n            .then(response => response.json())\r\n            .then(data => setComments(data))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (postLikes.length) {\r\n            fetch(`${SERVER_URL}/post-api/visualize-likes`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.updateNotificationsNumber()\r\n                })\r\n        }\r\n    }, [postLikes])\r\n\r\n    useEffect(() => {\r\n        if (comments.length) {\r\n            fetch(`${SERVER_URL}/post-api/visualize-comments`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.updateNotificationsNumber()\r\n                })\r\n        }\r\n    }, [comments])\r\n\r\n    const replyRequest = e => {\r\n        e.stopPropagation()\r\n        const btn = e.target\r\n        const requestBody = {\r\n            'senderid': btn.dataset.senderid,\r\n            'reply': btn.dataset.reply\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/reply-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(requestBody)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                props.updateNotificationsNumber()\r\n            })\r\n        document.getElementById('friend-request-list').removeChild(document.getElementById(btn.dataset.senderid))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Notificações\" />\r\n            <div className=\"content\">\r\n                <div className=\"list-group\" id='friend-request-list'>\r\n                    {!!invites.length &&\r\n                        <>\r\n                            <h4>Solicitações de amizade</h4>\r\n                            {invites.map(i => {\r\n                                return (\r\n                                    <li\r\n                                        className=\"list-group-item profile-row\"\r\n                                        id={i.sender.id}\r\n                                        key={i.sender.id}\r\n                                        onClick={() => window.location.href = `/user/${i.sender.slug}`}\r\n                                    >\r\n                                        <div className=\"d-flex justify-content-between\">\r\n                                            <div className=\"profile-col\">\r\n                                                <img src={`${SERVER_URL}${i.sender.photo}`}\r\n                                                    className=\"profile-img-med\"\r\n                                                    style={{ marginRight: '10px' }}\r\n                                                />\r\n                                                <div className=\"main-profile-data\">\r\n                                                    <strong>{i.sender.first_name} {i.sender.last_name}</strong>\r\n                                                    <p className=\"text-secondary\">@{i.sender.user.username}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"profile-col\">\r\n                                                {i.sender.bio}\r\n                                            </div>\r\n                                            <div className=\"profile-col\" style={{ justifyContent: 'space-between' }}>\r\n                                                <button className=\"btn btn-primary btn-reply-fr\" data-senderid={i.sender.id} data-reply='accept' onClick={replyRequest}>Confirmar</button>\r\n                                                <button className=\"btn btn-grey btn-reply-fr\" data-senderid={i.sender.id} data-reply='decline' onClick={replyRequest}>Excluir</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                        </>\r\n                    }\r\n\r\n                    <br />\r\n\r\n                    {!!postLikes.length &&\r\n                        <>\r\n                            <h4>Curtidas</h4>\r\n                            {postLikes.map(like => {\r\n                                return (\r\n                                    <li className=\"list-group-item profile-row\" key={like.profile.id}>\r\n                                        <div className=\"d-flex justify-content-between\">\r\n                                            <div className=\"profile-col\">\r\n                                                <Link to={`/user/${like.profile.slug}`}>\r\n                                                    <img src={`${SERVER_URL}${like.profile.photo}`}\r\n                                                        className=\"profile-img-med\"\r\n                                                        style={{ marginRight: '10px' }}\r\n                                                    />\r\n                                                </Link>\r\n                                            </div>\r\n                                            <div className=\"profile-col\" style={{ fontSize: 'larger' }}>\r\n                                                <p>\r\n                                                    <Link to={`/user/${like.profile.slug}`} style={{ color: \"#000\" }}>\r\n                                                        @{like.profile.user.username}\r\n                                                    </Link> curtiu o seu post.\r\n                                                </p>\r\n                                            </div>\r\n                                            <div className=\"profile-col\" style={{ justifyContent: 'center' }}>\r\n                                                <Link to={`/post/${like.post.id}`}>\r\n                                                    <button className=\"btn btn-primary\">Ver post</button>\r\n                                                </Link>\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                        </>\r\n                    }\r\n\r\n                    <br />\r\n\r\n                    {!!comments.length &&\r\n                        <>\r\n                            <h4>Comentários</h4>\r\n                            {comments.map(comment => {\r\n                                return (\r\n                                    <li className=\"list-group-item profile-row\" key={comment.author.id}>\r\n                                        <div className=\"d-flex justify-content-between\">\r\n                                            <div className=\"profile-col\">\r\n                                                <Link to={`/user/${comment.author.slug}`}>\r\n                                                    <img src={`${SERVER_URL}${comment.author.photo}`}\r\n                                                        className=\"profile-img-med\"\r\n                                                        style={{ marginRight: '10px' }}\r\n                                                    />\r\n                                                </Link>\r\n                                            </div>\r\n                                            <div className=\"profile-col\" style={{ fontSize: 'larger' }}>\r\n                                                <p>\r\n                                                    <Link to={`/user/${comment.author.slug}`} style={{ color: \"#000\" }}>\r\n                                                        @{comment.author.user.username}\r\n                                                    </Link> comentou seu post.\r\n                                                </p>\r\n                                            </div>\r\n                                            <div className=\"profile-col\" style={{ justifyContent: 'center' }}>\r\n                                                <Link to={`/post/${comment.post.id}`}>\r\n                                                    <button className=\"btn btn-primary\">Ver post</button>\r\n                                                </Link>\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                        </>\r\n                    }\r\n\r\n                </div>\r\n                {!notificationsNumber &&\r\n                    <h3 style={{ marginTop: '100px' }}>Você não tem nenhuma notificação</h3>}\r\n            </div>\r\n        </>\r\n    )\r\n}","import { SOCKET_URL } from '../../settings'\r\n\r\nclass WebSocketService {\r\n    static instance = null;\r\n    callbacks = {};\r\n  \r\n    static getInstance() {\r\n      if (!WebSocketService.instance) {\r\n        WebSocketService.instance = new WebSocketService();\r\n      }\r\n      return WebSocketService.instance;\r\n    }\r\n  \r\n    constructor() {\r\n      this.socketRef = null;\r\n    }\r\n  \r\n    connect(chatUrl) {\r\n      const path = `${SOCKET_URL}/ws/chat/${chatUrl}/`;\r\n      this.socketRef = new WebSocket(path);\r\n      this.socketRef.onopen = () => {\r\n        console.log(\"WebSocket open\");\r\n      };\r\n      this.socketNewMessage(JSON.stringify({\r\n        command: 'fetch-messages'\r\n      }))\r\n      this.socketRef.onmessage = e => {\r\n        this.socketNewMessage(e.data);\r\n      };\r\n      this.socketRef.onerror = e => {\r\n        console.log(e.message);\r\n      };\r\n      this.socketRef.onclose = () => {\r\n        console.log(\"WebSocket closed let's reopen\");\r\n        this.connect(chatUrl);\r\n      };\r\n    }\r\n  \r\n    disconnect() {\r\n      if (this.socketRef) this.socketRef.close();\r\n    }\r\n  \r\n    socketNewMessage(data) {\r\n      const parsedData = JSON.parse(data);\r\n      const command = parsedData.command;\r\n      if (Object.keys(this.callbacks).length === 0) {\r\n        return;\r\n      }\r\n      if (command === \"messages\") {\r\n        this.callbacks[command](parsedData.messages);\r\n      }\r\n      if (command === \"new_message\") {\r\n        this.callbacks[command](parsedData.message);\r\n      }\r\n    }\r\n  \r\n    fetchMessages(username, chatId) {\r\n      this.sendMessage({\r\n        command: \"fetch_messages\",\r\n        username: username,\r\n        chatId: chatId\r\n      });\r\n    }\r\n  \r\n    newChatMessage(message) {\r\n      this.sendMessage({\r\n        command: \"new_message\",\r\n        from: message.from,\r\n        content: message.content,\r\n        chatId: message.chatId\r\n      });\r\n    }\r\n  \r\n    addCallbacks(messagesCallback, newMessageCallback) {\r\n      this.callbacks[\"messages\"] = messagesCallback;\r\n      this.callbacks[\"new_message\"] = newMessageCallback;\r\n    }\r\n  \r\n    sendMessage(data) {\r\n      try {\r\n        this.socketRef.send(JSON.stringify({ ...data }));\r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n    }\r\n  \r\n    state() {\r\n      return this.socketRef ? this.socketRef.readyState : 0\r\n    }\r\n  }\r\n  \r\n  const WebSocketInstance = WebSocketService.getInstance();\r\n  \r\n  export default WebSocketInstance;","import React from 'react'\r\nimport Picker from 'emoji-picker-react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { csrftoken } from '../../utils'\r\nimport { SERVER_URL } from '../../settings'\r\nimport WebSocketInstance from './websocket'\r\n\r\nclass Chat extends React.Component {\r\n    initialiseChat() {\r\n        this.waitForSocketConnection(() => {\r\n            WebSocketInstance.addCallbacks(\r\n                this.setMessages.bind(this),\r\n                this.addMessage.bind(this)\r\n            )\r\n            WebSocketInstance.fetchMessages(\r\n                this.props.username,\r\n                this.props.chatId\r\n            );\r\n        });\r\n        if (this.props.chatId) WebSocketInstance.connect(this.props.chatId)\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            message: '',\r\n            messages: [],\r\n            otherUsername: this.props.otherUsername,\r\n            otherProfile: null\r\n        }\r\n        this.initialiseChat();\r\n    }\r\n\r\n    handleComponentChange = () => {\r\n        this.scrollToBottom();\r\n        if (this.state.otherUsername && (!this.state.otherProfile || this.state.otherProfile.user.username !== this.state.otherUsername)) {\r\n            fetch(`${SERVER_URL}/profile-api/user/${this.state.otherUsername}`)\r\n                .then(response => response.json())\r\n                .then(data => this.setState({\r\n                    otherProfile: data\r\n                }))\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (this.props.chatId !== newProps.chatId) {\r\n            WebSocketInstance.disconnect();\r\n            this.waitForSocketConnection(() => {\r\n                WebSocketInstance.fetchMessages(\r\n                    this.props.username,\r\n                    newProps.chatId\r\n                );\r\n            });\r\n            WebSocketInstance.connect(newProps.chatId);\r\n\r\n            this.props.updateMessagesComponent()\r\n        }\r\n        if (this.state.otherUsername != newProps.otherUsername) {\r\n            this.setState({\r\n                otherUsername: newProps.otherUsername\r\n            })\r\n        }\r\n        if (newProps.chatId) {\r\n            fetch(`${SERVER_URL}/chat-api/read-messages`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                },\r\n                body: JSON.stringify({ chat_id: newProps.chatId })\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => console.log(data))\r\n        }\r\n        if (this.props.updateUnreadMessagesNumber) {\r\n            this.props.updateUnreadMessagesNumber()\r\n        }\r\n    }\r\n\r\n    waitForSocketConnection(callback) {\r\n        const component = this;\r\n        setTimeout(function () {\r\n            if (WebSocketInstance.state() === 1) {\r\n                console.log(\"Connection is made\");\r\n                callback();\r\n                return;\r\n            } else {\r\n                console.log(\"wait for connection...\");\r\n                component.waitForSocketConnection(callback);\r\n            }\r\n        }, 100);\r\n    }\r\n\r\n    setMessages(messages) {\r\n        this.setState({ messages: messages.reverse() })\r\n    }\r\n\r\n    addMessage(message) {\r\n        this.setState({ messages: [...this.state.messages, message] })\r\n    }\r\n\r\n    messageChangeHandler = event => {\r\n        this.setState({ message: event.target.value });\r\n    };\r\n\r\n    sendMessageHandler = e => {\r\n        e.preventDefault();\r\n        const messageObject = {\r\n            from: this.props.username,\r\n            content: this.state.message,\r\n            chatId: this.props.chatId\r\n        };\r\n        WebSocketInstance.newChatMessage(messageObject);\r\n        this.setState({ message: \"\" });\r\n        this.props.updateMessagesComponent()\r\n\r\n    };\r\n\r\n    renderTimestamp = timestamp => {\r\n        const ts = new Date(timestamp)\r\n        const day = ts.getDate() >= 10 ? ts.getDate() : `0${ts.getDate()}`\r\n        const month = ts.getMonth() >= 10 ? ts.getMonth() : `0${ts.getMonth()}`\r\n        const hour = ts.getHours() >= 10 ? ts.getHours() : `0${ts.getHours()}`\r\n        const minute = ts.getMinutes() >= 10 ? ts.getMinutes() : `0${ts.getMinutes()}`\r\n        return `${day}/${month}/${ts.getFullYear()} - ${hour}:${minute}`\r\n    };\r\n\r\n    renderMessages = messages => {\r\n        const currentUser = this.props.username;\r\n        return messages.map(message => (\r\n            <li\r\n                key={message.id}\r\n                className={message.author === currentUser ? \"sent\" : \"received\"}\r\n            >\r\n                <p>\r\n                    {message.content}\r\n                    <br />\r\n                    <small>\r\n                        {this.renderTimestamp(message.timestamp)} {message.author === currentUser ? message.read ? '✓✓' : '✓' : ''}\r\n                    </small>\r\n                </p>\r\n            </li>\r\n        ));\r\n    };\r\n\r\n    scrollToBottom = () => {\r\n        if (document.querySelector('#chat-log')) {\r\n            const chatLog = document.querySelector('#chat-log')\r\n            chatLog.scrollTop = chatLog.scrollHeight\r\n        }\r\n    };\r\n\r\n    openCloseEmojiList = () => {\r\n        const el = document.querySelector('#emoji-list-container')\r\n        const style = el.style\r\n        if (!style.display) style.display = 'none'\r\n        style.display = style.display === 'none' ? 'initial' : 'none'\r\n    }\r\n\r\n    onEmojiSelect = (event, emojiObject) => {\r\n        this.setState({ message: this.state.message + emojiObject.emoji })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.otherProfile ?\r\n                    <div className=\"d-flex flex-column justify-content-between align-items-center current-chat\">\r\n                        <div className=\"current-chat-header\">\r\n                            <Link to={`/user/${this.state.otherProfile.slug}`}>\r\n                                <img src={`${SERVER_URL}${this.state.otherProfile.photo}`}\r\n                                    className=\"profile-img-sm\"\r\n                                    style={{ marginRight: '5px' }}\r\n                                />\r\n                            </Link>\r\n                            <div className=\"d-flex flex-column align-items-start\" style={{ height: '52px' }}>\r\n                                <strong>{this.state.otherProfile.first_name} {this.state.otherProfile.last_name}</strong>\r\n                                <p className=\"text-secondary\">@{this.state.otherProfile.user.username}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div id=\"chat-log\">\r\n                            {this.state.messages ? this.renderMessages(this.state.messages) : ''}\r\n                        </div>\r\n                        <div className=\"emoji-list-container chat-emoji-list\" id=\"emoji-list-container\">\r\n                            <Picker onEmojiClick={this.onEmojiSelect} />\r\n                        </div>\r\n                        <form className=\"send-message-container\" onSubmit={this.sendMessageHandler}>\r\n                            <label\r\n                                className=\"far fa-smile\"\r\n                                onClick={this.openCloseEmojiList}\r\n                            />\r\n                            <input\r\n                                placeholder=\"Mensagem\"\r\n                                className=\"message-input\"\r\n                                id=\"chat-message-input\"\r\n                                value={this.state.message}\r\n                                onChange={this.messageChangeHandler}\r\n                            />\r\n                            <button className=\"btn btn-primary chat-message-submit\" id=\"chat-message-submit\">\r\n                                <i class=\"fas fa-paper-plane\" />\r\n                            </button>\r\n                        </form>\r\n                    </div> :\r\n                    <div className=\"d-flex flex-column justify-content-center align-items-center current-chat\">\r\n                        <div>\r\n                            <strong style={{ fontSize: 'larger' }}>Você não tem uma conversa selecionada</strong>\r\n                            <p className=\"text-secondary\">Selecione uma existente ou comece uma nova</p>\r\n                            <button className=\"btn btn-primary\" onClick={() => this.props.openModal()}>Nova conversa</button>\r\n                        </div>\r\n                    </div>}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chat\r\n","import React from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Header from '../../components/header'\r\nimport Chat from './chat'\r\nimport { SERVER_URL } from '../../settings'\r\n\r\nclass Messages extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: null,\r\n            chatId: null,\r\n            activeChats: null,\r\n            activeChatsProfiles: null,\r\n            addingNewChat: false,\r\n            modalProfiles: [],\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps === this.props) return\r\n        const participants = { username: this.state.username, other_username: newProps.match.params.slug }\r\n        fetch(`${SERVER_URL}/chat-api/chat-id/${JSON.stringify(participants)}`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                chatId: data['chat_id']\r\n            }))\r\n    }\r\n\r\n    handleComponentChange() {\r\n        if (!this.state.username) {\r\n            fetch(`${SERVER_URL}/profile-api/logged-user`)\r\n                .then(response => response.json())\r\n                .then(data => this.setState({\r\n                    username: data.username\r\n                }))\r\n        }\r\n        if (!this.state.activeChatsProfiles && this.state.activeChatsProfiles !== []) {\r\n            this.fetchActiveChatProfiles()\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.title = 'Mensagens / Napker'\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.handleComponentChange()\r\n    }\r\n\r\n    fetchActiveChatProfiles = () => {\r\n        fetch(`${SERVER_URL}/chat-api/active-chats-profiles`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (!this.state.username) return\r\n                this.setState({\r\n                    activeChats: data.chats.reverse(),\r\n                    activeChatsProfiles: data.profiles.reverse()\r\n                })\r\n            })\r\n    }\r\n\r\n    openModal = () => {\r\n        this.setState({\r\n            addingNewChat: true\r\n        })\r\n    }\r\n\r\n    setModalSearch = query => {\r\n        if (query === '') {\r\n            this.setState({\r\n                modalProfiles: []\r\n            })\r\n            return\r\n        }\r\n        fetch(`${SERVER_URL}/profile-api/users/${query}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    modalProfiles: data\r\n                })\r\n            })\r\n    }\r\n\r\n    setContactSearch = query => {\r\n        if (query === '') {\r\n            this.fetchActiveChatProfiles()\r\n            return\r\n        }\r\n        if (this.state.activeChatsProfiles) {\r\n            const filteredProfiles = this.state.activeChatsProfiles.filter(p => p.user.username.includes(query))\r\n            this.setState({\r\n                activeChatsProfiles: filteredProfiles\r\n            })\r\n        }\r\n    }\r\n\r\n    resetUnreadMessagesCounter = () => {\r\n        this.unreadMessagesCounter = 0\r\n    }\r\n\r\n    incrementUnreadMessagesCounter = () => {\r\n        this.unreadMessagesCounter++\r\n    }\r\n\r\n    setLastChatMessage = message => {\r\n        this.lastChatMessage = message\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header page=\"Mensagens\" />\r\n                <div className=\"content d-flex messages-wrapper\">\r\n                    <Modal show={this.state.addingNewChat}\r\n                        onHide={() => this.setState({ addingNewChat: false })}\r\n                        size=\"lg\">\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title><strong>Nova conversa</strong></Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body style={{ padding: '0' }}>\r\n                            <input className=\"modal-search-input\"\r\n                                placeholder=\"Pesquisar pessoas\"\r\n                                onChange={e => this.setModalSearch(e.target.value)}\r\n                            />\r\n                            <div className=\"list-group\" style={{ height: '400px', overflow: 'hidden', overflowY: 'scroll' }}>\r\n                                {this.state.modalProfiles && this.state.modalProfiles.map(profile => {\r\n                                    return (\r\n                                        <Link to={`/mensagens/${profile.slug}`}\r\n                                            style={{ color: '#000', textDecoration: 'none' }}\r\n                                            onClick={() => this.setState({\r\n                                                addingNewChat: false\r\n                                            })}\r\n                                        >\r\n                                            <li className=\"list-group-item profile-row modal-profile-li\" key={profile.id}>\r\n                                                <div className=\"d-flex justify-content-between\">\r\n                                                    <div className=\"profile-col\">\r\n                                                        <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                            className=\"profile-img-med\"\r\n                                                            style={{ marginRight: '10px' }}\r\n                                                        />\r\n                                                        <div className=\"main-profile-data\">\r\n                                                            <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                                            <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"profile-col\">\r\n                                                        {profile.bio}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </li>\r\n                                        </Link>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                    <div className=\"d-flex flex-column chats-list\">\r\n                        <div className=\"search-input-container\">\r\n                            <input placeholder=\"Pesquisar pessoas\" className=\"search-input\" onChange={e => this.setContactSearch(e.target.value)} />\r\n                            <i className=\"fas fa-plus add-icon\" onClick={this.openModal}></i>\r\n                        </div>\r\n                        <div className=\"list-group chats-container\">\r\n                            {this.state.activeChatsProfiles && this.state.activeChatsProfiles.map(profile => {\r\n                                return (\r\n                                    <Link to={`/mensagens/${profile.slug}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                                        {this.resetUnreadMessagesCounter()}\r\n                                        <li className=\"list-item profile-chat-item\" style={{ whiteSpace: 'nowrap' }}>\r\n                                            <img src={`${SERVER_URL}${profile.photo}`}\r\n                                                className=\"profile-img-med\"\r\n                                                style={{ marginRight: '10px' }}\r\n                                            />\r\n                                            <div className=\"d-flex flex-column align-items-start\">\r\n                                                <div className=\"d-flex\" style={{ maxHeight: '30px' }}>\r\n                                                    <strong style={{ height: 'fit-content' }}>{profile.first_name} {profile.last_name}</strong>\r\n                                                    {this.state.activeChats[this.state.activeChatsProfiles.indexOf(profile)].messages.map(message => {\r\n                                                        const messages = this.state.activeChats[this.state.activeChatsProfiles.indexOf(profile)].messages\r\n                                                        if (messages[messages.length - 1] === message) this.setLastChatMessage(message.content)\r\n                                                        if (message.read || message.contact.user.username !== profile.user.username) return\r\n                                                        this.incrementUnreadMessagesCounter()\r\n                                                    })}\r\n                                                    {this.unreadMessagesCounter ? <p className=\"notifications-number\">{this.unreadMessagesCounter}</p> : ''}\r\n                                                    <p className=\"text-secondary\" style={{ marginLeft: '5px' }}>@{profile.user.username}</p>\r\n                                                </div>\r\n                                                <p className=\"text-secondary\">{this.lastChatMessage.slice(0, 40)}</p>\r\n                                            </div>\r\n                                        </li>\r\n                                    </Link>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <Chat username={this.state.username}\r\n                        otherUsername={this.props.match.params.slug}\r\n                        chatId={this.state.chatId}\r\n                        openModal={this.openModal}\r\n                        updateUnreadMessagesNumber={this.props.updateUnreadMessagesNumber}\r\n                        updateMessagesComponent={this.fetchActiveChatProfiles}\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Messages","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport LikesModal from '../../components/likesmodal'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nexport default function Posts(props) {\r\n    const [myprofile, setMyProfile] = useState(null)\r\n    const [likesModal, setLikesModal] = useState({ isOpen: false, likes: null })\r\n    const profile = props.profile\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n    }, [])\r\n\r\n    const likeUnlikePost = e => {\r\n        e.stopPropagation()\r\n        const likeBtn = e.target\r\n        if (likeBtn.classList.contains('fas')) {\r\n            likeBtn.classList.remove('fas') //border heart\r\n            likeBtn.classList.add('far')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/unlike-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.fetchProfile()\r\n                })\r\n        } else {\r\n            likeBtn.classList.remove('far') //border heart\r\n            likeBtn.classList.add('fas')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/like-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    props.fetchProfile()\r\n                })\r\n        }\r\n    }\r\n\r\n    const hideLikesModal = () => {\r\n        setLikesModal({\r\n            isOpen: false,\r\n            likes: null\r\n        })\r\n    }\r\n\r\n    const deletePost = (e, postId) => {\r\n        e.stopPropagation()\r\n        const el = document.querySelector(`#profile-post-${postId}`)\r\n        if (window.confirm('Tem certeza que deseja apagar o post?\\nEssa ação é irreversível.')) {\r\n            el.style.animationPlayState = 'running'\r\n            el.addEventListener('animationend', () => {\r\n                props.fetchProfile()\r\n            })\r\n            fetch(`${SERVER_URL}/post-api/delete-post/${postId}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <LikesModal\r\n                isOpen={likesModal.isOpen}\r\n                likes={likesModal.likes}\r\n                hideModal={hideLikesModal}\r\n            />\r\n            <div className=\"post-list\">\r\n                {profile && myprofile && profile.posts.length ? profile.posts.map(post => {\r\n                    return (\r\n                        <li\r\n                            className=\"post-container\"\r\n                            key={post.id}\r\n                            id={`profile-post-${post.id}`}\r\n                            onClick={() => window.location.href = `/post/${post.id}`}\r\n                        >\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                <div className=\"post-row\">\r\n                                    <div className=\"post-col\">\r\n                                        <img src={`${SERVER_URL}${profile.photo}`}\r\n                                            className=\"profile-img-med\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"post-col\">\r\n                                        <div style={{ height: '30px' }}>\r\n                                            <strong>{profile.first_name} {profile.last_name} </strong>\r\n                                            <p className=\"text-secondary d-inline-block\">\r\n                                                @{profile.user.username} • {post.created.split('-').reverse().join('/')}\r\n                                            </p>\r\n                                        </div>\r\n                                        <div style={{ textAlign: 'start' }}>\r\n                                            {post.content}\r\n                                        </div>\r\n                                        {post.image &&\r\n                                            <img src={`${SERVER_URL}${post.image}`} className=\"post-img\" />\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                {profile.id == myprofile.id &&\r\n                                    <i\r\n                                        className=\"far fa-trash-alt trash-icon text-secondary\"\r\n                                        style={{ margin: '20px 20px 0 0' }}\r\n                                        onClick={e => deletePost(e, post.id)}\r\n                                    />}\r\n                            </div>\r\n                            <div className=\"post-actions\">\r\n                                <p className=\"text-secondary\">\r\n                                    <Link\r\n                                        to={`/post/${post.id}/comment`}\r\n                                        className=\"text-secondary\"\r\n                                        onClick={e => e.stopPropagation()}\r\n                                    >\r\n                                        <i class=\"far fa-comment\" />\r\n                                    </Link>{post.comments.length}\r\n                                    {post.likes.map(like => like.profile.id).includes(myprofile.id) ?\r\n                                        <i class=\"fas fa-heart\"\r\n                                            data-postid={post.id}\r\n                                            onClick={likeUnlikePost}\r\n                                        />\r\n                                        :\r\n                                        <i class=\"far fa-heart\"\r\n                                            data-postid={post.id}\r\n                                            onClick={likeUnlikePost}\r\n                                        />}\r\n                                    <p className=\"post-likes-number\"\r\n                                        onClick={e => {\r\n                                            e.stopPropagation()\r\n                                            setLikesModal({ isOpen: true, likes: post.likes })\r\n                                        }\r\n                                        }\r\n                                    >\r\n                                        {post.likes.length}\r\n                                    </p>\r\n                                </p>\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                }) : <h3 style={{ marginTop: '50px' }}>{profile.first_name} não tem posts</h3>}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Interests(props) {\r\n    const profile = props.profile\r\n\r\n    return (\r\n        <div className=\"interests-page-container\">\r\n            <h3>Interesses públicos de {profile.first_name}</h3>\r\n            <div>\r\n                {profile && profile.interests.filter(i => i.public).map(interest => {\r\n                    return (\r\n                        <>\r\n                            {interest.title &&\r\n                                <>\r\n                                    <hr />\r\n                                    <li className=\"interest-item\">\r\n                                        {interest.title[0].toUpperCase() + interest.title.slice(1)}\r\n                                        <Link to={`/interesse/${interest.title}`}>\r\n                                            <button className=\"btn-secondary\" style={{ padding: '5px' }}>Pesquisar usuários</button>\r\n                                        </Link>\r\n                                    </li>\r\n                                </>\r\n                            }\r\n                        </>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nimport Header from '../components/header'\r\nimport Posts from './profile-components/posts'\r\nimport Interests from './profile-components/interests'\r\nimport { SERVER_URL } from '../settings'\r\nimport { csrftoken } from '../utils'\r\n\r\nexport default function MyProfile() {\r\n    const [profile, setProfile] = useState(null)\r\n    const [profileImagePreview, setProfileImagePreview] = useState(null)\r\n    const [isEditing, setIsEditing] = useState(false)\r\n    const [currentPageIsPosts, setCurrentPageIsPosts] = useState(true)\r\n\r\n    document.title = 'Perfil / Napker'\r\n\r\n    useEffect(() => {\r\n        fetchProfile()\r\n    }, [])\r\n\r\n    const fetchProfile = () => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setProfile(data)\r\n                setProfileImagePreview(`${SERVER_URL}${data.photo}`)\r\n            })\r\n    }\r\n\r\n    const switchPage = e => {\r\n        document.querySelectorAll('.profile-page-menu-item-active').forEach(el => {\r\n            el.classList.remove('profile-page-menu-item-active')\r\n        })\r\n        e.target.classList.add('profile-page-menu-item-active')\r\n        setCurrentPageIsPosts(!currentPageIsPosts)\r\n    }\r\n\r\n    const handleProfileImageChange = e => {\r\n        const reader = new FileReader()\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                setProfileImagePreview(reader.result)\r\n            }\r\n        }\r\n        try {\r\n            reader.readAsDataURL(e.target.files[0])\r\n        } catch {\r\n            \r\n        }\r\n    }\r\n\r\n    const handleUsernameChange = e => {\r\n        fetch(`${SERVER_URL}/profile-api/user/${e.target.value}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.bool !== 'false') {\r\n                    document.querySelector('#username-taken').style.display = 'initial'\r\n                } else if (document.querySelector('#username-taken').style.display === 'initial') {\r\n                    document.querySelector('#username-taken').style.display = 'none'\r\n                }\r\n            })\r\n    }\r\n\r\n    const handleEmailChange = e => {\r\n        fetch(`${SERVER_URL}/profile-api/profile-by-email/${e.target.value}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.bool !== 'false') {\r\n                    document.querySelector('#email-taken').style.display = 'initial'\r\n                } else if (document.querySelector('#email-taken').style.display === 'initial') {\r\n                    document.querySelector('#email-taken').style.display = 'none'\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Perfil\" />\r\n            {profile ? <div className=\"content\">\r\n                <Modal show={isEditing}\r\n                    onHide={() => setIsEditing(false)}\r\n                    size=\"lg\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Editar perfil</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <form action={`${SERVER_URL}/update-profile`} id=\"update-profile-form\" method=\"POST\" encType=\"multipart/form-data\">\r\n                            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n                            <div className=\"d-flex flex-column justify-content-center align-items-center\" style={{ padding: '25px' }}>\r\n                                <img src={profileImagePreview}\r\n                                    className=\"profile-img-big\"\r\n                                    style={{ marginBottom: '25px' }}\r\n                                />\r\n                                <input\r\n                                    type=\"file\"\r\n                                    accept=\"image/png, image/jpg, image/jpeg\"\r\n                                    name=\"profile-photo\"\r\n                                    onChange={handleProfileImageChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"d-flex\">\r\n                                <label htmlFor=\"first-name\" className=\"profile-label\">Nome:</label>\r\n                                <input className=\"form-control\" type=\"text\" name=\"first-name\" id=\"first-name\" placeholder={profile.first_name} />\r\n                            </div>\r\n                            <div className=\"d-flex\">\r\n                                <label htmlFor=\"last-name\" className=\"profile-label\">Sobrenome:</label>\r\n                                <input className=\"form-control\" type=\"text\" name=\"last-name\" id=\"last-name\" placeholder={profile.last_name} />\r\n                            </div>\r\n                            <div className=\"d-flex\">\r\n                                <label htmlFor=\"username\" className=\"profile-label\">Nome de usuário:</label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"username\"\r\n                                    id=\"username\"\r\n                                    placeholder={profile.user.username}\r\n                                    onChange={handleUsernameChange}\r\n                                />\r\n                            </div>\r\n                            <div style={{ width: '100%', textAlign: 'center', padding: '3px' }}>\r\n                                <span id=\"username-taken\">Nome de usuário já existe</span>\r\n                            </div>\r\n                            <div className=\"d-flex\">\r\n                                <label htmlFor=\"email\" className=\"profile-label\">Email:</label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    id=\"email\"\r\n                                    placeholder={profile.email}\r\n                                    onChange={handleEmailChange}\r\n                                />\r\n                            </div>\r\n                            <div style={{ width: '100%', textAlign: 'center', padding: '3px' }}>\r\n                                <span id=\"email-taken\">Email já utilizado</span>\r\n                            </div>\r\n                            <div className=\"d-flex\">\r\n                                <label htmlFor=\"gender\" className=\"profile-label\">Gênero:</label>\r\n                                <select className=\"form-control\" name=\"gender\" id=\"gender\" placeholder={profile.gender}>\r\n                                    <option value=\"male\">Masculino</option>\r\n                                    <option value=\"female\">Feminino</option>\r\n                                    <option value=\"other\">Outro</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"d-flex\">\r\n                                <label htmlFor=\"birth-date\" className=\"profile-label\">Data de nascimento:</label>\r\n                                <input className=\"form-control\" type=\"date\" name=\"birth-date\" id=\"birth-date\" defaultValue={profile.birth_date} />\r\n                            </div>\r\n                            <div className=\"d-flex\">\r\n                                <label htmlFor=\"bio\" className=\"profile-label\">Bio:</label>\r\n                                <input className=\"form-control\" type=\"email\" name=\"bio\" id=\"bio\" placeholder={profile.bio} />\r\n                            </div>\r\n                        </form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <button className=\"btn btn-grey\" onClick={() => setIsEditing(false)}>Fechar</button>\r\n                        <button className=\"btn btn-primary\" onClick={() => document.querySelector('form#update-profile-form').submit()}>Salvar</button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <div className=\"profile-data-container\">\r\n                    <div className=\"d-flex flex-column align-items-start\">\r\n                        <p style={{ padding: '15px' }}>\r\n                            <img src={`${SERVER_URL}${profile.photo}`}\r\n                                className=\"profile-img-big\"\r\n                                style={{ marginBottom: '25px' }}\r\n                            />\r\n                        </p>\r\n                        <p style={{ marginBottom: 0 }}><strong>{profile.first_name} {profile.last_name}</strong></p>\r\n                        <p className=\"text-secondary\" style={{ marginTop: 0 }}>@{profile.user.username}</p>\r\n                        <p>{profile.bio}</p>\r\n                        <p className=\"text-secondary\">\r\n                            <i className=\"far fa-calendar-alt\"></i> Entrou em {profile.created.split('-').reverse().join('/')}\r\n                        </p>\r\n                        <p>\r\n                            <Link to={`/user/${profile.slug}/amigos`} style={{ color: '#000' }}>\r\n                                <strong>{profile.friends.length}</strong> {profile.friends.length === 1 ? 'amigo' : 'amigos'}\r\n                            </Link>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"d-flex flex-column\">\r\n                        <button\r\n                            className=\"btn btn-secondary\"\r\n                            type=\"button\"\r\n                            onClick={() => setIsEditing(true)}\r\n                            style={{ marginBottom: '10px' }}\r\n                        >\r\n                            Editar perfil\r\n                        </button>\r\n                        <Link to='/perfil/meus-interesses'>\r\n                            <button className=\"btn btn-secondary\">Editar interesses</button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"profile-page-menu\">\r\n                    <div className=\"profile-page-menu-item profile-page-menu-item-active\" onClick={switchPage}>\r\n                        Posts ({profile.posts.length})\r\n                    </div>\r\n                    <div className=\"profile-page-menu-item\" onClick={switchPage}>\r\n                        Interesses ({profile.interests.filter(i => i.public).length})\r\n                    </div>\r\n                </div>\r\n                {currentPageIsPosts ?\r\n                    <Posts profile={profile} fetchProfile={fetchProfile} /> :\r\n                    <Interests profile={profile} />\r\n                }\r\n            </div > : ''}\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport Header from '../components/header'\r\n\r\nexport default function Settings() {\r\n\r\n    document.title = 'Configurações / Napker'\r\n\r\n    return (\r\n        <>\r\n            <Header page=\"Configurações\" />\r\n            <div className=\"content\">\r\n                Em desenvolvimento...\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Header from '../../components/header'\r\nimport Posts from '../profile-components/posts'\r\nimport Interests from '../profile-components/interests'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            profile: null,\r\n            relationshipButtonLabel: '',\r\n            currentPageIsPosts: true,\r\n        }\r\n        this.slug = this.props.match.params.slug\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.fetchProfile()\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${SERVER_URL}/profile-api/relationship/${this.slug}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                let label\r\n                switch (data.relationship) {\r\n                    case 'friends':\r\n                        label = 'Amigos'\r\n                        break\r\n                    case 'invite-sent':\r\n                        label = 'Solicitado'\r\n                        break\r\n                    case 'invite-received':\r\n                        label = 'Aceitar'\r\n                        break\r\n                    case 'none':\r\n                        label = 'Solicitar'\r\n                }\r\n                this.setState({\r\n                    relationshipButtonLabel: label\r\n                })\r\n            })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        let btn = document.querySelector('#profile-page-relationship-btn')\r\n        if (btn) {\r\n            switch (btn.innerHTML) {\r\n                case 'Amigos':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.onmouseenter = () => {\r\n                        if (btn.innerHTML === 'Amigos') btn.innerHTML = 'Remover'\r\n                    }\r\n                    btn.onmouseout = () => {\r\n                        if (btn.innerHTML === 'Remover') btn.innerHTML = 'Amigos'\r\n                    }\r\n                    btn.classList.add('friend-btn')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Solicitado':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Aceitar':\r\n                    btn.classList.add('btn-primary')\r\n                    btn.classList.remove('d-none')\r\n                    break\r\n                case 'Solicitar':\r\n                    btn.classList.add('btn-secondary')\r\n                    btn.classList.remove('d-none')\r\n            }\r\n        }\r\n    }\r\n\r\n    fetchProfile = () => {\r\n        fetch(`${SERVER_URL}/profile-api/user/${this.slug}`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                profile: data\r\n            }))\r\n    }\r\n\r\n    sendFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/send-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    cancelFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/cancel-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    removeFromFriends = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/remove-from-friends`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify(pk)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    acceptFriendRequest = pk => {\r\n        fetch(`${SERVER_URL}/profile-api/reply-friend-request`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({\r\n                'senderid': pk,\r\n                'reply': 'accept'\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                this.props.updateNotificationsNumber()\r\n            })\r\n    }\r\n\r\n    handleRelationshipUpdate = e => {\r\n        const btn = e.target\r\n        if (btn.innerHTML === 'Solicitar') {\r\n            this.sendFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitado'\r\n            btn.className = 'btn btn-primary'\r\n        } else if (btn.innerHTML === 'Solicitado') {\r\n            this.cancelFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Solicitar'\r\n            btn.className = 'btn btn-secondary'\r\n        } else if (btn.innerHTML === 'Amigos' || btn.innerHTML === 'Remover') {\r\n            if (window.confirm(`Remover @${this.state.profile.user.username} dos amigos?`)) {\r\n                this.removeFromFriends(btn.dataset.pk)\r\n                btn.innerHTML = 'Solicitar'\r\n                btn.className = 'btn btn-secondary'\r\n            }\r\n        } else if (btn.innerHTML === 'Aceitar') {\r\n            this.acceptFriendRequest(btn.dataset.pk)\r\n            btn.innerHTML = 'Amigos'\r\n            btn.className = 'btn btn-primary'\r\n        }\r\n    }\r\n\r\n    switchPage = e => {\r\n        document.querySelectorAll('.profile-page-menu-item-active').forEach(el => {\r\n            el.classList.remove('profile-page-menu-item-active')\r\n        })\r\n        e.target.classList.add('profile-page-menu-item-active')\r\n        this.setState({\r\n            currentPageIsPosts: !this.state.currentPageIsPosts\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header page={this.state.profile ? `${this.state.profile.first_name} ${this.state.profile.last_name}` : 'Perfil'}\r\n                    backArrow={true}\r\n                />\r\n                {!this.state.profile ? <></> :\r\n                    <div className=\"content\">\r\n                        <div className=\"d-flex justify-content-between align-items-center profile-data-container\">\r\n                            <div className=\"d-flex flex-column align-items-start\">\r\n                                <p style={{ padding: '15px' }}>\r\n                                    <img src={`${SERVER_URL}${this.state.profile.photo}`}\r\n                                        className=\"profile-img-big\"\r\n                                        style={{ marginBottom: '25px' }}\r\n                                    />\r\n                                </p>\r\n                                <p style={{ marginBottom: 0 }}><strong>{this.state.profile.first_name} {this.state.profile.last_name}</strong></p>\r\n                                <p className=\"text-secondary\" style={{ marginTop: 0 }}>@{this.state.profile.user.username}</p>\r\n                                <p>{this.state.profile.bio}</p>\r\n                                <p className=\"text-secondary\">\r\n                                    <i className=\"far fa-calendar-alt\"></i> Entrou em {this.state.profile.created.split('-').reverse().join('/')}\r\n                                </p>\r\n                                <p>\r\n                                    <Link to={`/user/${this.state.profile.slug}/amigos`} style={{ color: '#000' }}>\r\n                                        <strong>{this.state.profile.friends.length}</strong> {this.state.profile.friends.length === 1 ? 'amigo' : 'amigos'}\r\n                                    </Link>\r\n                                </p>\r\n                            </div>\r\n                            <div>\r\n                                <button className=\"btn d-none\"\r\n                                    id=\"profile-page-relationship-btn\"\r\n                                    data-pk={this.state.profile.id}\r\n                                    onClick={this.handleRelationshipUpdate}\r\n                                >{this.state.relationshipButtonLabel}</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"profile-page-menu\">\r\n                            <div className=\"profile-page-menu-item profile-page-menu-item-active\" onClick={this.switchPage}>\r\n                                Posts ({this.state.profile.posts.length})\r\n                            </div>\r\n                            <div className=\"profile-page-menu-item\" onClick={this.switchPage}>\r\n                                Interesses ({this.state.profile.interests.filter(i => i.public).length})\r\n                            </div>\r\n                        </div>\r\n                        {this.state.currentPageIsPosts ?\r\n                            <Posts profile={this.state.profile} fetchProfile={this.fetchProfile} /> :\r\n                            <Interests profile={this.state.profile} />\r\n                        }\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile","import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nimport Header from '../../components/header'\r\nimport { SERVER_URL } from '../../settings'\r\n\r\nexport default function Friends() {\r\n    const [friends, setFriends] = useState([])\r\n    const [profile, setProfile] = useState(null)\r\n    const { slug } = useParams()\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/user/${slug}`)\r\n            .then(response => response.json())\r\n            .then(data => setProfile(data))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (profile) {\r\n            fetch(`${SERVER_URL}/profile-api/get-friends-profiles/${profile.slug}`)\r\n                .then(response => response.json())\r\n                .then(data => setFriends(data))\r\n        }\r\n    }, [profile])\r\n\r\n    return (\r\n        <>\r\n            <Header page={profile ? `${profile.first_name} ${profile.last_name} / Amigos` : 'Perfil / Amigos'}\r\n                backArrow={true}\r\n            />\r\n            <div className=\"content\">\r\n                <div className=\"lidt-group\">\r\n                    {friends && friends.map(friend => {\r\n                        return (\r\n                            <Link to={`/user/${friend.slug}`} style={{ color: '#000', textDecoration: 'none' }}>\r\n                                <li className=\"list-group-item profile-row filtered-profile\" key={friend.id}>\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <div className=\"profile-col\">\r\n                                            <img src={`${SERVER_URL}${friend.photo}`}\r\n                                                className=\"profile-img-med\"\r\n                                                style={{ marginRight: '10px' }}\r\n                                            />\r\n                                            <div className=\"main-profile-data\">\r\n                                                <strong>{friend.first_name} {friend.last_name}</strong>\r\n                                                <p className=\"text-secondary\">@{friend.user.username}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"profile-col\">\r\n                                            {friend.bio}\r\n                                        </div>\r\n                                        <div className=\"profile-col\">\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            </Link>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nimport Header from '../../components/header'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nexport default function InterestProfiles() {\r\n    const [profiles, setProfiles] = useState([])\r\n    const { interest } = useParams()\r\n\r\n    document.title = `${interest} / Napker`\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/interest-profile-list/${interest}`)\r\n            .then(response => response.json())\r\n            .then(data => setProfiles(data))\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Header\r\n                page={`Interesse / ${interest[0].toUpperCase() + interest.slice(1)}`}\r\n                backArrow={true}\r\n            />\r\n            <div className=\"content\">\r\n                <div className=\"list-group\">\r\n                    <h3>Perfis interessados em \"{interest}\"</h3>\r\n                    {profiles && profiles.map(profile => {\r\n                        return (\r\n                            <li\r\n                                className=\"list-group-item profile-row\"\r\n                                key={profile.id}\r\n                                onClick={() => window.location.href = `/user/${profile.slug}`}\r\n                            >\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                    <div className=\"profile-col\">\r\n                                        <img src={`${SERVER_URL}${profile.photo}`}\r\n                                            className=\"profile-img-med\"\r\n                                            style={{ marginRight: '10px' }}\r\n                                        />\r\n                                        <div className=\"main-profile-data\">\r\n                                            <strong>{profile.first_name} {profile.last_name}</strong>\r\n                                            <p className=\"text-secondary\">@{profile.user.username}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"profile-col\">\r\n                                        {profile.bio}\r\n                                    </div>\r\n                                    <div className=\"profile-col\"></div>\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport { SERVER_URL } from '../../../settings'\r\n\r\nexport default function PublicInterests(props) {\r\n\r\n    useEffect(() => {\r\n        if (document.querySelector('.public-interests-container')) {\r\n            const tagContainer = document.querySelector('.public-tag-container');\r\n            const input = document.querySelector('.public-tag-container input');\r\n\r\n            let tags = props.myProfile.interests.filter(i => i.public).map(i => i.title);\r\n            const interestsInput = document.querySelector('#public-interests')\r\n            addTags()\r\n\r\n            function createTag(label) {\r\n                const div = document.createElement('div');\r\n                div.classList.add('tag');\r\n                div.classList.add('public-tag');\r\n                const span = document.createElement('span');\r\n                span.innerHTML = label;\r\n                const closeIcon = document.createElement('i');\r\n                closeIcon.classList.add('public-close-icon')\r\n                closeIcon.innerHTML = '×';\r\n                closeIcon.classList.add('material-icons')\r\n                closeIcon.setAttribute('data-item', label);\r\n                div.appendChild(span);\r\n                div.appendChild(closeIcon);\r\n                if (!interestsInput.value.includes(label)) interestsInput.value += ` ${label}`;\r\n                return div;\r\n            }\r\n\r\n            function clearTags() {\r\n                document.querySelectorAll('.public-tag').forEach(tag => {\r\n                    tag.parentElement.removeChild(tag);\r\n                });\r\n            }\r\n\r\n            function addTags() {\r\n                clearTags();\r\n                tags.sort()\r\n                tags.slice().reverse().forEach(tag => {\r\n                    tagContainer.prepend(createTag(tag));\r\n                });\r\n                props.setInterests(tags)\r\n            }\r\n\r\n            input.addEventListener('keydown', (e) => {\r\n                if (e.key === 'Enter') {\r\n                    e.target.value.split(',').forEach(tag => {\r\n                        tags.push(tag);\r\n                    });\r\n\r\n                    e.preventDefault()\r\n\r\n                    addTags();\r\n                    input.value = '';\r\n                    return false; //prevent the form to submit\r\n                }\r\n            });\r\n            document.addEventListener('click', (e) => {\r\n                if (e.target.classList.contains('public-close-icon')) {\r\n                    const tagLabel = e.target.getAttribute('data-item');\r\n                    const index = tags.indexOf(tagLabel);\r\n                    tags = [...tags.slice(0, index), ...tags.slice(index + 1)];\r\n                    addTags();\r\n                }\r\n            })\r\n\r\n            input.focus();\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"public-interests-container\">\r\n            <h3>Interesses públicos</h3>\r\n            <p>\r\n                Os interesses públicos são visíveis para os outros usuários.\r\n                Coloque aqui interesses que sem eles seu perfil ficaria incompleto.\r\n            </p>\r\n            <div class=\"tag-container public-tag-container\">\r\n                <input />\r\n                <input type=\"hidden\" name=\"public-interests\" id=\"public-interests\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport { SERVER_URL } from '../../../settings'\r\n\r\nexport default function PrivateInterests(props) {\r\n\r\n    useEffect(() => {\r\n        if (document.querySelector('.private-interests-container')) {\r\n            const tagContainer = document.querySelector('.private-tag-container');\r\n            const input = document.querySelector('.private-tag-container input');\r\n\r\n            let tags = props.myProfile.interests.filter(i => !i.public).map(i => i.title);\r\n            const interestsInput = document.querySelector('#private-interests')\r\n            addTags()\r\n\r\n            function createTag(label) {\r\n                const div = document.createElement('div');\r\n                div.classList.add('tag');\r\n                div.classList.add('private-tag');\r\n                const span = document.createElement('span');\r\n                span.innerHTML = label;\r\n                const closeIcon = document.createElement('i');\r\n                closeIcon.classList.add('private-close-icon')\r\n                closeIcon.classList.add('material-icons')\r\n                closeIcon.innerHTML = '×';\r\n                closeIcon.setAttribute('data-item', label);\r\n                div.appendChild(span);\r\n                div.appendChild(closeIcon);\r\n                if (!interestsInput.value.includes(label)) interestsInput.value += ` ${label}`;\r\n                return div;\r\n            }\r\n\r\n            function clearTags() {\r\n                document.querySelectorAll('.private-tag').forEach(tag => {\r\n                    tag.parentElement.removeChild(tag);\r\n                });\r\n            }\r\n\r\n            function addTags() {\r\n                clearTags();\r\n                tags.sort()\r\n                tags.slice().reverse().forEach(tag => {\r\n                    tagContainer.prepend(createTag(tag));\r\n                });\r\n                props.setInterests(tags)\r\n            }\r\n\r\n            input.addEventListener('keydown', (e) => {\r\n                if (e.key === 'Enter') {\r\n                    e.target.value.split(',').forEach(tag => {\r\n                        tags.push(tag);\r\n                    });\r\n\r\n                    e.preventDefault()\r\n\r\n                    addTags();\r\n                    input.value = '';\r\n                    return false; //prevent the form to submit\r\n                }\r\n            });\r\n            document.addEventListener('click', (e) => {\r\n                if (e.target.classList.contains('private-close-icon')) {\r\n                    const tagLabel = e.target.getAttribute('data-item');\r\n                    const index = tags.indexOf(tagLabel);\r\n                    tags = [...tags.slice(0, index), ...tags.slice(index + 1)];\r\n                    addTags();\r\n                }\r\n            })\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"private-interests-container\">\r\n            <h3>Interesses privados</h3>\r\n            <p>\r\n                Os interesses privados não são visíveis para os outros usuários.\r\n                Eles servem para aumentar a precisão das recomendações de perfis que\r\n                possuem o máximo de afinidade possível com você.\r\n            </p>\r\n            <div class=\"tag-container private-tag-container\">\r\n                <input />\r\n                <input type=\"hidden\" name=\"private-interests\" id=\"private-interests\" />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Header from '../../../components/header'\r\nimport PublicInterests from './publicInterests'\r\nimport PrivateInterests from './privateInterests'\r\nimport { SERVER_URL } from '../../../settings'\r\nimport { csrftoken } from '../../../utils'\r\n\r\nexport default function EditInterests() {\r\n    const [myProfile, setMyProfile] = useState(null)\r\n    let [publicInterests, setPublicInterests] = [null, value => publicInterests = value]\r\n    let [privateInterests, setPrivateInterests] = [null, value => privateInterests = value]\r\n\r\n    useEffect(() => {\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setMyProfile(data))\r\n    }, [])\r\n\r\n    const submitInterests = () => {\r\n        fetch(`${SERVER_URL}/profile-api/set-myinterests`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({\r\n                public_interests: publicInterests.sort(),\r\n                private_interests: privateInterests.sort()\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                document.querySelector('#interests-updated-message').style.display = 'block'\r\n                document.documentElement.scrollTop = 0\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>{console.log('rerendered')}\r\n            <Header page=\"Meus interesses\" backArrow={true} />\r\n            <div className=\"content\">\r\n                <p\r\n                    id=\"interests-updated-message\"\r\n                    style={{ background: '#fff', color: '#0f0', display: 'none', padding: '5px', fontSize: 'large', fontWeight: 'bold' }}\r\n                >\r\n                    Interesses atualizados com sucesso\r\n                </p>\r\n                {myProfile &&\r\n                    <div className=\"interests-page-container\">\r\n                        <PublicInterests\r\n                            myProfile={myProfile}\r\n                            setInterests={setPublicInterests}\r\n                        />\r\n\r\n                        <br />\r\n                        <hr />\r\n                        <br />\r\n\r\n                        <PrivateInterests\r\n                            myProfile={myProfile}\r\n                            setInterests={setPrivateInterests}\r\n                        />\r\n\r\n                        <hr />\r\n                        <button\r\n                            className=\"btn btn-primary\"\r\n                            onClick={submitInterests}\r\n                        >\r\n                            Salvar\r\n                        </button>\r\n                    </div>}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nexport default function CommentModal(props) {\r\n    const comment = e => {\r\n        e.preventDefault()\r\n        props.commentPost(document.querySelector('#comment-modal-input').value)\r\n        props.hideModal()\r\n    }\r\n\r\n    return (\r\n        <Modal show={props.isOpen}\r\n            onHide={props.hideModal}\r\n            size=\"lg\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title><strong>Comentar</strong></Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        id=\"comment-modal-input\"\r\n                        placeholder=\"Comente alguma coisa\"\r\n                        style={{ marginRight: '5px' }}\r\n                    />\r\n                    <button\r\n                        className=\"btn btn-primary\"\r\n                        type=\"submit\"\r\n                        onClick={comment}\r\n                    >\r\n                        Enviar\r\n                    </button>\r\n                </form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nimport CommentModal from '../../components/commentmodal'\r\nimport LikesModal from '../../components/likesmodal'\r\nimport Header from '../../components/header'\r\nimport { SERVER_URL } from '../../settings'\r\nimport { csrftoken } from '../../utils'\r\n\r\nexport default function Post(props) {\r\n    const [post, setPost] = useState(null)\r\n    const [profile, setProfile] = useState(null)\r\n    const [commentModalIsOpen, setCommentModalIsOpen] = useState(props.commentModalIsOpen)\r\n    const [postLikesModal, setPostLikesModal] = useState({ isOpen: false, likes: null })\r\n    const [commentLikesModal, setCommentLikesModal] = useState({ isOpen: false, likes: null })\r\n\r\n    const { id } = useParams()\r\n\r\n    useEffect(() => {\r\n        fetchPost()\r\n        fetch(`${SERVER_URL}/profile-api/myprofile`)\r\n            .then(response => response.json())\r\n            .then(data => setProfile(data))\r\n    }, [])\r\n\r\n    const fetchPost = () => {\r\n        fetch(`${SERVER_URL}/post-api/post/${id}`)\r\n            .then(response => response.json())\r\n            .then(data => setPost(data))\r\n    }\r\n\r\n    const likeUnlikePost = e => {\r\n        const likeBtn = e.target\r\n        if (likeBtn.classList.contains('fas')) {\r\n            likeBtn.classList.remove('fas') //border heart\r\n            likeBtn.classList.add('far')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/unlike-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPost()\r\n                })\r\n        } else {\r\n            likeBtn.classList.remove('far') //border heart\r\n            likeBtn.classList.add('fas')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/like-post/${likeBtn.dataset.postid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPost()\r\n                })\r\n        }\r\n    }\r\n\r\n    const likeUnlikeComment = e => {\r\n        const likeBtn = e.target\r\n        if (likeBtn.classList.contains('fas')) {\r\n            likeBtn.classList.remove('fas') //border heart\r\n            likeBtn.classList.add('far')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/unlike-comment/${likeBtn.dataset.commentid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPost()\r\n                })\r\n        } else {\r\n            likeBtn.classList.remove('far') //border heart\r\n            likeBtn.classList.add('fas')  //filled heart\r\n            fetch(`${SERVER_URL}/post-api/like-comment/${likeBtn.dataset.commentid}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    fetchPost()\r\n                })\r\n        }\r\n    }\r\n\r\n    const commentPost = comment => {\r\n        fetch(`${SERVER_URL}/post-api/comment-post/${id}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'X-CSRFToken': csrftoken,\r\n            },\r\n            body: JSON.stringify({ comment: comment })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                fetchPost()\r\n            })\r\n    }\r\n\r\n    const deleteComment = (e, commentId) => {\r\n        e.stopPropagation()\r\n        const el = document.querySelector(`#post-comment-${commentId}`)\r\n        if (window.confirm('Tem certeza que deseja apagar o comentário?\\nEssa ação é irreversível.')) {\r\n            el.style.animationPlayState = 'running'\r\n            console.log(el, el.style.animationPlayState)\r\n            el.addEventListener('animationend', () => {\r\n                fetchPost()\r\n            })\r\n            fetch(`${SERVER_URL}/post-api/delete-comment/${commentId}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                })\r\n        }\r\n    }\r\n\r\n    const deletePost = (e, postId) => {\r\n        e.stopPropagation()\r\n        const el = document.querySelector(`#profile-post-${postId}`)\r\n        if (window.confirm('Tem certeza que deseja apagar o post?\\nEssa ação é irreversível.')) {\r\n            fetch(`${SERVER_URL}/post-api/delete-post/${postId}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'X-CSRFToken': csrftoken,\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    window.location.href = '/'\r\n                })\r\n        }\r\n    }\r\n\r\n    const hideCommentModal = () => {\r\n        setCommentModalIsOpen(false)\r\n    }\r\n\r\n    const hidePostLikesModal = () => {\r\n        setPostLikesModal({\r\n            isOpen: false,\r\n            likes: null\r\n        })\r\n    }\r\n\r\n    const hideCommentLikesModal = () => {\r\n        setCommentLikesModal({\r\n            isOpen: false,\r\n            likes: null\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CommentModal\r\n                isOpen={commentModalIsOpen}\r\n                hideModal={hideCommentModal}\r\n                commentPost={commentPost}\r\n            />\r\n            <LikesModal\r\n                isOpen={postLikesModal.isOpen}\r\n                likes={postLikesModal.likes}\r\n                hideModal={hidePostLikesModal}\r\n            />\r\n            <LikesModal\r\n                isOpen={commentLikesModal.isOpen}\r\n                likes={commentLikesModal.likes}\r\n                hideModal={hideCommentLikesModal}\r\n            />\r\n            <Header page=\"Post\" backArrow={true} />\r\n            <div className=\"content\">\r\n                {post && profile &&\r\n                    <>\r\n                        <div className=\"post-container\">\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                <div className=\"post-row\">\r\n                                    <div className=\"post-col\">\r\n                                        <Link to={`/user/${post.author.slug}`}>\r\n                                            <img src={`${SERVER_URL}${post.author.photo}`}\r\n                                                className=\"profile-img-med\"\r\n                                            />\r\n                                        </Link>\r\n                                    </div>\r\n                                    <div className=\"post-col\">\r\n                                        <Link to={`/user/${post.author.slug}`} style={{ color: '#000' }}>\r\n                                            <div style={{ height: '30px' }}>\r\n                                                <strong>{post.author.first_name} {post.author.last_name} </strong>\r\n                                                <p className=\"text-secondary d-inline-block\">\r\n                                                    @{post.author.user.username} • {post.created.split('-').reverse().join('/')}\r\n                                                </p>\r\n                                            </div>\r\n                                        </Link>\r\n                                        <div style={{ textAlign: 'start', fontSize: 'larger' }}>\r\n                                            {post.content}\r\n                                        </div>\r\n                                        {post.image &&\r\n                                            <img src={`${SERVER_URL}${post.image}`} className=\"post-img\" />\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                {profile.id == post.author.id &&\r\n                                    <i\r\n                                        className=\"far fa-trash-alt trash-icon text-secondary\"\r\n                                        style={{ margin: '20px 20px 0 0' }}\r\n                                        onClick={e => deletePost(e, post.id)}\r\n                                    />}\r\n                            </div>\r\n                            <div className=\"post-actions\">\r\n                                <p className=\"text-secondary\" style={{ fontSize: 'large' }}>\r\n                                    <Link to={`/post/${id}/comment`} className=\"text-secondary\">\r\n                                        <i\r\n                                            class=\"far fa-comment\"\r\n                                            onClick={() => setCommentModalIsOpen(true)}\r\n                                        />\r\n                                    </Link>{post.comments.length}\r\n                                    {post.likes.map(like => like.profile.id).includes(profile.id) ?\r\n                                        <i class=\"fas fa-heart\"\r\n                                            data-postid={post.id}\r\n                                            onClick={likeUnlikePost}\r\n                                        />\r\n                                        :\r\n                                        <i class=\"far fa-heart\"\r\n                                            data-postid={post.id}\r\n                                            onClick={likeUnlikePost}\r\n                                        />}\r\n                                    <p className=\"post-likes-number\"\r\n                                        onClick={() => setPostLikesModal({ isOpen: true, likes: post.likes })}\r\n                                    >\r\n                                        {post.likes.length}\r\n                                    </p>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"comment-list\">\r\n                            {post.comments.map(comment => {\r\n                                return (\r\n                                    <li\r\n                                        className=\"post-container\"\r\n                                        id={`post-comment-${comment.id}`}\r\n                                        key={comment.id}\r\n                                    >\r\n                                        <div className=\"d-flex justify-content-between\">\r\n                                            <div className=\"post-row\">\r\n                                                <div className=\"post-col\">\r\n                                                    <Link to={`/user/${comment.author.slug}`}>\r\n                                                        <img src={`${SERVER_URL}${comment.author.photo}`}\r\n                                                            className=\"profile-img-med\"\r\n                                                        />\r\n                                                    </Link>\r\n                                                </div>\r\n                                                <div className=\"post-col\">\r\n                                                    <Link to={`/user/${comment.author.slug}`} style={{ color: '#000' }}>\r\n                                                        <div style={{ height: '30px' }}>\r\n                                                            <strong>{comment.author.first_name} {comment.author.last_name} </strong>\r\n                                                            <p className=\"text-secondary d-inline-block\">\r\n                                                                @{comment.author.user.username} • {comment.created.split('-').reverse().join('/')}\r\n                                                            </p>\r\n                                                        </div>\r\n                                                    </Link>\r\n                                                    <div style={{ textAlign: 'start' }}>\r\n                                                        {comment.content}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            {comment.author.id == profile.id &&\r\n                                                <i\r\n                                                    className=\"far fa-trash-alt trash-icon text-secondary\"\r\n                                                    style={{ margin: '20px 20px 0 0' }}\r\n                                                    onClick={e => deleteComment(e, comment.id)}\r\n                                                />}\r\n                                        </div>\r\n                                        <div className=\"post-actions\">\r\n                                            <p className=\"text-secondary\">\r\n                                                {comment.likes.map(like => like.profile.id).includes(profile.id) ?\r\n                                                    <i class=\"fas fa-heart\"\r\n                                                        data-commentid={comment.id}\r\n                                                        onClick={likeUnlikeComment}\r\n                                                    />\r\n                                                    :\r\n                                                    <i class=\"far fa-heart\"\r\n                                                        data-commentid={comment.id}\r\n                                                        onClick={likeUnlikeComment}\r\n                                                    />}\r\n                                                <p\r\n                                                    className=\"post-likes-number\"\r\n                                                    onClick={() => setPostLikesModal({ isOpen: true, likes: comment.likes })}\r\n                                                >\r\n                                                    {comment.likes.length}\r\n                                                </p>\r\n                                            </p>\r\n                                        </div>\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\nimport Sidebar from './components/sidebar'\r\nimport Home from './pages/home'\r\nimport Notifications from './pages/notifications'\r\nimport Messages from './pages/messages/messages'\r\nimport MyProfile from './pages/myprofile'\r\nimport Settings from './pages/settings'\r\nimport Profile from './pages/home-components/profile'\r\nimport ProfileFriends from './pages/profile-components/friends'\r\nimport InterestProfiles from './pages/profile-components/interestprofiles'\r\nimport EditInterests from './pages/profile-components/edit-interests/editinterests'\r\nimport Post from './pages/home-components/post'\r\n\r\nimport { SERVER_URL } from './settings'\r\n\r\nexport default function App() {\r\n    const [invitesReceivedNumber, setInvitesReceived] = useState(0)\r\n    const [unvisualizedLikesNumber, setUnvisulaizedLikes] = useState(0)\r\n    const [unvisualizedCommentsNumber, setUnvisulaizedComments] = useState(0)\r\n    let notificationsNumber = invitesReceivedNumber + unvisualizedLikesNumber + unvisualizedCommentsNumber\r\n    const [unreadMessagesNumber, setUnreadMessagesNumber] = useState(0)\r\n\r\n    useEffect(() => {\r\n        updateNotificationsNumber()\r\n        updateUnreadMessagesNumber()\r\n    }, [])\r\n\r\n    const updateNotificationsNumber = () => {\r\n        fetch(`${SERVER_URL}/profile-api/myinvites`)\r\n            .then(response => response.json())\r\n            .then(data => setInvitesReceived(data.length))\r\n        fetch(`${SERVER_URL}/post-api/unvisualized-post-likes`)\r\n            .then(response => response.json())\r\n            .then(data => setUnvisulaizedLikes(data.length))\r\n        fetch(`${SERVER_URL}/post-api/unvisualized-post-comments`)\r\n            .then(response => response.json())\r\n            .then(data => setUnvisulaizedComments(data.length))\r\n    }\r\n\r\n    const updateUnreadMessagesNumber = () => {\r\n        fetch(`${SERVER_URL}/chat-api/all-unread-messages-number`)\r\n            .then(response => response.json())\r\n            .then(data => setUnreadMessagesNumber(data['unread_messages_number']))\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <Sidebar notificationsNumber={notificationsNumber} unreadMessagesNumber={unreadMessagesNumber} />\r\n            <div className=\"main-content\">\r\n                <Switch>\r\n                    <Route path=\"/notificações\" render={props => (\r\n                        <Notifications {...props} updateNotificationsNumber={updateNotificationsNumber} />\r\n                    )} />\r\n                    <Route path=\"/mensagens\" exact component={Messages} />\r\n                    <Route path=\"/mensagens/:slug\" render={props => (\r\n                        <Messages {...props} updateUnreadMessagesNumber={updateUnreadMessagesNumber} />\r\n                    )} />\r\n                    <Route path=\"/perfil\" exact component={MyProfile} />\r\n                    <Route path=\"/perfil/meus-interesses\" component={EditInterests} />\r\n                    <Route path=\"/configurações\" component={Settings} />\r\n                    <Route path=\"/user/:slug\" exact render={props => (\r\n                        <Profile {...props} updateNotificationsNumber={updateNotificationsNumber} />\r\n                    )} />\r\n                    <Route path=\"/user/:slug/amigos\" component={ProfileFriends} />\r\n                    <Route path=\"/post/:id\" exact component={Post} />\r\n                    <Route path=\"/post/:id/comment\" render={props => (\r\n                        <Post {...props} commentModalIsOpen={true} />\r\n                    )} />\r\n                    <Route path=\"/interesse/:interest\" component={InterestProfiles} />\r\n                    <Route path=\"/\" component={Home} />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/style.css'\r\nimport './assets/profile.css'\r\nimport './assets/chat.css'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'))\r\n"],"sourceRoot":""}